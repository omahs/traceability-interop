{
  "collection": {
    "info": {
      "_postman_id": "691a6d66-244e-4521-a0e5-6768dd6cf6f4",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e77b3618-dedf-4800-a536-116ff1423af3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9183e0a6-9be2-4ad5-9578-f205c886d862",
            "name": "Positive Testing",
            "item": [
              {
                "id": "00e5a97e-4f43-4f74-8fee-b9fecf4f2979",
                "name": "did_json",
                "request": {
                  "url": {
                    "path": [
                      "did.json"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07056b2c-5dc8-4aa0-9d4a-70a69329138d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ad87f0b-7850-492d-af5b-3dffcc6f14b7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "b13e2086-9779-4e8a-b756-a0ba6060e3ba",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5e9d4e3a-1047-4feb-8c19-dfd30b112429",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8e432e4-7748-4650-b957-538d9a97eaec",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0880f8df-c9d7-4077-9d50-9c7aba130457",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04858d9-947a-4fe2-9d22-c326892d5c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb58e8f4-d780-44c1-90fe-21905d43d752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd83153b-6a2c-4a50-a11d-ba59c8cb9bc5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dacbeca-c64b-436e-889d-31f00fc4800b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06d116a8-f3e2-438d-ab2a-01465c9ca54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fef392-c640-473f-b35a-b98a0ab5223b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f56321b-0f08-4509-a5a7-1494617e81c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e84c585f-0f1d-4c9a-846a-5a6a2bd74beb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f931b9de-f8a8-4b55-8a6a-6b5ba1f6ae4b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a132d004-981a-4e68-95b9-e90a202031f5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3805559d-1159-4dbd-8ca2-9a15972bc244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e2261a9-e1ae-4588-b11b-4edbc8c6ff7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0fde3b-ca2b-43c5-9af5-1f7fa14c12f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3394810-89b9-4b16-a12c-47e651f3c7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15be1dab-714d-48e6-9ea9-db930aca76f1",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a02d3df-4aab-4e18-8af7-25703ce630ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e03f166-b4e4-4e90-b3a7-cc1188687077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e0668f-5b51-4dcb-a5a5-c2249e31234f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "4ba876f7-1cd7-4dec-b73b-f6a82dfb8c61"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c1be799f-b208-4910-90c7-1ca4c2fc6d0b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cb9343a8-1f1f-4482-92e6-4a5c723a5b61",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ddb8cee-0a9f-428a-80b5-e86fc170f2c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8b3cd02e-5312-48e4-89f1-4b6e33cfd02d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "824a3cce-5dfb-49bc-b14f-d8c8d08dc2f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "709111ca-27b5-4453-8d2b-ad487c94a3de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81876a94-ec1a-47b3-bbb3-1cd365ae7652",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b2924b7-dc2e-4ee8-930a-25d9a42a6488"
            }
          }
        ]
      },
      {
        "id": "442734ba-7519-42c5-839e-2b53b3735696",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "be174381-928c-4c7f-bb4f-181600e35d99",
            "name": "Negative Testing",
            "item": [
              {
                "id": "66b2d8a8-e1ac-4547-9baa-b98b60ad57d4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a26e9d1f-8625-40ef-82a9-2e491ca34852",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78af85e7-0e3d-4d33-b380-23f8a26e7456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb88b64-d819-4d24-87eb-e9ff3488205a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e5fb41-bdc7-448b-b1a4-b3c1e09c11bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential is required",
                            "delete rawBody.credential",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68ab45fa-0e1d-4825-a933-a9dc3b1aa26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd0e240-a807-44a8-80eb-76e6dde99011",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84485c6b-9795-4afb-b2c9-0a4cde793d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef87e31-c841-4468-816f-e0cd3543949e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10de2081-125d-4856-a15f-bcfc6b0eaa2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context is required",
                            "delete rawBody.credential[\"@context\"]",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5cc6682-646c-4583-861c-e2b6fe11a5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e049cdda-74e9-4257-9543-25cc67a68a61",
                    "name": "credentials_issue:credential.@context:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157600ca-cfde-40df-856a-17c55650ea4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5e2f18-7a97-4e28-92bb-8fd73c4f9170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266f44b5-53b0-4f29-a46e-1567a2482438",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context must be an array",
                            "rawBody.credential[\"@context\"] = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30914fb7-d3f7-4af7-8061-160d104e3997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95092fa-6ef1-49dc-a4e6-974131b2483e",
                    "name": "credentials_issue:credential.@context.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb59cb1-e8ae-49c8-ab0d-3a3bc6fb0ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd131cf-ec25-4b12-a356-5da1462015ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c89b865-df5f-4d6e-a79e-a4edf19cad1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context array must contain only strings",
                            "rawBody.credential[\"@context\"] = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eea6228f-0d5c-46d1-9f39-174d82ac3255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1720218b-0aba-4f3e-a5f8-e90811b13cad",
                    "name": "credentials_issue:credential.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c293a4c-e89b-4646-aa96-714816ec02ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42f01e4-726c-412b-986a-f01cb515bfed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c3b653-4735-4d3f-b4cf-845578ef01f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.id must be string when present",
                            "rawBody.credential.id = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e490a43-76fd-4037-a548-962c1984297f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e39fb6b-b9f8-4dd3-b365-7cfbec5c8b1a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcc7740-f882-4b7e-a78d-7a60063f7a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245ab4b7-9319-44f4-af7e-06f7eadab079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464ee361-f09e-4e48-a33a-450b83a6c282",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type is required",
                            "delete rawBody.credential.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a136373-0419-4aed-a1ce-a8603e532b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f9b9a8-0522-4030-b21c-6a03b0e14ea8",
                    "name": "credentials_issue:credential.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31419ec-b31d-4823-8589-eada33f57e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e492c0a5-00ab-4b42-a7c9-337658011cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8081a124-b075-41f1-8c56-fedfde0b94b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type must be an array",
                            "rawBody.credential.type = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ff42538-c215-4dc8-abce-e231f4126b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85559f3f-d96e-4694-a13e-34d24074f621",
                    "name": "credentials_issue:credential.type.members:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fcb6d7-8c7e-4802-b73b-b90191b2bb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7fd74f-9764-4d0f-af61-22be233e5867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d712c9-0f2d-48f5-bfe6-29b3a84ae24e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain at least one element",
                            "rawBody.credential.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f181ddf-18f8-4104-a0d1-ab3b3f4436ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef6f54e-c6f9-42be-b2e9-5f8f8e157820",
                    "name": "credentials_issue:credential.type.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d6afbb-673d-4675-ac5c-4cc5384ace74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2cee978-9c89-4c03-8db9-44d549f3dff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88806c99-dea1-4bcb-ae4f-f9a25ba080b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain only strings",
                            "rawBody.credential.type = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bea0a424-0417-424f-90ef-4f2fb4a4a551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64723a75-8b9d-491f-95c2-f960562657ca",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9486616-323d-4301-b67b-bb9096fde31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901440eb-4888-4e0d-9dcf-31a918b79879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0736a3-1fbd-4f22-b660-48ac915f7184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer is required",
                            "delete rawBody.credential.issuer",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4244ca5b-41e0-4ded-840a-6148c02828d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bdca6b-1848-4447-a0f4-29a020f7f622",
                    "name": "credentials_issue:credential.issuer:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230bdb79-7725-4011-aa5e-13d2405fc3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97290dba-a32b-4d3e-91c2-2f5e4202cb69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c827a6f5-57a9-4ab2-a4f7-9d27bb166550",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a string or an object",
                            "rawBody.credential.issuer = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd13a1da-b149-4c77-9e73-1aef043b4cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6313fa-e4e5-4c3c-8ab4-8710d325bac5",
                    "name": "credentials_issue.credential.issuer:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f455a630-bc81-4644-8057-785737f89c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2db8690-22d3-4844-9619-1625f921c80d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3901d2-24ef-426b-82f3-72a51eb5ef83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a URI when it is a string value.",
                            "rawBody.credential.issuer = \"not.a.uri\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "4d541d70-bca0-4592-8411-8bf2db64b3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a980f7-10df-4f75-98e1-c53aae2975d3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e791a5-ec5a-480e-868b-e6f5902dc336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f5af15-3ae7-4e4e-854c-4d92a7f1296a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6f8980-85cc-4ffd-9205-6a1fef65f8f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be known to the endpoint.",
                            "rawBody.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "002fc9e8-8cf0-4d69-854c-02770ad5aaff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f44be02-7948-47c1-8f58-f083fc6105cf",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e82ac2-bf2e-41f3-8891-c092c82b3208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bb318e-1c99-4ba3-ac6f-0a2bd2506466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b62733-e6f9-45ef-abf8-7f927f9f66b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id is required when issuer is in object format",
                            "rawBody.credential.issuer = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7933c902-9f89-41c0-8592-634f64a4dfd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc57f13-d522-4c8b-bafb-675952d7a9c9",
                    "name": "credentials_issue:credential.issuer.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d15f0c5-3dc7-4158-8b9e-3ea5f17c32e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b414af7f-e798-497d-9824-fbc93d00f804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae053db-022d-47cc-aac7-4cc1c4516745",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id must be a string.",
                            "rawBody.credential.issuer = {\"id\": [\"arrays are invalid\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deb45fd5-c765-49e0-a364-d4003c271369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb80fce-3fa1-4e64-87fe-1988cae94605",
                    "name": "credentials_issue.credential.issuer.id:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a16ec35-eb13-495a-99bd-3240036871c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e55577-6555-4417-bb00-e389e5ce5665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2d561e-c94f-4d12-bd41-2755e3d8bbdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be a URI.",
                            "rawBody.credential.issuer = {\"id\": \"not.a.uri\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "d75583e6-d379-4d38-abb7-bb5e28e6d4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b99e49b-f228-4ce9-b88e-ec7fb8daf84b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "080c5be3-6dce-4e2e-bdd1-0438816cb420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4220cff-79e4-434c-aa24-5433f63cc94f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3851c32d-2629-40aa-beec-5e317969fb7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be known to the implementation.",
                            "rawBody.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "ab74c265-9447-4caa-b026-d5cb6e15509d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58645942-157d-4fe9-b03d-6483726470af",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494c95e5-7098-421d-b3f7-162d4ecd9e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041fce81-4e40-4206-9e4b-d7d690f39881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860e7788-41a5-48ce-a9ed-d60bdd2cb909",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate is required",
                            "delete rawBody.credential.issuanceDate",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9084884-ac86-46f0-a6bc-cb32d633bcad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc200785-b26f-41ac-96e3-24395bd70b61",
                    "name": "credentials_issue:credential.issuanceDate:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531f1965-fa77-443e-a3e0-583db7aae93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a7a6bc-a620-416d-ba2c-13b3b1b81931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855c3b11-04a3-49d2-9a4c-7758d5cb6d6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be a string",
                            "rawBody.credential.issuanceDate = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bab1187c-9c20-4dc3-bd25-a6ae9850e56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daab47bd-bacc-438f-8452-189e06693a16",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b457c206-c455-4036-82b7-33d398b556b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8808ec-a2b4-435c-bfad-fc5204f16307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda99fdf-2480-42e0-bec4-fa8338900da7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be an XML Date Time String",
                            "rawBody.credential.issuanceDate = \"not an xml date time string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12b5bb69-3e37-4557-9a19-a09513c37926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b5f86b-7cfc-4de1-b8c7-b6958d442bad",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1409d173-914c-474d-89c4-6c214ca4a20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3d2cef-f541-4ede-9caf-1e2d12c6dc6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d50e6a-b091-4f43-a3b4-0ad62032f5c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject is required",
                            "delete rawBody.credential.credentialSubject",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d998062-4a63-4876-8ae6-a62a722e332b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63e6442-5165-4d19-8c6d-597c6975b606",
                    "name": "credentials_issue:credential.credentialSubject:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c28286-9f56-4b31-acbf-70e0f8a69792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e37cb1-43c6-474b-b797-cd984423f03b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08d8b6a-1a11-41ef-80f2-5f13db901295",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject must be an object",
                            "rawBody.credential.credentialSubject = \"did:example:1234\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f5789a7-7b5f-4724-9c91-db7db1f93bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf865e85-1325-475a-8770-e6c3d259620f",
                    "name": "credentials_issue:credential.credentialSubject.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba1cc00-df26-464b-8bae-f62f17b6d7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c39b696a-6ea0-4478-b3bd-027d5c654ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7b056c-a311-4da6-9b3f-e4689648fe59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject can be an object with an optional \"id\"",
                            "// property that must be a string when present.",
                            "rawBody.credential.credentialSubject = {\"id\": [\"did:example:1234\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bbed307-94ab-4cb3-9e85-be870859ce08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcac1476-1204-477c-93e5-beb9d7589dee",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5850444-6eb5-4abc-9efc-d7c90c2a9f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "130f6c08-27ce-4b89-af09-66cb6ee14291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70226693-9ea6-4065-9b2f-f9f94e2fcbb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options is required",
                            "delete rawBody.options",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8033dcd4-d140-4f4d-abb5-74fd860cc1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934eb5b1-216c-414c-93b4-9147c3e0b086",
                    "name": "credentials_issue:options:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "671dab9c-673e-4122-9409-4ffc01427296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf1c7f9-b23a-480a-a87a-c0174b4dbb25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a5b0fc-9676-476c-bd9f-f95cd6275f03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options must be an object",
                            "rawBody.options = [\"array\", \"element\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4de3902-12e0-44a0-859e-ad9aeff3a691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f08e07-85f8-4eff-8512-b4065e0e453a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eee8cd8-7997-42cf-8f2a-30d5b876f601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e621e5e9-ebfd-4e9e-be85-59eb1795fa97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ded087e-9dd5-4267-ac37-4facbc459265",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type is required",
                            "delete rawBody.options.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d92838d-837b-43ca-8fcd-cb16aa639aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e2f1ab-7aa4-4492-a45c-7bdedb777de2",
                    "name": "credentials_issue:options.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1bb39b-e55e-4927-8bf9-47666ba4cb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7803f5c-d37f-4e17-94b8-035f06a86b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56ba410-7ee5-44cf-8522-f6c144362872",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be a string",
                            "rawBody.options.type = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f6d306c-4117-45ea-a62c-954d2c23e56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7971183c-74c1-4f44-9050-9365ea295945",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df33097d-0f04-42a7-9a98-24c6ae113f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577c22af-6b67-4b50-a235-7cb44086bb3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fc42b5-b8e3-4b11-b783-ff29a37c3473",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be valid",
                            "rawBody.options.type = \"invalid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d4529ca-a0ae-46f6-8def-b631a5f6b6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03a212e-51ec-48a2-9a57-61744e27d9e0",
                    "name": "credentials_issue:options.credentialStatus:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f7b595-b92b-495e-8fd6-ef0f0179368e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b17e6df2-cd46-4e5d-a7ea-56e5f4031245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ce71fc-7e41-4da5-ac29-fae6396ea9ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must be an object when present",
                            "rawBody.options.credentialStatus = \"a string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cce5d1ca-2d12-4a5c-9c38-05f3b24410d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb07fe8-76e0-42d3-9fe8-3e2f09225d0f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c749268b-8b53-4602-97ad-d06cc3ad05ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21dc1eac-b974-4a1f-bd05-5be941ce8c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34dfc984-626a-4bbc-8d50-75d548758cc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must contain \"type\" when present",
                            "rawBody.options.credentialStatus = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e33de79-a582-4903-8303-f4dfe1b5a697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4378352a-f7d2-4221-98eb-3d745fb1f56b",
                    "name": "credentials_issue:options.credentialStatus.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feddcfc9-adf4-46af-8a48-9a0956b195f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85a25e9e-01fe-4a65-85ec-21022be12224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9595e3a-5dd5-4af3-8a99-3e4a2a87dc2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be a string when present",
                            "rawBody.options.credentialStatus = {\"type\": {\"foo\": 42}};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd19d210-3ff8-468b-81db-48943355e314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8036348a-c1a0-4612-86df-ae13a12b3c36",
                    "name": "credentials_issue:options.credentialStatus.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc20d2cf-2118-4418-8f16-d903e5d2a3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "801f994e-50ba-4e37-9233-1c6c5a3df623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b39c666-1dde-472f-b64f-c8615792f91a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be valid",
                            "rawBody.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbf0c2e2-4ad1-40ce-b7bf-8fb721a60cec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "52de3ce9-d4ae-4d5c-966f-a98df53f53ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "256b7011-b39a-436f-af31-312a89d8c14c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "993e9223-c32e-40c7-9b2c-2a87b0722dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3584adc-2f41-4de6-ac2b-5d4802f9de8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee21874-5e1c-441c-9a91-5e2c9f021ada",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "a57f1c8e-b562-4295-a99b-3f10a34078e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12cc528-8442-404d-a810-eb0296b42b4f",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604a4d98-dc4c-480e-84d6-faee0fc22f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "daec4a3c-ee97-4ad1-a5a0-ff2f10adcc66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4135de-30e1-4d8a-9184-6093448acf0b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "a3b86df4-dfc6-4d7a-b203-224d848c4504"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0f41f95-5d8e-40e3-8977-1a43f2811c63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18e7f548-6539-4a40-80ab-893251dde481"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "edb67d26-dd14-48ac-9eb4-def8223ac606",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68eee180-5624-4f35-ae6b-99abbf76dc51"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f5f2ac03-aa70-4563-9a30-0e0b45714e25",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ceedd1f4-8ecf-44a7-a61d-2026674c744a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f33c3c4d-a781-406e-8cc0-1009494661fe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fdd7f791-3215-45ad-b365-b89ae2ceef69"
                }
              }
            ]
          },
          {
            "id": "353f8841-3bea-4e90-9902-3019d591e7fd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c8274a88-dfef-4410-b52e-19b829c7c566",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a55988be-8fa3-4a90-bc1b-94c9610b6718",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuance_date\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f142e61-efaa-4ee4-be4f-c442b63d850b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "102d3989-fc03-44b5-a596-c0995b76b09a",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "d46061ef-6fdb-4ffe-a947-0a5884f9d9e1"
                    }
                  }
                ]
              },
              {
                "id": "66ffa2d1-f5c5-4080-a686-070ea5cf4cb7",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "797c05be-743a-4bae-af85-fe3dbc165764",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9afd7bb-3578-495b-bf95-2dc2ec11670e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a981fce-b045-4e07-a435-45192a61385c",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.id is optional",
                        "rawBody.credential.id = pm.variables.get(\"credential_id\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "7e284f65-096f-4442-b1fd-e1c6e246c4a4"
                    }
                  }
                ]
              },
              {
                "id": "9e5975e4-663b-4c4b-a40a-00fdeb050220",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fd49a7f-6484-4aa0-827c-852556e9ecd9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf8fa49d-fe3b-4148-b9cb-9d3fe940bb95"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "358d35dc-e15d-44d5-9f66-1e556f5faf7b",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.issuer can be an object with required 'id' element",
                        "rawBody.credential.issuer = {\"id\": pm.variables.get(\"credential_issuer_id\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "b9f5a3d4-071b-427e-9b57-d152db4a67f8"
                    }
                  }
                ]
              },
              {
                "id": "7c1dee46-38c1-4f66-8fdb-bf116b5308ac",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4674eed5-6b34-44ce-83e5-a1ed50e1da31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credential_subject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "779ea5b1-a616-41ed-be7c-63e3e4e2859c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28e5ebd3-56aa-45df-9eff-57405292a897",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.credentialSubject can be an object with optional 'id' element",
                        "rawBody.credential.credentialSubject = {\"id\": pm.variables.get(\"credential_subject\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "c528306b-b469-4e38-b2ec-7beb6358c0e6"
                    }
                  }
                ]
              },
              {
                "id": "d1c1a852-979e-4162-9b2b-751cb508e5c4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d63473c0-f995-4655-b3aa-ba76ebee9b3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f2fdf39-68e4-42ff-b194-3cf44a8447b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e46aa31b-d0b6-42c5-966f-095066796455",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.created can be an optional string value",
                        "rawBody.options.created = \"an arbitrary string\";",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "4b48dfea-5bfa-401f-871d-23c147343dcb"
                    }
                  }
                ]
              },
              {
                "id": "c68b7d6d-fbbb-4833-8958-24137a94010e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c98578d0-a515-4786-951a-6e577683a2e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "adfe7bb1-284d-4520-86b0-7cc25b88f074"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2b08f1a-af90-4df0-a8ae-7a17f724ba97",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus can be an optional object",
                        "rawBody.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "205eb066-45b5-4e3a-9e41-21959820127f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f4a2b466-14ca-41f3-ae53-84fc56ad88da",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb7c1d73-8689-40a1-ade8-78113e638793"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "59e6130c-ec7a-419b-b292-6eee39864e4f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "95047e34-f2d8-421a-a8ae-84340b2729ca"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6ed425c-ed2b-4f37-bc8e-9169cb88070d",
              "type": "text/javascript",
              "exec": [
                "// Raw body should exclude all optional items and should contain",
                "// first alternate version of any 'oneOf' elements defined in the",
                "// OpenAPI schema.",
                "",
                "pm.variables.set('issuance_date', '2006-01-02T15:04:05Z');",
                "",
                "pm.variables.set(\"rawBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": \"{{ORGANIZATION_DID_WEB}}\",",
                "        \"issuanceDate\": \"{{issuance_date}}\",",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "// Obtain an access token with the required \"issue:credentials\" scope",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Set the credential subject to use for testing",
                "if (!pm.variables.get('credential_subject')) {",
                "    pm.variables.set('credential_subject', 'did:example:123')",
                "}",
                "",
                "// Set the credential id to use for testing",
                "if (!pm.variables.get('credential_id')) {",
                "    pm.variables.set('credential_id', \"urn:uuid:{{$randomUUID}}\")",
                "}",
                ""
              ],
              "_lastExecutionId": "997af78e-d5c9-49e0-b105-9cd9329d07c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24bbfe75-ebc1-4ad0-ae41-a194c3440244",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b4d2564f-cc3b-4f5c-bda2-298c61f6a355"
            }
          }
        ]
      },
      {
        "id": "32e207de-096a-470f-b232-8e5a1936f673",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a67e7bc0-02b1-4b84-b347-44bcd93fc5e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea1b2cda-9cd0-42b3-ab0f-f5e12946c575",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "71353784-b8dc-4321-abf0-faba293d2a2c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2755786d-1325-4969-84a6-84b0f2b87ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad5bd82-0509-4904-b0f8-9f6f2a2fddab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54af035-44d1-45d9-9d9b-48bff4d2288b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2030fb53-6f80-4182-a056-bcdfbe974504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940ce663-df55-4064-a156-ed9fbdc53d76",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de65e7e8-64de-4870-9307-2ec9d9ebdc0a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "9c0362ab-9053-402e-b5b3-f4b8491263d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8db955-f98b-480b-91eb-9c286316ade7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3d4bbc0-6abc-489e-a333-67491b48500b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb2c3935-d4f7-403a-9880-8cb8f25e390a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67eaa827-9002-4c41-a3e2-1923852c007c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "02df2aa5-3e82-40cd-9aa2-aedd4667ae3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f57f944f-0333-4d55-937b-8886bff4cccf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5933cf3d-ad99-428f-a7aa-783f26683d83",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"update:credentials\" scope",
                "utils(pm).getAccessToken('update:credentials');",
                ""
              ],
              "_lastExecutionId": "62c9fe2e-1de8-4501-b186-6589f8fa44a7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35ba9d42-bf27-4e6d-949e-cc1b2472d082",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "976ea98f-e5c7-467c-a634-8c8f5ddd8c44"
            }
          }
        ]
      },
      {
        "id": "18239caa-0dee-46de-aa38-88408318f202",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d8307f14-767a-4241-9748-01ccae2377ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "42df29f6-1255-4569-bd1c-b9d9bbaa80ce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e6ca05f4-50f2-45a1-9af1-bb50c4e9336c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30cea816-e586-44fd-9677-af337102ea88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c3735a7-f1cb-4bf2-bedf-834fcb8a9f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d8e98c-c2f3-4976-93bb-54055848f5aa",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91017b54-a524-4d0d-8527-d42148f48150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc6a6b1-0373-408d-ac89-4bd3da0e73aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa21ca60-26c4-4fb9-8a17-6f0c9f569cff",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c221e21a-d96e-4dce-a7df-8d9e9a3b8378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1840c4e8-b6e5-4b3a-ba98-a7ea18de5802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf989d78-fca4-4283-b310-0ecb2c209ad0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fca0eef-a879-4468-8dbe-a539cf373325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a00d2f2-1061-4d29-af86-90b18c27832a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c0edfc-47f1-4547-bc03-3468931f4bf8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07aa8b1e-5e6e-441b-9807-6bc5345cdb1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d744686-5abe-43e9-bedb-23a493dbfb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa7af3a-ee30-4e68-b42d-527b1086e7b9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90008cf5-168b-4e3c-8117-5169886cb240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f7d0a8-9c5e-484f-9151-505ad3813fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0016b3-cfc6-4d51-9a62-b16c825bb465",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7dbdb7d-8cad-4f75-ab5b-9f552863f99a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00d6464-5d84-4766-b273-3012df4d413f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aab78f8-c0cb-4ad4-8218-63615303de80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4cb3bc-8420-4644-8614-fdc930e09a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9cb5494-3c54-416f-91a1-49d3f8b2379f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd13ab52-4107-4f41-9a16-4df7d1b47512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "416a9cfa-7749-493d-8117-8a9fb7f6de01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8d81ea-d842-4f8f-909b-6e04d0f45bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b28f3d-dc0e-404b-b631-d3a30dd5f11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac89ee2-2455-4faf-9a5d-163007803315",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe18ebc7-447b-4747-99c9-3a53d54cc7bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c590190-fb91-4d20-9be2-9848a49df6b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f352cb-1882-417c-a221-669de44b06fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0631cfac-be83-418b-ad84-b875a500e56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e574d217-7a10-4ecc-a97c-d0e1b7ff9126",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5ed34c-f1ea-4cd0-b4d9-e314e234d00b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "552e6f5e-02bc-43c9-8f26-272fd1ada85c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54d74d1-4bf0-4b10-b389-fa8f77b8cf7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c21f7a6-5135-4ac1-a605-27fd81799113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58089e3a-9e9f-49f8-b41d-31db9eaac9e0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d34f8cd-46b6-48b3-bc1d-f991cf04e5a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb0122a7-76d7-4889-8985-29ccf1d309ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "796348ca-41a5-4433-b07b-ea97a645575e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf7408f-af5e-4389-8847-311e6abc059d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc5a4ee-33c4-44bd-a66d-583c277ec0ff",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b894e8ea-6ab5-4f0d-8598-32ff4f9bba09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17044c55-9305-42d7-8f3c-b879762315ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1747bbb5-3581-4bf6-91c0-40c1ed06fee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7005eecd-76ad-4d34-bc2d-5dd61952f8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44191b2f-3f03-4861-b35c-f03d8c6afb2d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a0d8f5-a9f6-4da8-bd02-0ab660251b2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c8ae825-8bf3-4a6e-bc80-280d033cffe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d8d901-ba6d-4400-8187-c7c8bf1f04f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a5b57c-5804-4d84-b445-9b578985bb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde61635-4681-485e-aa02-cec900298f79",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979b137e-4d05-4d3f-8277-f1bd41e661f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0273c29d-1117-481f-8205-6b14c91219e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e93269-c285-4d0c-a32b-c651be007df1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a87b2b-a377-4893-913a-a660e0dca9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5b5944-8994-4cfb-8500-6fd23ad55aa7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb1931b-b651-4a37-922d-9e9a4abcb773",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ef23c9e-a7a6-43d7-bb26-f31edeaa8198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bbfa71-8501-406a-a85d-40c20d446602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f35e017-3215-421e-8d0e-d280836c8bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9d1e75-9d87-4ac8-a996-8487be4b2701",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39c96e6-7db3-4192-96eb-897e31d616d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a9cb175-9ad4-4a77-83a5-99e5d6ca3337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b43cc87-8ef8-4925-84ca-df4b6fe0a45e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3ba805-df91-40bb-86fa-a3d1a208235f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c363abcc-cea2-4f32-81fe-bb3d335489f9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23da4c02-3a34-483f-b61d-a782335a8e70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f15916-f667-4a52-b203-a6857464b619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80192f55-1594-4a0e-a8a3-339d595e3431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66eab43b-362c-48e9-97b2-fd4fa971d5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a821fdbe-96d7-47c2-99cd-911d2f400e84",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed35417-83e6-40b7-967b-3fac3ba6ca13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d9be93-3826-452a-ad62-1f3986bcad92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd950a5-7645-4454-b717-2bdb0816053b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd7e9d8-8ca3-4885-9cff-0dd222b1fd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa61d283-1362-48ae-94c6-76be2145c478",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f6737f-17c0-431d-989b-d15ac5b545a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "160de4b6-43da-44b7-89ca-f1304b8ea432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa4c52b-7414-43ef-890e-789171dfe67b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b56898f-e5fa-4097-a7eb-fc2cebc54c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37d25a7-e82b-44ac-912b-7fe25c93ba88",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2046f4a3-7672-4993-af28-a8419029e067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a809c1a4-6e8e-4eed-9ffc-fa51ad605f81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78206d3d-c62a-4edf-9487-cc7186e1cee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f7896c-2e35-4ae0-8343-3bfe9290dec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a998fbeb-ef51-4ba0-a1ec-48be21cd9510",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba9f240-807c-484d-802c-86cf2cf94e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac0201d-9d9b-46cb-89e8-824eecd4125c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b962427-b2b1-49e6-8889-f41fc44db56e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa4cfe3b-76dc-4ad7-8955-1caa34a07661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a676292-2f0b-4029-a8dc-8c7d1fe215df",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9ebc00-6bae-4d13-b732-9b3443ca1577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b28f2f-2399-4332-9435-23d20dc4c56b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4f7c4e-df2b-4068-bcaf-5a5ca32ac6ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b125c0ee-5563-43f4-ac0b-fa62b34f9972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d671949-0d01-4238-b4f7-4205ca873161",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4221e09e-e0c8-4905-8ee7-bacb54286b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe42785b-78ea-4369-a42f-8552e9480b9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e408b32-c523-4f08-b2f7-50d89e615fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9ef980-9252-4aaa-9fc6-93987d3d2013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db29ecf6-9059-4093-8498-4ab8b1a6c33e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61b11e4-4aaf-4b1c-a56b-82feb469fee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5481e9a-2312-420a-aa91-7e612e7080c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e5b3ee-18f7-475b-b7bc-90c1aa3950cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923af87d-db86-4140-abd3-6e02a85b262f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91decd4c-d246-4ae7-85ff-f7251c8a816d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95a405c-001c-4fd9-937c-69b630ea9136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7eaaef3-4f1d-4647-9edc-b8b235d65eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a71a45-00ed-49af-823f-17c3ad7420c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5300f698-beb4-42fd-870c-d8c8066df29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d366b9-3259-4f3c-b763-23f6d21e4c4b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b545ea-f498-4cac-8a85-d67bec72f8dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9f2b496-a23e-4ba9-8ec9-b9c09c2de4a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04089110-7eb1-443e-9a60-c0e40bfe8730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d4f3d48-9dd2-4c54-aeab-ebd4775f50e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbd2e25-93e0-4b3c-9407-2597eab47518",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea90d4a-0cbf-49ba-8d8e-e6bdc72a552e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8095c549-6525-42e7-adcf-b4fb2987aefb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "317a72a1-15bc-47a9-8c45-8e6b5f303355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d040ebba-336a-4718-a20a-b0b03bb8a58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ff0b0a-b710-4b95-81a5-8cd14a06f6c9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec21599-bd3f-4c24-b36d-3c456294fdab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa9e0695-b2bd-46b2-b436-e031edc81e04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4435e903-f8c3-4da2-b216-34ecef780517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28bea4b5-6441-44f4-aad7-110f7a823069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e035311f-fe57-48cb-9985-86699c02dd4b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795b7659-a2d5-4324-90e2-609f5b3efb30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f0afd68-7217-4c7e-9317-dc1aa0bf6f01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95bd402-0539-4d0a-8551-aa188cb58e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9efeb1-5ebd-4c1a-926c-1e136f031563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfe293b-516f-4d52-88ea-c521c2cde384",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4e3401-26c3-4114-9eb5-fbd0188e9089",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f6a3b41-6805-4dad-985a-7aebace9f395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd6026b-091b-45ff-bae5-0a52a4f65ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c55a9d-6188-4fce-aca9-772ce10ea800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7b7bde-346a-438d-a4ac-f7b45194815e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9cf790c-c772-48d3-97b0-d35fd7fac58b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "342cd07c-3831-4a51-b3d9-2200eef2c950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fee20a-b839-445d-8990-97bc0a7ba6b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94575f1d-d47b-4bb9-8f79-ff44c880a309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b639c6fe-3105-4acb-b686-c7488fa5950b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618319ea-69e3-4c3d-9df0-49e55bf2b8f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ae41b43-30e4-419c-895c-4738f3d8982a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "307adbb7-15fb-40c7-b99c-cbf916e24a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c059e0-d2e6-4fd3-9a40-00f0c726067c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c05eea3-330f-4e26-9315-05e14c5ab5de",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05d8d2a-06b5-4e9a-816d-d68c7fe3d54d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44f2e9c6-9998-4a6f-ab3c-798c18fa231f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f027e0c5-67da-4bdd-8a08-3a5a4e03ce3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a579de4a-1c39-4bcb-b269-d1bc631f3e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4443d2-01bc-42a6-874e-0e78fd186e75",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e58bf6-3659-4378-88bf-2adeaa32cd89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37d3f09d-14c1-421e-bf20-09e5ac22cb73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "803246fb-9953-46c8-9ed4-db1f48abb648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c0e312-0e3c-4a2c-95e2-baaf4e254875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32a2ad9-6f7c-4158-8a59-0bfb8590a878",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc091b0-28bb-472f-9426-e20c9c8b8062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658c4a1d-9384-4a36-85d8-30cde5144600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88bfe55f-2d68-4dcf-a99c-57e119a67178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d3b0312-2ae3-40be-aa7d-2d8ab83c6edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc97bc6-e0ff-4715-8b76-d7243b0d52da",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5208c6a3-91e7-49e1-bef9-a2392a1a0ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf518443-b884-43f6-b013-0334c7e39005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff133be-7484-4445-abd0-a7e19fe0578b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bca3c28-fcda-489b-a35a-280a56938b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913088c6-80d8-4f44-b72b-a4329916ee03",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da886ea-ae52-42a6-a39d-5a4b0f2fee44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03fea468-0597-4b0c-a155-f05859f2e2ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ab0257-225b-4d09-9ad4-398f400be1d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26575352-0ea0-4fed-b359-49220f29b27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d835ad4-076b-4098-9328-02352006b2c6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10337cc4-e3c7-4fbc-b356-2ea1c5d1cd5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d568a99-f862-47e5-9e4f-109e5010919c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6421ce35-cc69-458b-83d4-5064137dbbb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f3007d-65f9-4bf5-8280-96bc85d7a462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3dff230-e693-4bb4-868f-c8bf84f3e2a9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21f980e-7b7c-4fd2-9d92-748b14951eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9db9c36-0c67-4e1d-a166-859243e7111d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadd502e-28dc-4a1e-bcd6-16d892e0c279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21b6eec-1a21-41fc-9463-6b622fc5b2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734df80a-60f9-4dff-b224-fa6a3bc1243c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d8dc92-311d-4c95-bc40-facf7e7ff41e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef5db6fd-85df-415b-a462-3502dcefc43a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bec000-a92a-484b-b2c8-b0069999a508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b37cecdd-724e-4fb0-b51e-9db0e48b6a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb8a201-a0fe-4d8d-9453-6d6ba4c728f4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3f9463-59c2-4d29-85f4-e62b94cf2c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533b3b06-3e10-4d79-836c-fc049e695802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8683cae4-9c12-426f-8bc8-56f10ca70ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77692d4f-3733-47fc-95b9-a71045989080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf85342-7b43-4654-bfdf-23cd9b777925",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd686b6-c2a9-47c6-aec9-eff5cce4e38f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f119bf17-c8eb-4acd-87e1-ad0921cf68d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "673dcecb-9cc8-433d-abb1-a383657c8be5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e7005df-f9bd-48cb-85c2-23df1a7229c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09a4c60-7aaa-4849-889a-9cab1fd6360c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d50a09a-57f7-43f0-88cf-4eec936a1066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "899259d0-021d-4d35-b145-e707c65e44b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97e6109-f876-408c-9248-ce4c9f694f11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac4f2d8-2864-4411-855b-53b51c325624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b370f3fb-efb5-43bb-b17b-2ac68e993e18",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622b0fd0-d398-4fa8-9bf7-bba6933fd9a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a57c929-c622-47f6-ab51-38863c3b6188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cf00dd-8457-47b6-b18a-0c1c80552ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430ddc64-f281-414b-a17b-07a0302b7e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94700b0-942d-4c72-ae9b-b47261dbcceb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e3f023-2281-4499-8f6c-44db872c062d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff00f59-1af3-4806-82f4-138bcc4f4867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb046f68-2419-414e-afc5-fe2ccd1e08a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c48b2cfe-8077-4ea0-8792-e4afbf993126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63c0d21-3cd9-402e-ad88-54bd75144719",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607f43d8-78a3-46d8-b41c-e8629409d715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f0c6b30-5a47-4fcb-80f5-131603d7bd48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4317afcf-e903-4fe1-a7d3-73ef855fc945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2638691d-f922-45f3-be37-4d24790bb519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422d9d90-689a-4efe-ad42-d3191544cb49",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50763413-764e-4c1e-9691-5e921155a7b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c0f0ed-5094-4269-8e0c-02d7c67dd6cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6251b521-c1ec-4060-9ae3-855150103140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782b0e59-a870-4acd-ad4b-8754c13d8888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d337d93-e234-490c-8085-11de5d5214b9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861ccfd6-3303-46cd-9907-e0adba6f79d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a015a9be-b570-4953-80ae-7da16cc3ae73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a75d41-ca57-49a1-9543-61b72f03eae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a82ba1a-9994-4d0e-abab-193124abdc10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37eb08a-d531-4e50-92f7-264d62b4f9b5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d8506e-d44a-4216-8a9d-ec86d98ceec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039cf4c4-7366-4f2b-9051-de7287d87121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2161e965-fe81-4235-a597-7d76ede814a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a3f90f-c8f1-4d7e-88b4-6f76f24bf84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b99bb65-7d38-4c12-af4d-c1c9e43dd22c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1aeb53-7514-48f3-843c-dc4dae90a39f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "570a601a-a355-4a4e-be3e-26f6a9c686df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1d9e8e-a315-48ea-99a3-291323d3e9f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e26396-23c3-450f-bb33-f934cc851dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151a53c6-167f-48b8-ab39-e28c444b2205",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ece303-55e0-4cc0-bc9b-f869c0a0c642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3913665c-a95b-46cc-888e-b26417d52d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb456e43-6d5e-4fe3-9fba-1df6c9333464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9fcb433-7db6-4647-b06c-725a3e64ddaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee668bd-4f3f-4380-9ad6-403af5d43b49",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc195d8-58f5-49fe-95ac-ad256f3c8831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee907d0-e6dc-43ac-99d8-cc85f65d160b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a923905b-7e71-4e26-83c2-0a800dc02231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1449f727-3046-4241-a30c-96a823aa322e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1637b77a-1da8-47c2-9831-ac4182695c68",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c64b678-9624-4cc8-ad2f-7cbedf20e3b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac88389-1cbc-4b7e-9225-1b97f7821a9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30110ab4-ec34-4bb1-a13f-8d741dc9695a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5156e3-504f-41ea-a8a7-7160b3a7bc99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a11096-94b8-4575-a0c1-8cd2a16da9e7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5810e53-527b-4429-833d-33d2e0fa8291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735c0ab6-06b1-4ae3-b49c-eb14b3e529bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65971025-d772-4a3a-897d-7aaa0e300f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf5546d-8cdc-47f8-b72d-039d87cbf0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1abd3dc-6e09-4e9c-ab4a-3d0d5ac1ae1d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8d370f-1c67-4625-ba67-7d4f1d368fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e969754-ebf6-48d5-8e75-249aaf1f029c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbf63b6-3c2c-4de1-b40e-ba6a463f1273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b367137-9a9a-471d-9fe4-1c054daab504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9341e57-42eb-4781-bf11-d0316a008907",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5680e2-72ec-4e3f-949d-ef134bb263ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61aaba7-793e-407b-8a09-44546281471b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26dfb42-ea36-49ba-8017-5131bb6fb40a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1942b86a-fe1e-46f2-950f-6b5c96435769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737e0057-4a67-4bdb-ab87-847d2f13103e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba86a827-ba22-4719-840d-9f7cfd38ee0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87075ee-1a96-4dcb-9d0b-f5c6ae79cdd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bde8d0-15ef-4b4d-9685-343f5ece3d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb501ffb-1007-4577-ab1c-5e3ed4afb8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eae2afe-9d88-4d14-ba71-ea61e0aab1fb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1926de39-9d58-4616-a442-4735c61a996c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b3abfe-0ce0-4e97-8d36-216f22c73678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a882920-8f36-4cec-871c-6d11a29cc976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc344a8-e4d2-45e1-bf42-df8474d6c6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654bc8a8-e67c-40de-afcf-8ece94074f28",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c96a5e-4c84-44bd-97f7-2046d26d1e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f18f05a-dfcf-4d0f-b9c2-023d772af4ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abc6d20-2092-4d37-accb-e81a7da113ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c7335a8-9053-4032-9448-d3ba9dab1bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64626f37-ae11-44dd-a446-280b154919db",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bd16e1-fe07-4012-b3c1-2ff04bcb4d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1d57a3-f046-40f3-807e-697dedd02919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba079a1c-3839-47ea-984e-b5df4d1a8029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a4a798-55e5-46e7-a50c-490c6f440e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d3233c-a29c-4253-9220-2f8851af1c6a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf081ca0-c521-4bfc-b5b4-08288c5cbf09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d27dc257-551e-442a-95ec-9493d9c9d926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2cb33a1-ce5f-4797-aea1-56eff4da06d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52bdf33-0c91-409e-8d6c-0451b651aca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1266633-717e-4357-8060-cb6d0314521f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7fa320-993e-480b-b799-c07b8a312ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3655e9fe-0e23-4ead-9bf8-fc4e4b28a81c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3384860b-79cc-4e90-a6e8-3f519b0d6166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880ebaea-7a5c-4c0d-b90a-671952f687da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4e2c1b-ee38-4df0-a31a-ab735f61ba18",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456c447a-ae51-4a2e-b7f0-c68a148738db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08070826-1787-4bbf-b656-a5da2b11c6f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fd381e-d288-4d56-ae8b-10ed18077b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a53c756-66a4-4b6c-b62b-b9a66e71d7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b350a0e7-8fd7-4dc9-af87-3319f968dac9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f47f3c-9ac7-4046-9ffd-07ccc0365b26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42578a96-aaa6-400a-9811-fd8822d44d49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57be1bcf-e9af-4952-a816-fca6b851b055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971438f0-4f27-472f-b5ea-8e65ffd923ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ada81f-7268-4edf-9982-10ca148eba1c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beaa04a0-6162-4d4a-9d62-9b9d6e3c17bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb399ebe-c28c-4ee8-8458-052a16e93aec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18173c61-78c0-4b9e-9483-3a6016539514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac393d0-0dc9-4b15-94d1-2014cd3f4d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65d2ea9-0d01-4f01-87ae-b5209782be4d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d80692-34c9-4c7d-9ff3-9882f7c14c82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3343101-e41b-4962-be34-ee5e8e6b98b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "871fd3b5-1a49-49a8-81bf-db8475530e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abdcb2d2-2fce-43c8-b5d0-2de3e404d484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc534c68-2147-4e95-80ce-5280bf869c64",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76758cda-9e8d-4c6e-acca-aa2fb568cf39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e3ad51f-7f29-406c-a511-0d30e2f85f4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7275787d-7ff3-4ffd-9aa2-f88f5feea091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3577db97-3d30-4959-91aa-0a87afe00322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4020e7-d989-4cc8-960b-8b290c9ce9f3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b74888-9693-415d-b2e8-73aabae45318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "710a0b3e-7c1e-4c92-a7b8-9178a23f0ffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5d2fc9-2224-4455-9fec-7270b9997b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b0d7a4-f5f4-4df7-8222-06f556961266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498cac6c-fbf1-489e-9707-bb34ec810e31",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcfb853-393f-4b1d-9a42-f72e54ff2ca6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6150a42f-02c5-447e-92fb-94a1b1e7f7de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55a94ea-58cd-4327-8730-182b066128ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1de615e-eb07-4c89-bf5f-a94b5df1b735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784ef697-372d-4042-84b4-3d2502824b23",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4065653-c283-4ada-a6aa-4d0de9d2a0a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b82a0e56-291f-4ae0-9a9f-17e516199c00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ad78fa-8b53-4b0d-86f2-f7aeb740ccfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1368a48-51b2-438c-83d8-53da76ab1a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eafb3a8-a804-49bf-9b12-66c8f1a520a5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e41e4f6-14ad-4f11-9785-982af40e8162",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "601ef63b-1384-4c6d-8135-a3aa481efbf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd2cdd9-c498-469b-a8ba-05636dca8dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e92d30c-528e-4cf7-a473-12caf0db78e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac602d41-09f4-45d2-a202-32c25bc5cdc2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392995f0-ff31-4062-bf8b-fbeb98943c84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01841349-b24b-4e9c-8f01-dd3e9269c09e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc8dd8d-5311-4a25-8408-3e16d2fa9faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba484be-a03b-45b1-b04c-28ad01f65de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8d0bdd-6ab9-4d61-9467-81553d69aa1c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9746104-3c84-4cac-94e7-0b19a8e2dbb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae374172-e513-4209-8dc3-580712149627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a470c9-7851-46ae-8d50-d221bd763b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef30f34-9dbc-4c48-8ab2-6e92150d50a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d956b0-1b9e-45b9-b85e-8efed54cacc9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5098088-dff7-4ee2-a8ea-df0e7411abb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "112cf699-7b8c-483c-96f5-4f3e5a45a6d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "786f1981-f720-47eb-9aea-05270a66a904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1011de-800b-4b3f-868f-dd7a7bc48dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cefdd01-5fba-47c9-9a69-118dedbecdb4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e72895a-b402-499f-a7e1-e15320868da6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e933dff2-58c1-4f18-a758-0c5b24127e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b5f00c-4225-4d7f-8a8f-842dcfa20b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2dc24cf-cfbc-4811-931d-1e716ed71606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8dcf84-5a98-4e6c-a5e9-4af174feca90",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4dbe9e8-1ca0-45ee-82fd-c83af6aefea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd83ac4a-38f8-49b0-bf52-71ead99441fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f843adc3-deca-4eaf-8d3a-e4ced7b2c954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80837c11-9045-48ac-a256-80ccba147468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60f7609-2bec-4bca-96e9-51cc6557ced3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00f21b1-0df8-4aea-91a7-c2f72b3c7152",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "391f9d2d-0fb5-4af1-9a98-dc00db8d4569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80455640-c384-4224-9e24-47da61b4224f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c73d0ed8-935a-48a5-b099-c5d6ba9f21ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634ec148-c754-434b-81b4-0fb2650ab915",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25aaafcd-dea5-4856-9a0b-ce1bd704589e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64031d04-78d6-4327-9611-8fe7d2df4654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f820e3-2606-47d9-ba0a-b182378a54ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "506428cd-35fb-4558-9893-d72d49562385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a33f6d-42cd-43b8-9cce-521ab9cebbed",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77af7abb-5f25-49ac-a93a-2dcb53db949c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd46058a-3732-4e20-bf64-47ad2635d40e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd69162-ea78-42cd-9da6-c211abae6f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b640682-3fbd-4469-8153-ee0b5022a693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2737d18a-6ea8-4525-ae7b-44e9d42bf3ed",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc8f0b9-2743-4d72-8f39-664dfae1f25f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7ce2926-067b-4eb6-b7d7-1eac48f55bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2699ba68-980a-44d9-bd96-ae39eea29f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412fea2f-356c-4842-bcf8-95ce6f0c4878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97324fca-10de-430d-abbb-7c59d1ee4fb0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a819fc25-d6e3-4f14-b72b-cd153dde2d2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dba5ad12-c933-437d-aa53-3f6187a62f20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d069b7b-5123-4303-9835-8f4873e90bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a46a2e2a-a855-490e-88f3-ec6091ac8f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144436ca-439c-47f9-a414-46a280dbff01",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cbede9-ef96-469b-adce-7409c212da1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b9084ea-68cd-4346-95aa-6ac26aefbe74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b5c0fe-31e8-486d-92da-b365b3190838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24cc215-20d6-44e0-bf34-764471a3a2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe17de1f-f8ad-4ce7-b02e-e9c09c67a073",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbb1c39-1a1f-4f7d-b7a1-860e65e63bb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97deb1fd-816e-439c-ba23-8974f14f63f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da970f78-38ae-4c31-868e-7728801786bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb76543a-c2b6-4112-92c8-0d909a366e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b38eb03-6340-40bf-b668-6f09c2eb6764",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfd8063-840c-4144-a26d-2b1ede026bc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c95046f-47ff-4001-8d37-713c6ad7ba8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f502ce-0ddd-413b-b879-0cfa11283934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff73e468-98b2-4b7f-9875-f62f9c987ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc6df60-33cd-4d3d-b020-6b9831eaea26",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f78acc-be45-4664-bf3f-1580a2fb216a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68f91bf7-1dbe-4a34-8d7e-8aefa8d48fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8b913c-e8f8-4e98-bbe5-ee08fab3e9b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22b0f09-40d2-4dc7-8286-9142f517f65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d17ffd-b4b8-4481-b928-97f1c7cebb86",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350da579-391a-4b6b-b0cb-40af69834a5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76b7e8d2-0183-4785-a2bf-c7ad4b2b1b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bacb58ba-15ef-45b3-99a5-9c1663df7095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf12b1d-82c3-4ed0-aeed-3f8458165b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed49c2b-002c-4e9f-842f-d2ad0198a475",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff8555d-3ae3-4b5e-85ff-4c2b60e96d39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebe66556-26ad-43b0-8943-973dfa59a730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad64d39f-5e66-42d7-9d7e-580b361fbdf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0524ca-ff02-4664-9d2f-80b24969f390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6adf62dc-60a1-485a-92f8-61c2b6f40230",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc59a262-af3c-44ab-b6c2-02dd3e6f4dfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78832a10-ea87-4cb2-bf7c-4d6f39b0a319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d548e58-9367-4218-9f53-3ef7a93f1846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fd7efa-4d83-4965-9389-6e029bf835b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be6fee2-e1f8-427d-a5c5-f3c65c169380",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48cf28bf-6d49-4e00-8df9-f814172db00f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbf18d30-10fc-4ce0-8540-cd5b99507530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5456f49a-df7e-4417-acfc-c1f34db8947f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52681f1-0a83-4645-a5b8-8ede13c3eace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c7e4c4-6ff7-4c8a-a628-d3a2d007f967",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05643e04-64cd-4271-9f08-267fc2ac6315",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1477125-11db-40d6-96a8-a8c6ddb3cd7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9d1554-1c24-4588-aa34-def8f625c24a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8318ada2-cbc0-4ecf-b500-6041d7ebb4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2e9d4e-e9c1-40a4-8fcd-869e39dbcfda",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7262bf-a5d3-4007-a2e5-1e6defeb92ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f268b450-8e1a-4587-ab81-07108dcada1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e928e32e-e0ff-41e6-9169-3915d86ef83c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "406ee361-ee38-400a-949c-99d849906640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff795b9-d3ec-4e13-96c6-4f20ad648d27",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da39a71-e1d5-4169-a9c9-fd6442f8a31b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ea5a421-48e1-4d83-b4db-88d62ec33876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a90020-3e80-4d99-b2b4-30c77b6dc33a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f586e963-a36b-4360-b033-2fdf85f48046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9bf74a0-ddce-4742-9d05-6d149fda796d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29380d63-4ee7-4e80-9818-9f9e01b706c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfa7dd6b-94a3-4633-a9b8-7f68a49cd1a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b7f191-d642-471b-a9ea-26d80e50e771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfbc2318-004a-4ea8-aae2-90891b719ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894a736f-f755-420c-ad6c-493973fc8cbf",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5499cab3-d2a4-482f-a3ab-f67f3623311c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "995d97f2-9bae-42ee-83c4-d0ffecabae5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2ec0b7-1c13-40c2-a1f4-58318a674503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb1c31be-4bd6-4052-b781-5a98b8162ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f563f9-87dc-4f14-9eb7-f0a580658042",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682281b4-39c7-4a13-ab48-9c25380aecdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17621fcb-53c3-4cc3-97a1-d18522a187d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c44484-2dbf-4765-aa53-affa4af72366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43772a42-873a-49c8-9861-03c5e4f1429e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276f5847-9344-477c-bbd5-df5702511eff",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08b772b-aa9a-4a27-a1aa-9b3cc81132b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4af2acb5-2eb9-469d-ba02-fd8c84dd06b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b454cfcb-fa86-4948-a52b-d7e4da0cd1a2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65ea266-1017-48d3-8c34-c9aa67ab97be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b512d1de-7829-4878-91e6-4366aa9ebeac",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f328773-4d49-42bb-8a5d-ef8243f50381",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "174a4b7c-1f2e-4cb1-888f-fb4c74ae8d73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2601e69c-f96e-4b03-99cf-c368ef5d7eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a1c249e-208b-4c7e-8313-be8ee08bc6b0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05d01146-66ab-4b0f-90b2-b32567335130",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ae3602c-fabd-493f-9e6e-29a3e648ff25"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cf4fc58-a31a-4f02-a11c-a3d49ed31cb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "def8fac2-d36c-4589-96a9-a15874e6840c"
                    }
                  }
                ]
              },
              {
                "id": "866be456-4965-41b3-87d0-77dce23daadd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8580417b-a16c-4869-ae9e-6480b77ca9e1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206fc534-3e6b-4d3b-9543-314791f4d024",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bdfef034-f574-460a-9d27-1d28c1d2ee5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a524106-12f3-476e-84e1-fa1e26302617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bcf013d3-fa24-4821-a0f8-22c05b57df82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d18de91-228b-4794-9d06-eab07e42962e",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8725060d-b9e2-4a25-987d-61cde23c913f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f298cb8a-ffa5-4603-9312-67146c81fa1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e41dea-404b-4ccf-b02c-0494a69e825d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3ca9399-9ce4-4ead-9409-f63152ad413e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62cbcc6d-dbeb-450a-aaa2-65656f7496ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24427f63-6c62-4354-8f27-fc408def8255"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1464327-bba2-4ba8-a408-3f4966d02aec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ecc30293-b605-464f-a1a3-3388f621fb65"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "7457ad62-a49b-47d4-9ecb-562ae8d8cae1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bb30531d-44c5-4029-93a9-a52f2f1fb656",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f8144bf-2b98-43a6-b18f-165c9e4bd017",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8864c64b-1c4d-411b-bade-91545f5f5a2a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c111fa0-03dc-4f5e-bb3a-fea08ba98454",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2b4b03e-1c7a-4f93-ba4b-c46773154b77"
                    }
                  }
                ]
              },
              {
                "id": "b507a2e2-f68e-4aec-bdfb-ac5393b899db",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d435f9e-7925-48c3-9545-4ec42bc395a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e4afd1e-19cb-4ac6-9a26-0a373cec372c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdd2bcaa-4c56-471c-8d66-59ebd3daa351",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8016902d-ce6f-49c5-b151-1a5c0872377c"
                    }
                  }
                ]
              },
              {
                "id": "4e137257-5f36-469c-b2d7-837ffe7f79d4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c9c21ea-4fcd-4f69-b562-df8a9bcc5c5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2315da31-8bbb-4935-9ede-8799a466a2a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "592a2a2b-23f6-489e-b5c6-09165ab2b510",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9223571-237c-4166-a64d-a6a8ceb48f05"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3722d60d-2c17-4cfc-8164-1525e2a1fe6e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b4d18bc9-4365-416d-9fd4-92ce6f3f6130"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5a1e465-68e7-42a2-a5f1-aa860432680a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bed84566-44f8-49eb-b5e7-12c238b2dfa7"
            }
          }
        ]
      },
      {
        "id": "1a4582fe-ec8c-4a81-9896-2dadadbf2f59",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c7dac73c-0ddd-4d2d-b64a-5404c640af45",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e08f369-7305-4438-ab18-488cc08ea91a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0fa89776-5583-475d-97c9-4090abbf0ee1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c87754-706d-4ed4-b249-98ebb389ec92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42d70a7-b0ee-46f8-a771-bc1befbcb412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60bcdfd-04bb-40de-91dd-c6922783a39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e19c138-473e-422c-9f53-75fd8d1c3038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ba890a-7e4a-42c5-8606-9b64d5f9499d",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7861c82f-0917-446a-8ee2-0d7950604f24",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "19a9a955-0f87-4f89-bd75-4bd633836125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de7bc18-91b2-4991-bc5d-58ceed4c6c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47c093a0-0f94-4754-bf7f-ba31d677d6e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81291228-99bb-425d-85e1-4a1fd300b6fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e45e30b-4e68-44a5-ab53-b75a514e4c8f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "43e4af15-dcda-4198-babc-ef7f9aef00f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a44ddc2-8e37-4199-8647-2f04dc917692"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ed11db0-dc20-4fb5-8fe1-b062be51251d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope",
                "utils(pm).getAccessToken('submit:presentations');",
                ""
              ],
              "_lastExecutionId": "fe92931d-d402-475b-84e3-5a4b4384d1e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e349b37a-e07c-443e-a9ff-2805b7706a44",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8654daa5-8557-4bed-ad6e-3ff2f193de8b"
            }
          }
        ]
      },
      {
        "id": "ca43642b-e3a2-4c13-86e7-851903e26579",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "cd9221b1-e4c8-48ad-8415-ee18362fdea4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f400448f-bd45-43fa-a784-5ab01379accf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83de2541-bc9e-4a35-94cc-145e84197b02",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6e16c7-4e48-4f61-806b-c51d8d0d9570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2333a1cf-779b-4be1-95fb-d6d2cbee6052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8774c20-61bb-4a09-80e6-a2b72f8a6353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "158d430c-dbd9-474e-b86b-aa83a7796679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c544c662-9f27-43c7-82c9-a0a309206199",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587a852b-e7c0-4930-92b6-b528e1b53097",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "7ed017ec-b1c2-43ea-8c53-a1065d63c0ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f33796-c0d2-4603-a5a0-fac42b2734e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59800e66-73a7-4576-9379-9bcb60e81591"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63771ce3-8427-4f92-a9eb-0ad3ba17584d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a62377b-cdfc-430a-8233-bb4d66c7f0e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "56cdc748-4323-4f0b-85be-5d5cf4d8ad7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f09c1e11-047a-4184-a528-6da020609457"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c6efb2e-41f9-4c4c-903f-d2bf7012142d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope",
                "utils(pm).getAccessToken('prove:presentations');"
              ],
              "_lastExecutionId": "3ca105c0-ce8d-4502-a99a-df236c213e46"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ddfcbe8b-540b-43d7-83c5-717f141a404f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca3e2d00-4bbc-4981-845a-4f22036b256b"
            }
          }
        ]
      },
      {
        "id": "142b6d24-9759-4c12-bb53-2651aaeca294",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3260c91a-a6de-4e36-91ee-a6929c82d446",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c3bf417-31e4-46f4-aabf-53dd3733baec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "95abee13-3773-4c6c-a608-824086682883",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a4e0e2-6225-4460-93fd-f14100d8e4cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "966ce062-e5f6-4785-9eb2-a699cc4014af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0d59c8-1d91-475b-a686-da2e3a88134f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81a45219-2f6d-4818-8c75-16bd20d1173c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5eb4e3-19f0-41b4-b7a5-df991da5573f",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f03034-3c3c-45f3-8734-938eb2f62b82",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "302ea9eb-2e3b-4d46-9e8f-6e8ebf2e0204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc84023-3ede-4fb9-84af-97fba3729aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "465d82cd-ca3f-415f-aa76-f09a1e8f185d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13ac0463-a942-4b9e-a260-82c67418ff9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e881b0a0-eecc-4aca-9746-69fd2e6ab8ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "092d8c0a-b726-44be-828c-5676bf9fe0f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92cf7ce4-6279-4d89-b4ff-233055b59e18"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3baa011-cb2a-4a45-b54b-e3a3b0e7a0dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope",
                "utils(pm).getAccessToken('verify:presentations');"
              ],
              "_lastExecutionId": "980b0938-3b37-46e2-874a-1bcc13b5bb04"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9bf12c23-cbde-4b1d-b141-d1540938dfdb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb306c45-4ac0-46e7-b5b5-20ecf5ae15f1"
            }
          }
        ]
      },
      {
        "id": "8908fdfd-4bfa-46d7-aee2-c8a8e239397c",
        "name": "Presentations - Notify",
        "item": [],
        "event": []
      },
      {
        "id": "2c2076db-dfe6-482b-806d-bd8a2a26dd80",
        "name": "Presentations - Submit",
        "item": [],
        "event": []
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 157,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1227,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 157,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 165,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 157,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 320,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 619,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 608,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 249.95757575757568,
      "responseMin": 66,
      "responseMax": 2992,
      "responseSd": 342.9767789916051,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1664931723496,
      "completed": 1664931774237
    },
    "executions": [
      {
        "id": "00e5a97e-4f43-4f74-8fee-b9fecf4f2979",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 157,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "eff3e0e1-e1e2-4426-acf1-505d8d0af8d8",
          "httpRequestId": "98730301-ad3d-41f5-a53e-38b0595059d5"
        },
        "item": {
          "id": "00e5a97e-4f43-4f74-8fee-b9fecf4f2979",
          "name": "did_json"
        },
        "response": {
          "id": "ba8d3a37-bf3b-4d76-a7d7-15603d03ddfd",
          "status": "OK",
          "code": 200,
          "responseTime": 322,
          "responseSize": 1369
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0880f8df-c9d7-4077-9d50-9c7aba130457",
        "cursor": {
          "ref": "a6c3c0ce-8124-4695-8ed0-00b5e3c71d6f",
          "length": 157,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "aab96ef9-fa59-43f2-9a80-c9a192e2ba05"
        },
        "item": {
          "id": "0880f8df-c9d7-4077-9d50-9c7aba130457",
          "name": "did:invalid"
        },
        "response": {
          "id": "ab4f400b-2cb0-4ff3-b85f-81babbf715c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0880f8df-c9d7-4077-9d50-9c7aba130457",
        "cursor": {
          "ref": "a6c3c0ce-8124-4695-8ed0-00b5e3c71d6f",
          "length": 157,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "aab96ef9-fa59-43f2-9a80-c9a192e2ba05"
        },
        "item": {
          "id": "0880f8df-c9d7-4077-9d50-9c7aba130457",
          "name": "did:invalid"
        },
        "response": {
          "id": "ab4f400b-2cb0-4ff3-b85f-81babbf715c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd83153b-6a2c-4a50-a11d-ba59c8cb9bc5",
        "cursor": {
          "ref": "48a0e44f-4072-451a-99a6-4dbf1bbe22b8",
          "length": 157,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e0b2dc5e-d639-4ad1-8928-c96b68323a4c"
        },
        "item": {
          "id": "bd83153b-6a2c-4a50-a11d-ba59c8cb9bc5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8ab56f05-fab0-4ccb-83e2-b781aace5d06",
          "status": "Not Found",
          "code": 404,
          "responseTime": 457,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fef392-c640-473f-b35a-b98a0ab5223b",
        "cursor": {
          "ref": "4e6ea096-f730-4876-b42c-d529591cdf4f",
          "length": 157,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2a941255-fef6-4513-a507-e4ddb64b040a"
        },
        "item": {
          "id": "41fef392-c640-473f-b35a-b98a0ab5223b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "18be982f-5291-4aa6-b506-5b0c7818af00",
          "status": "Not Found",
          "code": 404,
          "responseTime": 80,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a132d004-981a-4e68-95b9-e90a202031f5",
        "cursor": {
          "ref": "efb56170-d8f7-4670-a26f-f19030f7b9bb",
          "length": 157,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a27322d4-3d55-4e63-8f07-816517b1304f"
        },
        "item": {
          "id": "a132d004-981a-4e68-95b9-e90a202031f5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2b6d42f0-e216-4909-a671-3e727be81041",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 107,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15be1dab-714d-48e6-9ea9-db930aca76f1",
        "cursor": {
          "ref": "0a044d44-54a2-47f8-9bda-c950e8a9b28f",
          "length": 157,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ad2e6467-723f-48d2-9a8f-4268310d00be"
        },
        "item": {
          "id": "15be1dab-714d-48e6-9ea9-db930aca76f1",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "cb6a5523-fa7a-4399-bbc5-e5bfb787dc35",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 134,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15be1dab-714d-48e6-9ea9-db930aca76f1",
        "cursor": {
          "ref": "0a044d44-54a2-47f8-9bda-c950e8a9b28f",
          "length": 157,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ad2e6467-723f-48d2-9a8f-4268310d00be"
        },
        "item": {
          "id": "15be1dab-714d-48e6-9ea9-db930aca76f1",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "cb6a5523-fa7a-4399-bbc5-e5bfb787dc35",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 134,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9343a8-1f1f-4482-92e6-4a5c723a5b61",
        "cursor": {
          "ref": "8b5c3bc6-fae5-494a-93d4-c66e8bec0ced",
          "length": 157,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3c825478-5b42-4fb2-9352-956e70ac5a3c"
        },
        "item": {
          "id": "cb9343a8-1f1f-4482-92e6-4a5c723a5b61",
          "name": "identifiers"
        },
        "response": {
          "id": "0c870c96-9b09-4890-aa9a-cd29e48f944f",
          "status": "OK",
          "code": 200,
          "responseTime": 549,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26e9d1f-8625-40ef-82a9-2e491ca34852",
        "cursor": {
          "ref": "2097ee7d-165a-4c90-96ac-05f56446d5f8",
          "length": 157,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8e93674f-ceda-471d-9ede-69001ef87898"
        },
        "item": {
          "id": "a26e9d1f-8625-40ef-82a9-2e491ca34852",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "caefc4d3-229d-4efc-9c9f-f8760a42be35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26e9d1f-8625-40ef-82a9-2e491ca34852",
        "cursor": {
          "ref": "2097ee7d-165a-4c90-96ac-05f56446d5f8",
          "length": 157,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8e93674f-ceda-471d-9ede-69001ef87898"
        },
        "item": {
          "id": "a26e9d1f-8625-40ef-82a9-2e491ca34852",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "caefc4d3-229d-4efc-9c9f-f8760a42be35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd0e240-a807-44a8-80eb-76e6dde99011",
        "cursor": {
          "ref": "02468b66-f4bc-4929-8f56-c506600c5ab9",
          "length": 157,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5e0bb506-5ee9-408b-8715-e533cc60dbca"
        },
        "item": {
          "id": "2dd0e240-a807-44a8-80eb-76e6dde99011",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3efd2e2b-5107-405e-ad27-017f1794e8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e049cdda-74e9-4257-9543-25cc67a68a61",
        "cursor": {
          "ref": "42932dcd-4d0b-4d19-a1f2-8e357dae20f5",
          "length": 157,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "58885e40-48c9-4887-beb2-a83fa5fccddc"
        },
        "item": {
          "id": "e049cdda-74e9-4257-9543-25cc67a68a61",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "9bed348a-a105-4fc2-9a5f-a5abe4c5698a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95092fa-6ef1-49dc-a4e6-974131b2483e",
        "cursor": {
          "ref": "b9e3cb5a-38d6-493d-9e72-a13ba63dbf16",
          "length": 157,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "dc2911fa-6c5e-49a8-a953-3c964662d149"
        },
        "item": {
          "id": "e95092fa-6ef1-49dc-a4e6-974131b2483e",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "d336c1db-f449-4701-9780-485ae9846c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1720218b-0aba-4f3e-a5f8-e90811b13cad",
        "cursor": {
          "ref": "c6ca9e43-b2ce-41c6-846a-4b2508c7ee17",
          "length": 157,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b7e46d2c-88a1-47f0-a406-86c8b0e7f852"
        },
        "item": {
          "id": "1720218b-0aba-4f3e-a5f8-e90811b13cad",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "5d55e5bb-7817-492b-a414-046e44f6942e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e39fb6b-b9f8-4dd3-b365-7cfbec5c8b1a",
        "cursor": {
          "ref": "a5b3c6e6-bcea-4cae-88b6-00db3337cfd5",
          "length": 157,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "35f8de7f-7361-42b7-81a8-fc4c0c5359bb"
        },
        "item": {
          "id": "0e39fb6b-b9f8-4dd3-b365-7cfbec5c8b1a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6cbff462-0029-4037-9568-dfc1a0367430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f9b9a8-0522-4030-b21c-6a03b0e14ea8",
        "cursor": {
          "ref": "ff16ee17-9333-4f70-9690-1c7b12b767f9",
          "length": 157,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7642407d-40c1-4ddd-a4cf-d62b9312f506"
        },
        "item": {
          "id": "76f9b9a8-0522-4030-b21c-6a03b0e14ea8",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "a54701bb-9a8a-4a90-b4d3-0e207795c0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85559f3f-d96e-4694-a13e-34d24074f621",
        "cursor": {
          "ref": "76f0c4fe-4315-4bd5-bfa7-afee4ce24dd3",
          "length": 157,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f217d516-dc39-44af-8838-0380fb358c7f"
        },
        "item": {
          "id": "85559f3f-d96e-4694-a13e-34d24074f621",
          "name": "credentials_issue:credential.type.members:missing"
        },
        "response": {
          "id": "32697b48-ec9f-4a92-93b2-a5d9372c7d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef6f54e-c6f9-42be-b2e9-5f8f8e157820",
        "cursor": {
          "ref": "392f3434-31e0-4d23-b89f-758441ffd8f9",
          "length": 157,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6f19af33-7b39-4476-b88c-12fd55411978"
        },
        "item": {
          "id": "9ef6f54e-c6f9-42be-b2e9-5f8f8e157820",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "a7144275-a271-4f75-8a95-dabf8a13e648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64723a75-8b9d-491f-95c2-f960562657ca",
        "cursor": {
          "ref": "47151501-7c94-4d88-bf36-685ed588f3b5",
          "length": 157,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a1b4d9d2-aa92-43f0-9c19-dbb69340938f"
        },
        "item": {
          "id": "64723a75-8b9d-491f-95c2-f960562657ca",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "98c06001-0b51-474c-84b4-e6694cc4f05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bdca6b-1848-4447-a0f4-29a020f7f622",
        "cursor": {
          "ref": "1d7bc2cb-005b-4ec0-8f19-82758ffcc476",
          "length": 157,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2615050c-3a51-48aa-a608-e42042125706"
        },
        "item": {
          "id": "40bdca6b-1848-4447-a0f4-29a020f7f622",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "d0ae1f8c-b3d2-4672-9bef-15bbdb21d854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6313fa-e4e5-4c3c-8ab4-8710d325bac5",
        "cursor": {
          "ref": "25e03fd9-c0cf-4500-a874-3d0c79991655",
          "length": 157,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "54e46ac4-bb03-490a-a285-f19974804c50"
        },
        "item": {
          "id": "7e6313fa-e4e5-4c3c-8ab4-8710d325bac5",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "f15b715d-1517-4f51-8993-010fe747c85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a980f7-10df-4f75-98e1-c53aae2975d3",
        "cursor": {
          "ref": "f5c587ed-55be-43e1-bec6-455cb6558c3e",
          "length": 157,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f14180ad-bf4b-498b-85d7-4c5e99f9426f"
        },
        "item": {
          "id": "78a980f7-10df-4f75-98e1-c53aae2975d3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a031d3ce-6ccd-4859-b788-7a38f515e217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f44be02-7948-47c1-8f58-f083fc6105cf",
        "cursor": {
          "ref": "89408a01-47fd-433a-9e0f-70840b9ccab7",
          "length": 157,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "24db72b6-5b7c-4632-8859-ec1935bde307"
        },
        "item": {
          "id": "1f44be02-7948-47c1-8f58-f083fc6105cf",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "dd11ab00-a293-43b9-b4b6-4d53fa7b9233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc57f13-d522-4c8b-bafb-675952d7a9c9",
        "cursor": {
          "ref": "68e80310-9fc7-4ae0-bf35-8b8ae816e1e8",
          "length": 157,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6a584cc2-f58f-4275-9ad5-43455b86b204"
        },
        "item": {
          "id": "8cc57f13-d522-4c8b-bafb-675952d7a9c9",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "7b578933-2ecf-4cbb-aada-c03c765d1ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb80fce-3fa1-4e64-87fe-1988cae94605",
        "cursor": {
          "ref": "7ff97788-6a05-4192-a790-f94e4164a0a6",
          "length": 157,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "794d1ee6-5030-4150-be91-63a18f40d23d"
        },
        "item": {
          "id": "ecb80fce-3fa1-4e64-87fe-1988cae94605",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "5334fa55-ad61-4019-abcd-15a4002d4928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b99e49b-f228-4ce9-b88e-ec7fb8daf84b",
        "cursor": {
          "ref": "f87429a0-97ca-4081-a9da-f8b0dd3deae2",
          "length": 157,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "07341896-752f-42b1-8535-fb135afe15f2"
        },
        "item": {
          "id": "0b99e49b-f228-4ce9-b88e-ec7fb8daf84b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4d68a8e4-e515-41ef-b61f-73def7af8d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58645942-157d-4fe9-b03d-6483726470af",
        "cursor": {
          "ref": "16270766-aee7-4a8d-91fa-96a10a8aa52b",
          "length": 157,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cf51eff4-cd5f-4e87-8129-1115a192e8fe"
        },
        "item": {
          "id": "58645942-157d-4fe9-b03d-6483726470af",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0a21e150-d034-4fab-b5ad-86068fcd0a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc200785-b26f-41ac-96e3-24395bd70b61",
        "cursor": {
          "ref": "a38308b3-959a-42af-a224-ca271716309f",
          "length": 157,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9e71adf8-c05a-4c3d-98bf-b448bf20746e"
        },
        "item": {
          "id": "bc200785-b26f-41ac-96e3-24395bd70b61",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "8b779b17-8d7f-4113-a116-552ccd7aa0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daab47bd-bacc-438f-8452-189e06693a16",
        "cursor": {
          "ref": "eb2e8718-0931-4f6c-bd82-0dfa3e31db2b",
          "length": 157,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bcf22761-3d46-45c9-8c92-444724788248"
        },
        "item": {
          "id": "daab47bd-bacc-438f-8452-189e06693a16",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d03362ca-a69d-4af1-84ca-4497f5c3a7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b5f86b-7cfc-4de1-b8c7-b6958d442bad",
        "cursor": {
          "ref": "2101a1d3-82cc-4b45-b22b-39e32434b888",
          "length": 157,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "49425e81-1cce-4001-b6ab-d5b6376aabe9"
        },
        "item": {
          "id": "07b5f86b-7cfc-4de1-b8c7-b6958d442bad",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "83479a30-acfa-4178-8ce0-62d846a9bb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63e6442-5165-4d19-8c6d-597c6975b606",
        "cursor": {
          "ref": "704dc7e3-d965-4d4c-b14e-158fe8486b6e",
          "length": 157,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1205881b-43f0-49aa-af07-a18027cb0729"
        },
        "item": {
          "id": "b63e6442-5165-4d19-8c6d-597c6975b606",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "dbe4795c-b4f3-4a85-aba9-bfda316d7bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf865e85-1325-475a-8770-e6c3d259620f",
        "cursor": {
          "ref": "97405c3f-bb7a-400f-8aa6-3b019021a4b3",
          "length": 157,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "904fafef-dd86-46b7-b28d-9a7c01de44bf"
        },
        "item": {
          "id": "cf865e85-1325-475a-8770-e6c3d259620f",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "5db365ff-5669-4352-b6b5-cd826da6e5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcac1476-1204-477c-93e5-beb9d7589dee",
        "cursor": {
          "ref": "5b1e63e7-23dd-4741-81aa-cde2d2af638b",
          "length": 157,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "cab53b87-579e-46cc-b279-323301fc9c18"
        },
        "item": {
          "id": "fcac1476-1204-477c-93e5-beb9d7589dee",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3f61c06d-e071-4d97-a6b3-47feb9d8b108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934eb5b1-216c-414c-93b4-9147c3e0b086",
        "cursor": {
          "ref": "f64653d4-d200-46b7-89b9-88d06b2a3648",
          "length": 157,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9d7d294b-84ee-4767-a76b-7a0c2d82559b"
        },
        "item": {
          "id": "934eb5b1-216c-414c-93b4-9147c3e0b086",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "f0b90041-5147-4790-a7d8-d81d1780f101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f08e07-85f8-4eff-8512-b4065e0e453a",
        "cursor": {
          "ref": "07e5e8c3-1825-427c-a329-c26ba56147a5",
          "length": 157,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d3d4f0e3-3086-40fd-82d6-5f639cf6d0a7"
        },
        "item": {
          "id": "a0f08e07-85f8-4eff-8512-b4065e0e453a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "41f56608-1ade-4c7d-8733-4fef95a8e25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e2f1ab-7aa4-4492-a45c-7bdedb777de2",
        "cursor": {
          "ref": "5314d435-36f7-4a35-b98b-4f62ae739b7d",
          "length": 157,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2a6d9062-1c29-4414-bb20-f4f9b448e642"
        },
        "item": {
          "id": "e0e2f1ab-7aa4-4492-a45c-7bdedb777de2",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "f08af635-957f-4a2a-b414-bb2bea22a42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7971183c-74c1-4f44-9050-9365ea295945",
        "cursor": {
          "ref": "b515c27d-bc77-493a-b058-e186f7a41cf4",
          "length": 157,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9556f580-3fa2-4652-b50b-256a2674dd06"
        },
        "item": {
          "id": "7971183c-74c1-4f44-9050-9365ea295945",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "853e8f01-3a04-49f5-9b77-f924e6613942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03a212e-51ec-48a2-9a57-61744e27d9e0",
        "cursor": {
          "ref": "e0f5d4c3-c8b8-4881-a908-ea2b5453cd90",
          "length": 157,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f5d633f5-56fe-4413-a55a-5cb51c626156"
        },
        "item": {
          "id": "b03a212e-51ec-48a2-9a57-61744e27d9e0",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "5922ea71-7366-4026-9983-f3f00be5ef49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb07fe8-76e0-42d3-9fe8-3e2f09225d0f",
        "cursor": {
          "ref": "57a48208-66ff-4843-9272-7f884b4b035c",
          "length": 157,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "795d9e2e-bddc-4098-a3af-14224bec9164"
        },
        "item": {
          "id": "5eb07fe8-76e0-42d3-9fe8-3e2f09225d0f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7c95a17c-ca48-44f2-8858-0c51e062aac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4378352a-f7d2-4221-98eb-3d745fb1f56b",
        "cursor": {
          "ref": "1af6806d-4bb1-455f-8b28-f40350835fb3",
          "length": 157,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "10eb0442-678c-455c-94f4-2878518e1588"
        },
        "item": {
          "id": "4378352a-f7d2-4221-98eb-3d745fb1f56b",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "3db114b4-d3a6-41e0-8d87-818cc5a45719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8036348a-c1a0-4612-86df-ae13a12b3c36",
        "cursor": {
          "ref": "959eecd6-2730-403f-a4d6-a2cff1f49b24",
          "length": 157,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1df50b59-3fdb-4903-963f-8e68ea9d7175"
        },
        "item": {
          "id": "8036348a-c1a0-4612-86df-ae13a12b3c36",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "cd828eb9-18cf-42fc-9ae2-4d5151625f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256b7011-b39a-436f-af31-312a89d8c14c",
        "cursor": {
          "ref": "83bc3d71-3866-4835-b6fa-a296445d5ac3",
          "length": 157,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6b3af4a3-cb2c-480f-9172-ec4be7bab54e"
        },
        "item": {
          "id": "256b7011-b39a-436f-af31-312a89d8c14c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fa6b6e0e-986f-40a3-8151-da9e4b60448b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12cc528-8442-404d-a810-eb0296b42b4f",
        "cursor": {
          "ref": "ca35650b-1f84-4ac8-af5c-2c4cc2bd3647",
          "length": 157,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5b2290d5-d3e2-493e-bce0-2a9f27efc0eb"
        },
        "item": {
          "id": "d12cc528-8442-404d-a810-eb0296b42b4f",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "bc877fc1-6779-4134-9aac-5373e6ef4e28",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 70,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8274a88-dfef-4410-b52e-19b829c7c566",
        "cursor": {
          "ref": "26423187-bed7-41f7-9a97-9318296bea24",
          "length": 157,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4b335736-9ac0-4ce0-9625-683c964fbaa0"
        },
        "item": {
          "id": "c8274a88-dfef-4410-b52e-19b829c7c566",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e4484ef0-e101-4402-9781-725b525f47a3",
          "status": "Created",
          "code": 201,
          "responseTime": 1255,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "expected 'did:web:dev.vc.stg.mesur.io:v1' to equal undefined",
              "stack": "AssertionError: expected 'did:web:dev.vc.stg.mesur.io:v1' to equal undefined\n   at Object.eval sandbox-script.js:3:42)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ffa2d1-f5c5-4080-a686-070ea5cf4cb7",
        "cursor": {
          "ref": "10473f1f-8fff-49a8-bb43-b34a0094b698",
          "length": 157,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8aeac429-3d8c-4089-9714-0578ad2d5af3"
        },
        "item": {
          "id": "66ffa2d1-f5c5-4080-a686-070ea5cf4cb7",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "9cc77dda-239f-49dd-9e9b-540f924428d5",
          "status": "Created",
          "code": 201,
          "responseTime": 788,
          "responseSize": 591
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5975e4-663b-4c4b-a40a-00fdeb050220",
        "cursor": {
          "ref": "65fbe009-167b-4e90-97ed-c63bc44a1e78",
          "length": 157,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "89750db6-0ce3-4e03-ab97-948fcc7c7c22"
        },
        "item": {
          "id": "9e5975e4-663b-4c4b-a40a-00fdeb050220",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f1920077-e006-453b-bec0-4c7b2d693c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:44)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:44)"
            }
          }
        ]
      },
      {
        "id": "7c1dee46-38c1-4f66-8fdb-bf116b5308ac",
        "cursor": {
          "ref": "6b4ab994-9aaa-4317-b226-5ae7f68ff456",
          "length": 157,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f5f1d4ca-4503-446d-bb97-cafff609b08f"
        },
        "item": {
          "id": "7c1dee46-38c1-4f66-8fdb-bf116b5308ac",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "176bf01b-cef4-49a4-9af2-aa2a00c9d5cc",
          "status": "Created",
          "code": 201,
          "responseTime": 725,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c1a852-979e-4162-9b2b-751cb508e5c4",
        "cursor": {
          "ref": "998e90a8-d180-438e-b957-8016046f74ac",
          "length": 157,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "34b7c7e1-d209-4413-af71-f8eaba4a5f1c"
        },
        "item": {
          "id": "d1c1a852-979e-4162-9b2b-751cb508e5c4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3358d1c0-37c4-4cf8-a6c2-b03232aa10c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "c68b7d6d-fbbb-4833-8958-24137a94010e",
        "cursor": {
          "ref": "1ab6d909-b837-4f5f-a93e-5717604c8a5d",
          "length": 157,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d7c98c96-9170-4883-b2f5-d6ac61f5ccc6"
        },
        "item": {
          "id": "c68b7d6d-fbbb-4833-8958-24137a94010e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "558f45b8-4d92-4efc-8ded-452526d5bd72",
          "status": "Created",
          "code": 201,
          "responseTime": 532,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71353784-b8dc-4321-abf0-faba293d2a2c",
        "cursor": {
          "ref": "c0f6f7af-2184-4487-9828-2e7d872476a3",
          "length": 157,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bb736ba6-9054-48dc-b9ac-31005cb7c0a9"
        },
        "item": {
          "id": "71353784-b8dc-4321-abf0-faba293d2a2c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7ef06d2c-9281-43be-9c8b-6222fdfdcb10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71353784-b8dc-4321-abf0-faba293d2a2c",
        "cursor": {
          "ref": "c0f6f7af-2184-4487-9828-2e7d872476a3",
          "length": 157,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bb736ba6-9054-48dc-b9ac-31005cb7c0a9"
        },
        "item": {
          "id": "71353784-b8dc-4321-abf0-faba293d2a2c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7ef06d2c-9281-43be-9c8b-6222fdfdcb10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940ce663-df55-4064-a156-ed9fbdc53d76",
        "cursor": {
          "ref": "916a0af1-589e-4027-8333-b50327f8249f",
          "length": 157,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5d72c2d5-00b2-4422-97d0-d7db7c73af51"
        },
        "item": {
          "id": "940ce663-df55-4064-a156-ed9fbdc53d76",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "06d8037d-e107-49a3-a329-0f57cd592213",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 71,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ca05f4-50f2-45a1-9af1-bb50c4e9336c",
        "cursor": {
          "ref": "b45b2db2-f65b-4f7f-95d7-993d5112af36",
          "length": 157,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b669bbb3-d8c7-4497-adec-451158bcaf84"
        },
        "item": {
          "id": "e6ca05f4-50f2-45a1-9af1-bb50c4e9336c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7af98d9d-bd6d-42bf-b1f0-efa17ab02dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ca05f4-50f2-45a1-9af1-bb50c4e9336c",
        "cursor": {
          "ref": "b45b2db2-f65b-4f7f-95d7-993d5112af36",
          "length": 157,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b669bbb3-d8c7-4497-adec-451158bcaf84"
        },
        "item": {
          "id": "e6ca05f4-50f2-45a1-9af1-bb50c4e9336c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7af98d9d-bd6d-42bf-b1f0-efa17ab02dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d8e98c-c2f3-4976-93bb-54055848f5aa",
        "cursor": {
          "ref": "6f5ffb1b-cfb8-4419-b101-644b9b38ef35",
          "length": 157,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d001c00b-089f-4a8d-96da-8adf3d6b01c7"
        },
        "item": {
          "id": "23d8e98c-c2f3-4976-93bb-54055848f5aa",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3fab322b-d857-4131-b3f4-5fd53475782e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa21ca60-26c4-4fb9-8a17-6f0c9f569cff",
        "cursor": {
          "ref": "51737e01-6f93-4c22-b2f1-ef474017e97e",
          "length": 157,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9b10d158-6762-4943-9de1-e33d238a7299"
        },
        "item": {
          "id": "aa21ca60-26c4-4fb9-8a17-6f0c9f569cff",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c7679a87-1072-4ace-958e-9c1a19af2dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf989d78-fca4-4283-b310-0ecb2c209ad0",
        "cursor": {
          "ref": "7caa1a47-2be6-439e-a23d-f6c39491478f",
          "length": 157,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "10345dca-7087-452a-8811-811d560d4849"
        },
        "item": {
          "id": "bf989d78-fca4-4283-b310-0ecb2c209ad0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5be47d8c-4593-45f2-bb5f-6ade2a7cf884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c0edfc-47f1-4547-bc03-3468931f4bf8",
        "cursor": {
          "ref": "8a18af1b-191d-4c3e-bee5-5e32d615a3c5",
          "length": 157,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7cdf24aa-d998-492b-b57e-3353ba5c83a3"
        },
        "item": {
          "id": "95c0edfc-47f1-4547-bc03-3468931f4bf8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "02915ebb-0dbf-4629-a6a1-3ca5a0f56714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa7af3a-ee30-4e68-b42d-527b1086e7b9",
        "cursor": {
          "ref": "b3c8e252-8df3-43e3-81b9-76699e9eea62",
          "length": 157,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0cf6265a-f137-4da1-8744-17509d87d216"
        },
        "item": {
          "id": "2aa7af3a-ee30-4e68-b42d-527b1086e7b9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "70674449-a1ca-4b6d-9ceb-3b6fb24b0f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0016b3-cfc6-4d51-9a62-b16c825bb465",
        "cursor": {
          "ref": "11c14b51-296e-44bb-a75d-5be13af1da65",
          "length": 157,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a1bc86d7-a72a-4f8c-a058-f118157af18a"
        },
        "item": {
          "id": "fd0016b3-cfc6-4d51-9a62-b16c825bb465",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e55b38de-88df-4942-8a86-f357cb6d14a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 948,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9cb5494-3c54-416f-91a1-49d3f8b2379f",
        "cursor": {
          "ref": "a509b72b-a689-4347-b034-a05fc2b3f670",
          "length": 157,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0fa96db4-39d2-43ed-ae62-d5e75bdf0887"
        },
        "item": {
          "id": "f9cb5494-3c54-416f-91a1-49d3f8b2379f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "36b02303-9211-45e4-a19e-be930f03157d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac89ee2-2455-4faf-9a5d-163007803315",
        "cursor": {
          "ref": "c23362a5-da05-4905-a45d-c9ae4635e9d3",
          "length": 157,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7f5f4439-f6aa-4355-835c-dbb30727f756"
        },
        "item": {
          "id": "dac89ee2-2455-4faf-9a5d-163007803315",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d8bb780c-b003-4b8c-8ec3-fbd82ec4bcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e574d217-7a10-4ecc-a97c-d0e1b7ff9126",
        "cursor": {
          "ref": "59099c77-c1ff-4c25-a157-d88997329a71",
          "length": 157,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "eb97e67f-2934-4d39-b0b3-2906df5172bb"
        },
        "item": {
          "id": "e574d217-7a10-4ecc-a97c-d0e1b7ff9126",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "58d394b4-f57f-4515-ac05-ddff1ea41d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58089e3a-9e9f-49f8-b41d-31db9eaac9e0",
        "cursor": {
          "ref": "5d220c56-c87a-4382-99e1-9823c9bc28bd",
          "length": 157,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1ca405a7-015b-46cd-81bc-4b52f5c59511"
        },
        "item": {
          "id": "58089e3a-9e9f-49f8-b41d-31db9eaac9e0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "42ee40b5-c2ce-42d7-bbe6-d19acf34bd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc5a4ee-33c4-44bd-a66d-583c277ec0ff",
        "cursor": {
          "ref": "e8cb38fc-0890-49ef-942b-f9334640dc76",
          "length": 157,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8297d8e2-c57f-4d9e-8f2c-f46175cb07f7"
        },
        "item": {
          "id": "6dc5a4ee-33c4-44bd-a66d-583c277ec0ff",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e6e89873-c142-4589-9813-4b89a6153cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44191b2f-3f03-4861-b35c-f03d8c6afb2d",
        "cursor": {
          "ref": "f4cc6a25-8c37-4b8f-b891-0a223c652e47",
          "length": 157,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3eb91483-9d19-471c-b9c0-66884ffdbacf"
        },
        "item": {
          "id": "44191b2f-3f03-4861-b35c-f03d8c6afb2d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e7d1d3b8-4b18-4922-8324-b78e614e9e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde61635-4681-485e-aa02-cec900298f79",
        "cursor": {
          "ref": "5409d658-0cf1-417a-ae14-cde04aa853dd",
          "length": 157,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0da9253f-9a6d-4380-8e7f-b9e4f0a26d79"
        },
        "item": {
          "id": "fde61635-4681-485e-aa02-cec900298f79",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "94f64138-2756-4014-9f12-e9a152a71f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5b5944-8994-4cfb-8500-6fd23ad55aa7",
        "cursor": {
          "ref": "dc738ba0-2236-4b8e-924f-9ce2b8f87830",
          "length": 157,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "179485c3-c2a0-4495-ba47-a3483b2016b6"
        },
        "item": {
          "id": "ae5b5944-8994-4cfb-8500-6fd23ad55aa7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e6548576-f65a-49fe-8243-66b5a63dd9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9d1e75-9d87-4ac8-a996-8487be4b2701",
        "cursor": {
          "ref": "9ab9ff36-6dfb-4121-8d58-5979a37ef7c0",
          "length": 157,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9a37b55f-7c16-4db8-a555-4949c0f8d367"
        },
        "item": {
          "id": "9e9d1e75-9d87-4ac8-a996-8487be4b2701",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3956ee91-cc9f-4d78-b3bd-fbf558f68b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c363abcc-cea2-4f32-81fe-bb3d335489f9",
        "cursor": {
          "ref": "25b3f0f5-7a0c-4570-9b32-9ae936f0bcde",
          "length": 157,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "62d17a41-304d-412f-9ccb-97eecd124811"
        },
        "item": {
          "id": "c363abcc-cea2-4f32-81fe-bb3d335489f9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7117c5ec-88ee-4696-8503-2e820ece4b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a821fdbe-96d7-47c2-99cd-911d2f400e84",
        "cursor": {
          "ref": "4c0cdf4c-27dd-4625-84d1-0245e6b69d60",
          "length": 157,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "391c5937-8468-48d0-9f0c-fc198ee100c5"
        },
        "item": {
          "id": "a821fdbe-96d7-47c2-99cd-911d2f400e84",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "539ff108-9327-4e80-a0a2-363a97006958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa61d283-1362-48ae-94c6-76be2145c478",
        "cursor": {
          "ref": "75442a1e-14c2-4234-a1cf-2458f3b04031",
          "length": 157,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f5343fc4-53ec-44f6-b0ea-448809a30670"
        },
        "item": {
          "id": "aa61d283-1362-48ae-94c6-76be2145c478",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bb73e1fb-8f8f-46dc-8b5f-3c0505d44754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37d25a7-e82b-44ac-912b-7fe25c93ba88",
        "cursor": {
          "ref": "2528e65e-a8e9-4f93-b7b7-7531fe3a9dfa",
          "length": 157,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6c9e5b85-85ae-4757-a7e9-0b135c317e1b"
        },
        "item": {
          "id": "e37d25a7-e82b-44ac-912b-7fe25c93ba88",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8108d70f-d558-4692-8e74-be257f34184b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2992,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a998fbeb-ef51-4ba0-a1ec-48be21cd9510",
        "cursor": {
          "ref": "a7df7387-a781-4213-96d1-72eb39e15c74",
          "length": 157,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e70bc43e-4baa-4396-b233-ff24c1a99e68"
        },
        "item": {
          "id": "a998fbeb-ef51-4ba0-a1ec-48be21cd9510",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c1701cfe-954b-4325-9c56-6b9f2caa5d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a676292-2f0b-4029-a8dc-8c7d1fe215df",
        "cursor": {
          "ref": "c60183cf-9573-45ab-b185-4b4a5292f79e",
          "length": 157,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9508e059-5d33-45aa-8460-4ff4f62c38db"
        },
        "item": {
          "id": "2a676292-2f0b-4029-a8dc-8c7d1fe215df",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "997e4cc4-f03b-46cb-9d1d-f5f553666cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d671949-0d01-4238-b4f7-4205ca873161",
        "cursor": {
          "ref": "9fc1b2c3-f69f-4b27-a867-44851cee4e7c",
          "length": 157,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1ec6bd1b-66f7-4113-baa8-ae424c9aea6b"
        },
        "item": {
          "id": "6d671949-0d01-4238-b4f7-4205ca873161",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6f7e242a-2bfc-42a4-bba7-4465a991c93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db29ecf6-9059-4093-8498-4ab8b1a6c33e",
        "cursor": {
          "ref": "a146ef75-d4d1-4e72-b78d-1d3d5cdb63cb",
          "length": 157,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f19aa217-26a2-4a9d-807d-40b8f606ca72"
        },
        "item": {
          "id": "db29ecf6-9059-4093-8498-4ab8b1a6c33e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7ef40052-365b-4323-9446-832351cf69e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91decd4c-d246-4ae7-85ff-f7251c8a816d",
        "cursor": {
          "ref": "c06288d1-01e2-4a44-a9e6-e7471f2f03f5",
          "length": 157,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "55d6b8c2-1830-4b7c-b097-1a4b5575a1b9"
        },
        "item": {
          "id": "91decd4c-d246-4ae7-85ff-f7251c8a816d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ebb71b8c-edea-4c53-9ca9-f495db44ccd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d366b9-3259-4f3c-b763-23f6d21e4c4b",
        "cursor": {
          "ref": "54f64426-48ca-4553-b16b-61c0096d96cd",
          "length": 157,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "df8ff310-41b7-4870-bc57-a2148a0d5cf2"
        },
        "item": {
          "id": "96d366b9-3259-4f3c-b763-23f6d21e4c4b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "177328b3-d95b-4fba-a21b-d4b71e2b4b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbd2e25-93e0-4b3c-9407-2597eab47518",
        "cursor": {
          "ref": "a54767dd-66f2-49b3-9317-ae174525216a",
          "length": 157,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ae3e9300-9033-472d-a284-aa2e2a382985"
        },
        "item": {
          "id": "fbbd2e25-93e0-4b3c-9407-2597eab47518",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3ba85091-a2e4-4bfc-afda-2ed0977a524f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ff0b0a-b710-4b95-81a5-8cd14a06f6c9",
        "cursor": {
          "ref": "6d69fed5-d90d-4881-813f-8279ea8c9648",
          "length": 157,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b882ebe5-b166-4e38-9139-da8704d7e21a"
        },
        "item": {
          "id": "20ff0b0a-b710-4b95-81a5-8cd14a06f6c9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e2a9ea69-7909-49e7-9032-9c97b4435714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e035311f-fe57-48cb-9985-86699c02dd4b",
        "cursor": {
          "ref": "e947ccff-42a1-41c1-98ae-53ff8e2c344b",
          "length": 157,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5dc72c87-4246-40e3-b7d2-f925c373a528"
        },
        "item": {
          "id": "e035311f-fe57-48cb-9985-86699c02dd4b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e6f1c300-382c-422a-9885-77f638e5d4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfe293b-516f-4d52-88ea-c521c2cde384",
        "cursor": {
          "ref": "f04a0913-e9b2-481d-a2b7-8af1bed83222",
          "length": 157,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "be5a2ecc-372c-4b88-9013-7e31559a86de"
        },
        "item": {
          "id": "fbfe293b-516f-4d52-88ea-c521c2cde384",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "482a1f67-691e-4727-a507-b1dad5d98878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7b7bde-346a-438d-a4ac-f7b45194815e",
        "cursor": {
          "ref": "465039ce-56d7-4311-bf07-c2739a52febc",
          "length": 157,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2412612a-b171-49ab-b5fc-2822cea0caca"
        },
        "item": {
          "id": "5d7b7bde-346a-438d-a4ac-f7b45194815e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1a1101ad-df3a-411e-a2cc-3da9517ce3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b639c6fe-3105-4acb-b686-c7488fa5950b",
        "cursor": {
          "ref": "cc795ebf-7a32-4733-a6c1-9f53314fd281",
          "length": 157,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "29fdc3f8-809e-473a-9ef2-65b4871b3e90"
        },
        "item": {
          "id": "b639c6fe-3105-4acb-b686-c7488fa5950b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "461fb109-9f80-4def-9f62-3e2948d05755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c05eea3-330f-4e26-9315-05e14c5ab5de",
        "cursor": {
          "ref": "f52cdbb9-292b-476f-9ca8-7fc0a85a8465",
          "length": 157,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "256817e5-e9e6-4235-af9b-75e5af2ecbb8"
        },
        "item": {
          "id": "8c05eea3-330f-4e26-9315-05e14c5ab5de",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7fffaf73-9326-44a4-ad23-6a485d4bc7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4443d2-01bc-42a6-874e-0e78fd186e75",
        "cursor": {
          "ref": "bfdf4c8c-ddea-4805-94b0-a02312ead24e",
          "length": 157,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "de78cd57-0898-49e2-845a-4349691de652"
        },
        "item": {
          "id": "6b4443d2-01bc-42a6-874e-0e78fd186e75",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8c01ffa8-2928-42b7-888a-c4016bc66f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 177,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32a2ad9-6f7c-4158-8a59-0bfb8590a878",
        "cursor": {
          "ref": "9cef707c-ecf0-4504-b389-788ad9810c65",
          "length": 157,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "45bceb9a-b08e-4ce3-be51-9e0023a1e4f2"
        },
        "item": {
          "id": "e32a2ad9-6f7c-4158-8a59-0bfb8590a878",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4279730b-f1d0-4051-9fa8-99abc0eca80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1042,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc97bc6-e0ff-4715-8b76-d7243b0d52da",
        "cursor": {
          "ref": "7e7fbb49-aaf8-4b8c-b5bc-960ca5d7b655",
          "length": 157,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c84897f5-35b0-443c-b6fb-2ce17c79cbd8"
        },
        "item": {
          "id": "bdc97bc6-e0ff-4715-8b76-d7243b0d52da",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3fb46975-bd56-4d69-840b-b59505bbfe87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913088c6-80d8-4f44-b72b-a4329916ee03",
        "cursor": {
          "ref": "f5310c4b-da81-4585-8c0f-fe68c1441afb",
          "length": 157,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "66fd6d1a-da00-429d-a5c4-c302c4277b19"
        },
        "item": {
          "id": "913088c6-80d8-4f44-b72b-a4329916ee03",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4776f6c5-e340-4875-bacb-ba2aeec27f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d835ad4-076b-4098-9328-02352006b2c6",
        "cursor": {
          "ref": "d310ff7a-4874-4e52-b668-fc36ae4bfb49",
          "length": 157,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1ba34991-c1ae-468f-b232-3fab90e0c5b7"
        },
        "item": {
          "id": "0d835ad4-076b-4098-9328-02352006b2c6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e90de938-4762-41fd-ba1b-5929fc050eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3dff230-e693-4bb4-868f-c8bf84f3e2a9",
        "cursor": {
          "ref": "9c6b5aa0-00cb-4d8a-b991-25c485ddf4f6",
          "length": 157,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a7ea8e42-d8c3-42d5-adf6-94891fbf2e20"
        },
        "item": {
          "id": "a3dff230-e693-4bb4-868f-c8bf84f3e2a9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "805de8f8-f276-44b8-ad22-19c49dce0316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734df80a-60f9-4dff-b224-fa6a3bc1243c",
        "cursor": {
          "ref": "fe395749-b931-42d3-a518-26eb7fb0597d",
          "length": 157,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4ef7cc33-3437-4e13-9c0d-0bcda3d479fa"
        },
        "item": {
          "id": "734df80a-60f9-4dff-b224-fa6a3bc1243c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e7321897-7d9c-43d4-9380-e5d5d2c9f12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb8a201-a0fe-4d8d-9453-6d6ba4c728f4",
        "cursor": {
          "ref": "7558a0b7-a982-4622-aeda-1a4dd0623587",
          "length": 157,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ed82a1bc-269c-46fa-8d6e-38bd7cb2e3e8"
        },
        "item": {
          "id": "edb8a201-a0fe-4d8d-9453-6d6ba4c728f4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3f12b6e3-f68b-4e4d-b2cb-33230494acbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf85342-7b43-4654-bfdf-23cd9b777925",
        "cursor": {
          "ref": "88c7e5f2-ddb2-4334-ac7f-4a185caf74ae",
          "length": 157,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b13b1b0c-62c4-4a7f-aa08-28228bf5622d"
        },
        "item": {
          "id": "4bf85342-7b43-4654-bfdf-23cd9b777925",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "62a33ee9-3e4a-4824-be75-8d089f8c9169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09a4c60-7aaa-4849-889a-9cab1fd6360c",
        "cursor": {
          "ref": "d3982f2e-a2ef-473f-9696-bc4cfe146bc3",
          "length": 157,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0d7de95f-a9a6-4c68-9b78-a5a781bddacf"
        },
        "item": {
          "id": "f09a4c60-7aaa-4849-889a-9cab1fd6360c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "72b461e5-5b42-47bc-9f01-60a59f7efea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b370f3fb-efb5-43bb-b17b-2ac68e993e18",
        "cursor": {
          "ref": "02d55165-b5e9-47ac-ade8-d16e647168e7",
          "length": 157,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "90047d12-4f6f-4038-a837-6a001f04cf63"
        },
        "item": {
          "id": "b370f3fb-efb5-43bb-b17b-2ac68e993e18",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d22647b2-fd4f-4e7c-9a45-9cfcadcd4397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94700b0-942d-4c72-ae9b-b47261dbcceb",
        "cursor": {
          "ref": "e071f132-26be-4bbb-9639-d834b142a78e",
          "length": 157,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e71297c3-431f-4528-9904-f5f10edeb689"
        },
        "item": {
          "id": "d94700b0-942d-4c72-ae9b-b47261dbcceb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3d37c50d-e01a-419e-b30b-d49b597d1908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63c0d21-3cd9-402e-ad88-54bd75144719",
        "cursor": {
          "ref": "c3f31fb7-1fa3-4a13-9d34-ae8f5415c552",
          "length": 157,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5aeebb2c-4308-4b62-99f2-597383363907"
        },
        "item": {
          "id": "b63c0d21-3cd9-402e-ad88-54bd75144719",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1960cefd-6d7a-4540-9bc8-64a40c8efe11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1630,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422d9d90-689a-4efe-ad42-d3191544cb49",
        "cursor": {
          "ref": "8c28c838-b023-4bc7-90c9-8523c03c8e55",
          "length": 157,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d00a87d7-7c42-4039-b6af-773fcdc88ce2"
        },
        "item": {
          "id": "422d9d90-689a-4efe-ad42-d3191544cb49",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ae9d2e28-3c2e-4394-9042-9ade4b4ae7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d337d93-e234-490c-8085-11de5d5214b9",
        "cursor": {
          "ref": "ca406795-36c3-47cc-ae1a-630f918bdc74",
          "length": 157,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "86c56f3f-81d7-4dac-8f62-59f81fd6320a"
        },
        "item": {
          "id": "2d337d93-e234-490c-8085-11de5d5214b9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5f6bb55c-c86e-4a25-9a5d-86212a7db771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37eb08a-d531-4e50-92f7-264d62b4f9b5",
        "cursor": {
          "ref": "d12c9455-e87e-462a-bd4d-b74fdf787f90",
          "length": 157,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5e16c9a6-18f9-455a-950e-d867e8be7258"
        },
        "item": {
          "id": "b37eb08a-d531-4e50-92f7-264d62b4f9b5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "99e237d8-64c5-46d9-83b0-a3feaef5d8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b99bb65-7d38-4c12-af4d-c1c9e43dd22c",
        "cursor": {
          "ref": "0e99805f-8306-4e30-bde1-96d2084710b6",
          "length": 157,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f62504d3-1a64-4173-ba69-7067abacb2d5"
        },
        "item": {
          "id": "4b99bb65-7d38-4c12-af4d-c1c9e43dd22c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d961602c-d81d-4d2a-9a29-de8435e5d4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151a53c6-167f-48b8-ab39-e28c444b2205",
        "cursor": {
          "ref": "95078916-c91c-46fd-ad45-5f0bad558441",
          "length": 157,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fddae2fb-dfa0-4f20-9cff-d001545e7485"
        },
        "item": {
          "id": "151a53c6-167f-48b8-ab39-e28c444b2205",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f15da9ea-a391-4ff6-8bc7-f15ab83d6aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee668bd-4f3f-4380-9ad6-403af5d43b49",
        "cursor": {
          "ref": "696582b8-68f0-447f-bd22-7b0f8733c6b8",
          "length": 157,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "93dba097-6fba-43d7-8082-fac577a05137"
        },
        "item": {
          "id": "4ee668bd-4f3f-4380-9ad6-403af5d43b49",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "25befd3f-681f-4a79-9563-7e9c1e5972e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1637b77a-1da8-47c2-9831-ac4182695c68",
        "cursor": {
          "ref": "38070bee-eb2b-45ff-9262-c810c7f5a3fa",
          "length": 157,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fecf46c9-53b9-42ab-b703-61c38908282a"
        },
        "item": {
          "id": "1637b77a-1da8-47c2-9831-ac4182695c68",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6d37686e-0193-4156-b8ad-79b421d04c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a11096-94b8-4575-a0c1-8cd2a16da9e7",
        "cursor": {
          "ref": "1984154b-547b-4b51-b211-83638201954e",
          "length": 157,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "19804ce8-3478-4afe-b4ac-7a2f33877135"
        },
        "item": {
          "id": "61a11096-94b8-4575-a0c1-8cd2a16da9e7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6ca60fd1-b54e-4c87-8276-23be97df9b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1abd3dc-6e09-4e9c-ab4a-3d0d5ac1ae1d",
        "cursor": {
          "ref": "b5e54aa5-9132-4cf6-84f3-7b64aa10018e",
          "length": 157,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "79981f63-1f98-42cf-b805-4be70f523f13"
        },
        "item": {
          "id": "b1abd3dc-6e09-4e9c-ab4a-3d0d5ac1ae1d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0e13a3ef-9ff8-4e75-bcd4-403c2bf840e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9341e57-42eb-4781-bf11-d0316a008907",
        "cursor": {
          "ref": "09f0c70b-3466-4a2a-b593-7b731dc78399",
          "length": 157,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "42f705e6-e9e1-4c9c-b6a3-f9aaa9fcbd8f"
        },
        "item": {
          "id": "b9341e57-42eb-4781-bf11-d0316a008907",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cb18afad-9b36-467a-a477-87def770a22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737e0057-4a67-4bdb-ab87-847d2f13103e",
        "cursor": {
          "ref": "4e5ab61a-b893-4ca1-ba56-d27972687381",
          "length": 157,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "dae50c56-3cda-4038-8264-64a91eabf4f0"
        },
        "item": {
          "id": "737e0057-4a67-4bdb-ab87-847d2f13103e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5a04f5a0-259f-46be-81a5-50dc7cbef9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eae2afe-9d88-4d14-ba71-ea61e0aab1fb",
        "cursor": {
          "ref": "84f3f68f-bdd3-4616-8635-517c66957a91",
          "length": 157,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b90850c2-591c-48bc-8c4d-a2567d0a6489"
        },
        "item": {
          "id": "6eae2afe-9d88-4d14-ba71-ea61e0aab1fb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "71a95cd0-cf4a-4710-809e-898b71f06217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654bc8a8-e67c-40de-afcf-8ece94074f28",
        "cursor": {
          "ref": "2914b61c-5abf-4fa0-9ca0-c50c151e3178",
          "length": 157,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "dc412f55-8f42-4ce8-90bf-42979b20d353"
        },
        "item": {
          "id": "654bc8a8-e67c-40de-afcf-8ece94074f28",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "93d4b16e-b316-4862-9f8e-cfa186a48e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64626f37-ae11-44dd-a446-280b154919db",
        "cursor": {
          "ref": "90c297aa-7713-4c1c-8590-d05267d14543",
          "length": 157,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b2c34ee7-dcb3-46a6-bcbf-2f92e63ef595"
        },
        "item": {
          "id": "64626f37-ae11-44dd-a446-280b154919db",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e7f36072-8e01-4d2b-a206-02533e6a805f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d3233c-a29c-4253-9220-2f8851af1c6a",
        "cursor": {
          "ref": "962fc6cb-d6e0-4671-abc9-3f0e16bce4e9",
          "length": 157,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6996220a-502c-4a0f-b517-7ec2e18de715"
        },
        "item": {
          "id": "c2d3233c-a29c-4253-9220-2f8851af1c6a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f231739b-d347-46bb-bb56-dbdaae4f07d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1266633-717e-4357-8060-cb6d0314521f",
        "cursor": {
          "ref": "b2c9f8cb-d160-4320-a849-9f5a7852e020",
          "length": 157,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2f220b01-c9b7-47a3-87f6-7d3e7adeeeed"
        },
        "item": {
          "id": "c1266633-717e-4357-8060-cb6d0314521f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3a32569d-47b3-43b1-907d-c2eeebd5e3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4e2c1b-ee38-4df0-a31a-ab735f61ba18",
        "cursor": {
          "ref": "797d0900-c7c8-4dae-918a-b3785dab2c50",
          "length": 157,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "838c1654-c13b-4511-865c-8a845e4d93dd"
        },
        "item": {
          "id": "dd4e2c1b-ee38-4df0-a31a-ab735f61ba18",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f8896e38-ce0a-4590-8684-c68975522e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b350a0e7-8fd7-4dc9-af87-3319f968dac9",
        "cursor": {
          "ref": "02da784c-8d06-44c0-81f1-7ff7aa22c213",
          "length": 157,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5761f185-f112-4e48-8716-6d4dc528e5ca"
        },
        "item": {
          "id": "b350a0e7-8fd7-4dc9-af87-3319f968dac9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7159f4d9-7328-4c77-b7d8-73b9721665b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ada81f-7268-4edf-9982-10ca148eba1c",
        "cursor": {
          "ref": "d066c1c2-c9e4-467e-895d-02868d893f6f",
          "length": 157,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a046c26b-1f64-438c-942b-c594db149047"
        },
        "item": {
          "id": "07ada81f-7268-4edf-9982-10ca148eba1c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "efeb52d0-25c6-4e2d-9959-2dd119d4cbb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65d2ea9-0d01-4f01-87ae-b5209782be4d",
        "cursor": {
          "ref": "46acb4fe-a54d-4579-a10f-71bdd76b919d",
          "length": 157,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a110c0fb-2ca3-4ef9-aed8-a53e42eff3fd"
        },
        "item": {
          "id": "b65d2ea9-0d01-4f01-87ae-b5209782be4d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "39a10194-406a-4310-89ca-ca4a78bb43b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc534c68-2147-4e95-80ce-5280bf869c64",
        "cursor": {
          "ref": "adf88831-34b5-4391-90d4-25683066328c",
          "length": 157,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "efe01d5a-5caf-4bf9-916d-b610255df650"
        },
        "item": {
          "id": "fc534c68-2147-4e95-80ce-5280bf869c64",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d9296db6-eba6-4b47-90c2-2cc409629c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4020e7-d989-4cc8-960b-8b290c9ce9f3",
        "cursor": {
          "ref": "6862f043-3b8d-4414-8a4e-c4c6c5ffcd14",
          "length": 157,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c8efaafb-46d4-4051-b6f3-e10cb48cc654"
        },
        "item": {
          "id": "af4020e7-d989-4cc8-960b-8b290c9ce9f3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "58c817c9-4d7a-4bef-85c4-9aa014210740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 164,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498cac6c-fbf1-489e-9707-bb34ec810e31",
        "cursor": {
          "ref": "ce1ccca9-97dd-4b12-9ab2-76f9a4a105c0",
          "length": 157,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "cbde9b2c-2e19-4097-a6cc-655176ce7ad0"
        },
        "item": {
          "id": "498cac6c-fbf1-489e-9707-bb34ec810e31",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ddfa3a2c-c18e-43d0-9d0f-4f9ef9d51518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784ef697-372d-4042-84b4-3d2502824b23",
        "cursor": {
          "ref": "4e79dcbf-2fc9-4106-af06-8f72bd7a3ac8",
          "length": 157,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2cd59f0d-9ace-4281-a23a-2a658adf4f43"
        },
        "item": {
          "id": "784ef697-372d-4042-84b4-3d2502824b23",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "53a4166a-326f-4c9b-9746-e4ba4a7cac50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eafb3a8-a804-49bf-9b12-66c8f1a520a5",
        "cursor": {
          "ref": "ff78ed9b-be8f-4eb4-8225-f6f93028a840",
          "length": 157,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "69acca30-df4d-4640-99bf-68eff7c6be0b"
        },
        "item": {
          "id": "6eafb3a8-a804-49bf-9b12-66c8f1a520a5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7cf1de0e-d0ba-410e-803c-bef6b503debc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac602d41-09f4-45d2-a202-32c25bc5cdc2",
        "cursor": {
          "ref": "6d4484f3-32f6-4ef7-972b-3658fd1afc14",
          "length": 157,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cd8b2109-7590-4c3d-957c-2370b83d7568"
        },
        "item": {
          "id": "ac602d41-09f4-45d2-a202-32c25bc5cdc2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "542307d2-3d78-47a8-ad7a-82e48deb782e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8d0bdd-6ab9-4d61-9467-81553d69aa1c",
        "cursor": {
          "ref": "d7a571e1-77f1-4896-82d7-586af949a3d4",
          "length": 157,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "57736762-d62a-47e5-abc7-6892a2854fa4"
        },
        "item": {
          "id": "4d8d0bdd-6ab9-4d61-9467-81553d69aa1c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5c5fe105-c1bf-4d60-90b6-b91e1347df15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d956b0-1b9e-45b9-b85e-8efed54cacc9",
        "cursor": {
          "ref": "6e401b18-0343-4849-b418-9852fd7f0b52",
          "length": 157,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "458f109f-839c-4be5-b1ba-766e1d27acfa"
        },
        "item": {
          "id": "85d956b0-1b9e-45b9-b85e-8efed54cacc9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3940c9f6-8585-49eb-a0d7-be069d33567c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cefdd01-5fba-47c9-9a69-118dedbecdb4",
        "cursor": {
          "ref": "36c36b35-7e9f-4a9d-8957-d6dc1058ab78",
          "length": 157,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9158a430-f83d-4266-82ae-102a70280129"
        },
        "item": {
          "id": "2cefdd01-5fba-47c9-9a69-118dedbecdb4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "95f28a52-b21f-47a5-8b5b-f62184d1974e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8dcf84-5a98-4e6c-a5e9-4af174feca90",
        "cursor": {
          "ref": "a4816d12-a4df-4b92-b9a6-f7a17c672740",
          "length": 157,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8ed897d5-328c-4f25-9055-129c484ef7c3"
        },
        "item": {
          "id": "2c8dcf84-5a98-4e6c-a5e9-4af174feca90",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c0681034-a5a5-4eaa-b658-e55a246bfa88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60f7609-2bec-4bca-96e9-51cc6557ced3",
        "cursor": {
          "ref": "2ab8bd75-6481-4e10-9637-f659b665c9a2",
          "length": 157,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "134769dd-579d-4443-b40d-bf0f947dd0ac"
        },
        "item": {
          "id": "a60f7609-2bec-4bca-96e9-51cc6557ced3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4783cc31-bcb5-4373-b34f-21daf2478ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634ec148-c754-434b-81b4-0fb2650ab915",
        "cursor": {
          "ref": "90c4c66d-fe3f-4937-ac3b-7922fc90ed7e",
          "length": 157,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7eb02eff-3cb6-416a-9ea8-74a453cd3ef6"
        },
        "item": {
          "id": "634ec148-c754-434b-81b4-0fb2650ab915",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d0aaf418-282b-4142-bfc5-33a28e201b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a33f6d-42cd-43b8-9cce-521ab9cebbed",
        "cursor": {
          "ref": "fbb9249b-2216-4334-a8b2-8bad72077a87",
          "length": 157,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3d9af817-b603-4fc9-b6df-f88ed8af85b1"
        },
        "item": {
          "id": "23a33f6d-42cd-43b8-9cce-521ab9cebbed",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6e763a62-d6bb-46d2-bc08-914de86ad947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2737d18a-6ea8-4525-ae7b-44e9d42bf3ed",
        "cursor": {
          "ref": "fbf696c6-d8bb-429f-9144-1cbcca93e512",
          "length": 157,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4fff6708-c3ec-444a-97ca-c041cd38e1aa"
        },
        "item": {
          "id": "2737d18a-6ea8-4525-ae7b-44e9d42bf3ed",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "21b6a68d-3461-41e3-846a-ae13598e5c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97324fca-10de-430d-abbb-7c59d1ee4fb0",
        "cursor": {
          "ref": "d67f2d6a-1579-4c04-95f8-c894028e3bf6",
          "length": 157,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f1a661b7-d3e6-4fcc-9e9f-2dd36f297348"
        },
        "item": {
          "id": "97324fca-10de-430d-abbb-7c59d1ee4fb0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3ef7ef89-b9e4-4e77-930a-ac7a8caa301a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144436ca-439c-47f9-a414-46a280dbff01",
        "cursor": {
          "ref": "450f5d92-499a-4aed-8054-0b7dade29ce0",
          "length": 157,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b6b72914-c914-48c3-a1de-71fb7c2a4890"
        },
        "item": {
          "id": "144436ca-439c-47f9-a414-46a280dbff01",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4848c518-a2d5-46b0-9e2d-02f55d0aa08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe17de1f-f8ad-4ce7-b02e-e9c09c67a073",
        "cursor": {
          "ref": "d3280a7c-9950-4713-add6-a2e251880a38",
          "length": 157,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "92cf5a0d-a40f-4f5d-a66b-4764ef27b8bd"
        },
        "item": {
          "id": "fe17de1f-f8ad-4ce7-b02e-e9c09c67a073",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6fb53beb-7f13-4448-9e57-3d7128fe57de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b38eb03-6340-40bf-b668-6f09c2eb6764",
        "cursor": {
          "ref": "5d12888c-2e8d-4095-b956-2e21d5416c16",
          "length": 157,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a6d38baa-5a36-47ae-bf47-5c4743dc1eb7"
        },
        "item": {
          "id": "4b38eb03-6340-40bf-b668-6f09c2eb6764",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "442f4e6f-2050-41fb-afde-8ba20bc0ef2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 181,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc6df60-33cd-4d3d-b020-6b9831eaea26",
        "cursor": {
          "ref": "fde02614-5af4-414e-bdc1-ef71c8e078a7",
          "length": 157,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e9bc060f-61b1-4523-8657-870bf831f312"
        },
        "item": {
          "id": "2bc6df60-33cd-4d3d-b020-6b9831eaea26",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8ed29e3a-ed0e-41fd-9448-4a14711bc91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d17ffd-b4b8-4481-b928-97f1c7cebb86",
        "cursor": {
          "ref": "bd539d8e-10fc-426b-a2fa-fc16b20e54fe",
          "length": 157,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8190a466-e2a5-4212-8da8-5c2f1cc5251c"
        },
        "item": {
          "id": "b3d17ffd-b4b8-4481-b928-97f1c7cebb86",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2407fc50-b722-4850-a21c-8c18d874f8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed49c2b-002c-4e9f-842f-d2ad0198a475",
        "cursor": {
          "ref": "b3589056-d340-4924-93cf-137042f8c75c",
          "length": 157,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c21e42de-6d70-4978-b2a5-74bdd8be3eaa"
        },
        "item": {
          "id": "0ed49c2b-002c-4e9f-842f-d2ad0198a475",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "146f7743-734f-4211-8d77-4dff73c5ecbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6adf62dc-60a1-485a-92f8-61c2b6f40230",
        "cursor": {
          "ref": "3b969330-d171-4308-9e15-1d90f825b348",
          "length": 157,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f846edb5-b69c-4bf5-87cc-34623bbe8265"
        },
        "item": {
          "id": "6adf62dc-60a1-485a-92f8-61c2b6f40230",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ea24778e-e969-4ac7-ab76-e027f9ed0ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be6fee2-e1f8-427d-a5c5-f3c65c169380",
        "cursor": {
          "ref": "70377523-c02f-4f6c-8243-a9cb6dd7bb61",
          "length": 157,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3593ad51-7a9b-4228-a719-4639d63f6cb8"
        },
        "item": {
          "id": "3be6fee2-e1f8-427d-a5c5-f3c65c169380",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2bc3cf57-558b-4559-beae-59823d514762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c7e4c4-6ff7-4c8a-a628-d3a2d007f967",
        "cursor": {
          "ref": "8219652a-1a51-4d31-b795-0b8e1a7cd4d6",
          "length": 157,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e5333c65-469e-48ff-bebf-417b08f74e28"
        },
        "item": {
          "id": "e5c7e4c4-6ff7-4c8a-a628-d3a2d007f967",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "77e4a92a-57c4-480a-a8d4-869546b5ca6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2e9d4e-e9c1-40a4-8fcd-869e39dbcfda",
        "cursor": {
          "ref": "b1c08e29-18d1-4a48-bb5f-f70dac5f5e18",
          "length": 157,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "eb152ef5-904d-46d2-931d-a751c5e0e9e9"
        },
        "item": {
          "id": "fe2e9d4e-e9c1-40a4-8fcd-869e39dbcfda",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e4c0d725-cbb0-4f74-bb63-feb5af7ad269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff795b9-d3ec-4e13-96c6-4f20ad648d27",
        "cursor": {
          "ref": "87214ed7-5d83-44a4-ac98-97fcac3c8f7d",
          "length": 157,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "266c4b3b-a387-4bd5-a68d-ea4768738b81"
        },
        "item": {
          "id": "9ff795b9-d3ec-4e13-96c6-4f20ad648d27",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "14f8b1d8-a1fc-4dae-922c-4887eb214d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9bf74a0-ddce-4742-9d05-6d149fda796d",
        "cursor": {
          "ref": "a2ca424b-0dae-46f2-86b8-326807cc8adb",
          "length": 157,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5dc084cf-a0f8-4553-bfe6-09fef670008d"
        },
        "item": {
          "id": "b9bf74a0-ddce-4742-9d05-6d149fda796d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d1cb0f4a-8b2c-4853-90b9-2560b9720eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894a736f-f755-420c-ad6c-493973fc8cbf",
        "cursor": {
          "ref": "c33c8770-57a7-4f79-b030-21de989a392a",
          "length": 157,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e8b05f4e-e66c-4d22-8a85-3c67c51214f8"
        },
        "item": {
          "id": "894a736f-f755-420c-ad6c-493973fc8cbf",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "90849555-682c-45d8-9e54-7e5e0c32f5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f563f9-87dc-4f14-9eb7-f0a580658042",
        "cursor": {
          "ref": "bb926b59-d020-4e00-8645-cf3f583d56d7",
          "length": 157,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "afca7bfb-bbea-4dbd-a52c-a717d81483b4"
        },
        "item": {
          "id": "c5f563f9-87dc-4f14-9eb7-f0a580658042",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2b463a90-ebe7-4140-8613-2d99f06ca54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276f5847-9344-477c-bbd5-df5702511eff",
        "cursor": {
          "ref": "8252cb90-a0ae-4177-a46d-a29b0e39c697",
          "length": 157,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ae8b1c24-c0be-4fa8-a902-766aede2a843"
        },
        "item": {
          "id": "276f5847-9344-477c-bbd5-df5702511eff",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b6321855-2ace-412b-8ab1-157fc7eb30fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b512d1de-7829-4878-91e6-4366aa9ebeac",
        "cursor": {
          "ref": "888ffe24-21fe-4e09-97dd-56c8ff4cda90",
          "length": 157,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "36f089a2-9d72-41e4-a261-cd4378e6a2c0"
        },
        "item": {
          "id": "b512d1de-7829-4878-91e6-4366aa9ebeac",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "78886a56-521d-42f5-89c7-1eb8b83c76c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8580417b-a16c-4869-ae9e-6480b77ca9e1",
        "cursor": {
          "ref": "34d8e881-79b3-4562-9ea8-87c0b972bd7b",
          "length": 157,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d83eab2b-c9b4-416c-bfb5-f7c30f16784f"
        },
        "item": {
          "id": "8580417b-a16c-4869-ae9e-6480b77ca9e1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5ca4931f-e71e-469f-90ae-c24b1637b3c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d18de91-228b-4794-9d06-eab07e42962e",
        "cursor": {
          "ref": "81914a51-85cc-4352-a693-31309165996d",
          "length": 157,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1a7daadf-15ad-4cbc-9ee6-755384f679c4"
        },
        "item": {
          "id": "1d18de91-228b-4794-9d06-eab07e42962e",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "ee8b9ce1-94ac-4db1-89ff-02eac36dc319",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 75,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb30531d-44c5-4029-93a9-a52f2f1fb656",
        "cursor": {
          "ref": "93086988-a93f-4946-a213-bb042261c425",
          "length": 157,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "24864c4c-88e7-4563-83ee-d6a2afa26723"
        },
        "item": {
          "id": "bb30531d-44c5-4029-93a9-a52f2f1fb656",
          "name": "credentials_verify"
        },
        "response": {
          "id": "00f6f981-74d6-4a87-b302-e851971215cf",
          "status": "OK",
          "code": 200,
          "responseTime": 1313,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b507a2e2-f68e-4aec-bdfb-ac5393b899db",
        "cursor": {
          "ref": "276399b9-ceea-4daa-9260-fa07fef0f86f",
          "length": 157,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1824040a-54aa-47e3-ab23-2c01a330b1b2"
        },
        "item": {
          "id": "b507a2e2-f68e-4aec-bdfb-ac5393b899db",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "3808b7b8-7022-43df-a409-167e89f6cf21",
          "status": "OK",
          "code": 200,
          "responseTime": 684,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e137257-5f36-469c-b2d7-837ffe7f79d4",
        "cursor": {
          "ref": "54adff23-498e-454d-af09-11ca8d1cbf27",
          "length": 157,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e7fff8fd-e421-4ca8-b241-8a7b8b4316e4"
        },
        "item": {
          "id": "4e137257-5f36-469c-b2d7-837ffe7f79d4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "dce8d5bf-7dfc-4ff0-bc48-e06ce80d70d7",
          "status": "OK",
          "code": 200,
          "responseTime": 723,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa89776-5583-475d-97c9-4090abbf0ee1",
        "cursor": {
          "ref": "435e7110-53ef-4ac8-87ff-9b40fd6b50ab",
          "length": 157,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e6900236-01bf-4169-9bca-dcb3cabfeb20"
        },
        "item": {
          "id": "0fa89776-5583-475d-97c9-4090abbf0ee1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "acfc7d37-0087-45b4-bccf-59a93c92cf65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 98,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa89776-5583-475d-97c9-4090abbf0ee1",
        "cursor": {
          "ref": "435e7110-53ef-4ac8-87ff-9b40fd6b50ab",
          "length": 157,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e6900236-01bf-4169-9bca-dcb3cabfeb20"
        },
        "item": {
          "id": "0fa89776-5583-475d-97c9-4090abbf0ee1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "acfc7d37-0087-45b4-bccf-59a93c92cf65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 98,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ba890a-7e4a-42c5-8606-9b64d5f9499d",
        "cursor": {
          "ref": "d68ae420-2212-4682-932b-1fc9eb2fb118",
          "length": 157,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8e935362-d258-4b2b-ab7c-2b8b447d89d4"
        },
        "item": {
          "id": "f0ba890a-7e4a-42c5-8606-9b64d5f9499d",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "da3c2a88-4855-4b56-8c63-8fd214919ef0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 73,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83de2541-bc9e-4a35-94cc-145e84197b02",
        "cursor": {
          "ref": "a73e29ae-444d-4565-beb0-6b471282a0c6",
          "length": 157,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "72fa4884-bb19-4364-abb1-f7726c4beda0"
        },
        "item": {
          "id": "83de2541-bc9e-4a35-94cc-145e84197b02",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "77775461-5bcc-4082-bd1a-bfc639340378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "83de2541-bc9e-4a35-94cc-145e84197b02",
        "cursor": {
          "ref": "a73e29ae-444d-4565-beb0-6b471282a0c6",
          "length": 157,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "72fa4884-bb19-4364-abb1-f7726c4beda0"
        },
        "item": {
          "id": "83de2541-bc9e-4a35-94cc-145e84197b02",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "77775461-5bcc-4082-bd1a-bfc639340378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "c544c662-9f27-43c7-82c9-a0a309206199",
        "cursor": {
          "ref": "a69be62a-c30f-4bc5-a1ae-d9a07ac2d19b",
          "length": 157,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4b14b99f-32af-4fe0-ab39-60539f5d62ae"
        },
        "item": {
          "id": "c544c662-9f27-43c7-82c9-a0a309206199",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "6ce3d691-1ddf-4cb0-8e18-a45e074c447b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "95abee13-3773-4c6c-a608-824086682883",
        "cursor": {
          "ref": "1e1e9a14-3886-40e4-9e04-96d0c03630e7",
          "length": 157,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "72276727-a95c-4750-a233-99ae2514fa25"
        },
        "item": {
          "id": "95abee13-3773-4c6c-a608-824086682883",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c78fcb9b-27d2-4b6b-b645-7448ad2c2a20",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95abee13-3773-4c6c-a608-824086682883",
        "cursor": {
          "ref": "1e1e9a14-3886-40e4-9e04-96d0c03630e7",
          "length": 157,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "72276727-a95c-4750-a233-99ae2514fa25"
        },
        "item": {
          "id": "95abee13-3773-4c6c-a608-824086682883",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c78fcb9b-27d2-4b6b-b645-7448ad2c2a20",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5eb4e3-19f0-41b4-b7a5-df991da5573f",
        "cursor": {
          "ref": "816c28c3-a2d3-4b72-bce0-e0c265a6a402",
          "length": 157,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "cc52541c-55c8-490e-a75f-925864f0a767"
        },
        "item": {
          "id": "8f5eb4e3-19f0-41b4-b7a5-df991da5573f",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "b7a3d468-18f0-4d65-86b1-6a421ed3cb10",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 82,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}