{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0e1a61bc-cd8f-4ba9-a603-0c3a3549d48c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5d2b0677-77d2-4d09-a7a5-f10696270830",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d75ec271-3009-47c2-af88-bc6447ac6fb5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9e0d257a-3b75-4615-8fad-2ceecc438b33"
                }
              }
            ]
          },
          {
            "id": "782fecd6-65fa-4070-85ee-b066172c2073",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "58a0286b-6faa-4a58-9f38-893bbd7ccdea",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f9ca9dd6-667c-41eb-a4c9-8de7461c0c21"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a9fe1036-3a30-4feb-9a25-5585c321dc64",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5dee980b-006a-435e-a55c-ddf7c01afb9c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5b50f5c7-312b-4b3c-90fb-a3e258b7aefc",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58ded090-e3e6-41e6-a763-e2c3f6031e39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b6f84c0-6397-4328-82e9-fee3d23d4447"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5a6c7f87-ac81-4c0c-8232-13a44fb5f128",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e72e985a-00f8-4560-aa19-589296f61895"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "26679050-4efd-4b57-be58-cd8a41319272",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a435d329-f29e-437b-a69b-d1c40f4711af"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "851fe275-910c-4733-a5bc-246bee7a471c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "07be83ca-aaed-4cff-9d42-9984bac0785f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "929a5187-1447-40ac-b476-97dfd0ea713b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "788cfbec-696a-46df-b715-7367a2c61dfa"
            }
          }
        ]
      },
      {
        "id": "51952fc1-18cf-4aa8-b303-0e12d0ba70dd",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7fe601f2-44a0-440b-bb86-a111888a266f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "64072c68-92cc-4523-bb2e-c255ed91161a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ab9c3688-de7a-4e00-aab4-acadfd0555e8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1106ca4f-aa16-486e-8d73-20b400c03680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34609fd0-7a22-4e74-8b0c-69a84fa9d805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2dbbfc-51f4-40f6-b38b-06248ce7e6c4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fa467b-2cb0-471f-bc23-b9e8d2603be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d943782-9275-4a2a-8ecc-0afe387d8504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58489073-beb8-4d77-b5d3-31d2be4becc0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff40560-8e13-435c-9cab-9df1d0233615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49924b41-4530-4e76-adec-870de9e86565"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e690bae7-8563-4a3c-8792-6df05bcd37b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f43a20c-e74a-44c1-ba15-28b049b96704",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce07318-2767-497e-9075-a1cb04baa6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2056e941-ed3c-4ace-91c5-9379757101df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745bdc2b-38a5-4d2e-b713-15b37ac34ebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480659d0-8e67-4923-b527-68ed198a3ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e17269-29d6-43a5-8c8a-f0b40329434f",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82eb060e-7338-4272-9570-7291073f0feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6a12683-fe55-4e6e-9a47-2fd90c2b4912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607619e2-1c1b-43ad-9261-783751b21d74",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "20cc697b-2088-425e-8ce3-30d5f90df9d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5750a902-b2c9-437a-92ef-f6239d0dc966",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3d212933-ee17-4abf-a20a-06abb28d663b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc74e5ab-cafa-4912-a642-c92d15acaee4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f9a63cc8-4c68-4ca9-8f35-64979bb61b44"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "958d7e17-84d1-46f1-92c8-9445af82df2f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "f69afd36-abd0-4ae8-8b4b-85b47e8d1ea8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3551e4d4-1a5a-48ba-8e3f-476b47224878",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8bb298d2-3c21-41b2-be26-f0e73212544b"
            }
          }
        ]
      },
      {
        "id": "f859b432-40cb-40d4-9158-077509f7dda4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1f0624cb-1e80-450b-b427-39d9bfc99194",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d1772ee-c53f-4855-98ac-875cba702ad9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9991bbc0-4d6c-4bff-b930-048e26df6cbc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a44a81c-b955-4560-937e-6ab3df657889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c75d1d1e-d610-4d66-8a1a-230771d4e9fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc4b709-73f3-4a34-beb1-b286210b13ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7aa8fdc-2334-4aa0-ac9d-afc97029af7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3423d4-6b1f-4602-bf30-0352b1323d8b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef51888-e609-4dad-9fe9-9fcc595d462a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762052fd-8d59-4a47-a4d3-73ee7ed5252a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cde3b2-65c7-40ba-9839-450a518dce08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69f3c263-4960-42c9-ab16-feba54b7d63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1876501c-4ab1-491c-86cf-9d2567c6dadb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86da1377-377e-4dd9-a87e-fef5d2166650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58dfb1b-5c3d-44ff-b835-3a9f006e56a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22cdae84-9646-4024-b293-12df9cf5c021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c1c2854-f453-462b-b5c5-5e5974375bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5cacc06-1a7e-4d8c-ade3-53c1a2552ec9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d7f86b-ee2e-4fa2-a6c1-7874484ba992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99eac659-bc38-4452-a9ae-323b540ea598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76325eb3-21c4-418a-9191-0bf89f37dc67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d44d730-fc74-47fd-870d-759c783a5f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa32674e-01f0-4783-b4ca-58b8567f5881",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe57aad1-b598-4c19-b0d7-df4d720997dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b203c925-103b-41a1-9435-13957995d7f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ee9fd4-23c2-4640-a1dd-9bee7b561256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b926af0e-0f6c-4e3f-a397-29360e9fffe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50cf9a3f-3d77-4558-95ad-5672981977a0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba2f039-108e-438a-b508-3c722b66c12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12cffea5-4328-448e-8eb6-2adc849bd87f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9926ee-c7c8-4ade-b00d-10d9bc4e56b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "342f6cc2-341a-4eab-9e2e-81a050c9cd02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0287b114-78b6-4319-b517-ee6d082290d5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25da5d0c-9953-405a-a4b2-1ad119214227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce4bbbc-eb36-4143-a095-b5dc408878e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad8a128-3a9a-48f3-8f09-fbfb5fdcb8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4740d7df-c858-487c-8f22-e60be9ede534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2ac0ae-086d-4ddf-903a-b6880f3c8350",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe61c1e-050d-4a25-811c-bb8aee65361a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f9c057-0622-48d6-b15b-5b37d3f8dcbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03296ab-4e31-4d33-b5c1-e65318710d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e775cbd-1c7b-4da0-a313-be3c97665736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508b613d-4aae-4163-a50f-5b73147fcb56",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71c6abd-a125-4a01-b63a-1ff3a954b4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e16cf66c-fe56-432e-9d23-796fcdf04946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bde325-4493-4298-9f1b-2d0dc979bbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c21cdfb5-23cd-40cb-bc4c-9e5aa9a4e618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d9ae64-cbaf-40b5-8971-209e4375eb18",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cea210-daa4-41a2-a1eb-27e218e90a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be4b011f-2f67-4fa1-88da-d6905af299ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed49e6cc-c3d5-4848-abd9-30d82459e6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25217230-2a1c-4b54-a7b1-5622b00b3245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbbab4f-b8e3-431b-a39d-db42bd5e1c53",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96dc4bf3-84be-441a-9251-32ad250eec0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446e6505-3078-41b7-a3ba-e8985fbf82b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc2c5d1-57b4-488f-9ec7-ab7837ddfe66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7333652e-e338-4b73-b26a-b01dae1e9274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9e4d7f-c3b1-4d91-87cd-bbc2229d536d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e40b7d4-d1bc-49a4-995c-76192175b6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c756838-e249-47da-bef9-9cd68db02da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60404bd8-6cb4-444b-bada-ef1f7d85714f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "028849a9-9648-42bf-8d58-176fe4fe2641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedb7397-ede5-4983-9115-198fd4579b5d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453b9673-8dbc-4360-88c5-9eeba1e777d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8780be2e-b089-49fc-9fb3-bcaa55ec8107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78f5304-9b64-4187-8c81-b14902d5ca2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64ca7e30-a5b7-4d95-995f-35cec3cccda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c1c035-52bf-43df-88e8-d8bfd8253f7d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e16936-ed4f-4cfe-a49b-23dc2e837113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9fbd486-f7cc-4956-9c80-463136c48dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3fc987-8310-4efe-929f-a8afcdee2605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57c22418-f276-458b-a55e-ed18759271c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d745377-f04c-49e2-b358-b8811cd240a6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b9cdd4-27cd-49bf-8d28-2af4bed51c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b3487ca-4d15-4ffe-9145-5a993d80db74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81db20f3-df28-4ee1-a2ac-61b16408a3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1df259b5-c4f7-43a8-a01a-0cab8f34f5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba83713-7a53-4ff1-a487-9ec8a5898edb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85cd1719-ee88-47e1-9a85-2dd4526bae16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c980cf6e-6522-4f38-835a-e8716ec76b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4f20ff-779e-49de-b773-7be86a93085f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a85d8fc8-835c-4f8e-b1b3-1d4762a238ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd2bab0-97d0-4788-b7d0-7049bbf7a74f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f676146a-2c50-4667-82fd-746715be5e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b8fb5b-cf7e-4dd8-afcd-a5107c2721b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c2467a-0483-44b6-8ac0-9ea799033d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37ccce63-5e01-41d7-9f5b-cda6608e5080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af44ee4-a4de-428e-a016-c0334daff5db",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a13b036-7a83-4a3d-b517-7660c61837b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135d2853-97b3-48d5-9cb7-5433693abf90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bcf92ba-84ba-402e-a6b0-0022abd74945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3000be8-b993-4c73-b0c7-69892b558a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6a42d7-2ca3-40a4-8065-6a0eac09ba53",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999eb22e-fae4-4ebf-8c26-c46e01d957bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1a36f0-4541-40ce-a3a2-5c6f69282663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226bffc1-eb0e-4a31-97c4-ab0913a5f3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f645d5ee-63bf-497f-aff5-0132f73353ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519facf2-f214-484b-8fd4-b35a3b9de16b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42aa680-4346-4c22-9900-712880d05539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5933169a-7ee7-4bcf-ab9e-fa87dc7e0569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5cfe04-d803-4e4f-b158-e6ca4ae0da03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12aec54b-f543-48bc-8ab3-64a8c68c1893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d26671-2746-4cba-a9f0-20d692ab22c6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9858f139-cdc1-4b8d-815c-7ba6cbd54689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcce0acf-3a5d-4e6e-909f-6dbb4a567e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3b9d1a-b5a3-4bda-9f7e-e6ebaf4c4e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c393c068-c50c-482c-a268-81b9e13140c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d90debc-209e-43a3-bd63-c472a81f629a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058f12a5-b615-4a9e-9ba4-57fbd46a7e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d5dd28-c80f-48e3-a960-907660f15ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87656512-cdc2-4a1d-9341-0e908923c0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf28605-456b-4577-baaf-6a80fe7869c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882994e4-11be-47b3-8636-904c8db60fed",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38cf7d6-bda9-4d63-9edf-6f8165cddf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849af9dd-7621-4f85-a14f-4c634c1bb628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cdb750-3469-434c-b638-feea82edca1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dbcb5b19-dfdd-476c-b4ab-6091f6fddf41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c1b940-5bfb-4a8a-bca7-6e798fe27cc2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "409ddb47-a64a-419d-90f2-41aea755ff49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a705f04-f588-43b9-81cf-b962e8e94f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d696f7f6-7a09-4a4f-814d-4e95739a5684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0789c660-d74c-44fa-afd9-4b0ecb8792ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70134253-eae1-4e19-9a71-a352bae99c34",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d23758-b17f-49e8-9f1f-927255ee0959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12108b41-fb22-43de-a0c8-fd4446192602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c042c2a3-34a9-499b-8aa8-55f21d93d979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "39e8a97f-8eaa-46de-a34a-009544e99a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfd0b0d-f135-41c9-8df2-a5bfa7e105d3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4c6b97-017a-442d-8e2e-9c9a1d09496f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17cb036-bdea-449f-9eb2-718cf1bca37c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a9737e-3210-430d-8b03-84f06c998bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "47fc86b4-7b50-4653-ad57-05aa9434d7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c11404e-b12b-44c1-9eeb-90af9ae7f3ba",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7a90be-c70b-4720-8bac-c060073f550f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5596d192-72fc-4d11-bd2b-5aa89b2cb532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0117d91b-cea5-402d-916f-2a49b59703d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec91452a-d32a-4b0e-a6f5-b1c110293da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2170fce9-fc1f-4538-b3f9-48fed5ebcf9a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26e17d8-dfb9-4bb0-a427-5abfb11cdb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80550afe-9f1d-49f3-9e54-d7a3fb47acde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56620c55-0ce6-428b-bfad-5a31e80c87e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "192f4536-f444-4b6e-96f3-551c1038954e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52cd23e1-5814-452b-b1b4-e1e119b65be6",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebefe6ab-d12b-4628-b01b-57a9be1407ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7931aebb-0a12-4557-b8f9-c52b8c2cf6b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f3b609-1eac-44cd-8194-275f5ea0b6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "899734ed-01bf-4864-b41e-059ae443b998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4d842c-79a0-455a-bd6e-9d5e829e76a8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef2d175-11bb-412c-bd90-cd9e93d9a61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12996927-8707-400a-b3fe-b868654b05f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2a0195-2597-4f91-8604-969309744e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "69e78292-9c4b-44fa-87bf-f3b259f4db29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7cecdd5-4f0d-43a9-9eeb-5a680894fe59",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9821a4dd-e0e1-405c-ab64-1bd4406b844d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae606b22-fe29-4637-bb62-c351651a86b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16bb509-5ec1-40e8-89dd-5a54612f7d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f595b73-de9b-4285-9942-5098804949c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c993bc21-6ac0-4bde-a3a2-39326dcaae03",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6d9ed2-1ac3-4899-9aff-917f5e7f0788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d65ab8af-afc3-4dbf-8a99-fd20351508b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73fa1d33-6619-4455-92af-7886d94f08a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91776a14-f5ac-4459-aeb6-a917430391a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08007ef4-b910-4a71-9624-4e38c0eab4cc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d81c03-9a95-4713-994f-94546131ba88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af65292a-6b01-4e1c-8a6c-3a774b6eb1d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1acf4d79-eadc-419e-96c1-30035cebc3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf81e27-9152-44d1-9d5f-96dac0e324e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75922466-8b91-4ceb-9245-57830dde249f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18af6264-3389-4b84-9624-b84b079e35bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0d5901-8c18-485a-a680-e1c7bf473779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0009338-47bf-4c86-8522-1c5ca01924f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf6d567e-a13e-4b5f-9b82-e4505ad9a987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0125236c-4432-42ff-a730-987eda203103",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c40097b-163e-4d8b-9fc7-8be797e7aed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddeab0e1-ed62-49dc-a06b-3632e29b7029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fb296f-fe4a-4986-86e0-aa1706356d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1dedd3a8-01a9-4003-a516-779bafd61888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a606f6d1-9ad0-42ff-9564-020528b8d9c8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691a6289-bf5f-4710-973c-0e9ff9d32741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f042f77-88e1-472e-a9cc-acb89ea82e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d497b3-75b9-4473-9bb3-d2549b405796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf276ff-3b27-4ebf-99ce-aedeecb97cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778b967f-5fa1-4246-8102-82da12fe36ed",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98cb66f-0f7c-4d6a-a961-58b2882ba20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb0bab0-b689-4e44-b2ba-60464e297da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee007ed-08b4-4e23-9747-01b28bc15654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "777724b5-d0ca-44d3-9208-c8c1091c0ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5110b4cc-dcf4-4c57-b264-2c05f28ece2a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0dafd4a-8c93-4f85-a950-20eea4ff31b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86bbbe72-7f2c-4232-a2e9-726d25affb20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd9cf55-3167-4cd9-b985-168277f66bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c92c681-f579-4175-8f73-b38be5182d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b756f03b-1d63-4a3a-98d9-1944d02c43f6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64281a04-ab9e-4fc0-91d7-bebfb36840f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa39cf8b-a1e1-4165-9367-c3ff2809b5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d552a8d-16bf-458f-ad6c-d98c12dea775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "52db9227-ad01-4a79-a5af-baa9ae5c4ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9412fc3-c63d-4c6d-a197-fcf272ee8a4d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adaf8e1-e06f-4e64-9b3b-05e03b1654db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8b00dfc-6090-4a95-b67e-a8e8cbfa638a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ae6eca-b329-43e6-b163-eb7504b21ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e558dc9-1a08-4dd8-af53-4079b2dff2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a616a76e-b515-4d09-92dd-1aedc1e5887c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e316db3-405d-4e0e-9c28-df92c08ea229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850da691-8ac6-4a69-9fea-4492cc4f6e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88281668-82fd-4674-a643-a1add6573465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aaab250c-b532-462b-bcba-18bad5fdc6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38349d00-9220-46a3-a13c-67d0bfb371ef",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69731df7-18f4-427a-a34c-95c69c80f3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9772b15d-cd86-4e5c-8f88-ad83636b3164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e222dfd5-7f30-4614-b18a-08a187671904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a16f19-8511-440d-8e53-8cc065150e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b62d198-3bce-4c71-a7aa-6e5c61f608cf",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc83a56-ebd2-445a-9bdb-5f183305ecc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "231b7d3a-df70-4a83-b681-a960ca668199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224b3bfd-bb88-43b8-a000-04e0d4722bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "91075640-7bac-4218-ad04-258a5e3c9540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b5bde3-d2cb-4fd3-b370-a6f9481905fa",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a411d59f-112c-41b8-98bf-0ea46bc700e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c570f80f-ee7a-4e31-b880-eda4086d1e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647d7b7c-9443-41fd-ad66-9a1001e70af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "33cc960c-9258-40b6-b399-a058839082d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d2b1e3-5f15-4688-83ca-3ae48fead8da",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d8eb4a-0874-44fe-833f-189b6d29b5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd7d567-eaae-4872-aa79-98c22b7875aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b19a2f8-8ddd-4b10-a11b-ceb57f8e35a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9414f6-38ed-4cfc-8966-be180a33505a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583f2a90-d8df-4c68-adff-8830928ce5c4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc02890-f176-4664-82c7-f2f0c6e64176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214dd380-e225-4185-a853-0d011eeec25b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3cc37a-0781-43ea-bf79-9fcae2c2fde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb53ecdf-818f-4a17-98c2-fdfd455c09d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b627822-1bf5-41d7-b4df-3ed53001c892",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369d7bcc-7730-42b3-8ff7-166223f45774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c674a7-779c-434b-a25a-aff93e3be5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a75caaf-e3f0-4d7f-a4e2-be329089fe72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "deb39d09-ca33-4ff1-88ef-2d4f207fa46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b828a5-ec3f-46df-95ec-34dcc6f65738",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab80a59a-a66e-4852-8e26-2a94a0cc9af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92576bf3-fb78-48c8-af6e-246731589512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f004da8f-125f-496a-9be3-43d50b88c0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3895058b-48d2-4022-81de-e9072dc8cbc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9576622-aa9e-4460-bc28-e2c82e2cb9f2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c50086-aa30-4cbf-979c-0ade2bdb463d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60309456-2be2-431d-9e15-42480ecf84ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a62ba85-635d-4b65-8efe-24d6ba766602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fb3841b-e506-4962-b931-c58da7a986dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa741497-57d3-443d-9732-141a556d8fa1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb41fab0-7e0f-406a-8c94-6ae2116c3de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746bd02d-39ac-4157-ab11-3f3c08df1011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1beec8ea-af3d-4cd5-a082-40edd0df0ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1144ce8a-acc7-4379-b7e2-22b00c4e3e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df99913-1c20-4a55-993d-227ebebd51c6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b121d7a9-bcb6-43da-b63d-e5ba388d87ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b28ef318-0f34-4cc1-803d-19295057f1d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc51ec3c-1931-445b-94d4-1e8e3bdc377b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "563a754b-ec62-4943-af12-288b6cc30835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846a4726-98da-4c31-aca5-d4dabb27f7d9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5081b0-89f1-470e-afd5-ef6c98626866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "debe58ed-94e8-41ec-8ab3-e37df9ac787b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6357593e-6c01-426d-9f8b-bade6052d488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e49a1459-65b0-4d1d-8b46-fc40223baac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c20667-2fcd-47ff-ba08-ebfe6c45bb96",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0facdf-5e9b-4f24-8c5f-91c500e574cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe3a7a21-ce97-47fb-a7cf-e3f09d57b441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8507ec74-784c-4aae-8fe5-52197ddbfb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4181387a-248f-4ea4-ab1f-fa67da6cea8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a8cad8-7287-4d29-9348-cdde911dbd11",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4370e938-3155-4375-b4a7-240e37409ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702db539-1885-4c9b-bc3c-2bb4b29a60c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aea3b92-3100-4908-adcc-a98973bbbf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13c2f877-86b3-4dbe-b398-ffd4a51202ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84fd555-c8e1-41ae-aa03-227c2a1daa83",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afee487-21cb-409d-b9cc-4d0d2e3ac966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d1da2f-78ee-4e5a-a6e0-3618d7bfc2bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bb8868-4984-4d83-8d71-5736d49e84d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13adb8aa-6be4-4979-a69f-68e1fb1fd96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e0b5f6-e8b9-45b9-9137-bbd5f5f8f31e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8d6ce5-5d36-4980-9b61-ccc0231b8280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d640d84a-c4e2-4fa7-9a4c-4ec22922f729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12dc26a0-2c9c-4782-9b64-856768f0dc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7544b4ab-4e28-4343-b39a-56e68d0e8a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3dfd2e9-d9c8-49f8-ad77-3bec41aa996f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f463fdd-bfb9-41fd-9444-436db084a93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953b7bcd-139f-4b63-9c68-1bb70a18f92c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163b42a3-5144-4df2-b393-b9c4e7fa1d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a68d16-04ec-4986-9a3b-b849bcccffcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd00ad0-c243-40c4-8add-036d637b06cf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a3c01a-92f6-4d6a-b0ee-bcd6d82be0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb4ffa2-8f8d-454a-aaba-3587b12d675f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3edf62d3-de02-48ae-a151-f44cfaf56a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "45b2e6a6-d953-4041-85f1-99045f4948a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e0f95a-b8ff-4e36-b4f3-e611366abece",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747a0b2b-26c7-4a62-9850-f486e470e5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2160157-bef6-45f1-ba4f-f3c85e7c6802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ea9b62-7f5e-4a1d-8ece-86c4f20b2771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce75b525-54e4-4a92-bc53-d465f20c2818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c01776c-092c-406c-b532-d7813f1ba92c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c932a00a-e0d9-4c17-842b-37e34dbe64b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a525d8-00b1-4110-af67-796a19705a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd0cd6e-71d3-4870-83d6-21b27a3f6b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd41d2a3-57d7-4155-b994-682b10f8bc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755e1db3-235e-46a2-8a49-dd2c353e7c49",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac9f7cd-af43-42d3-a0a3-57a8d45e7e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80926d9d-4d51-4533-b020-cf97a6d278a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5936063-ee7e-49ea-9ac4-d889a6702e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c4a0aca-bc12-4901-b413-4fb8d896ea86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c635abdb-eb51-45f6-9853-612e1f59e146",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6014995c-5de5-4c52-88a1-8dd0035fd4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59acbac-bc68-452f-97a7-6a693a9f4a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77e6caa-60fb-496a-911b-4e58108ea66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "634b76e3-c8ac-47d0-89af-e734557dc39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470f57c5-52b6-4a12-9964-5fd443870146",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7126b9-2bbc-4525-85d0-a5579eb4f427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbda0eb4-865b-45ff-b329-cb78718877fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d692f5ad-689c-4fb2-8514-8b38a8a7ce04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbad7c83-d05e-48c2-b312-2561384019f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7862344-fdee-4144-a0db-df081ccf73a6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4539b5e-cd08-492d-a784-068a6e4ec6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b457af2d-5d3d-4822-a277-fb1fb0ce4c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ee458c-a56d-4a67-8b8c-fe531e44d0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e129c62a-4c3a-4610-a5d4-7d1fc0ead1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b05d20-a928-4d2f-9561-c28358b44f2c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3c7eda-d5bd-4e56-b577-7c67b8af5dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b32559-a182-4cee-ac32-61e532d93797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78359a6-7dd9-4fde-97ba-4753faf16371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16b5d908-52b7-4f6a-936c-6ec5c7f3cafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df554433-9509-4b68-85ba-889070336930",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935d6c42-3fd0-4d99-b31a-6e9268ec14e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "158c9351-931b-4d6e-8526-eb025335599c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229818d7-9aea-4461-8161-f2ae7907a7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ef41698-c7cb-4d5c-8891-4f92e5739a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63452178-41cc-4f94-a6a0-f7051799e4b9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb40495d-be21-4777-9bc3-b4d9a314beb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98b097e-da23-4eaa-a095-6a7507646ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88847fa1-1e03-46a7-9a18-c74894bcbcf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd4f23e-9d68-456b-b1a8-0be125d8ee60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26eba71f-d48b-4f3c-9e57-005ff8085775",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa51680-0486-4de9-a058-86ae87bca862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "575ff4a1-99b9-4145-85ff-924846321226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540bbed6-56b9-485a-b76d-7f8b4ad6366d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "012bec77-7222-4673-9649-54e659156691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433d2112-5c47-49f9-81dc-caa984a727ab",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d15f56-5c8b-4e69-b4b0-4971e6a39ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f41386-f9cf-429f-9cfe-8e91e0f3e73d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da36ded2-7f65-4d23-a51b-703244a8197b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fe1d26b-bb61-414d-9d92-49dfc8b56262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff9f98d-4c3b-465f-9934-c402d59bde0d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8aabba-2b9c-4978-9068-5084f8e02783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b57dd11-7c80-4f04-acdd-fac3d530c5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a544d2-3474-4e1c-bd09-67a3bebb404a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "362e7d16-e369-4e99-80c5-e764410ba462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf76b95-af5e-4c93-a0ed-05beed829efe",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d58d8a-b000-4a9c-a3b2-1c609fdafb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a5f030-29aa-4407-abfc-e638dc86d7d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057b9e67-6076-4237-8e85-8bc0c313164f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7be474c6-f048-4c1a-87bf-e4c8bf02f090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571f815f-63d3-47ed-a7b5-3ab7769025e6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01797968-4baf-45bc-815b-404fe97b3fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9424b293-442d-4162-8ce7-775e598af8df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c748c697-a3e0-4e4f-b18a-431d3cb722a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "241c17ef-5294-47f4-ac4d-14c4127ec0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00a66ed-a0a0-4d41-8880-a3d5c5553b98",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b0bcd1-d719-423d-9cb8-a254013d5ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a925d946-654d-45b8-9cbe-40d63f56167f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef528bfe-d642-40fc-b4cb-07c4c9b0864a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73c9f1f0-1437-4c30-8852-e9fb5cff6c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2385204e-b49b-4123-98f5-7fd61ab6bb3b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128b50c8-f0db-4ac6-8295-a084bb6256ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d6f8c3-6c95-4694-8a9e-e3b693bd3024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d44957-d938-43a9-beaa-76a856d3c5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc0e7db4-b915-48b3-82d8-9a0fcf5ad799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804d56c4-c52d-459b-9aa3-2b66635104e4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebeee96-2da2-40aa-8859-7bdabc727763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5e305f-c80b-4e30-a3d4-831325879010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6de8816-17cf-4342-9754-809f51ef4a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeefe89e-cbf4-4064-b388-433904c44957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff37ea5-014e-4df0-9440-09e54665caee",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b422d5-24b1-49da-a915-0aa561b756ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc6cd6b-0140-471d-a4d6-613f8e3bae77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ceb09d-aa12-4aff-a905-d30817d9ed35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "acb85413-a9e9-43dd-a695-04e6201478cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73bf5673-10f5-41db-a02a-d6b98bcf121c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee626fea-c231-4a1c-aac1-6dfb2a5cd689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df95f3f0-9b82-495a-81ec-4e1f9a248812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b867be8d-cdea-4d49-a5ff-ee604e6f689e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2caf20e-4a34-47a4-98d9-2d039bce04f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62eb7754-e02d-4f42-9c33-87f3425ae827",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c41255-2410-4294-8dbb-bf3257b080c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "420cb029-7bc6-49f0-8a29-9e320ac625dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cfa824-e6bf-4216-8b10-11d96b3d5322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20448c31-7d3e-4a84-9de2-ac36e555df08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e45cf19-082a-4e42-b973-7be782a49fe8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abc462e-d22f-4299-8f3d-d50f3f94df6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619729f5-f127-413a-ad67-c5f288a1464b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46480758-c642-4ca6-a03c-d4c5e95d9a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "98fd69c0-282e-452d-999d-144c327b25ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3c6ca3-d6d5-401e-b087-2d2612a19ed9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3763f1-f3db-47b7-b311-edd9e55cfa15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a5b7303-7dfc-4653-bbce-92e2d3d24877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cbf2b7-89a0-485e-8ee5-384b86a10b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba73266-f997-4b54-acd1-48e8fcee46e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbce15ff-3d16-4e29-b0b0-a71f0cfdcada",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38c2120-3e8a-42b3-8bc7-ae5afa0f6846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5129834-5b3b-4f6f-af6c-83fb825cfac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811280df-56ea-42c3-ace1-17cb8bab205e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f009d43c-d204-4502-8e11-d2891ac9b839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca8a0a7-e9c0-48b1-a3cd-ef45b7b88da3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f47f8f-50f0-4590-925a-e5a503411d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31d3fe2d-35a7-4a3a-9cfc-80c3a7b1b335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f2f682-4316-4962-bef1-6e7c56c173fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63201f56-9074-4870-a687-b91e14967163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d42f519-be6a-4533-8325-bcc42ad37d08",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985fd299-7681-4301-83cc-f106fa946819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1568edc-2cd2-4cf1-9d39-eadc0bf0aedb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a8e806-1d80-4593-8401-aa9fb68960f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb1914d-52ec-4aa1-9740-d72c99d2f1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0227c73-407f-4464-944f-e3fca7686c6a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc05cde-a6e7-4352-a22c-b242959b11c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c78731c-495f-43af-90fc-74ce3eb0b369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128dda4a-721d-43a9-aa85-8c081739dc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "644b58c4-2330-4dd4-881b-6bfdb21b7363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6313e6a3-ffe1-463a-a26e-27348f37c68e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7a1448-28bd-4ad9-9c6e-61c2716f0b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d503d96b-1c48-44c1-92c9-7e57406b85fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77f038d-4175-404e-97c8-bfc60f5740ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88bd0fb1-ec06-4fc2-a183-cf74e7959571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165fe38b-09be-41e8-b8d9-0907a69bbea8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05cc779b-5a4a-4c7e-9e6b-abb811f5cebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ea70c2-ce29-4b64-b7fd-b5064a672373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24455016-9948-4f26-9f57-f07a0a0f6ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4c3f581-5a84-42e6-b89c-3519d2ca0f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb95f6da-31b5-427e-858d-aa0a5dad2fa7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3a1125-ac2d-490b-90e8-7701a3d209ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485ef3f5-b4a9-4183-820f-273f79ed9dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1012c7-8766-46c8-ab77-11335c10fa3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d438d741-0b13-40b0-b4a1-49903e33a096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6238a57d-be39-45c2-8da0-98eda11f33f0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fe46fa-05d4-48aa-90ca-983dca928598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77195e77-5596-4a97-acd8-e72beae41785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59825fe6-93dd-40cd-8849-2a18d1e4a9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "08bdd355-565d-49ea-a9a4-9a6417f5f7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3501d76d-937b-4310-b8c0-61cf7b435497",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bb1a44-62b6-40e0-a280-65e448f2ff1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f249bc-86c4-4e6f-94f6-593089758fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c30c38c-f003-485f-9f3f-773ebb70f81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "baf6f947-cf67-490d-93c3-e1ba0ec91af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb93328-2896-4d43-aa91-c0e778768264",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae196d93-e14c-4dab-849a-ade9756ffc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03858c49-b792-4f8c-aa83-e8e895db5dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86dccd7-1f8c-4ff5-beee-e5cab588197c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0952f6-1fc6-4c81-abcd-df20cfed5b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca29004b-3e41-4df8-8729-44506436bb1b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4808e369-80db-4f16-b2e3-a05954a13e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd54fa2-68fe-432e-a44b-9edb03168543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b79395d-e85b-402c-bd27-d1f06e9719ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "91db4aad-d8ef-458e-9e27-f4b14d628d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d993e66-0556-4e10-8686-edef8b4e44d8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f274cb84-59f1-4a76-9986-322c7e098ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e7e09135-000f-4f35-bae6-bf5d37d997c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7535b841-8641-4b26-b0e6-043cdf7a7022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "938b0ecc-e212-4f46-9eea-feff94fb2a00"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f574eb62-5ccd-472e-96e3-c7d034c1dbf3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d58f68e-3c40-4b1e-ad95-06fa8a35f8cb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b49215-fad5-4dfc-81c3-817ec52debd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d631589-b55d-4110-ae39-dff918b190e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec92ad5-a766-4693-a0f0-d89deb6e9a96",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "0176fb27-3b6b-4d20-a970-2ee5f6a7f6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5273461-8b46-41cb-bdf3-e47b4f51ff8a",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4e9db0-0380-43d5-aad5-fc73bb6f4672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f60eb21c-987d-472e-94a5-aa748fc8f506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e567416-498d-4b0e-8437-bd0d3a89b470",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "19b4e17f-c09d-4786-bf8d-ca381d7ab6a6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31c77467-a42c-44cd-b2d4-e5f65922b3e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70757f5d-d59d-4992-95a7-b9887dbcb76c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2aea6af-722c-4391-b308-a49a7ff22c7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44ef1be1-6fd9-4eef-ac9b-eb294f13f552"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "67ced682-739b-4fd8-867b-62eb6b22a4bb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c8511d1f-cf3f-4374-8da9-fb41663e914e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "49b5ab42-9aa7-4bfa-bc56-056b21c0df4e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "06e67cb2-52fc-4a2a-b62c-ba6a6c83bb24"
                }
              }
            ]
          },
          {
            "id": "8c4dd02b-d79f-43b7-aa43-cd997b371f89",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f3da4230-0622-4a67-ab78-f8a6d25f9055",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c395a39e-8819-4173-af98-63476430b674",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "553e0c0d-20c2-4ecd-9948-2d81b44f2dd6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "296a36a8-34ae-4525-bdfd-04ed32928a1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0d4c4a89-cd71-4f10-852b-fd59da05ae4e"
                    }
                  }
                ]
              },
              {
                "id": "f5ed738c-3784-4add-b861-9bf188fc43a0",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3696a307-da3e-4eda-883d-ba449aa1813f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "85366e15-906f-44f6-8699-c6dadf570769"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31a0a9ad-5459-41e8-9b3c-2bebd9d67379",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8b6087d1-dd02-45a9-9a30-6bbfbc8c3ce9"
                    }
                  }
                ]
              },
              {
                "id": "c22dc521-6ba6-4284-9020-2e1c016dd654",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17be65e1-3f36-4add-a5da-ea2d9d9160fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c10cdc2-7bb5-4539-a776-ef1c17a5ca7f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a33b2ef7-5c34-4170-8cf1-6a7c836deac4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ab47d175-d991-417e-a908-486731123c57"
                    }
                  }
                ]
              },
              {
                "id": "455c3d34-7056-4be8-bba5-58813d35ab01",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bf27257-4c35-431c-a8ca-2f590702272d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4532937e-db70-4f21-8587-508f62d5affe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "700e4262-dc2b-4426-ab9f-5e1e427731bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d157e852-6963-4798-b467-05f409af3b8c"
                    }
                  }
                ]
              },
              {
                "id": "c325edd6-f3dc-40b9-bb30-b5e5898b956c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c0a0b81-b97a-4f50-8571-c9a5b01729c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af092c6f-6173-4eb7-bbe1-0feeb089fb3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34d3712f-af40-4c84-9819-335b33c2e4a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9b0b2f2c-1400-4df9-b39b-ffeecd29f6e5"
                    }
                  }
                ]
              },
              {
                "id": "2b8645bd-a975-49b6-81b1-e80551431af0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c9862a4-94e7-4c29-be92-bf14be38f271",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "05272c49-e659-4ddc-85c8-69ec16ab9e61"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ff3b675-f8a7-467f-bca6-aeb5f44f4774",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "901ecf02-f2e6-4861-a3c9-fea054c19b61"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0ae06f78-61a7-4c5b-a04b-c4092b4f7a24",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ceadf35b-54a9-457d-b7d1-c4d4d506c350"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "24be262a-5116-4cf8-af51-39254fec5d5e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d9924c1c-5f37-4913-9ed4-93c7521e75be"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "873f7cd7-b09d-44cf-b0c8-f963bfb9e47b",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ea316a73-3102-4342-8436-7abfe811d8d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a09c443-e057-4ccc-9f36-e9c05f887c26",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa8e3531-a57d-4933-9337-d2d5bd5bb4bb"
            }
          }
        ]
      },
      {
        "id": "308188cc-7e0c-45d4-bd47-f733d00c8b2a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7d14728b-b9b9-42c2-968c-0a20d9a0665d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "37af3829-2adf-4177-8843-94e209426b1b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d9fd5f2a-1ad5-4429-ab8e-e3acafa0ec0b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6297ede-59f2-4b68-ab96-e3abb6474726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff7cc3f6-85f1-485d-a11c-442646e13891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c41089e-976b-4e50-8d69-e3869e9f5c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f03589d-2fec-419b-adac-fb1d30f122bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98744eba-7867-4522-bdbf-2c8df2b42a8c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad0781b-b97c-40fb-9d42-c504c1bb2520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb6ae376-7299-43fb-a9d2-e38841c7eee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ae9d4b-43fb-4c70-872a-932f8c31f948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "64e981e8-8643-4778-b811-d2354c142977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92568c0-592b-4e7c-9afb-063539335491",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edde8cc8-b5a8-48ab-94ae-d2b91b867ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c5da20-3d46-411c-adc5-ccb82d191aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2caefd-c6fa-4191-a414-c2d0382ba25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc341fa7-bb4d-440c-948e-630cff4b380f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25724698-1830-45ec-904f-9b46dd9cee33",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d531967-e10f-4e0d-9741-6724fef08862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "556e1b4f-a8d9-4d2f-986e-9ac4aad82530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eca21cf-e2dd-4eac-8e77-8adeca2ae028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af5f9615-fdf1-4506-9b1d-2ea1cc277ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725c395b-c6e9-408b-818a-e62dcfa2358d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064f5340-0cd7-4fa9-ab68-2330bfb810cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31abccaa-71fb-410e-b66a-3edc45dab283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9036d37-b9a8-493f-b348-28c8a6c2cbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9774add3-1d1c-460e-9bba-260c66281d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0e1dd8-81df-491b-b440-c446fd5d607a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b869ce0d-f31b-43a1-b51c-8671c72711c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7948ef62-1c69-43c9-94a3-54819dae1c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea1cdab-b6d6-42f0-ba9a-1b836d52254d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c25ac45-93a5-4988-83d7-9f01d5c374c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b2a651-c02a-4c88-b3b5-9b6d6ea644f6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7dd3dac-0356-4caa-9e51-24f622df795c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b1e0feb-5a92-47cb-8a0e-8688b656c333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c4ad7f-111a-4462-82a8-565835f72518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d79666-2ee9-47ad-9949-17c5ace446f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8df3a0-c955-4754-bb8d-c1ba65f83a55",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56959df0-20db-4f3f-a826-e3fc49815051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b206b6f3-9974-4e24-a29d-3656e2021714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad206804-3d4c-484a-be51-ba031046d074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "18fad32c-e283-434c-9e81-f7b9f7040e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deff2741-9d53-4afd-8e1f-b58db33e2cf1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec898ea9-e599-485f-b0a8-fc71870727c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb3b0b1-daf6-46fd-b1c3-7e35367872ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513dd5a8-065c-49af-9873-461a83312029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a96d2db6-e42b-4199-9032-3fe249afe871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3be013c-eabe-41ed-b644-b14876d6ee90",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614b04a7-ac94-4c7d-b942-9f8489d1087a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0e7fcc-35d0-4079-861a-12631ec35e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d30198-e1ee-4be5-8e3c-328650bb4433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b74979d4-4998-4bc2-b5e6-018ecb4250c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dcc5739-0fb9-4d57-8f31-ae55309046d9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87329885-dd4c-4a27-8b32-d0dc18ec14c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89690d69-fcd4-4286-a0c1-354963776419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148f4bf0-263a-497d-8709-f53f13d501b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "95eb3bb4-0c52-4fb8-83fa-cac8233ec854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d1956d-ea93-49fc-9bb9-3ed82f0ec682",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf913db1-d173-4b2e-9f07-5db8eebed3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc20bda5-70eb-44bf-ad24-d93257183f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dde098-8a87-4cab-a6ac-96620f448abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b17387-2ad6-405e-bc39-e280955e18a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3e34f9-8e23-445f-88a8-2e7d932d0274",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568bea51-e905-4e86-b2cb-ff2835493a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857edcdf-d003-410a-a001-ccb4f37a44b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82da349c-3ca2-46b3-8266-28b6484fd7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "780dfd4d-494c-4161-b5da-afb1582bff49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f80ef2-c063-4b95-b125-82894849a097",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfebb87a-0dde-403e-b96c-f9e7c909937e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de8c5347-33b4-4b96-a085-344d70c87d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e7940e-c9e8-4c18-b28a-dbd4430e929c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcdd8288-a64d-46fc-bd1e-bb4856c9c6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8947122f-c926-4bfc-8018-73669d4996c1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f73d6c-bf62-488f-83d5-17683b7902f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f3973c-6141-4d71-863c-9fb4211cbf23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe08847d-b7d2-4e72-93f2-c2164aa8ad54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e40176f-20de-478f-a575-a26c993f0353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d20cc49-34e6-43b3-b497-a06d8a873410",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e79f9f-edc2-4d0d-bb54-12001acc3c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4699a53-9908-4ef1-b463-5f9702458b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e89d25-b1b5-4787-9d67-625824fab95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "90e58f63-4227-4871-af3b-5edfcbfc5e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb46d0f-cc10-45fc-b831-659781c54bfa",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1282ba8f-98ba-4712-b3b4-0fba07a88d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13fe2444-d964-4ed8-91c7-4bee1ff89b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d651c5-32c0-47d8-a0a2-2252b5cd5c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c43bc21-1828-40f2-8477-c5341a0b05f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8241b5be-7ce4-4b47-9eeb-b3b6fb2b37c8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd26f3b-2871-4979-8136-910eb889adb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f07b97d-9a0b-47b8-917d-fcbf5193fad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec37979-6466-4bf8-9949-b552cd1c37eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc687c3-00a4-41c9-a80d-d6b7762b3917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79487d87-4b53-40d6-95f4-48c3502bc99d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d11890-f8c5-4ad2-bc35-e8b251eacf6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8c5cd7-48c7-4def-b2e9-f57198fb4c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7672182-06f8-4dd3-b372-73cbee27f0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d74f7eb3-f29d-482f-bb1e-c1a1d6c44b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31085240-6532-484c-9653-bec06e90f0a6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e77772-4581-445a-b214-f7eeb36bf4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9235eb2f-edd6-4650-ba71-10d58b8aa827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206665c4-db57-453a-810c-2a1a56c905dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9f9816-3b7c-4b4f-a557-4cf904fe3f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77bbb295-0c3a-4a29-ad91-5cd998782924",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be561bef-0b5a-40a4-b2be-add8b94e07c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d73ab8d5-e357-4e08-8b66-0643a6858156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16443202-d926-4f4b-95e0-f257e31836e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17c94187-4278-4e78-abc6-3a13f00d9c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf472630-9e2f-405c-b2e2-97789bea6434",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "408dcaa0-3290-4dc7-a10c-f4ad08f60b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1751ef76-9168-4025-983d-475ea21fa76d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fcc898f-13cc-44f1-b29f-18780805efa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7608e4-b1fd-42e0-8cbe-a1c8de1db627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986a6001-853a-4ae4-8027-d7a76a23bd2d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94771db4-1e74-4c0b-a07b-95ff7102b170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9fd42cc-1c23-4d1a-a5fe-785cfd433c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf85477-dff8-44ed-aa0b-ac08ae85ba86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0caac8e4-23ab-48f8-baa9-922ccf9f07cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f411f98-3b2e-43c1-8ede-97e65c107127",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871459c7-dab8-499d-b9da-0f227e39e353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1180f45c-5f55-402a-a8f7-0207ae42565e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b64a8b-4d95-4020-b4c3-f2bee929b497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39ab3733-b61d-48c5-9ceb-a4eed05cead2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42006b7-0985-49b1-83be-789d7591961f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1c87d5-4525-4c32-8868-6f6a418267ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa46a56-39da-476d-9baf-a151c34bc21e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee446a4-4294-4474-a68c-5a23a7a6f39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef8d30e8-d88a-4023-a223-47546c5172f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceac34e3-bb30-43cc-a543-a94a89e866e2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f55440b-8bd3-4c22-9a6f-5cf61eb36678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e33207-c22a-4ff0-af87-f90d91cfa594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6c15d2-c59d-47b7-9d16-413e1db64493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b99c0244-01c2-4679-9b2d-4bea702067b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ead1e6-527f-4872-b21d-8b38e1b37139",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7b4b8f-1e17-4af1-bf82-d5adf613d456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "109ed45c-05c2-4e14-a43b-a5303bbc3fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc7f5d8-02b6-429e-8485-c8f75cd47273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aca37d9-e20c-4041-a241-777a41a317d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476933ff-e6b0-4ae5-8278-4a0db83daef3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7c8d46-fa4d-4ec8-a091-bbf90668e2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ad716f-c4b0-4db0-a470-6a1ed23dfdaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e851419d-66a8-47ed-8517-7e21a7686701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad39f358-b740-450c-823a-95a4ecf65cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666dea3f-d8e8-44c6-b25e-4cf855ef5ce4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca64a323-8153-40a2-b960-b6e8b46ff294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44cc9f9c-e1d2-4928-a586-a0e6882bbcdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9669aa-7556-44cf-99e9-b257151753f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eac90c22-9f0c-460a-8d48-efc349f28b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe92c7f-6b16-4bba-900b-004e8a8bee36",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa1a08a-2af1-44b0-9b8c-2de496421e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d4575a-cfa6-4c0d-8637-f5ceab29a8e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc908437-abca-4931-a656-2922b3bd8e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "337f64aa-c920-4c66-81e6-2def2f314284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07687da2-aa16-4a69-972e-a8779c664972",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1805439d-d5a3-4dc0-b5bf-d40e1ba882e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc250be-a82f-4279-adef-709d4765110c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c38bc2-89c6-4653-b8e8-490caec8225c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3dc4576-44a8-4a26-b9fe-3e5182f932d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3808d5c-c2da-457b-9c99-f8ca2a545fea",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8f742e-e077-428f-bd1e-bd070bfe9603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b86b681-1998-4cc6-904c-42d530d08f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865b02e6-9222-4048-a2fc-da5ad2e1f6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d263619-f723-4c85-a50a-6f3bd0864e1d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "33a08690-75cd-4bfb-ba3d-6c3381dc4ec3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "747eea48-67d5-4a1f-a38f-e3946d333285",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f817337-2485-44d2-9f8d-04072d7c98bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e5f7b1-f476-4b72-867a-a920eac3f125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "594eb283-4be5-4ec9-95c1-598530b1c7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8314937e-1f60-4d20-9ad5-ceed7a407d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08321332-4416-4e12-99d6-76caaea72c88",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efef5fb9-5145-4dca-8265-1f56fce7b950",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "62ecc41b-8a3e-439a-bafb-f2a372797763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "188cc566-b01e-452c-9a19-a1da93f5cb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "531eb905-c54b-40b1-a9c8-3ca40088e138"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20b349c2-6b55-47cf-a6c3-06e7ba4be6b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8805971-af3d-4b5a-a8d4-1929824125c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "81eaae42-a45d-4538-9307-4712d6c48128",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f67f6b23-048b-4dc7-b2d7-fc7129d6e098"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd804603-422a-4dca-952b-29e202b5c675",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "078fb52b-2734-4d05-933d-2254506a9408"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6715cde2-cdf6-4242-bb4f-5f942e335dac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca86b947-1bcc-463c-96da-091f8a76a6c5"
            }
          }
        ]
      },
      {
        "id": "2d79df72-0873-4751-a269-ddf08239f5d4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "864de342-c276-4a96-9751-7e0bf3a42537",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b84cdfc9-f288-414f-84de-7504ae1af5fc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3a0bf658-28d5-4315-865c-1e6cb4f0b362",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3271c240-3a6e-4175-be3f-6599abb20948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bbf6fd9-62d6-4907-8eac-57c55ecf1f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a48c2e-ff54-40c1-903f-70280d097bae",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35afe9cb-fe47-43e3-b7c8-7f84b81caba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a2649d2-328f-4386-a1ff-3ee0178a6659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f103ff-b3c2-4bed-9228-42b79a3b86d1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648e2ff3-2439-4089-84fd-f4c2bc06c97a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac1bffe-aaea-431a-a280-51c559655720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe3aa2e-defb-4e56-95ec-0941727f44de",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5470755a-2e67-4245-8620-5e3f97885ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6abae634-4477-470a-8f1f-3996e5731d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63ca870-aeb0-4a66-a760-2f629931b538",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4881d60-c878-4d20-bb51-80a313e1bf85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64be4c5-44ff-4ead-a3f4-50efed5d57ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56aa720-ee93-493a-874d-cf7eaf88aeb8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9beef26-f3f3-476e-99e7-52f3e1ed10c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12479cb-13ab-485e-88fa-9ff45c1ac247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eade6b8-af7f-4350-8755-c38ca884d5e1",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e02f7d0-9fad-4716-8475-b129257d537a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc58fc3-d27f-4cc9-a4d5-b0050af51d3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6064d6-5c58-4b18-ad2f-d0a1002877a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3bc37d5-b398-4ac6-9b60-f64cb1baf073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8ac62a-69bc-4f5a-a09f-3ebb910733e1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8698fd-66ce-4507-b6ce-6cb38cc8510f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc7a69c2-5f3a-4350-aa71-f852faf59d73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d15540-7fba-44f2-a6ec-b1bedf72344f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f88135-bc46-4b5b-a913-5b1692764950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb455c40-6e35-4660-ae3a-bc45732d654f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16893c8c-a434-4c85-925d-209fca73e4d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbcd4b6a-c277-4286-9644-de8a13b3adff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d147f274-959c-4ce6-b84e-fe6cc84c1e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35572668-68b9-4bfa-8ccc-147f5c5c02a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02af2c5b-dc78-46c0-9b4d-693e9c67973a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf788e9e-6ac8-4164-ab73-1f7476fdfeac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50c4c956-6390-40fc-915f-5aa9722bce66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bef5946-4f4f-481a-b5cc-6c29e9dafe99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d38ef6ef-c6a8-4283-b678-2d6b3a2f8c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d9d2c4-e04b-4516-a7a6-ab066dec8fc5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1172f6-de2d-4c1d-afdc-30623f341877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1baa8fc2-8a56-484a-8e7a-c7a3758f23e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1891fdd9-9d2f-4d10-a0f6-0028480c85c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb9e197-c169-4f5a-ab19-2b70a070a35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a5edf5-825a-48a6-8ecf-9dba78be5832",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b9225e-6ec2-4df9-82ec-6b13fb563116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b411dc4e-2c45-449e-b0ea-ef6e217aacf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e142803-19dd-45fe-b7aa-fd4325d7ade8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e8759b9-f6c6-49ef-93d2-a840b6755aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dee20da-aed4-4416-9fa3-81b7599385a0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcc02b7-b703-413a-8810-b0be3003bbf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29b62d74-dddf-4f13-a569-ce4dc0d73bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db74250-3358-406c-a261-c1e121f210ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88909f0-2077-4322-b11a-ae587078a7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82606cb1-938f-49cb-ba6c-5078b43d8f22",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9e95b9-23d2-40a5-b3af-eabfbae6750e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c21be2ed-6929-4271-8b30-3a03032eb76d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbd1558-89fe-4dc4-9afd-2ede4d4c021c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "355173e5-aa13-4244-bb36-c3ced1af9201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e7f12e-4cd4-4454-883d-118dca67091a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7027fda6-f3c3-4659-b043-3b9b66e28df3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b329353-d733-462f-a3cf-f96e6c9e9a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bd8495-fa68-4fc0-9967-3f9ac8e0766c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f66c436-902f-4775-94ff-82f534d16910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a27b6d8-c8bb-48b9-95b8-da6e2a43bbc7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a819cd0-80f1-4b4d-aa9d-e67b71841df9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afe6ca58-dbf5-4c40-bb70-d8346d7eb2b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61111243-c4b9-4e16-9994-af9f983d967d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e65a50d-2a59-47f1-b9c0-5c684b386b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf8d32c-d8c3-4cd5-877b-bb00b13f4eba",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e8cefa-7dd3-4586-9415-2ff8930ba41e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c2cc3e-2377-4a68-a1bc-70ff82f80cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68993e2-92c5-4f18-a04a-6ba2bd00c3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35df2a8a-af9d-4a42-b9e0-96979012aab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b072b8-c4ee-42fb-8212-30d7da140207",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5af9a2f-6cf3-41c2-ae67-d29175f6d076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d07106-625b-4985-8d81-e74535d0bf2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a479a9a-cb42-4062-9c6d-948c8d0a89e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4372d061-5347-4b43-8f5f-9f2bc5c4352f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6850deec-be0f-4e83-b588-85a94dfb1c77",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051783b7-e424-4983-b78a-33e5567259a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1538af90-5d2e-4580-b275-c6f2db333c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0d99ab-5ac7-42dc-9ae1-4a60bc7c4fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c539dfc-67a6-4ef2-a710-7c67d15335f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f358861f-c166-4865-9631-27368cf5fdbc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7ce6b5-8699-448a-8d8b-b71f0a51ddda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3f62ff-a167-4e81-84e0-9eb48f39d259"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9244027-ed22-4cbe-b7bc-4a0ab568ad47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5965a202-c026-4d3b-8c99-0bf61158fdd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1549ef-ccf1-4a4a-9f53-5218f8d01d03",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ab5929-9a7d-4327-8ac3-294f896f538f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723b85ae-bde8-4357-a13e-12b266b074f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6428b5da-0b93-4acf-b891-00fbe9c7d34e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05269bd6-1538-4fc6-bdb8-109eb4770160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ab090a-8f49-440f-8b97-aea42a2c9a79",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448fe308-ffd2-494e-93df-70784885cffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c5005c6-2a08-4040-be66-bf51ba9d9b7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6d5c26-ab59-4745-bbeb-b5d4ca65462a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d26086-e407-41d1-90bc-91cbaf04b72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76b1be6-a4a0-4a8d-a6bb-88fe1f9538d0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7ded38-26ce-49b1-9041-4604ff220ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "082fe888-b304-4195-bf95-77fc826af857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca14649-514e-4e07-b4a9-93e6183852ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09545479-8c29-409f-a4af-9ddbba2cc24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8144d4d3-e507-4f22-8230-e2fe94ee5063",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7002632e-c864-41be-b1bd-f97d3e1b1070",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e3ebe00-38c7-4031-9131-988e025b6fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6781822-d5bd-4fbc-a007-8d088d65008e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f619d94-e5c5-45dc-a572-39e86724aba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6328cb9-f330-4bfa-a5b7-16280d44981c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10685bf6-cf9c-477e-a33d-102f215b9d38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcf3d5aa-f41b-45fe-b488-056373e29029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cfe861-a72f-4235-ae6b-2159d085a637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a470c32c-0ef5-4df5-a624-d1ddcf366bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e24df8-7233-4600-894c-712b9a50aa50",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a15a92d-2b78-4c11-9328-d71c057cbee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be9f2e80-a0de-484e-a5cb-482f06e66b03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "990e64cf-4af8-44a1-8dc3-eece82554057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a01abd9-8ea7-4e72-8d27-a2d45764ab95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdeaf762-08b6-4a2b-8e08-189fb317e310",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fcbae0-667b-4140-8778-70719c44f6fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d6efdb2-2f2a-43f3-8542-50aa86a30241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8677e324-04af-4777-96fd-dc292a826773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "445d2d04-77e0-46af-8526-902fc8eb3b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2faab0f-451d-4215-b5b8-0f0bde79f37a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a12495-cfd1-4f44-b24a-def2009b3f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563410d7-8c35-40db-8b64-d165b7db5004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "000cf9c1-ba82-409a-b303-2d10d68bad49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d466d24f-81c0-44a8-8995-cf51a22e9085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4796926-74af-45a0-a62d-d7642dd11ff3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0b5322-e287-4951-97f4-248a49a199d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95116c66-f011-4042-a215-6e6c069a3719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7c2788-687c-4327-bff5-1e4cbb756c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aec3a7f-ce0a-4cd1-98e0-7a7efb8d1662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4bf44ba-d4fc-4369-a1b6-9f949d5ed316",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8a454e-573f-462f-9d44-39a65eb760b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a06c857d-8c21-49f5-9244-62abd209cf13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0137ebed-2e66-4b0d-ae97-09c1b765fae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0da623c-b1d3-493d-b30a-b642256f8912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061d49ee-e77c-4199-9573-857a68f0a780",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56d090e-46cc-4b65-ba8d-aea9110b7446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fcfece2-5515-483e-92d6-99264d18aa61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc64068-15b1-49d9-a3e4-206c7237d7d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e7819a1-1a28-485e-b75d-6a06031e0c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa482f8-1ee9-4962-93a9-e4445ccff918",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687ae0ea-5731-4fc1-b81d-c80fd26bc2d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "551c297e-9541-4058-b456-c3ff7409d76e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb8e265-5cfd-4088-8d8a-3fcbb228133f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf856da6-6887-4a8c-b3c5-8c93581ffff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3149ddf5-535b-4229-b4ff-42926dc13765",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf90d211-296e-4c85-ae96-8d8ba4dfdcd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aeeff35c-a681-41f8-8365-344915b317ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e3a63b-6043-4309-9f1b-b0b6e0fbc1d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d187e59e-7cbf-4692-85dd-5d838a07931b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5222594c-ca24-46ca-9a81-e0dc02166885",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc842dd-02af-4051-8ff7-305ef059fd68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ea9c644-5af6-43a0-af82-ca30b5ea52f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e14f64-fb59-4d1d-885e-4b16f2718c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "288b66ab-a309-400a-807c-af0cbfcd05eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1f3d3c-8d67-4894-a3cb-2bd304a40fc3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd98216-6bd8-44e7-94d1-9f4f06e272f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07681d8-3ff9-4730-a2ba-62f7e3f58d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ca6fd9-0ed4-4e89-bfec-a6176c9a89cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e0e2300-f1a1-4321-aeb9-428dd14a54ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c71fa6-1575-4de9-b664-0ec2d51892cf",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a9fc14-8d16-4be0-b311-e7281c55b461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "053d7577-8525-4d05-afe6-e6f99189bff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4259a5f-c646-41c9-b784-796ef129a834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb82c4af-8958-443c-a37d-08ba6d4a4905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce446eb4-c503-452e-8095-c345c77afe7e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4579a494-d3c6-42b2-88c2-259609afa8b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baeeecff-1ea3-41c0-b226-90b430794cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d76c75f-f759-4f2b-ac3d-8a94d34d6488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554c8a18-69a5-47b8-ab95-fdf8a33add78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1605ffb7-51c1-4ecc-9724-bc818db303b5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f0d000-37ef-45f2-8d7b-6300293c1e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe0922da-674c-45dd-9f48-a04cb0404910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "120689fb-c3d6-485e-8e5e-e28e9aae7f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeef3337-5e05-4c42-a3ac-a7d6e0922949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7ab660-28a1-48c3-8a89-8a07f3b3f322",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00b9c2d-87c0-46d7-b835-4537c93ef0a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978169b5-4259-47a2-882f-7298734ed098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "977fd59b-a0c9-40e5-bd81-cbf5c94a5117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d665e4dc-a78d-46ae-a42e-6b1c3b10be54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278d635f-4d8a-42c9-aa21-ee7fe47cbaa8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba8dcc4-148b-444f-9d9f-9e104132f6fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93500836-4c22-437c-815e-5556d7c0db2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f04faa-5eb0-4396-a8f0-4de33128d41c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86bd424c-0135-4309-839b-1eb961bab71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f165f722-4060-4ca9-a73f-7678962d7c7b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97cdd0f0-64a4-414d-ac4b-4b8791aee402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3187ed04-30c5-4dd9-855a-eaebfaf242c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d8b4ea-eba8-4b89-8050-558cd92a44c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ad992b-7a00-43a6-a3b3-12e981088ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04e6e3a-644e-483d-91ff-34f6c89b9299",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e881ff5-2022-498d-8d82-01bf10636072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ee3c64-bf58-4218-b4e0-54d557382b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7c06c6-490c-42ff-a68b-47827721c4c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e58813e-982f-4680-85e7-6440cda16ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c8a3c2-687a-48df-929d-4c31d44e68b5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010adc29-a029-4d21-81e9-e5aafe833a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5782ee8-9a96-4810-a354-326afbd55f80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41221cf1-3789-40e5-a319-285f6330ef09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbff91da-7009-4140-ae2e-1df847fcc35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fdcf4e3-1cb2-446d-b95c-997dbd3120e4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e672b2-7081-4bc4-95ca-e343421c5794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe789b9-043a-445b-85c0-9e765582c5fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6560ce-3e50-4b81-bee1-90ccb607338e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f494cc44-4fbb-4e97-aef2-0bdf9fc50623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb686bbc-1cf8-40df-abe2-a7e69cbb1f42",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3fe99d-1263-4d42-b365-91092b72c05e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c269ee-684f-46b2-8dc9-0253195e61fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b029d2c6-8cb6-439f-8a06-7dd470a6c3da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b59a60-4dc4-4397-91f9-1feb211be0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7e4d41-581f-48e8-93b4-98d2c16c0bc6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef835dd8-8340-4981-850a-4f6d8572ca1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f4e260-ab47-4191-a00e-fed5ea881f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d0e46b-390a-4ada-87e3-f6a09712c472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685767f1-d44f-4d60-97ba-6d194b53de23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a83e8f-054e-484a-bc79-8c248890ca4e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d6dade-55f9-4354-a6fb-3872296fb4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a652ce6c-d167-47f9-936d-98801cae4b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "756bdd81-0d11-4184-8356-d3f928934f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c957583b-a8e0-48f7-a0a6-39bf6da6dd85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5128e00-e315-4728-afc1-3bb518eafd5f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0aeed5-64d1-4f02-af3a-043132e9c547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353853ea-746c-43b5-879e-b47eb2d0503b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9151ca80-f04e-47ba-825c-3565d1f4948d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2383ff02-d2f8-48d3-9baa-f1c523839943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d140e2-5cc6-4da5-805a-0963c158d961",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5565f940-28d0-4118-9a4a-c5988a3fb078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176bf237-5c2b-4f91-aea6-69e891fc5e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf3b403-5788-446e-ae50-9eae4c0c272e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7a4f37-fa46-4729-9ef9-3be4759af4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5bb408-041a-46ae-970e-b26de88beb32",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d093224-1005-449c-b449-66969774daa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "796c4350-d5ef-4b74-972f-b95f023ab71a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb74ba30-8a89-4d8b-b195-69593409d2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e931bc5-51b7-4176-9c64-bbe241eef035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa067f91-eae6-4510-8e58-c5a0670f857a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfff4e1-2bc4-461e-9621-82c514858af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77a285c4-e0c2-47ad-a93f-6d88f0422915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6aacf0e-b357-4cf8-be26-2d9d578847d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725dc6dc-3ed8-4415-841f-3119aa37eb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e183ca17-8849-4eec-b374-cfd8b6f1a09a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e0ce4d-c430-4541-a831-94ddc70d6e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e5fb80-5b72-4322-aa76-f75eb2f70cdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "101d196d-32a9-4401-a481-ea8fc9d5c54a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b8f718-0f25-4b97-9fdc-5dfda8ff68f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf738e4-b106-4ca6-be65-087f1ddbc1e8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d5d0d1-06cc-466f-9dd1-462ad7c967d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b898b9-cb52-460a-add7-e4fde2e5a2c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ae191e-0c36-4173-9e1c-cbcf48a77539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b63912e-c45c-48cd-9431-df8c07cdce0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89056da9-239c-4153-a32a-10a9d3ff3ec0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ed2f0e-bc48-44d5-811d-552d7c9afd14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5468be67-e128-4207-ae31-98bc7591a461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda0001e-03a0-4f0e-9c20-fa11a8b316f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d29801aa-fd04-4c52-98e9-fcb3c904c0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d29ec44-3ca0-47a0-bd50-83ac86c93658",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dede4343-5d50-4006-b269-0564f67aa891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db1d8312-943b-487e-bbb3-976044d46d71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f983ac41-a0a6-482b-a632-3932b94817d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5922b62-ef92-4da6-a4cd-cfa286ac43c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b643f5-335a-40b8-b42e-1245debe78f4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1495e4-31db-4fd4-9c4a-6ff99156e7ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f6aa1e-7671-4fd4-a164-3017c9e3d140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92c2240-fbaa-40d8-a76f-4de869500aec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de3d5ee-463a-4886-9f39-be3e89230d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9898840d-0398-4ccb-be34-dfa44ccc1d4d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cb3ccf-c3db-48cb-a2f5-22f6bc3585be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ffe3773-540f-4ac5-a8cf-1be5dc3894e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af02709e-162b-4aa8-b072-421b54d7b924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a784211-dee0-493d-acbb-c2b37754bac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2014cddf-2c73-44ac-a7f2-330d02eee2e5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4705e0b6-d32a-4bb6-b323-f604c34b0e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54507e0-d36e-47d6-b612-fe90d7ef5bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "295297d5-215f-42e6-8c0a-556a42299f79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add28351-2fb8-4595-ae4e-197afafd717e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b752482-2dc8-457e-94df-d1b45c0b5912",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0e64a0-2407-45db-8170-03c3362f61b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e203cbd-2589-4857-a98c-3d0590bd35bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a49da2e-7a09-4a57-9690-5ea3ba79ea47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4abdb1cd-1f4f-41d1-acdb-1fa3878de33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6890be-a025-4f0e-9f56-5fa68a9c6a99",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284799f6-9884-4525-ac6c-b7aea20a726d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a40e2f-52ed-463f-95e7-bbdfb776f42d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b8715b-a294-49d5-9450-16d4869230a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9fea69-0984-4cff-ba4b-2d55bd5bccb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c4b30c-ee42-4bfd-9e92-2707544e15cf",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae8ed01-c8c4-4072-a945-5d3640221be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcdcdb9d-904e-431e-8aab-a06a5f94e240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ff243f-1aff-4c5b-bc8b-5cea6d85dd6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa16498-73ec-44f7-a965-beacf928f314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e8506f-b1d7-49f3-bb2f-520ff9089cb7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caef5aa4-7972-449f-b90a-8aa365d94830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef16df5-007e-493e-a3e5-6ca23b544887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7faa19-6d71-43bb-9b76-e1d3497f15ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6979bd-98d0-4126-990f-80d7077205e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2425d3b6-1d5d-4217-8f25-1ab0bc209246",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e1935a-90f2-42a0-84c3-93b59e37ce07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1479230-829f-423e-b5bd-a4ce5740a037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4749fb5f-c08d-46fd-85b8-3507574fde21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf55c2c-bd9a-438b-8365-5aa6b4e0cfe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff13ba94-5ff7-4357-ab72-7124d4d6ace0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048ff24a-d84c-4bb1-9a82-7a5e6c4e61fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a3f9fe2-598b-491f-93ae-105df8575419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f64bebb-2015-49ac-969d-e2539a61a4f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04cd0539-e233-4725-8e39-78e2d5c821e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd905984-76c1-4191-9737-036fb73a2d21",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b220654-4b84-44c1-b88c-60e8b08966d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ff0ae08-1a63-4a1f-82d9-d12a21f24585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e2be3c-a70e-4472-95d9-fee66d91e3cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab259644-7ba3-4d8c-a1ab-db41c9fabaf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602a3719-63f3-416f-811f-ace7931d5033",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e09116f-ec41-44ef-8885-78be91b10663",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9af826f1-ac53-445d-ae4e-98735cf43bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc11c837-2dca-4955-8b7f-bb45c820a76e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06121ba8-081b-485e-89c5-6cb55bd14cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a102d3-b830-4c73-8093-bd965a394224",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2bf599-c542-462f-a686-9277d7017fcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "661b57a7-3fe0-4f70-8cb4-cdfdfbf874e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b785f8-d4d6-46c9-a7df-bdab382869d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f5eb8ec-7e9a-4586-adc5-398b94f8c6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e183b81-f2bc-462e-951b-48ccb5d9608c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5d42f2-a937-47b4-a243-274a199c6cc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cd60957-8513-43df-936e-0e300c2b9e2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4bcec34-10ca-40a9-91ab-99f5e2c2fc44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d891704-abc2-4fde-83b3-6097aef34971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a05afba-c776-49c8-ab07-571405c0dc8c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b9c46d-34c6-4df3-a019-6130ff12bb28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b11a674b-827f-4461-9f84-4d86a071e712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e200d8-61b2-4fa2-980a-4407666a492c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c46b1a-e705-44b1-aa67-9310a5857a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b1b75f-08e3-4d95-acbc-caae741f10a4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2fd977-e4bd-4747-a5e6-16d538fe3fe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85ef586f-63b6-4703-8eac-d053b78e6922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95c8950-dfdc-4432-b10e-771adc506115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a61cc703-fd3b-4176-81ac-62ddb3219db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f75096e-e029-4e70-811f-593d8f35ec0e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6523b0a6-b9fa-405d-8be1-8a4b71ae0450",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2fcfc3a-14c4-4c7e-a11b-d91a1c05ea50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "110f988a-fb98-478f-8bae-09bfb48a935e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc4a24fc-1bc4-4041-8945-9c67cc5cb81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a68b52-9744-4dac-a775-66893d29f586",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de953746-6c30-4d8a-aa79-92a9ffd9d25d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e792dd09-0b20-444b-b348-d24fec1f6eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfd53b9-9392-4dbf-918a-98bd8a52097b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b19051f1-b968-4fe8-bb45-75139b7fc1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e479f712-8a29-4f88-888d-4901a8ef9212",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f629ff-2c38-4245-8b54-1a0acda70c06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9da34c7d-8ab7-4059-bf8e-7a18bcca978d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d597371-cd0c-4a61-a69c-fd359ae2db56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "924d59ae-7616-4074-a849-c834fb2cd0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb8acdb-45cc-4341-803e-47014a9f10ee",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35da98d1-4e54-45ad-b342-de5106515cdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb5d2cbb-4165-40c1-b897-b788d2205211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91baad18-2509-43dd-87f9-ce4fdf3353bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ef02cf3-6351-43d4-81e9-b6a4de829966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab90a063-b58d-42ed-8ee3-b63492484f67",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae25a66-3cd2-4209-8910-1b0031920d24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92167e11-8a37-42d3-a21f-8fbe6ad3fc23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1ac5bd-4691-466c-8ba9-47c454725f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "228eca3e-bfa6-4fdb-9c93-89aed9a281b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348fe156-de63-43ce-9ae7-ee861d7aefdf",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71a3e59-6292-4b43-a369-44f0e4220b85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad1d080e-e2eb-4dc4-ac86-5a320d1e8055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47fe426-8244-4d2f-8ae7-acfcde9554a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ce239c-6387-45ce-9f3d-aef28a15b0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0bc4939-2e7e-426c-a70b-c98117b996e8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223d496d-b276-49c4-a627-bc120d7e85ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c703bab-33a8-49ba-a09b-b2f7b4b21703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0144fa7b-0439-4a1d-b513-61b9ef11e6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf66792e-d811-4828-9c0c-2d5b5830eab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc9d57c-444c-4eba-bf2b-3bdbe5247ffd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a284fa6-f67f-4abe-9d48-9f2f94ae6a8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2d6c1cb-42aa-4527-baf0-9a5dddfd0839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0ee728-8abb-4e41-acf5-09b5ba5d3454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72da4ffc-893a-4204-9210-c8b13ec039a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f713d53-e4ca-48b0-8979-216dd2ffa448",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ca600c-374f-4546-beaa-4d49761ce87b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f560eb08-67f2-42ff-bcb6-30c93c60367c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ca2ea8-5b7d-41fa-a07b-27039c87b414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b54db010-7de8-4295-85ca-b5c97e32f475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681f5944-a543-4990-a6cd-b92a9a4e99bf",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fef37f-b477-4f7c-8001-1b716d7550d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01c40b45-aa55-4cb9-9e7f-c98192950198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72762fb-5d08-456d-91c5-e2247357e5ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff481048-7501-478b-878e-4ee0d314d0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cdeb20b-a522-47a2-9261-cbb03249febb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d997d6-0897-4610-aecf-2d51d4824d33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07077c24-f697-4254-aa77-f3d55b5d963a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b8895c-7047-4d40-ba4f-2d7f7d649954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11522082-5f20-47af-b65e-7e1b552024fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e6b9e4-1e48-446d-8daf-f281ae10142c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d8234f-5e99-49cf-b9f2-a00c3311abc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9b30403-082c-4917-bc68-cbb4edd3bb6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "545d26db-d553-47ab-ab9f-95f0129ed8e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e658f4a-a216-46e0-b9fb-09660f71129d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b444d977-05f2-4943-af8a-e52cf4e1da10",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbba115-978b-4d01-a788-dd2e7be940f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb42a54b-523f-4ea1-859e-e0b09886902b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07ba435-f095-4c41-8651-a504723b9879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3451b2a7-a5b4-4e88-8674-93f5a93eeef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d59642c-d6ae-4562-8231-d225f36e084c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59d8e63-68d0-4d3c-a19d-6eda3fcf3bc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcce6504-89e2-4f7c-b1fc-3d31fd542166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2739c46-7023-4083-8c00-7946372e14ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a2a987-d691-4abc-b66e-ea05cdabcc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ec0112-cb7c-4102-bcd0-5ed5d82f2ba5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ac7fcd-2ec8-4ee1-ba33-5d32dc658b8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b05b642a-6ce5-435f-a977-be06f54ac22d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58de65e-12a6-461f-a160-957d870627df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68688cf0-a549-4df3-8223-878519be4317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc5eb88-75f2-4e62-9aed-532917eedadf",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b69682-8992-4136-8bdb-042af2167c6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70745330-1ff2-4682-87a4-916f65e7391c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2983234-c34b-4a38-b653-63af28591799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310f9e11-0f41-4ef9-b46b-15a79840d836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4d08d6-d723-4a84-a3c4-8affa8c4c00d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e6b48d-c89d-40b7-859f-042b95442a2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e776d8a6-d56c-4d1c-b15d-e51961e3380d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee45db96-0648-43e9-a259-21bea1e4d4d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb3404f-f282-40dc-9f94-2cd2fbac66b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844535e8-feed-4ef2-a8ad-6c012439b9bd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e09f99f-fa52-4d90-9431-56e20e9886a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ddb9c59-3fca-4353-8791-5d5d67d01da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de1b511-7c34-4614-9b94-5586fdbb631f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a73f3c9-b2f9-4003-98ab-57e88dcfda30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b384310-a566-4c04-9062-6551d52137d2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6866405-2ae0-41d3-bd8d-994943e7d358",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47e509f2-565b-493e-8ee8-5fb16d388b62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62347d27-2bbf-4196-9d28-6786f0aa628a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d6beba1-d022-4085-ab67-f7d8f25d6095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543f46b2-34c6-41b5-83eb-5bfde0573399",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01eb8389-1596-4d9d-8afe-76c02110e57b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d764860d-e870-4b6b-93c8-89bc752b6557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89064869-c507-4730-9b32-b6586c031668",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03c55a6-1bef-4161-8758-0a59e723c57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c220f1e1-eec2-40da-8b5b-e171b6471c83",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c99bd3e-cd92-4195-ad73-eb73aab11b42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2039fe9-6058-4ebf-b023-1d9e1ae7e30a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db792c07-15a9-4b15-999a-f2dc85fb5a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d495ce-b04e-4be8-bad3-5addf3f6e509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4289a6ae-2bb7-4807-b24c-eda314fbcbec",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd1e7f6-2267-41a9-857d-3479ebcb607b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0089f2b7-db14-4aff-b503-c3c959b732b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad270538-b2c4-4427-82cc-33f9cd336488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8caa40-6e82-439d-b69f-2c72304c9fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1475f9-1bd4-4ee1-87c2-c50c0bdf0cbc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951d0b97-eb6f-4f24-bd33-6f3d5465998d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "041d27fd-474c-4516-806a-7a8a8879d395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eba669c-d11c-4e29-a89c-44bd09d82d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "457aea55-78ef-444e-8924-cf265b91d000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2289c7a2-8ebe-45b5-bd42-34f021eef14c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c272d61-b230-4e2f-89dc-b6cf1a4cf6e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e055e13a-277e-47fd-ae73-6ea7d007cd40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "924eea66-e7a0-41fe-a9d9-8d523d4df45d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87765bb7-32cd-4ac9-a6ea-512d5d8ab817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d03bef8-1963-4db0-bc0a-77bd847a02e6",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90ad291-d11a-440c-8524-c80d6e1d2bcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f76812bb-535e-4ebf-ba6c-efd8bb6082ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd92f5cb-2ac4-4cd4-8c82-7fcdcadcc2a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28cc7553-d0e2-4818-bcfe-8e98cb3fabc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b0fb8a-6a47-4371-8324-7b0f075c787c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8036dd99-e0a1-4d76-b9e4-830c77dec094",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bb762d3-0831-4dbf-aa21-de30be4596b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb19add-6109-41e3-a632-058dc447e2cb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2562975-52ff-4080-a6f4-8cb78252d10e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be50c92-489a-4e6d-b7aa-70a04eac8222",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cd6322-1245-4fc9-9433-204fd2ad7af3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f558d3d3-a700-40f6-b4e8-63c15ae6398a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c255b4-0e24-4832-ac84-7ec90f0cbdc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e6d6c6-c755-437e-8863-d504e03d06b4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "894689da-339e-4cde-a4ba-af98c2ec2fd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c6ccdc9-1321-4b5a-aaef-79dfe60670b9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df18492c-9e71-48dd-9cf8-17a82122e8dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80de2436-fef7-4f40-9bfa-eb6f501ba379"
                    }
                  }
                ]
              },
              {
                "id": "9c40b1d2-defd-4943-8a92-cc1cc3c499de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "470ca024-4c2f-494b-8bd5-88626368e9f5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b82d55-6594-4450-98c6-34a885233db9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c61d7421-465d-4cf8-94f0-38e4014b0c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5e4972-7522-4399-8309-e950a3717027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4055dca-89c1-48f9-98ac-eec39477f3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c412ca6-98cf-4459-862c-d370ce89003b",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e59129a-4b98-432b-b896-7ea0c8166693",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bb6018e3-dbb2-42fa-881d-66b7aa643943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63de7612-8b3d-42a5-b3b0-9cb31385123e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc4c4cc5-5e94-4ebe-a6b4-00dda9ed17d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6710cee4-98f8-4111-980c-5490cefaff16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c396590e-6ba5-4573-85dd-869847f983e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "53421220-da37-4024-a0a3-ef2245e0e217",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d53b8fc-f2c5-4289-92ac-55f3be25d9a0"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "6a722464-4495-476a-a18b-37bf2d6038b7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "883d0a95-d971-4e42-be4c-20a3cfd63ca1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e0a99c5-c33c-4bd1-b8b3-3d4960341ecb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44fd7a10-d57d-4f37-99cd-5b46414c31ca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18706c92-3858-43a3-8800-92cc1a354540",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94c50436-cb4d-4a14-ab60-0e845c64efed"
                    }
                  }
                ]
              },
              {
                "id": "6728cfdb-d24d-4327-9655-fbb1c6dfb5b7",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93ea1d7d-cedf-48ed-bcf6-34fb237d2007",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e509ffcb-ba3c-4c28-8834-6a4f98ad5d65"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1cbf4f09-f709-42b1-ab99-e0971ad73dc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8fa2621-65ae-421e-90d3-1e43f58eca2f"
                    }
                  }
                ]
              },
              {
                "id": "2713cd17-14db-46d2-b3ea-4d513c877751",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "690d02a6-e254-4b00-82b3-4e5120509e07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ed9c345-2ea8-4ba3-9f2b-be3427e65077"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4314f097-59e9-4675-a4d8-4c92a1a077f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffe6c7aa-33d7-423c-a62b-fcb422fb370c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2964324a-945e-4724-b4ee-594a2097898d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "80ac691e-9fb4-456d-90a7-30e8c3dc2f43"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "efd3d333-22e5-4072-9176-6dca71751af9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9d9e502-ee60-4c3c-b0ec-d63b949168ef"
            }
          }
        ]
      },
      {
        "id": "230e4239-b17a-495c-8db5-29b693473576",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "03fd4c52-0319-474d-9c37-45478e702605",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f22173b-a7e2-4996-976e-8cb63f6b3eba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9064b05-e69e-4986-9a9d-1d1147176aae",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe7b37e-2608-47ce-aa73-45974a74e487",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ba18343a-ab7e-4fee-9b0e-e341a8e76524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc244bad-05df-454b-a0d8-77ded3e42dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39fa23a2-08e7-4996-b71d-6805baf27a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd2c0d1-c7da-47de-8fb9-0f06518813a0",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f48c8d7-3af3-45de-a56b-380fc7577a3a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "508bcfac-a7aa-4f41-9ee8-788b222ce2a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a569f9a-f397-420c-a705-032826edbe95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e48e2248-6915-45ea-aca6-67e223278950"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ecd8e5f-fc9d-431b-b2a1-cbe50a47ed2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "331cff51-6602-415d-b8da-0940d496cd0a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a9c8990-ac85-48a5-86b6-4f6fc7bf0d3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4513c3c6-0a58-4c84-aebe-ddeb4cf91c47"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d75b47b3-d9cb-476f-a9c7-497c68721541",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1636c484-2816-48d1-b338-bf3a2f566cca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b140d79a-b60a-41f1-8932-b5505c0c0337",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04b74d4f-37ce-43f8-97bd-e25dcee69602"
            }
          }
        ]
      },
      {
        "id": "b209b19b-9864-4ee1-94b2-a58a014d00c8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "cd528fba-111d-4f80-adc0-05631caa2b20",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b8cd871-acc6-495b-b31d-23d28b963bbc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "040d19aa-3bbd-4367-a290-bd79e505814d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7ecd1a-dc8d-44ed-9970-dc355d9ae3fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3f6435be-ca10-4cbd-8c59-f2558a1d0ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b077f7a8-2758-484a-88d7-cb932725ef67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a28dc34-6bb1-48b6-bc2d-0bba678a2ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba593a3-27a3-45ac-a25c-50757240f816",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72e20ac-cf76-4b74-995d-6e58778ee352",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "933d3e63-db3f-4246-80c7-5a8456f0c91e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "188498e0-724b-438d-900e-08c7dc38d4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64df3187-213d-48d8-8041-c795ee921a70"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58b71f44-677e-44e3-a082-3ccef3e77c07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d8bc919-43e4-4f33-acc9-cdf1b53ae86d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6402c56c-a87f-4cb5-bdff-59f842b8589e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2538bea5-a6c2-49bf-aec0-9ae5a8e55b70"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00751721-3a1d-41ed-9d78-17ebb4496f6f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8c3e63fe-9b1b-4bf9-958d-07e1c3f10fb2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1cf10bb6-3611-4b61-b943-50c9f0c4467a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d359de45-15b9-4481-b5ef-6b130d258feb"
            }
          }
        ]
      },
      {
        "id": "f5e4e14f-10a1-4a75-96fd-dbac7ac5b346",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "18966cfa-ec8f-4b37-bf26-954be03076ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0703bc06-7cee-405a-9156-371243b27f97",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3e96a05-68a5-4a98-a032-3b11ef232ec8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b0163e-37c1-4afd-aa3e-818bd13bf0e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fac73ff2-1093-4602-9d86-39f1bde4af11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46c3360-1411-476a-b8ed-37c2a50db082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae4c09f0-0e17-4af7-b268-042eb8405776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1386a2-728b-4b45-bd06-bf7b630a8c0c",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98d8e6b-e6a8-47af-b9ef-1b760e057288",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2ac203b2-6688-40c2-ab2b-51c17f870109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c63e57-f61c-4c1f-8ce1-62a5752eb414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14737800-813e-45bf-aa39-389cd6cabbe0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26d69343-0f49-46d7-a83c-099888bfea78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da481ec2-5bd2-4eb6-ae9c-6f4d5300ec88"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2c53081-3a06-4301-8e5a-cec2bb680572",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5135d88-18b3-4278-b5c8-e9c3ec74ce2a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5ceaa29-319f-4549-8d38-5b0930db0bf6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0e1a4281-5c96-4895-8286-3bcfc706d6ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8fe4ee5-85d7-4f98-9601-0ec89e4d75f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ceb3191b-9b60-4eb4-94a3-a7e2c5f92405"
            }
          }
        ]
      },
      {
        "id": "80244824-f35d-44c9-a236-1bad8731ef38",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9187f6c9-8745-4ea2-b451-a157fce8d81c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a035b389-8db5-4cfb-943e-419538be0657",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "53b268ad-3117-453b-9d70-bc79763bab76",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2314255a-efab-45a3-9e2b-e4e3a1016d45",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd26166f-7471-4afb-8bf7-5a0e65914f36",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 505,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 504.96538461538495,
      "responseMin": 15,
      "responseMax": 3367,
      "responseSd": 399.72989288182316,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1667609444286,
      "completed": 1667609587795
    },
    "executions": [
      {
        "id": "5d2b0677-77d2-4d09-a7a5-f10696270830",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8342c85d-bd42-4bce-bc59-cf9014b37894",
          "httpRequestId": "c7736741-c42c-4a60-8b4b-234427d24499"
        },
        "item": {
          "id": "5d2b0677-77d2-4d09-a7a5-f10696270830",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8a2845bb-f494-4922-8322-22fc62f9c2b2",
          "status": "OK",
          "code": 200,
          "responseTime": 106,
          "responseSize": 0
        }
      },
      {
        "id": "782fecd6-65fa-4070-85ee-b066172c2073",
        "cursor": {
          "ref": "b6322188-0588-4019-812c-d40398f0a3de",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "643f362d-186c-428f-84b2-82d8af65f453"
        },
        "item": {
          "id": "782fecd6-65fa-4070-85ee-b066172c2073",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0398d439-a416-4c28-b2ad-1144b07e5045",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "5b50f5c7-312b-4b3c-90fb-a3e258b7aefc",
        "cursor": {
          "ref": "22265bca-e805-43ed-a77d-e5431bfc886e",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f2127d5b-3c93-4d91-9333-90837e6fbe60"
        },
        "item": {
          "id": "5b50f5c7-312b-4b3c-90fb-a3e258b7aefc",
          "name": "did_json"
        },
        "response": {
          "id": "9e3a8a10-0b53-4de8-83dd-67d6e305ae2e",
          "status": "OK",
          "code": 200,
          "responseTime": 1200,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9c3688-de7a-4e00-aab4-acadfd0555e8",
        "cursor": {
          "ref": "4c6e2af9-e291-4d9f-9d68-656daf590303",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "255dc1e2-9339-454d-becc-9a185d2e92f3"
        },
        "item": {
          "id": "ab9c3688-de7a-4e00-aab4-acadfd0555e8",
          "name": "did:invalid"
        },
        "response": {
          "id": "ab8a516e-8c23-4274-b2f3-676375a4833a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9c3688-de7a-4e00-aab4-acadfd0555e8",
        "cursor": {
          "ref": "4c6e2af9-e291-4d9f-9d68-656daf590303",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "255dc1e2-9339-454d-becc-9a185d2e92f3"
        },
        "item": {
          "id": "ab9c3688-de7a-4e00-aab4-acadfd0555e8",
          "name": "did:invalid"
        },
        "response": {
          "id": "ab8a516e-8c23-4274-b2f3-676375a4833a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2dbbfc-51f4-40f6-b38b-06248ce7e6c4",
        "cursor": {
          "ref": "49d33e46-4545-4625-8f1e-09bf3882bfb2",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5352c36d-9b74-475f-9bed-cd0f60469ac7"
        },
        "item": {
          "id": "5f2dbbfc-51f4-40f6-b38b-06248ce7e6c4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "985c71f0-87e7-4948-8eea-b07bdf77f5d0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 544,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58489073-beb8-4d77-b5d3-31d2be4becc0",
        "cursor": {
          "ref": "a4c8f630-ff73-42ed-9e4e-7401c395e01a",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3bdbec01-0628-4c98-b071-80e7e5efd888"
        },
        "item": {
          "id": "58489073-beb8-4d77-b5d3-31d2be4becc0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ff00eecd-8cbb-4e4a-88a7-718e9da612fe",
          "status": "Not Found",
          "code": 404,
          "responseTime": 449,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f43a20c-e74a-44c1-ba15-28b049b96704",
        "cursor": {
          "ref": "18fdb8a3-ad30-49a1-87d1-aba40b62bed5",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4e7f09d2-b9bf-4e94-bcc7-457a1b1962dc"
        },
        "item": {
          "id": "4f43a20c-e74a-44c1-ba15-28b049b96704",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "456ab14d-8ba6-48c7-8d72-556dad9b5ffb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e17269-29d6-43a5-8c8a-f0b40329434f",
        "cursor": {
          "ref": "1b35f295-9389-4059-b31f-51c23b60efaa",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6c269c4b-a35a-4836-8503-7cf864466f43"
        },
        "item": {
          "id": "70e17269-29d6-43a5-8c8a-f0b40329434f",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "8e429ae5-58b2-42c7-a4e5-6bec3dd1d39e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 463,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e17269-29d6-43a5-8c8a-f0b40329434f",
        "cursor": {
          "ref": "1b35f295-9389-4059-b31f-51c23b60efaa",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6c269c4b-a35a-4836-8503-7cf864466f43"
        },
        "item": {
          "id": "70e17269-29d6-43a5-8c8a-f0b40329434f",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "8e429ae5-58b2-42c7-a4e5-6bec3dd1d39e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 463,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d212933-ee17-4abf-a20a-06abb28d663b",
        "cursor": {
          "ref": "eb835036-0013-4f50-aa93-9143e6b3c75c",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7c4d80c9-8cfa-442d-8080-d84274b8686d"
        },
        "item": {
          "id": "3d212933-ee17-4abf-a20a-06abb28d663b",
          "name": "identifiers"
        },
        "response": {
          "id": "ca3170d1-0c37-4061-a322-8ff5449f44f5",
          "status": "OK",
          "code": 200,
          "responseTime": 744,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9991bbc0-4d6c-4bff-b930-048e26df6cbc",
        "cursor": {
          "ref": "07ea1547-81f0-4385-b283-08faa8c4b412",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f7e66310-9702-4048-94c8-03c2ded97496"
        },
        "item": {
          "id": "9991bbc0-4d6c-4bff-b930-048e26df6cbc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "34fc3358-e9a1-40a4-9a5a-8dfacb7ce79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9991bbc0-4d6c-4bff-b930-048e26df6cbc",
        "cursor": {
          "ref": "07ea1547-81f0-4385-b283-08faa8c4b412",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f7e66310-9702-4048-94c8-03c2ded97496"
        },
        "item": {
          "id": "9991bbc0-4d6c-4bff-b930-048e26df6cbc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "34fc3358-e9a1-40a4-9a5a-8dfacb7ce79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3423d4-6b1f-4602-bf30-0352b1323d8b",
        "cursor": {
          "ref": "71000cab-9f5a-4580-b115-5e26d3923dd2",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "35cf59cf-680a-4650-9f67-413d965106bb"
        },
        "item": {
          "id": "4b3423d4-6b1f-4602-bf30-0352b1323d8b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6261dc98-0e8b-4cf8-9726-f2d7d380d91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1876501c-4ab1-491c-86cf-9d2567c6dadb",
        "cursor": {
          "ref": "acaf1e4a-4a42-48c2-becc-266c303b56ce",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3ce2a413-5f4c-455a-ade3-2266ea74f57d"
        },
        "item": {
          "id": "1876501c-4ab1-491c-86cf-9d2567c6dadb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e99bec8c-9842-4097-af2e-38d65fa629b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5cacc06-1a7e-4d8c-ade3-53c1a2552ec9",
        "cursor": {
          "ref": "d1f49211-c69d-4afb-b610-e2945394c768",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "426ea9d9-ceda-42fa-a8a4-b688120cf9bf"
        },
        "item": {
          "id": "e5cacc06-1a7e-4d8c-ade3-53c1a2552ec9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6c76e57b-e0b2-4fd8-b7bb-c11a173405e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa32674e-01f0-4783-b4ca-58b8567f5881",
        "cursor": {
          "ref": "265ecff0-f72c-429f-999f-08443608b630",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c460ceec-169a-40f4-9167-e299bfda91cb"
        },
        "item": {
          "id": "fa32674e-01f0-4783-b4ca-58b8567f5881",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2d35b9b2-7ce5-4757-8f1b-5804ed47e038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cf9a3f-3d77-4558-95ad-5672981977a0",
        "cursor": {
          "ref": "b266448d-8908-41ab-83bd-0a026ba4a280",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f907a6a1-3a05-4e74-b19b-7beafcee0627"
        },
        "item": {
          "id": "50cf9a3f-3d77-4558-95ad-5672981977a0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ed7c1812-428a-4e64-be77-3fb463bbfe35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0287b114-78b6-4319-b517-ee6d082290d5",
        "cursor": {
          "ref": "a019db42-935d-442a-9c6b-675687953d21",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "871541c4-25dc-4fa7-816f-3101f3bb0cf0"
        },
        "item": {
          "id": "0287b114-78b6-4319-b517-ee6d082290d5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f8dad60e-5c12-4c81-9d51-bb64a29e7326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2ac0ae-086d-4ddf-903a-b6880f3c8350",
        "cursor": {
          "ref": "90eaa902-0c8c-4bee-9b33-e567e09ea23d",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "11158cf8-c10e-4b2d-b4e1-fcb3f522d640"
        },
        "item": {
          "id": "4f2ac0ae-086d-4ddf-903a-b6880f3c8350",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6ba346c3-54e3-4c9c-b327-afd5c186c5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508b613d-4aae-4163-a50f-5b73147fcb56",
        "cursor": {
          "ref": "198ab2d5-a067-4b42-affb-e10a0e764cf4",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ee7400de-ca5e-4179-9c31-9a68ade45387"
        },
        "item": {
          "id": "508b613d-4aae-4163-a50f-5b73147fcb56",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ce8dd0c6-fa36-4514-bd83-88f817ea8345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d9ae64-cbaf-40b5-8971-209e4375eb18",
        "cursor": {
          "ref": "cb0eebb9-a9ce-4a9e-846f-1d8dacdd500c",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4705d310-2faa-454e-be6e-a68392f01be3"
        },
        "item": {
          "id": "63d9ae64-cbaf-40b5-8971-209e4375eb18",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5775ab10-0265-4ad4-82f6-e67e3b9aed1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbbab4f-b8e3-431b-a39d-db42bd5e1c53",
        "cursor": {
          "ref": "e2cc79de-68f0-4220-9744-8338944d9d70",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "55fd837f-024f-42dd-9c69-5bbc4b7e702f"
        },
        "item": {
          "id": "dbbbab4f-b8e3-431b-a39d-db42bd5e1c53",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b7d65830-db3d-4f11-a597-3ae703f05b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9e4d7f-c3b1-4d91-87cd-bbc2229d536d",
        "cursor": {
          "ref": "e3f99c41-a30a-47f2-a210-dce0e05883ee",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "33195222-19c5-442c-9c1b-f72ed3e1a5f8"
        },
        "item": {
          "id": "ca9e4d7f-c3b1-4d91-87cd-bbc2229d536d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2008b2d1-00c3-4330-9cf0-cb86e431df5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedb7397-ede5-4983-9115-198fd4579b5d",
        "cursor": {
          "ref": "eb0b19f0-3ae2-4fbb-85db-73159f2d5407",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ec4cb768-81cc-4a03-88e0-3470fe19205d"
        },
        "item": {
          "id": "fedb7397-ede5-4983-9115-198fd4579b5d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ed4b8094-81cd-451d-a050-590ae809732e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c1c035-52bf-43df-88e8-d8bfd8253f7d",
        "cursor": {
          "ref": "98a347ac-6ce7-4d29-8758-b9b208e79c8c",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6cf1a7da-c667-409a-a12a-0169ac6af5d0"
        },
        "item": {
          "id": "e0c1c035-52bf-43df-88e8-d8bfd8253f7d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d4d76990-5294-4857-8d9b-be331a48070e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d745377-f04c-49e2-b358-b8811cd240a6",
        "cursor": {
          "ref": "d3e9c31d-647b-4857-8b89-64c0d1a146a2",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d4143019-9b34-444c-9371-da68346f787f"
        },
        "item": {
          "id": "1d745377-f04c-49e2-b358-b8811cd240a6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a06cfdd7-4862-4ce5-ad4a-0ba29986291e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba83713-7a53-4ff1-a487-9ec8a5898edb",
        "cursor": {
          "ref": "55d0fc0d-6ced-4f24-b686-58aceb57d981",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e6f4099b-6388-4ff2-9f2c-8c3197fcc86a"
        },
        "item": {
          "id": "7ba83713-7a53-4ff1-a487-9ec8a5898edb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "04c858d2-37cb-49c6-bbc3-e1ea21ccfbd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd2bab0-97d0-4788-b7d0-7049bbf7a74f",
        "cursor": {
          "ref": "7d8b72c9-bbe5-4b3a-becd-055cfa481ca6",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "26eb60ca-27b2-4aa3-b8ba-e714b77f72bc"
        },
        "item": {
          "id": "3fd2bab0-97d0-4788-b7d0-7049bbf7a74f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "84b5cd6e-b5aa-407d-95df-09f4722161bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af44ee4-a4de-428e-a016-c0334daff5db",
        "cursor": {
          "ref": "751ca890-c810-4370-85f4-17445378069f",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e75e425a-317e-4377-9d66-1cfe635f71fa"
        },
        "item": {
          "id": "3af44ee4-a4de-428e-a016-c0334daff5db",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "033c9659-6605-4547-b281-43dd88698e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6a42d7-2ca3-40a4-8065-6a0eac09ba53",
        "cursor": {
          "ref": "0576db36-7d89-4269-a1a8-40efa937589d",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6509a30d-0fd2-41d4-90c1-cb68176a31e5"
        },
        "item": {
          "id": "fc6a42d7-2ca3-40a4-8065-6a0eac09ba53",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a1e80572-be8c-4f4b-a8e9-78bb65cbc831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519facf2-f214-484b-8fd4-b35a3b9de16b",
        "cursor": {
          "ref": "1bf8a094-2557-4229-a160-eb101f4bc7dc",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6799f6d7-c1db-4f9b-b8fa-c79783e5c909"
        },
        "item": {
          "id": "519facf2-f214-484b-8fd4-b35a3b9de16b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ed99d263-5f96-421e-b0de-194b0bff203f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d26671-2746-4cba-a9f0-20d692ab22c6",
        "cursor": {
          "ref": "84154ae0-0a57-4044-901d-518546794092",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "552a3594-3e3e-4e11-ac35-b31aa1b31a7a"
        },
        "item": {
          "id": "f1d26671-2746-4cba-a9f0-20d692ab22c6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d45786f9-42a6-4752-9092-dedeeb076119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d90debc-209e-43a3-bd63-c472a81f629a",
        "cursor": {
          "ref": "34c5d3e0-ff20-48d2-9d0a-6a6f026d9a74",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "39be8397-ae0f-4c75-93f6-314a638d5c37"
        },
        "item": {
          "id": "9d90debc-209e-43a3-bd63-c472a81f629a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "023fbbe2-8ddb-4d77-93a9-3899780eb805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882994e4-11be-47b3-8636-904c8db60fed",
        "cursor": {
          "ref": "5bab5034-2c2b-4f20-8018-15c78e655bd1",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "07131578-4be2-4b3d-849a-b40de7617e77"
        },
        "item": {
          "id": "882994e4-11be-47b3-8636-904c8db60fed",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "890e79c7-e922-4961-bb59-fa41850b01f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c1b940-5bfb-4a8a-bca7-6e798fe27cc2",
        "cursor": {
          "ref": "1dbfca9d-e98a-4040-85be-1999eae66129",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "83cc4591-2645-4818-9c8d-59633485ad54"
        },
        "item": {
          "id": "82c1b940-5bfb-4a8a-bca7-6e798fe27cc2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7dcfdffb-89e3-4205-a50b-c137d4759ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1215,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70134253-eae1-4e19-9a71-a352bae99c34",
        "cursor": {
          "ref": "62327b85-b17b-48cc-a1ba-22fe594fd96d",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9fc4b2fb-d3c7-4e70-b442-29f6e8b5e698"
        },
        "item": {
          "id": "70134253-eae1-4e19-9a71-a352bae99c34",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5e6f22ed-86e8-41e0-8551-3250ffa7db0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1282,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfd0b0d-f135-41c9-8df2-a5bfa7e105d3",
        "cursor": {
          "ref": "fc89d64f-4a8e-4b62-b343-131e0a07a978",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3992db41-0681-4329-ab5c-a36f05a14470"
        },
        "item": {
          "id": "adfd0b0d-f135-41c9-8df2-a5bfa7e105d3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4db97d7e-a76e-4f0d-89df-9266660023cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 996,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c11404e-b12b-44c1-9eeb-90af9ae7f3ba",
        "cursor": {
          "ref": "492abd2c-07d6-485d-9fd2-061e9ed1d59b",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d07172e1-ee9d-4a1a-bfe4-5ba4464c4d43"
        },
        "item": {
          "id": "2c11404e-b12b-44c1-9eeb-90af9ae7f3ba",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c1d4fe8d-1222-43d2-99f6-f333b2de3671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1656,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2170fce9-fc1f-4538-b3f9-48fed5ebcf9a",
        "cursor": {
          "ref": "19428477-8bba-4b14-80c9-a13df7ca5920",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "69cc4966-a6d0-4800-b8cf-b296429f4539"
        },
        "item": {
          "id": "2170fce9-fc1f-4538-b3f9-48fed5ebcf9a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ad7b1f93-a801-4355-a8bc-94ef9b2b0577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1042,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52cd23e1-5814-452b-b1b4-e1e119b65be6",
        "cursor": {
          "ref": "b8676912-7ce3-4081-9786-30349f4f3d87",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b18db658-96b8-4a0e-92d9-7eb7e96c833b"
        },
        "item": {
          "id": "52cd23e1-5814-452b-b1b4-e1e119b65be6",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7c8266b6-ddb3-4962-8a6c-562608a67378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 932,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4d842c-79a0-455a-bd6e-9d5e829e76a8",
        "cursor": {
          "ref": "6e416bd7-7604-423e-b97d-aa5c73ce729b",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e273004f-68d6-4004-81e8-59caa0895145"
        },
        "item": {
          "id": "9f4d842c-79a0-455a-bd6e-9d5e829e76a8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5a455b09-dec4-45c1-b67c-62cfc2525540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1258,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7cecdd5-4f0d-43a9-9eeb-5a680894fe59",
        "cursor": {
          "ref": "08250b89-e6c4-49e4-bc2c-b3b36c3089bd",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1bf17336-b8be-4b12-ab9f-4d1c09d65c2b"
        },
        "item": {
          "id": "a7cecdd5-4f0d-43a9-9eeb-5a680894fe59",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "72830309-71e9-44a3-8240-0f159306e992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1348,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c993bc21-6ac0-4bde-a3a2-39326dcaae03",
        "cursor": {
          "ref": "ad0be3c7-e7be-4e84-ab9f-bf3d6f6cfe35",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1a9b2421-af54-4176-ab37-290bf04773b4"
        },
        "item": {
          "id": "c993bc21-6ac0-4bde-a3a2-39326dcaae03",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b105ef0f-4635-4793-bb67-5eb2e21ddad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 975,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08007ef4-b910-4a71-9624-4e38c0eab4cc",
        "cursor": {
          "ref": "37bbc936-66e3-420d-94cb-72e7cf756f7d",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3e313352-0d51-459b-8e81-9f8ec158d2f8"
        },
        "item": {
          "id": "08007ef4-b910-4a71-9624-4e38c0eab4cc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1635e436-7fcf-4659-a96e-3395f5f6ba7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1127,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75922466-8b91-4ceb-9245-57830dde249f",
        "cursor": {
          "ref": "9dd79473-a382-4c88-b82a-23b83909e4bb",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "360f894a-8cb1-4c9c-bead-162a95ae9c2b"
        },
        "item": {
          "id": "75922466-8b91-4ceb-9245-57830dde249f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0f6c76d4-946e-46a2-a435-7d8478c57d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0125236c-4432-42ff-a730-987eda203103",
        "cursor": {
          "ref": "33abfa52-7486-4ee1-acb0-c0bc42eb52b6",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2bc24f22-1c79-46fe-a6c7-ff3a5a1bb7ab"
        },
        "item": {
          "id": "0125236c-4432-42ff-a730-987eda203103",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b5048d94-9f6d-430b-ab2b-e866fbea687f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1233,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a606f6d1-9ad0-42ff-9564-020528b8d9c8",
        "cursor": {
          "ref": "f3dbe8b9-0ef7-4c23-855b-dbc1fdee98b5",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "cbf446a6-3740-4d27-8978-8d10e80a26bc"
        },
        "item": {
          "id": "a606f6d1-9ad0-42ff-9564-020528b8d9c8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4869f8ed-16ca-4e4c-928f-853a2703345f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1143,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778b967f-5fa1-4246-8102-82da12fe36ed",
        "cursor": {
          "ref": "fb155e0b-c68e-4b93-9455-8293cc5d2b1e",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fd825076-1dcc-4723-a3cc-7c14f9f7a207"
        },
        "item": {
          "id": "778b967f-5fa1-4246-8102-82da12fe36ed",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1347c92e-e586-4cb2-a642-9efe4e237d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5110b4cc-dcf4-4c57-b264-2c05f28ece2a",
        "cursor": {
          "ref": "4e7b6464-1c30-475c-9bbc-c643b4ba2a48",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ed9b24ba-bb72-4a2f-bc04-5a53b0880bfb"
        },
        "item": {
          "id": "5110b4cc-dcf4-4c57-b264-2c05f28ece2a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d112fb97-08d3-43ee-af4e-d18c018765fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b756f03b-1d63-4a3a-98d9-1944d02c43f6",
        "cursor": {
          "ref": "e7bc811a-845c-4fe7-9f4e-a183a4ddd8e0",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "46785809-a309-4d22-8c46-6ba532820aa2"
        },
        "item": {
          "id": "b756f03b-1d63-4a3a-98d9-1944d02c43f6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "efe6415a-bdcc-4c74-8166-49b42bde823d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9412fc3-c63d-4c6d-a197-fcf272ee8a4d",
        "cursor": {
          "ref": "4e438d81-643e-4763-a735-0a1f015a3214",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9d8e1cb6-469f-4e92-aca7-2e83fd1e00d6"
        },
        "item": {
          "id": "b9412fc3-c63d-4c6d-a197-fcf272ee8a4d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "baccca3e-8f6f-48d1-98a2-b9e8e8a1d82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a616a76e-b515-4d09-92dd-1aedc1e5887c",
        "cursor": {
          "ref": "607faf13-49d0-4a44-a20d-9124a04a8a8c",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "421f53b0-ef31-4f9b-8571-6c7edb812a9e"
        },
        "item": {
          "id": "a616a76e-b515-4d09-92dd-1aedc1e5887c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5ae0effd-829e-40ea-b158-e6b60bd25531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38349d00-9220-46a3-a13c-67d0bfb371ef",
        "cursor": {
          "ref": "086f80e6-6e2d-4107-b21e-b1eb60751e92",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "67c8c1bb-2b63-4f1d-bda1-ef4e277ac999"
        },
        "item": {
          "id": "38349d00-9220-46a3-a13c-67d0bfb371ef",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6b59f102-a736-4ea5-aaba-1ef6fef1ab36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b62d198-3bce-4c71-a7aa-6e5c61f608cf",
        "cursor": {
          "ref": "f37d6003-1934-4ba4-9325-5bae3b48db66",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1a213f5f-8631-48b7-8cb3-9a7b2994b9d3"
        },
        "item": {
          "id": "7b62d198-3bce-4c71-a7aa-6e5c61f608cf",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "880e91a0-a094-4306-bf40-628ab4cff4c6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 472,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b5bde3-d2cb-4fd3-b370-a6f9481905fa",
        "cursor": {
          "ref": "bf49bbe8-b7f9-4fa0-9bf7-1efd394797cc",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fbba4f81-5506-40d7-bb65-6a4b454f525c"
        },
        "item": {
          "id": "12b5bde3-d2cb-4fd3-b370-a6f9481905fa",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "27df530c-746a-46f5-beb6-d2b7c99646df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d2b1e3-5f15-4688-83ca-3ae48fead8da",
        "cursor": {
          "ref": "2ced4ef7-2cf4-477a-a2be-2529101baaab",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "54213a44-4c26-45c1-9dac-03e7165ec7f2"
        },
        "item": {
          "id": "d1d2b1e3-5f15-4688-83ca-3ae48fead8da",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5e497dba-8dc0-4b5b-b189-e1d785376f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583f2a90-d8df-4c68-adff-8830928ce5c4",
        "cursor": {
          "ref": "35c35406-93a6-46de-9d1f-bef3b2f75155",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "00edcf0e-b00a-4e42-a5d0-b09f53ba0f14"
        },
        "item": {
          "id": "583f2a90-d8df-4c68-adff-8830928ce5c4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b71e9b94-dce5-4338-8770-ba56b04b17ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b627822-1bf5-41d7-b4df-3ed53001c892",
        "cursor": {
          "ref": "52a8ff6d-e9de-4f94-bc23-d0afde5532e3",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f0c58c48-efd3-42dd-a2bb-bc7ed2e8f27c"
        },
        "item": {
          "id": "6b627822-1bf5-41d7-b4df-3ed53001c892",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "78342303-3631-4f44-b6d6-b5829fe68886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b828a5-ec3f-46df-95ec-34dcc6f65738",
        "cursor": {
          "ref": "8970813b-eb88-4c0e-85f6-0184826c1b17",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "05268d8a-fb35-4b24-8263-a4c86f490d3b"
        },
        "item": {
          "id": "45b828a5-ec3f-46df-95ec-34dcc6f65738",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ef150724-e93c-4e4e-8a07-ac37e227a96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9576622-aa9e-4460-bc28-e2c82e2cb9f2",
        "cursor": {
          "ref": "5bce54fc-59ff-4690-ae92-60df80849eb9",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0bda05fe-9db8-494d-8fb6-e24ebc7676f7"
        },
        "item": {
          "id": "a9576622-aa9e-4460-bc28-e2c82e2cb9f2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4b640b8a-8829-42b1-99f3-7d84fb551a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa741497-57d3-443d-9732-141a556d8fa1",
        "cursor": {
          "ref": "8879d2aa-70bb-40dc-ad78-a7f1f6267573",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "dd25e900-5942-4cc1-9433-36961628e613"
        },
        "item": {
          "id": "fa741497-57d3-443d-9732-141a556d8fa1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "78be14ee-4707-4a32-94e4-a05a4a6c0be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df99913-1c20-4a55-993d-227ebebd51c6",
        "cursor": {
          "ref": "e626fe4d-da65-4420-84dc-a669f5885de6",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cd7dbf08-3daa-4b67-b39c-f50e4fed40e7"
        },
        "item": {
          "id": "0df99913-1c20-4a55-993d-227ebebd51c6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "14b32f90-2bfa-413f-a140-450006648310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846a4726-98da-4c31-aca5-d4dabb27f7d9",
        "cursor": {
          "ref": "acae3551-c1cf-4314-8a8b-bf762d233fc7",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f38aabd4-7ba8-4ced-aef0-95f615a19bc7"
        },
        "item": {
          "id": "846a4726-98da-4c31-aca5-d4dabb27f7d9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6dd07439-2f3f-4ba2-b766-7a4e6548b76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c20667-2fcd-47ff-ba08-ebfe6c45bb96",
        "cursor": {
          "ref": "9cb915cd-89b5-459a-b799-a01ac4ec143f",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fce8746f-0e8d-4fe9-9bcf-0bc8692601da"
        },
        "item": {
          "id": "f7c20667-2fcd-47ff-ba08-ebfe6c45bb96",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "905c54ab-4851-42dd-a03f-5916e4c0a863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a8cad8-7287-4d29-9348-cdde911dbd11",
        "cursor": {
          "ref": "520a7853-7cd9-41b9-90c1-1fc41c0fedd2",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d94f3798-0775-44e3-8758-1da221242f46"
        },
        "item": {
          "id": "75a8cad8-7287-4d29-9348-cdde911dbd11",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "baa9ac64-5dd9-468f-a7a6-f66772345736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84fd555-c8e1-41ae-aa03-227c2a1daa83",
        "cursor": {
          "ref": "3c90aa47-b16c-4689-a252-968675f1b68b",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "be93b547-5f60-42fe-9fcd-e9aeb71efbb2"
        },
        "item": {
          "id": "b84fd555-c8e1-41ae-aa03-227c2a1daa83",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2fc967c8-d416-4dd9-8b2a-c0d05f3bb4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e0b5f6-e8b9-45b9-9137-bbd5f5f8f31e",
        "cursor": {
          "ref": "a4f318c9-6199-4f69-8543-c64b0606adcc",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bc836b0d-6a10-4e24-855d-e9ec4d3a56ad"
        },
        "item": {
          "id": "a9e0b5f6-e8b9-45b9-9137-bbd5f5f8f31e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3905d712-3851-4bb6-9fe9-5012ac1478bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3dfd2e9-d9c8-49f8-ad77-3bec41aa996f",
        "cursor": {
          "ref": "f7a55c4c-5967-41e9-9bf0-3f6500db8158",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "396db72d-a674-4528-877c-8b7067d7f99b"
        },
        "item": {
          "id": "b3dfd2e9-d9c8-49f8-ad77-3bec41aa996f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "21045051-6a14-4713-a63e-8d8780f9abb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd00ad0-c243-40c4-8add-036d637b06cf",
        "cursor": {
          "ref": "0238a00e-55c5-4e86-ae3e-4f236d5953ad",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "dca12283-9b36-4e63-9e37-ce69fefbd259"
        },
        "item": {
          "id": "ffd00ad0-c243-40c4-8add-036d637b06cf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c1fa9743-f01a-4cfb-b7bf-8ff7af46c96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e0f95a-b8ff-4e36-b4f3-e611366abece",
        "cursor": {
          "ref": "f9774ce2-49dd-479c-a26b-d0b35556514d",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "87410dae-4a7d-408e-9a10-5f74c9bc2228"
        },
        "item": {
          "id": "b2e0f95a-b8ff-4e36-b4f3-e611366abece",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "eb5c7998-a063-48a7-b492-ddfc8fa3a0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c01776c-092c-406c-b532-d7813f1ba92c",
        "cursor": {
          "ref": "a88e94c8-2181-4f78-ae4d-5572f08e60a1",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d9e2ee72-3e59-487b-9b21-79a8353022c8"
        },
        "item": {
          "id": "2c01776c-092c-406c-b532-d7813f1ba92c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0f916754-0006-445e-911f-e6b6b2bfa4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755e1db3-235e-46a2-8a49-dd2c353e7c49",
        "cursor": {
          "ref": "61431ba2-e6f7-42d2-a02c-b288a0b0be8a",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "493f08f1-a278-4aa7-8888-9fd39a8cda51"
        },
        "item": {
          "id": "755e1db3-235e-46a2-8a49-dd2c353e7c49",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b7f5fb78-d890-4b4e-9bb0-6a6514a90d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c635abdb-eb51-45f6-9853-612e1f59e146",
        "cursor": {
          "ref": "28f65ec3-ec27-48fd-a545-e45122345459",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6255d1ab-be15-4233-aec7-41e6d617dd49"
        },
        "item": {
          "id": "c635abdb-eb51-45f6-9853-612e1f59e146",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6a4a1949-9adb-4a7e-9c42-04ae5c1d1eb4",
          "status": "Created",
          "code": 201,
          "responseTime": 2051,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "470f57c5-52b6-4a12-9964-5fd443870146",
        "cursor": {
          "ref": "beafa8db-2646-42f1-af5c-f8ac40ba0e9c",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b1b26695-8569-433f-abd4-69e29aec08e7"
        },
        "item": {
          "id": "470f57c5-52b6-4a12-9964-5fd443870146",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a4d309f6-c1f4-4e2f-9fc1-89541a7b9df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7862344-fdee-4144-a0db-df081ccf73a6",
        "cursor": {
          "ref": "a78d8d42-2663-4e43-b852-790735bfdfce",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0d0509dc-56f5-4b2c-a173-a1cb37e4da33"
        },
        "item": {
          "id": "e7862344-fdee-4144-a0db-df081ccf73a6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "516cc4c0-993e-45c9-88cd-07903b03f8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b05d20-a928-4d2f-9561-c28358b44f2c",
        "cursor": {
          "ref": "65ad4d9b-37b5-40ef-9e4f-0536203eee83",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "897d22cc-0710-4418-b944-ac9008078ec2"
        },
        "item": {
          "id": "f2b05d20-a928-4d2f-9561-c28358b44f2c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "862ed3d6-38ad-4350-a1f3-2096e026ba79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df554433-9509-4b68-85ba-889070336930",
        "cursor": {
          "ref": "1c4290d7-16de-451b-8ea3-a0bb055e783e",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3a3cbe5e-ecaf-4b92-abfc-f28596709e0b"
        },
        "item": {
          "id": "df554433-9509-4b68-85ba-889070336930",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3aa2308d-38ca-4b32-856c-644c348dfc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63452178-41cc-4f94-a6a0-f7051799e4b9",
        "cursor": {
          "ref": "3e218cf8-68f8-4485-be42-c17e4fbed939",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2b82f3a4-dc05-4192-b8de-1697821d4ffd"
        },
        "item": {
          "id": "63452178-41cc-4f94-a6a0-f7051799e4b9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8610fb4d-c9b6-415b-891f-e5b2cb120e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26eba71f-d48b-4f3c-9e57-005ff8085775",
        "cursor": {
          "ref": "e5144226-0ffe-4e04-92f0-a511d04c7b83",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e9ec5423-ad6a-4053-af1d-9f3292e01d15"
        },
        "item": {
          "id": "26eba71f-d48b-4f3c-9e57-005ff8085775",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "27e2ac74-9491-4c8c-b8fb-080571bf18eb",
          "status": "Created",
          "code": 201,
          "responseTime": 1989,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "433d2112-5c47-49f9-81dc-caa984a727ab",
        "cursor": {
          "ref": "a8719a86-6f4c-43f6-a8ce-8970a4968ac5",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fd311592-10a5-47f9-8585-fa34fb291b22"
        },
        "item": {
          "id": "433d2112-5c47-49f9-81dc-caa984a727ab",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "da620f0d-0e63-4ec3-8c2c-2aba97f8946b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff9f98d-4c3b-465f-9934-c402d59bde0d",
        "cursor": {
          "ref": "b75129af-3fdf-4274-95da-8d7968fde2d5",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "972bca77-a689-48e1-9864-d79493988a35"
        },
        "item": {
          "id": "2ff9f98d-4c3b-465f-9934-c402d59bde0d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "cd417683-a2b6-4201-a823-b6e45512f1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf76b95-af5e-4c93-a0ed-05beed829efe",
        "cursor": {
          "ref": "d17f3243-b8e5-48cd-b4ac-736e9f4b885e",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "da5aca42-c4c6-4778-9674-595dda7bdc63"
        },
        "item": {
          "id": "faf76b95-af5e-4c93-a0ed-05beed829efe",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c035d481-d7af-4808-92eb-edd3817302cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571f815f-63d3-47ed-a7b5-3ab7769025e6",
        "cursor": {
          "ref": "f2eb4521-614e-44c8-81d7-85f31d6229d5",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bff9c10a-677c-4a97-bc9d-09f143020950"
        },
        "item": {
          "id": "571f815f-63d3-47ed-a7b5-3ab7769025e6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d17eabac-e14a-40eb-a072-6206bf7ebd9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00a66ed-a0a0-4d41-8880-a3d5c5553b98",
        "cursor": {
          "ref": "811d5081-6225-4b67-9ab8-92f08d47bc81",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6e9d347d-98b1-4db8-a143-ee527121d69a"
        },
        "item": {
          "id": "c00a66ed-a0a0-4d41-8880-a3d5c5553b98",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8ca31b6f-56d2-4317-bc8b-9d3bdc44fcb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2385204e-b49b-4123-98f5-7fd61ab6bb3b",
        "cursor": {
          "ref": "9b484ec2-32fa-4b7f-9354-9ba4e221948d",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5a468ef6-e903-4950-a933-5a7737003cae"
        },
        "item": {
          "id": "2385204e-b49b-4123-98f5-7fd61ab6bb3b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "23c18a44-44f6-4825-96a0-38abfb475938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804d56c4-c52d-459b-9aa3-2b66635104e4",
        "cursor": {
          "ref": "e79faa9a-2122-400a-b122-012cdcda16da",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5b6e6c12-e6ca-4a81-9f2e-1dc1776a13d0"
        },
        "item": {
          "id": "804d56c4-c52d-459b-9aa3-2b66635104e4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1b5c5638-f452-410d-9a81-8d234b941a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff37ea5-014e-4df0-9440-09e54665caee",
        "cursor": {
          "ref": "193f484b-7751-43dd-9d35-2e0b8a009f9d",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "58431d89-5c2a-4c25-8eb2-0004efe4a0f0"
        },
        "item": {
          "id": "6ff37ea5-014e-4df0-9440-09e54665caee",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a9e59436-06e4-4d46-b8c3-f6b65aa562e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bf5673-10f5-41db-a02a-d6b98bcf121c",
        "cursor": {
          "ref": "eb1c2891-1420-4704-b96b-4ff79fef3ff7",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3893c96b-ac75-4878-89d6-d3fc85ae86d2"
        },
        "item": {
          "id": "73bf5673-10f5-41db-a02a-d6b98bcf121c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c57406dc-386e-491c-a27b-5f9ce0f16489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62eb7754-e02d-4f42-9c33-87f3425ae827",
        "cursor": {
          "ref": "8a8c05fa-a80a-4e16-bed6-c53c3f44efde",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3f9b72fb-e454-4250-b416-71f93f13b954"
        },
        "item": {
          "id": "62eb7754-e02d-4f42-9c33-87f3425ae827",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "adbd764a-cb72-4083-9b14-caf0712cdf89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e45cf19-082a-4e42-b973-7be782a49fe8",
        "cursor": {
          "ref": "e7d14e25-728f-4813-b845-e6f18075ffdf",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ab6e61b3-1d0b-4420-b5a6-3311756808cd"
        },
        "item": {
          "id": "2e45cf19-082a-4e42-b973-7be782a49fe8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ae0fdf11-cf01-4c75-bc9e-1ebe387d7a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3c6ca3-d6d5-401e-b087-2d2612a19ed9",
        "cursor": {
          "ref": "94c3d26e-6663-46a9-aa02-11f5983d88f1",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c0743898-02f5-4aac-9686-7d370ea57362"
        },
        "item": {
          "id": "3a3c6ca3-d6d5-401e-b087-2d2612a19ed9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "bba83796-3bf7-4a31-8334-fe2be5a3a909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbce15ff-3d16-4e29-b0b0-a71f0cfdcada",
        "cursor": {
          "ref": "4e9058df-95f2-4edb-ad16-7fb574747a97",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3ae73c7d-1cd4-4b26-85d2-7f34cb259fe3"
        },
        "item": {
          "id": "dbce15ff-3d16-4e29-b0b0-a71f0cfdcada",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "155e8fcb-4d29-464d-8385-4e4494c63895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca8a0a7-e9c0-48b1-a3cd-ef45b7b88da3",
        "cursor": {
          "ref": "60434c98-3cb9-4c20-b071-307f1afcb37e",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5a803479-58de-47db-b301-2841c15f6d85"
        },
        "item": {
          "id": "7ca8a0a7-e9c0-48b1-a3cd-ef45b7b88da3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "793a8769-ed59-4b33-80c7-04435ffc55f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d42f519-be6a-4533-8325-bcc42ad37d08",
        "cursor": {
          "ref": "aa7d10fe-fec6-46aa-8917-262d6e9aa794",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1cb4412c-6693-40e6-8466-833014851155"
        },
        "item": {
          "id": "0d42f519-be6a-4533-8325-bcc42ad37d08",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "84fefc03-5953-4dd2-b812-6355fe64ed8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0227c73-407f-4464-944f-e3fca7686c6a",
        "cursor": {
          "ref": "9d76c1b9-48cf-4f29-9cf4-6ce53d053490",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1ff8b751-4902-484a-970c-3a2e95fc2525"
        },
        "item": {
          "id": "d0227c73-407f-4464-944f-e3fca7686c6a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c886def2-83a6-42ac-92c5-4009d6df65e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6313e6a3-ffe1-463a-a26e-27348f37c68e",
        "cursor": {
          "ref": "9ca7f069-7629-43fd-9f37-8698be102161",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e4a039fb-ce70-4244-8cba-8c5580c1d51f"
        },
        "item": {
          "id": "6313e6a3-ffe1-463a-a26e-27348f37c68e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "535926f2-0ead-445f-a2bc-27127a23fc51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165fe38b-09be-41e8-b8d9-0907a69bbea8",
        "cursor": {
          "ref": "02d0f870-3ba4-4462-acd0-5f41beb73b1d",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "84fe5cfe-6066-47b1-9837-91d31ab0306f"
        },
        "item": {
          "id": "165fe38b-09be-41e8-b8d9-0907a69bbea8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "dec21e74-6598-4efa-be7b-7188553a3c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb95f6da-31b5-427e-858d-aa0a5dad2fa7",
        "cursor": {
          "ref": "d2f34bea-2cc6-4f6f-8e3e-938853b49935",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4f49c11c-b5a2-4de8-a5b7-f557c1ce087a"
        },
        "item": {
          "id": "fb95f6da-31b5-427e-858d-aa0a5dad2fa7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "05f10264-5fbb-44d5-9831-e7ad8b5eb56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6238a57d-be39-45c2-8da0-98eda11f33f0",
        "cursor": {
          "ref": "02f2bbc2-1032-4e25-91fa-d3176969b600",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "78eb9cb6-c15b-4256-a9ae-04b15b4cdffe"
        },
        "item": {
          "id": "6238a57d-be39-45c2-8da0-98eda11f33f0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b14f072f-5e94-48ea-845f-01132cd798a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3501d76d-937b-4310-b8c0-61cf7b435497",
        "cursor": {
          "ref": "a2181f1c-7de8-4b6a-968a-545d857525d1",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fe5c1823-2635-4860-bd70-a12cf2a1ca46"
        },
        "item": {
          "id": "3501d76d-937b-4310-b8c0-61cf7b435497",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "15f35d90-bc5b-4949-8354-5898d7308183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb93328-2896-4d43-aa91-c0e778768264",
        "cursor": {
          "ref": "87ce0ecc-670d-4632-bda4-1aafae354b49",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "51058fc5-1485-4d26-adc2-29811a33d6d6"
        },
        "item": {
          "id": "1bb93328-2896-4d43-aa91-c0e778768264",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "20e2b635-9306-4b2d-8494-df963d889577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca29004b-3e41-4df8-8729-44506436bb1b",
        "cursor": {
          "ref": "e5d9fb1a-48aa-4618-a4e6-ff471bda9182",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1343799b-051b-45fb-a512-63d90db3d281"
        },
        "item": {
          "id": "ca29004b-3e41-4df8-8729-44506436bb1b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5a5055a8-ad2f-4a0a-8a3f-70dd933538ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d993e66-0556-4e10-8686-edef8b4e44d8",
        "cursor": {
          "ref": "286c6e8e-03f0-4873-b800-1089cc9c1bad",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3c81f42f-ba60-43ac-a60b-2a167ade0c34"
        },
        "item": {
          "id": "2d993e66-0556-4e10-8686-edef8b4e44d8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b8808208-57aa-4c80-b36d-10718c97495b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d58f68e-3c40-4b1e-ad95-06fa8a35f8cb",
        "cursor": {
          "ref": "6b3038de-086b-4380-a591-8888f0e4832f",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bdd16718-4a49-44aa-a362-8518c09cf983"
        },
        "item": {
          "id": "7d58f68e-3c40-4b1e-ad95-06fa8a35f8cb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7a8a8744-c889-4f3e-bb2e-8eac35264118",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5273461-8b46-41cb-bdf3-e47b4f51ff8a",
        "cursor": {
          "ref": "0e857e66-b19d-4798-93e7-e9afc92b611d",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4553267f-2d57-491d-8574-3f97ded782eb"
        },
        "item": {
          "id": "f5273461-8b46-41cb-bdf3-e47b4f51ff8a",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "d0c7370e-a153-435b-9bd3-3e9bc2120ca1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 464,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3da4230-0622-4a67-ab78-f8a6d25f9055",
        "cursor": {
          "ref": "a7bd3866-9eee-4f48-b40c-c3c10fa010c9",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7ce0e6da-06ea-4e09-8688-71c7ebdeb1df"
        },
        "item": {
          "id": "f3da4230-0622-4a67-ab78-f8a6d25f9055",
          "name": "credentials_issue"
        },
        "response": {
          "id": "282a9e8b-c452-4130-a6b4-e9433eb79dac",
          "status": "Created",
          "code": 201,
          "responseTime": 1819,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ed738c-3784-4add-b861-9bf188fc43a0",
        "cursor": {
          "ref": "e0cf9a40-23ba-483e-93c2-35de17c12867",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "40cf7de7-dc2f-428a-b99d-207d59694fe2"
        },
        "item": {
          "id": "f5ed738c-3784-4add-b861-9bf188fc43a0",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "5faaddba-533e-4375-a095-fa5f43a17266",
          "status": "Created",
          "code": 201,
          "responseTime": 2027,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22dc521-6ba6-4284-9020-2e1c016dd654",
        "cursor": {
          "ref": "6bac0eab-6551-4c15-be5b-b06439d69d6f",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d79218af-e465-4ff1-85e4-906349abdd2e"
        },
        "item": {
          "id": "c22dc521-6ba6-4284-9020-2e1c016dd654",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "174b62a5-baec-49dc-8359-d8fcedf5f4ec",
          "status": "Created",
          "code": 201,
          "responseTime": 1921,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "455c3d34-7056-4be8-bba5-58813d35ab01",
        "cursor": {
          "ref": "bb3aaac0-6444-4755-a7c2-2682adb418f1",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f5096fb9-c068-4d82-a7d3-7e9e6fcd535f"
        },
        "item": {
          "id": "455c3d34-7056-4be8-bba5-58813d35ab01",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4b64a0f8-b5cb-4686-92aa-66823d75d8f3",
          "status": "Created",
          "code": 201,
          "responseTime": 2036,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c325edd6-f3dc-40b9-bb30-b5e5898b956c",
        "cursor": {
          "ref": "47af575a-8d47-4b91-8897-40e262b42734",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "79c312d8-e81e-436e-b9fd-10f4fa1b4acd"
        },
        "item": {
          "id": "c325edd6-f3dc-40b9-bb30-b5e5898b956c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "93081f9f-057d-47c9-b333-fce90c647a34",
          "status": "Created",
          "code": 201,
          "responseTime": 1784,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8645bd-a975-49b6-81b1-e80551431af0",
        "cursor": {
          "ref": "902450ce-eb23-4b99-b1c4-6ff049d6104c",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "63e80608-c532-4c2a-82e5-b65f8ce6089c"
        },
        "item": {
          "id": "2b8645bd-a975-49b6-81b1-e80551431af0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "df4872d3-cff1-4b3f-bf03-7cd641fe3bcf",
          "status": "Created",
          "code": 201,
          "responseTime": 3367,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fd5f2a-1ad5-4429-ab8e-e3acafa0ec0b",
        "cursor": {
          "ref": "c1fc96a0-3429-402b-8a75-b1f3c64c8795",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6bf3cde4-a272-4fdf-8394-0c39e20af0c1"
        },
        "item": {
          "id": "d9fd5f2a-1ad5-4429-ab8e-e3acafa0ec0b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3e888cd9-25f2-4cab-8a3b-5d55c833fce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 959,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fd5f2a-1ad5-4429-ab8e-e3acafa0ec0b",
        "cursor": {
          "ref": "c1fc96a0-3429-402b-8a75-b1f3c64c8795",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6bf3cde4-a272-4fdf-8394-0c39e20af0c1"
        },
        "item": {
          "id": "d9fd5f2a-1ad5-4429-ab8e-e3acafa0ec0b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3e888cd9-25f2-4cab-8a3b-5d55c833fce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 959,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98744eba-7867-4522-bdbf-2c8df2b42a8c",
        "cursor": {
          "ref": "4ad2d0b3-5a0a-45c3-a138-a4cfe68fe9ae",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b1f2ba58-9055-403d-851e-21c46cd11624"
        },
        "item": {
          "id": "98744eba-7867-4522-bdbf-2c8df2b42a8c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "053b8a96-2b9f-4e36-a0db-876d74941164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 929,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92568c0-592b-4e7c-9afb-063539335491",
        "cursor": {
          "ref": "9fbfd7c8-165e-464e-af85-7ed2b1dd22d3",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "40848dfc-229f-4827-9d2a-96d12349b3eb"
        },
        "item": {
          "id": "d92568c0-592b-4e7c-9afb-063539335491",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f4c2cdd0-49cb-4d88-9ce3-466d1a57b720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25724698-1830-45ec-904f-9b46dd9cee33",
        "cursor": {
          "ref": "ced55528-d30c-43c6-8d63-459c7a2060d1",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "32aae070-0a8d-4eca-802f-ddcbd3d558a5"
        },
        "item": {
          "id": "25724698-1830-45ec-904f-9b46dd9cee33",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7042a85e-ad96-4b54-985c-0bfaf7fd2093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 880,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725c395b-c6e9-408b-818a-e62dcfa2358d",
        "cursor": {
          "ref": "616d5575-b93f-4ec5-95b8-23d76b761858",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "cd458cd2-6ce3-4a7b-9a53-6fef928d592f"
        },
        "item": {
          "id": "725c395b-c6e9-408b-818a-e62dcfa2358d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a8584b21-6973-45ca-b328-beff9c3fc9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0e1dd8-81df-491b-b440-c446fd5d607a",
        "cursor": {
          "ref": "5ba90983-de12-4185-b5a3-820d0dfe82ef",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "18dd5688-1703-4be7-9585-9a6b28cee065"
        },
        "item": {
          "id": "8e0e1dd8-81df-491b-b440-c446fd5d607a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cca0e5c6-5162-4d01-a0a3-edfe46a3c26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b2a651-c02a-4c88-b3b5-9b6d6ea644f6",
        "cursor": {
          "ref": "e4b2c74e-29ae-4892-8fc1-39afde327a64",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "559f3016-ef38-4cf3-b309-50f4dfe17d3b"
        },
        "item": {
          "id": "97b2a651-c02a-4c88-b3b5-9b6d6ea644f6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "16a68f89-2376-4638-b76b-6b8ae916b415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8df3a0-c955-4754-bb8d-c1ba65f83a55",
        "cursor": {
          "ref": "4da5567b-ffbc-41b3-b9a7-769c16de5ba7",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "90e685bc-dff6-4fad-9f96-f40bc72b52ab"
        },
        "item": {
          "id": "2a8df3a0-c955-4754-bb8d-c1ba65f83a55",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "682dd45f-be98-4f84-83be-173150f02727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deff2741-9d53-4afd-8e1f-b58db33e2cf1",
        "cursor": {
          "ref": "7f9cc5a6-d868-4d9b-8f8e-d737e91f3754",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "74e59c2f-b051-4a44-9790-e51292fd692d"
        },
        "item": {
          "id": "deff2741-9d53-4afd-8e1f-b58db33e2cf1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2a410dd0-317f-480c-a03b-7b39884154ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3be013c-eabe-41ed-b644-b14876d6ee90",
        "cursor": {
          "ref": "14b50dfc-0922-4eb8-847a-5dbf1f09c4bf",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "adbce432-3f5c-4390-85c5-80a527f0d6ad"
        },
        "item": {
          "id": "f3be013c-eabe-41ed-b644-b14876d6ee90",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fb1a3c2a-c343-40d8-8573-6101e8face8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dcc5739-0fb9-4d57-8f31-ae55309046d9",
        "cursor": {
          "ref": "0cfdf73c-dac8-4f99-80ba-9759b55123a9",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f2671817-c2d3-45df-bdce-3f7b3b15eeb3"
        },
        "item": {
          "id": "8dcc5739-0fb9-4d57-8f31-ae55309046d9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "89733851-d13a-4d91-828e-912c1ba35ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d1956d-ea93-49fc-9bb9-3ed82f0ec682",
        "cursor": {
          "ref": "978991ad-9616-4c30-961b-788374a3ad3d",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "02453ba3-2038-457f-9303-5e6373a54d3f"
        },
        "item": {
          "id": "37d1956d-ea93-49fc-9bb9-3ed82f0ec682",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5f025c91-8b87-4762-8b61-65255e3e5b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3e34f9-8e23-445f-88a8-2e7d932d0274",
        "cursor": {
          "ref": "2c1934f0-b02c-4943-921e-fc50196e3a27",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7f096e5c-e682-49fe-af8e-4c87c0263d14"
        },
        "item": {
          "id": "7d3e34f9-8e23-445f-88a8-2e7d932d0274",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7777c0d7-9451-490e-89c4-bee7d0731865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f80ef2-c063-4b95-b125-82894849a097",
        "cursor": {
          "ref": "70d754b3-c544-4980-bcd8-9678577c520c",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "43cda2e3-7064-4887-a2a8-efd0df52e909"
        },
        "item": {
          "id": "88f80ef2-c063-4b95-b125-82894849a097",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c336c7d0-a7cc-4d5e-80cc-e706324c104d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1087,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8947122f-c926-4bfc-8018-73669d4996c1",
        "cursor": {
          "ref": "0a0bfe98-e7a1-4e06-a6e4-61967d14826d",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ef181078-4efb-4015-8c7e-72177080d0b8"
        },
        "item": {
          "id": "8947122f-c926-4bfc-8018-73669d4996c1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0239eaa9-8c54-4336-8c7d-89485e20210f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d20cc49-34e6-43b3-b497-a06d8a873410",
        "cursor": {
          "ref": "a2cc2aa1-c67d-42d0-a921-92a534355b83",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7f484092-adf2-45d7-920b-eeb41ca19b31"
        },
        "item": {
          "id": "9d20cc49-34e6-43b3-b497-a06d8a873410",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c6b46c47-b87c-4666-85df-38961d13b222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 979,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb46d0f-cc10-45fc-b831-659781c54bfa",
        "cursor": {
          "ref": "6557913f-809d-452c-af6e-13148d7a266d",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f680d769-b893-4306-a8eb-ddc50da23d4e"
        },
        "item": {
          "id": "acb46d0f-cc10-45fc-b831-659781c54bfa",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "41a84399-ea2a-44ce-b6e8-afec83aa3e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1307,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8241b5be-7ce4-4b47-9eeb-b3b6fb2b37c8",
        "cursor": {
          "ref": "21848952-3e35-4717-ad37-c107c8f624d5",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "75b74ac7-447a-457a-b494-03cb08155b8b"
        },
        "item": {
          "id": "8241b5be-7ce4-4b47-9eeb-b3b6fb2b37c8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fca81e44-ab12-434c-80a6-98a9db348da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 916,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79487d87-4b53-40d6-95f4-48c3502bc99d",
        "cursor": {
          "ref": "ecd790d3-52f1-4aef-8cde-416cf4b301e9",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "89bef431-5de6-4c43-ac2d-d95a34654034"
        },
        "item": {
          "id": "79487d87-4b53-40d6-95f4-48c3502bc99d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d3fee31f-3c61-4b9b-86e1-8773c59986b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 898,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31085240-6532-484c-9653-bec06e90f0a6",
        "cursor": {
          "ref": "a6fa4d6f-d0a3-4e13-b7e1-3bbb9b92f731",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4490d967-5f6d-4dac-b53d-ed898e52ef8e"
        },
        "item": {
          "id": "31085240-6532-484c-9653-bec06e90f0a6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "88218a6e-9b1d-4668-a329-a9b19eae3a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77bbb295-0c3a-4a29-ad91-5cd998782924",
        "cursor": {
          "ref": "00002d79-2e30-462e-a470-11eeb63d5b5d",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3c2e1066-5668-4ad0-a276-2069b6fa9ab9"
        },
        "item": {
          "id": "77bbb295-0c3a-4a29-ad91-5cd998782924",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c99974b7-255d-4a63-8608-84047ec7fda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf472630-9e2f-405c-b2e2-97789bea6434",
        "cursor": {
          "ref": "d47a1698-4f6c-47ef-8a94-c248c4358ab7",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1b5b8272-09a6-4423-87df-8aae2052f8b9"
        },
        "item": {
          "id": "cf472630-9e2f-405c-b2e2-97789bea6434",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c6dc3ddd-aa0c-41f5-aacb-cd85d5ca5fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986a6001-853a-4ae4-8027-d7a76a23bd2d",
        "cursor": {
          "ref": "4676db40-ed5e-42f9-82ef-d3b9a873686d",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7ecac3ea-06ce-4083-aba0-e57275ab8ba0"
        },
        "item": {
          "id": "986a6001-853a-4ae4-8027-d7a76a23bd2d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4885981b-a4f9-4338-93ab-4fdec703bfeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f411f98-3b2e-43c1-8ede-97e65c107127",
        "cursor": {
          "ref": "26792afc-a743-4cfe-9f0e-c1538799bbf4",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8e2af4a8-aaa2-4b1c-ae39-53ea84a68879"
        },
        "item": {
          "id": "3f411f98-3b2e-43c1-8ede-97e65c107127",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "34474653-2758-4f19-b0c8-a2c2f51aadd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42006b7-0985-49b1-83be-789d7591961f",
        "cursor": {
          "ref": "4ed6bac6-134c-4398-b604-34cc69f9b10b",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9baf97a0-b558-44c7-8261-1df30f621fd1"
        },
        "item": {
          "id": "e42006b7-0985-49b1-83be-789d7591961f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1a2399b6-4413-4be5-8efc-85c1cfac2b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 862,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceac34e3-bb30-43cc-a543-a94a89e866e2",
        "cursor": {
          "ref": "76010d56-b918-4d29-8997-56fbaee52d3c",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ab18c8a8-8e63-40ec-8a80-59b49e815bd5"
        },
        "item": {
          "id": "ceac34e3-bb30-43cc-a543-a94a89e866e2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "701a55d9-b4cf-4647-9b5d-0bb7e95f3a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 946,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ead1e6-527f-4872-b21d-8b38e1b37139",
        "cursor": {
          "ref": "a11321c2-bcab-419d-b6af-8811bcf2e7e5",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b4d778ce-3cfa-4a71-95fb-0948b60f8d7c"
        },
        "item": {
          "id": "69ead1e6-527f-4872-b21d-8b38e1b37139",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ba3760ab-b854-428b-ace1-fc96cd77f1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 994,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476933ff-e6b0-4ae5-8278-4a0db83daef3",
        "cursor": {
          "ref": "1c310aff-0be6-4c34-b65a-a0f3ce2cc4fb",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0d4092ba-f3d9-4b14-97c6-3c7d8ce64442"
        },
        "item": {
          "id": "476933ff-e6b0-4ae5-8278-4a0db83daef3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7cc8b8ba-48cf-4d03-8097-bbb161084873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1102,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666dea3f-d8e8-44c6-b25e-4cf855ef5ce4",
        "cursor": {
          "ref": "67cef086-0efd-42ff-bebc-5c3375f14b44",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ee42345e-fbc3-4715-9558-a13a452aaf93"
        },
        "item": {
          "id": "666dea3f-d8e8-44c6-b25e-4cf855ef5ce4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "97655a20-a9de-48e3-9cb3-f822b0c0f93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 883,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe92c7f-6b16-4bba-900b-004e8a8bee36",
        "cursor": {
          "ref": "e74871f8-77e7-437a-acce-a12220ed9131",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e5d503a5-ffe3-498d-849f-2f95a03d2e92"
        },
        "item": {
          "id": "abe92c7f-6b16-4bba-900b-004e8a8bee36",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8f42c016-7c18-4663-83c1-5cecddb6d268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07687da2-aa16-4a69-972e-a8779c664972",
        "cursor": {
          "ref": "c90f2eef-21e7-4764-a0a1-f796f5b038de",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "289d0989-b1fe-4ba2-9d89-06151fbc37a0"
        },
        "item": {
          "id": "07687da2-aa16-4a69-972e-a8779c664972",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d1ea784b-589b-4ddc-ad97-48e602381352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3808d5c-c2da-457b-9c99-f8ca2a545fea",
        "cursor": {
          "ref": "46f09762-7282-427e-a734-06402b037b1d",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e91eecfd-a004-4a87-abd4-e9efecdd175a"
        },
        "item": {
          "id": "a3808d5c-c2da-457b-9c99-f8ca2a545fea",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "bf552747-2d7a-4019-9f85-4412b125ada6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747eea48-67d5-4a1f-a38f-e3946d333285",
        "cursor": {
          "ref": "3c09b330-ac77-4ebd-9550-093a8d524a4c",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6c826b01-6d81-4b66-b624-9c93d0a7e343"
        },
        "item": {
          "id": "747eea48-67d5-4a1f-a38f-e3946d333285",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7541649c-78bf-46b6-afe5-a81d903c989c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08321332-4416-4e12-99d6-76caaea72c88",
        "cursor": {
          "ref": "e5ec407d-5188-41db-bfe5-a5e179e21d2d",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fd71b600-9b05-4247-a517-657470d461df"
        },
        "item": {
          "id": "08321332-4416-4e12-99d6-76caaea72c88",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "4755ec5f-8cb8-4ac2-a0ba-9e57b6ee8af3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 487,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0bf658-28d5-4315-865c-1e6cb4f0b362",
        "cursor": {
          "ref": "06a4188a-e3a0-4e44-8ce6-9edf8740ba65",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b1db89fe-8379-4f7b-a41d-eb06f13bc9e6"
        },
        "item": {
          "id": "3a0bf658-28d5-4315-865c-1e6cb4f0b362",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "670c2ee1-42d9-44c5-ba4e-e43fc9c9229d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0bf658-28d5-4315-865c-1e6cb4f0b362",
        "cursor": {
          "ref": "06a4188a-e3a0-4e44-8ce6-9edf8740ba65",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b1db89fe-8379-4f7b-a41d-eb06f13bc9e6"
        },
        "item": {
          "id": "3a0bf658-28d5-4315-865c-1e6cb4f0b362",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "670c2ee1-42d9-44c5-ba4e-e43fc9c9229d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a48c2e-ff54-40c1-903f-70280d097bae",
        "cursor": {
          "ref": "9c5cae10-4206-4d2d-807c-eb66bbed544d",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d90ea29c-e15a-4d68-bff8-b61bdbeb3a63"
        },
        "item": {
          "id": "59a48c2e-ff54-40c1-903f-70280d097bae",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f7d24b48-58a2-4bc4-80a4-1ec7e6d3334d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 260,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "40f103ff-b3c2-4bed-9228-42b79a3b86d1",
        "cursor": {
          "ref": "cd486c26-2659-4c57-bd93-84b70496e538",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7e3d25bf-d13c-479d-990c-cb1196cc14e7"
        },
        "item": {
          "id": "40f103ff-b3c2-4bed-9228-42b79a3b86d1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "eca582b3-acb9-455e-bd55-299c93801506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe3aa2e-defb-4e56-95ec-0941727f44de",
        "cursor": {
          "ref": "94ede72a-a1b4-4e32-8220-745b7d2c1617",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "509f7c13-7f66-49a2-9a1c-61b10bd5dff7"
        },
        "item": {
          "id": "ebe3aa2e-defb-4e56-95ec-0941727f44de",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8d622b53-beae-4a5f-805f-902cb23f1496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63ca870-aeb0-4a66-a760-2f629931b538",
        "cursor": {
          "ref": "13e72b5f-e4f9-43ee-b085-f725622a8e90",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7218412c-3b42-4f84-9459-383e918f82f2"
        },
        "item": {
          "id": "c63ca870-aeb0-4a66-a760-2f629931b538",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "156ae73c-1e52-4fbf-90c8-f752548804a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56aa720-ee93-493a-874d-cf7eaf88aeb8",
        "cursor": {
          "ref": "5a896797-3bf9-4035-986a-1bd742ab8d3a",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ce272aff-00ee-42c2-a203-e189d7358c7e"
        },
        "item": {
          "id": "d56aa720-ee93-493a-874d-cf7eaf88aeb8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cf18e7a7-7c53-4efc-a654-48157ec72735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eade6b8-af7f-4350-8755-c38ca884d5e1",
        "cursor": {
          "ref": "034ebf2d-c7f5-491f-9f11-cd2786c4f518",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "06385fbe-aa8f-4be7-b2ff-d43839e658db"
        },
        "item": {
          "id": "3eade6b8-af7f-4350-8755-c38ca884d5e1",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "cf8dcb2e-264b-4434-85d5-b30361708799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8ac62a-69bc-4f5a-a09f-3ebb910733e1",
        "cursor": {
          "ref": "9a4eac81-12c4-4ad2-9287-7d679afb224b",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "dbd52f3b-f769-4989-a2f8-2a3bcfa0e0b4"
        },
        "item": {
          "id": "aa8ac62a-69bc-4f5a-a09f-3ebb910733e1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e66d1043-f84a-4ff7-8a16-9e15faefb8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb455c40-6e35-4660-ae3a-bc45732d654f",
        "cursor": {
          "ref": "2e04012a-124c-4367-95ea-5db8f226597e",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "15b27026-aac7-4854-90c2-df36f7bf1bc2"
        },
        "item": {
          "id": "bb455c40-6e35-4660-ae3a-bc45732d654f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "01ecbbe0-ed32-46d2-b9f1-b492da33adc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02af2c5b-dc78-46c0-9b4d-693e9c67973a",
        "cursor": {
          "ref": "a0a74e81-83aa-4507-92c0-c2914a89749c",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "64728a4a-845e-4e6e-b66e-e484891e4063"
        },
        "item": {
          "id": "02af2c5b-dc78-46c0-9b4d-693e9c67973a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "dcc4166c-7634-4aee-ab9a-37fbee030636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d9d2c4-e04b-4516-a7a6-ab066dec8fc5",
        "cursor": {
          "ref": "24ab4fc9-00c2-426a-8600-870444960e28",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d5e2705f-9de5-4267-bb80-04651d1a2ca0"
        },
        "item": {
          "id": "86d9d2c4-e04b-4516-a7a6-ab066dec8fc5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c3871ae1-4601-4af1-a6f1-f468aaac5d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a5edf5-825a-48a6-8ecf-9dba78be5832",
        "cursor": {
          "ref": "e5136e88-da36-4849-9755-cebf1553a587",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ad3c550f-527f-4b83-a26b-f8b850baff96"
        },
        "item": {
          "id": "b6a5edf5-825a-48a6-8ecf-9dba78be5832",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "852a2e44-d0c6-4740-9022-d5a7a3a37c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dee20da-aed4-4416-9fa3-81b7599385a0",
        "cursor": {
          "ref": "4115fe0e-ac57-4784-af42-4e32878d3300",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9cf1a7fb-0d73-4043-8e73-5890b22dd8ba"
        },
        "item": {
          "id": "3dee20da-aed4-4416-9fa3-81b7599385a0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "dcaba055-c1c3-4ce8-a30f-8877e9e7f105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82606cb1-938f-49cb-ba6c-5078b43d8f22",
        "cursor": {
          "ref": "549bf5e5-3a8d-49fe-bed6-3c38b7987724",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d9a2d4a2-ddd0-46c8-a751-890ca77d6c6c"
        },
        "item": {
          "id": "82606cb1-938f-49cb-ba6c-5078b43d8f22",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fcf04555-c89e-43a7-aa08-b3f1be93ffbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e7f12e-4cd4-4454-883d-118dca67091a",
        "cursor": {
          "ref": "fc80e52d-43a9-40a4-8e53-8a2cbedf879e",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "68b798c8-5dcf-4207-833d-910abc1455f4"
        },
        "item": {
          "id": "64e7f12e-4cd4-4454-883d-118dca67091a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "55cc5e08-b8cc-4fd9-8ff3-f43ed66b1a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a27b6d8-c8bb-48b9-95b8-da6e2a43bbc7",
        "cursor": {
          "ref": "193962b3-c93f-4b9a-a916-b8ed1d3e4585",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "dfa0576d-5df0-4c1f-aa1b-2618d2b3cf25"
        },
        "item": {
          "id": "5a27b6d8-c8bb-48b9-95b8-da6e2a43bbc7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "331ebbd9-6551-48d8-856e-f23681c06461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf8d32c-d8c3-4cd5-877b-bb00b13f4eba",
        "cursor": {
          "ref": "b6f6efd5-fa8c-42a4-a8a8-d8b55092cd57",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ece5ff85-2b3c-420e-8b98-a132d5e6806b"
        },
        "item": {
          "id": "4cf8d32c-d8c3-4cd5-877b-bb00b13f4eba",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9f763b40-d886-40f0-9063-b995240bb484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b072b8-c4ee-42fb-8212-30d7da140207",
        "cursor": {
          "ref": "96852767-5010-4657-8589-8897723ff0c6",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f180ce8a-0a6b-4509-b2a3-787b4dd2039a"
        },
        "item": {
          "id": "07b072b8-c4ee-42fb-8212-30d7da140207",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9a7ae476-aa79-4fe0-9517-7fedf30327a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6850deec-be0f-4e83-b588-85a94dfb1c77",
        "cursor": {
          "ref": "b2c81ec4-5c06-45fa-9161-0723a577a2ca",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "792b5c09-f7f1-44df-92ee-cdc003b765e9"
        },
        "item": {
          "id": "6850deec-be0f-4e83-b588-85a94dfb1c77",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ab1f9c57-7cf7-48d2-8502-831c86c7e77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f358861f-c166-4865-9631-27368cf5fdbc",
        "cursor": {
          "ref": "dd3c2f06-31b1-464e-8169-3afab42f0af2",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1e6239ee-c902-4a33-95e6-8812b49f8db7"
        },
        "item": {
          "id": "f358861f-c166-4865-9631-27368cf5fdbc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "314023bd-4100-480d-9c35-4defb5c1df62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1549ef-ccf1-4a4a-9f53-5218f8d01d03",
        "cursor": {
          "ref": "9427c25e-6bb6-4f7d-8ef1-92bb1e1bb905",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6017e713-8f32-4d52-b88b-e8b7794cbb77"
        },
        "item": {
          "id": "2e1549ef-ccf1-4a4a-9f53-5218f8d01d03",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2b259896-4132-4ca7-8843-3029f385b539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ab090a-8f49-440f-8b97-aea42a2c9a79",
        "cursor": {
          "ref": "8eb2a3bd-bab6-41e1-8369-1eee284daede",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "70436b4e-6150-42ee-945b-d2d8ed2c76c6"
        },
        "item": {
          "id": "88ab090a-8f49-440f-8b97-aea42a2c9a79",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8d63f463-b3cb-4e22-8b8d-da14ca685fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76b1be6-a4a0-4a8d-a6bb-88fe1f9538d0",
        "cursor": {
          "ref": "5111fcfd-f2ac-4abb-8429-eb16b8458b4c",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8e5143dc-bceb-4b1a-b396-af010cce3201"
        },
        "item": {
          "id": "a76b1be6-a4a0-4a8d-a6bb-88fe1f9538d0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "14b5ed4d-024c-4dcd-9974-c9671778b95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8144d4d3-e507-4f22-8230-e2fe94ee5063",
        "cursor": {
          "ref": "6bddd3f1-bce2-40c7-9783-2fc9f980513c",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "23000696-de90-4272-a356-9ebdb0ad22eb"
        },
        "item": {
          "id": "8144d4d3-e507-4f22-8230-e2fe94ee5063",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f0415072-453f-4871-9d3c-851aec10d5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6328cb9-f330-4bfa-a5b7-16280d44981c",
        "cursor": {
          "ref": "84ef5ed2-7429-46ef-9cf4-387db2fe066c",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8444f112-db2a-486c-9dc0-0009b34533ff"
        },
        "item": {
          "id": "b6328cb9-f330-4bfa-a5b7-16280d44981c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1e0ca01c-9e96-4de4-8aef-43bf1d9e0077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e24df8-7233-4600-894c-712b9a50aa50",
        "cursor": {
          "ref": "16819728-c203-4d6a-8e3e-77397544d4b1",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "aa626139-dbcc-4caa-b594-5b554459711a"
        },
        "item": {
          "id": "02e24df8-7233-4600-894c-712b9a50aa50",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "da29b12f-91f3-4afa-97f0-c141879b720a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdeaf762-08b6-4a2b-8e08-189fb317e310",
        "cursor": {
          "ref": "4a23907e-878c-44d6-a088-93505075e858",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3dba9e95-10d9-4705-825e-84d45fbe75fe"
        },
        "item": {
          "id": "cdeaf762-08b6-4a2b-8e08-189fb317e310",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "411f506e-f26a-43f3-9024-bc1d856f5570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2faab0f-451d-4215-b5b8-0f0bde79f37a",
        "cursor": {
          "ref": "a9f32588-1c82-4696-aaf1-cde92ef384e3",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2891e9c7-c356-47c3-a781-67b1e4b9f645"
        },
        "item": {
          "id": "f2faab0f-451d-4215-b5b8-0f0bde79f37a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8f09cf17-38fe-4c00-961f-282dd76aafa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4796926-74af-45a0-a62d-d7642dd11ff3",
        "cursor": {
          "ref": "757665e1-cd8a-4296-93ac-dacbc10c0415",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c1bbfe7d-d243-4d1c-ad6a-d43cc910d5c6"
        },
        "item": {
          "id": "b4796926-74af-45a0-a62d-d7642dd11ff3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b0bdc9d6-8098-4583-92fb-ee723503a98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4bf44ba-d4fc-4369-a1b6-9f949d5ed316",
        "cursor": {
          "ref": "d32a51f1-4e8f-485d-a53f-81ac02340bb5",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7cf1db66-fca0-4de3-a517-264cbdda9e11"
        },
        "item": {
          "id": "b4bf44ba-d4fc-4369-a1b6-9f949d5ed316",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f168526f-97ca-4cf4-b2c4-a98db89039f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061d49ee-e77c-4199-9573-857a68f0a780",
        "cursor": {
          "ref": "63096501-a17a-4ac2-86a0-496a96b17776",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "51cfb920-3657-4433-b017-c56c1251f5ee"
        },
        "item": {
          "id": "061d49ee-e77c-4199-9573-857a68f0a780",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ec665db0-f4a4-4cff-8094-2511865cf364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa482f8-1ee9-4962-93a9-e4445ccff918",
        "cursor": {
          "ref": "9c73d990-8852-490d-a2a7-eac771804c47",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3e679bdb-9caf-4ebb-8cde-31912f1bff16"
        },
        "item": {
          "id": "3aa482f8-1ee9-4962-93a9-e4445ccff918",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3904b52b-45d1-430e-989f-c760a3df4abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3149ddf5-535b-4229-b4ff-42926dc13765",
        "cursor": {
          "ref": "6f147dd5-3723-48f7-8d2a-839d998b2d0d",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9b57e66e-677c-48ca-9956-18ee93595ad3"
        },
        "item": {
          "id": "3149ddf5-535b-4229-b4ff-42926dc13765",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "62d786ec-120b-48dc-8cab-92d22e781503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5222594c-ca24-46ca-9a81-e0dc02166885",
        "cursor": {
          "ref": "70b9a271-605e-4986-a0d9-67a2b278c265",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "77051421-f1be-4d8d-b12b-1d0473157879"
        },
        "item": {
          "id": "5222594c-ca24-46ca-9a81-e0dc02166885",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6bcd7003-6227-495f-9ec1-fe46d530e5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1f3d3c-8d67-4894-a3cb-2bd304a40fc3",
        "cursor": {
          "ref": "2d2d2a88-ea05-42be-b6ae-aabb7dc882fd",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6f66d8f2-ca5f-4229-98e7-746a6d1f3855"
        },
        "item": {
          "id": "9e1f3d3c-8d67-4894-a3cb-2bd304a40fc3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0824a222-1224-466f-94b7-0d9a9180bed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c71fa6-1575-4de9-b664-0ec2d51892cf",
        "cursor": {
          "ref": "dd7d45f3-8e2a-4191-8030-a6681009b685",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b5b33af2-8ef4-4a4c-b3f0-5ef84582ec77"
        },
        "item": {
          "id": "d8c71fa6-1575-4de9-b664-0ec2d51892cf",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e338c97b-aab0-4133-8e3d-1c363aa8854f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce446eb4-c503-452e-8095-c345c77afe7e",
        "cursor": {
          "ref": "da5a5c7d-757f-45cb-bec5-1a163beb382b",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4ad58df1-0032-4a7d-9341-4f2707da0ee6"
        },
        "item": {
          "id": "ce446eb4-c503-452e-8095-c345c77afe7e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c93c22e6-7dd9-433f-bfc6-1c626c9bde5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1605ffb7-51c1-4ecc-9724-bc818db303b5",
        "cursor": {
          "ref": "5ecb952b-cddb-4477-8ed4-9e7fcc785eaf",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9a169c31-c4e9-4ed6-8d8d-b3b005e896be"
        },
        "item": {
          "id": "1605ffb7-51c1-4ecc-9724-bc818db303b5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2942719f-e4a0-4358-9cf4-28edb30d3449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7ab660-28a1-48c3-8a89-8a07f3b3f322",
        "cursor": {
          "ref": "18305b19-13c0-4403-9d1b-6b567d12ff46",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6a0dcf43-b4dd-404f-af73-8f53bf8527bf"
        },
        "item": {
          "id": "1f7ab660-28a1-48c3-8a89-8a07f3b3f322",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "464db182-daea-4aef-841b-330ef52fa56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278d635f-4d8a-42c9-aa21-ee7fe47cbaa8",
        "cursor": {
          "ref": "fce1588d-f8f5-48f7-8c24-5c68d8da1ed8",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6183cfd7-5ed0-4e80-afd3-5d9b60fefbe3"
        },
        "item": {
          "id": "278d635f-4d8a-42c9-aa21-ee7fe47cbaa8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b61ef638-f112-4248-aed7-bf62fa43b0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f165f722-4060-4ca9-a73f-7678962d7c7b",
        "cursor": {
          "ref": "98d77880-8a23-4208-bf73-4e40e2f9a6fa",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f87e05d6-4b5d-4acd-821e-e4621cb569b4"
        },
        "item": {
          "id": "f165f722-4060-4ca9-a73f-7678962d7c7b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4358d233-5aa9-4b2e-91a0-584a37bd1771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04e6e3a-644e-483d-91ff-34f6c89b9299",
        "cursor": {
          "ref": "b605c855-3acb-43ab-9477-b22f7ba1e4c0",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b696da0e-437f-41b3-bf44-659f4db34348"
        },
        "item": {
          "id": "a04e6e3a-644e-483d-91ff-34f6c89b9299",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8b58c5a8-dc27-4d89-86c3-b1baae880ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c8a3c2-687a-48df-929d-4c31d44e68b5",
        "cursor": {
          "ref": "9c25b5dd-5862-478d-9345-033cca057e66",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "86c0c376-bfa3-463d-b63d-ecbee692e04e"
        },
        "item": {
          "id": "07c8a3c2-687a-48df-929d-4c31d44e68b5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "282b5286-987a-45e0-9595-ce32c55ae725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fdcf4e3-1cb2-446d-b95c-997dbd3120e4",
        "cursor": {
          "ref": "d1f76a05-851a-4dce-a6cd-34d9f2453613",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ec9338b1-0987-4371-bec5-97bcc6297c79"
        },
        "item": {
          "id": "4fdcf4e3-1cb2-446d-b95c-997dbd3120e4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a305dab6-3db4-482a-85d8-500a63f95f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb686bbc-1cf8-40df-abe2-a7e69cbb1f42",
        "cursor": {
          "ref": "5bcefdc1-52aa-459e-a05a-2f5f55a5d665",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "95a5cef6-e64b-46b2-8d11-151690bfe5e5"
        },
        "item": {
          "id": "bb686bbc-1cf8-40df-abe2-a7e69cbb1f42",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bcaf288b-d879-41e2-8a28-71f9d5d3d249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7e4d41-581f-48e8-93b4-98d2c16c0bc6",
        "cursor": {
          "ref": "430a69d5-fcc8-4719-b8d0-57075a772e9e",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e1376116-5ba7-4276-856a-157c9b3b10c6"
        },
        "item": {
          "id": "3f7e4d41-581f-48e8-93b4-98d2c16c0bc6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d5082bb6-a5d4-424d-b88f-34c08920a5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a83e8f-054e-484a-bc79-8c248890ca4e",
        "cursor": {
          "ref": "4bc45b1d-63f3-4ef6-bb49-1a487280d4ef",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "06f1764b-f41d-4460-bbe0-bd36365308b5"
        },
        "item": {
          "id": "a4a83e8f-054e-484a-bc79-8c248890ca4e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6caee2f5-604c-47a3-aa98-f0c230fb76dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5128e00-e315-4728-afc1-3bb518eafd5f",
        "cursor": {
          "ref": "514940e7-5446-4302-8b4a-b4dd51b76385",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "950a9412-0c0f-4085-95ac-8969ef14426b"
        },
        "item": {
          "id": "c5128e00-e315-4728-afc1-3bb518eafd5f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f836e4f8-bf6d-4d71-acce-01ea76dc1cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d140e2-5cc6-4da5-805a-0963c158d961",
        "cursor": {
          "ref": "eff0a3da-ccc1-42a4-b336-6d463fcddccd",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7743cc73-dcac-4305-90f3-9ea79150bdc0"
        },
        "item": {
          "id": "b3d140e2-5cc6-4da5-805a-0963c158d961",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "50ab3afd-42cb-4e8c-b5f9-d25cad2d7462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5bb408-041a-46ae-970e-b26de88beb32",
        "cursor": {
          "ref": "8534b9e6-87f7-450e-83db-7eaef584d7ca",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e10ed856-de0f-482f-8992-6efa34e8838b"
        },
        "item": {
          "id": "cc5bb408-041a-46ae-970e-b26de88beb32",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "64ee5465-c3b2-4fe4-986a-dc9c4da40759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa067f91-eae6-4510-8e58-c5a0670f857a",
        "cursor": {
          "ref": "56b8a63e-948e-48fc-87e2-912f7b86fdeb",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "73542359-43e8-4f67-b3a2-4d66b3d96467"
        },
        "item": {
          "id": "aa067f91-eae6-4510-8e58-c5a0670f857a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "abbf4109-3aec-4a06-99fa-4460d775f530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e183ca17-8849-4eec-b374-cfd8b6f1a09a",
        "cursor": {
          "ref": "88957d13-9c8f-4cdb-8749-e8487a19a8cb",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7e9bf1f1-02db-493a-b5ab-52041b7e0847"
        },
        "item": {
          "id": "e183ca17-8849-4eec-b374-cfd8b6f1a09a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "cb6bef98-ab50-4481-ad15-c5565573e501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf738e4-b106-4ca6-be65-087f1ddbc1e8",
        "cursor": {
          "ref": "014255a0-15e0-4b71-9255-274aa5c97a59",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "933b6455-1561-41a0-bcd0-34c19e49e743"
        },
        "item": {
          "id": "fbf738e4-b106-4ca6-be65-087f1ddbc1e8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f667d08d-78ce-4c3d-af93-fc992a63f1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89056da9-239c-4153-a32a-10a9d3ff3ec0",
        "cursor": {
          "ref": "e790bbb9-9ac1-4b4b-9e4a-818478451252",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8f3a9858-40f3-44f6-988f-83cba0f14901"
        },
        "item": {
          "id": "89056da9-239c-4153-a32a-10a9d3ff3ec0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "af045c8b-7a64-40d0-b68c-33fe26366b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d29ec44-3ca0-47a0-bd50-83ac86c93658",
        "cursor": {
          "ref": "bfc654dc-af9a-4140-be41-da1bd14821f8",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "cc8f2f47-8166-4ea2-a9cc-de26a437cf2a"
        },
        "item": {
          "id": "8d29ec44-3ca0-47a0-bd50-83ac86c93658",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b49ebb96-3021-4aa0-98c2-511f2332e532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b643f5-335a-40b8-b42e-1245debe78f4",
        "cursor": {
          "ref": "5307f69f-71ea-4ab5-bf98-328b2703cef7",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2e3181af-3ebb-4783-bac6-1ae7b379ccd1"
        },
        "item": {
          "id": "c5b643f5-335a-40b8-b42e-1245debe78f4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "de733c75-5e21-47a1-9a29-04a6c11048d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9898840d-0398-4ccb-be34-dfa44ccc1d4d",
        "cursor": {
          "ref": "04e96799-e355-4575-a6fa-8509778f0ced",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "445203b8-b4de-42f2-9a78-31d9c72de64b"
        },
        "item": {
          "id": "9898840d-0398-4ccb-be34-dfa44ccc1d4d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0e57fc6c-0782-4578-b492-5fb141d86eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2014cddf-2c73-44ac-a7f2-330d02eee2e5",
        "cursor": {
          "ref": "7921103f-f89c-469d-ba54-ce1514cc28f1",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "dddcaa15-cd60-4e87-914a-1f15e2c8ea14"
        },
        "item": {
          "id": "2014cddf-2c73-44ac-a7f2-330d02eee2e5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "703173b5-53b3-418b-8f0d-fb8daeb6e213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b752482-2dc8-457e-94df-d1b45c0b5912",
        "cursor": {
          "ref": "4b60d25e-bb91-49ec-b7cb-131f67dc8c3f",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "14b2b90e-11bf-481b-bba0-2d1f6f532007"
        },
        "item": {
          "id": "3b752482-2dc8-457e-94df-d1b45c0b5912",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c33fe8f3-17f3-4624-bbc6-ecda110afa3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6890be-a025-4f0e-9f56-5fa68a9c6a99",
        "cursor": {
          "ref": "cb929c42-a55f-45d9-a99e-bdb19d984ff8",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8bc89fdb-4722-4f22-9c78-1561a05e5fb9"
        },
        "item": {
          "id": "ea6890be-a025-4f0e-9f56-5fa68a9c6a99",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "99b69a84-a4c5-459f-8c8d-261ec4fd19fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c4b30c-ee42-4bfd-9e92-2707544e15cf",
        "cursor": {
          "ref": "5182681d-28bc-49d6-bfd8-3fff2dccfcdf",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "529b295a-da84-4bde-b3b7-039332c81f33"
        },
        "item": {
          "id": "46c4b30c-ee42-4bfd-9e92-2707544e15cf",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ee0f1976-064e-4f3c-81cf-e92c6ce560b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e8506f-b1d7-49f3-bb2f-520ff9089cb7",
        "cursor": {
          "ref": "845b777e-61b2-4a3d-adad-4b9574210c50",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a1d0508d-1d30-413e-9f0c-51ba082b375a"
        },
        "item": {
          "id": "67e8506f-b1d7-49f3-bb2f-520ff9089cb7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ce1ad866-fda3-4ac6-8139-380fdccabd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2425d3b6-1d5d-4217-8f25-1ab0bc209246",
        "cursor": {
          "ref": "d3bcad56-4e53-4e36-9ebe-9d8a9a730334",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2d2ca6ff-eeee-4326-b32e-ebb94f7bed72"
        },
        "item": {
          "id": "2425d3b6-1d5d-4217-8f25-1ab0bc209246",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "50bbc871-214a-4807-9383-444e1fd0453c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff13ba94-5ff7-4357-ab72-7124d4d6ace0",
        "cursor": {
          "ref": "e5699e2d-bd07-46aa-accd-84980139363f",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8b19785f-9267-4b0e-8622-256ee899e3c9"
        },
        "item": {
          "id": "ff13ba94-5ff7-4357-ab72-7124d4d6ace0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b460f180-23b2-46c4-8e07-39a2ad1cdf93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd905984-76c1-4191-9737-036fb73a2d21",
        "cursor": {
          "ref": "e9fce181-2651-4da2-bda8-83c16930435d",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "dda0d2b5-cf2a-4b2d-8a17-bdc11cf83274"
        },
        "item": {
          "id": "fd905984-76c1-4191-9737-036fb73a2d21",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "764a233a-ece8-49f8-ae7c-ddbab161a103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602a3719-63f3-416f-811f-ace7931d5033",
        "cursor": {
          "ref": "45e5eaf0-8198-414e-8697-d7aba107d9e2",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1e3ae8cf-370c-4692-812d-6ea40adb3e77"
        },
        "item": {
          "id": "602a3719-63f3-416f-811f-ace7931d5033",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f6abf6b5-d268-43a1-9c45-5124dae0e7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a102d3-b830-4c73-8093-bd965a394224",
        "cursor": {
          "ref": "de06df5e-204b-410d-ad03-abbaa94986ed",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "037be2a3-b680-4a62-ba96-288ecdcac467"
        },
        "item": {
          "id": "c8a102d3-b830-4c73-8093-bd965a394224",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e92183cf-1e0c-453c-9d9e-305285a5898d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e183b81-f2bc-462e-951b-48ccb5d9608c",
        "cursor": {
          "ref": "9348230c-dda7-4ffc-bb54-40d775f8793a",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "bec0d0c4-23e1-4a13-9d66-8a95dd163ccd"
        },
        "item": {
          "id": "1e183b81-f2bc-462e-951b-48ccb5d9608c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b7f83e98-c98c-439f-8b76-9ac8eeb78b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a05afba-c776-49c8-ab07-571405c0dc8c",
        "cursor": {
          "ref": "03e210d9-f352-4890-a97e-b3694d70f2f8",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "68cb7b50-91a6-4b7a-b55b-3a96ce860e95"
        },
        "item": {
          "id": "5a05afba-c776-49c8-ab07-571405c0dc8c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d4733eb7-04d9-4c50-b0b7-c5f23df0a279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b1b75f-08e3-4d95-acbc-caae741f10a4",
        "cursor": {
          "ref": "31293853-895a-4981-94a1-1466955dec0f",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a92a2b61-cc74-4156-98f1-f810cc2ed5d7"
        },
        "item": {
          "id": "49b1b75f-08e3-4d95-acbc-caae741f10a4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5b2dbd77-7ddf-4d88-9658-f179b399499e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f75096e-e029-4e70-811f-593d8f35ec0e",
        "cursor": {
          "ref": "74de4613-3431-4dd7-b46c-c9c9362c30db",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f950d980-a8d6-489a-9f81-9bd9282c4e07"
        },
        "item": {
          "id": "2f75096e-e029-4e70-811f-593d8f35ec0e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "108c4b70-b655-4bc9-9f69-3009f6f2d20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a68b52-9744-4dac-a775-66893d29f586",
        "cursor": {
          "ref": "ed36d096-b649-4ab4-adf0-b29835e616ff",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ea48f8e8-8f4e-4067-bf07-42cab403d42d"
        },
        "item": {
          "id": "70a68b52-9744-4dac-a775-66893d29f586",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "de70a602-6a2d-478c-87c6-9a2073cf5c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e479f712-8a29-4f88-888d-4901a8ef9212",
        "cursor": {
          "ref": "8f429b20-a86f-431f-bbc9-c08b2d2d23d3",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1e9f8e4a-fea4-4809-b85a-3706e9ddd2d1"
        },
        "item": {
          "id": "e479f712-8a29-4f88-888d-4901a8ef9212",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "44abb5c1-b3e5-4c1d-a7d8-37183e6e4282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb8acdb-45cc-4341-803e-47014a9f10ee",
        "cursor": {
          "ref": "89209e53-1036-42cf-9b9d-084ac70c7556",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6cbb1b6a-0a04-4ec1-b23e-2a9b86d57819"
        },
        "item": {
          "id": "2fb8acdb-45cc-4341-803e-47014a9f10ee",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8d93c124-559d-406e-909c-7cad4162065c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab90a063-b58d-42ed-8ee3-b63492484f67",
        "cursor": {
          "ref": "089c3d02-4a6d-4376-baa6-facea2fb722f",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "155b8407-00a2-4962-8eff-16bc51a08bf2"
        },
        "item": {
          "id": "ab90a063-b58d-42ed-8ee3-b63492484f67",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "153d7a9e-114c-4c1a-8737-e77ceafb1dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348fe156-de63-43ce-9ae7-ee861d7aefdf",
        "cursor": {
          "ref": "96cd923f-eab9-4440-9788-98f3a4b26689",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c88ef464-0dce-4887-9be3-e92c76446dec"
        },
        "item": {
          "id": "348fe156-de63-43ce-9ae7-ee861d7aefdf",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d5640cc2-7804-42cc-85a9-e2243d1900e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bc4939-2e7e-426c-a70b-c98117b996e8",
        "cursor": {
          "ref": "d74c7847-24d2-4816-b5fc-95bcd1519c65",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "97415d49-a719-4a54-a95e-ffded026f88f"
        },
        "item": {
          "id": "d0bc4939-2e7e-426c-a70b-c98117b996e8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ab3f33fa-bd3f-4fd7-ad1b-7fec93bde1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc9d57c-444c-4eba-bf2b-3bdbe5247ffd",
        "cursor": {
          "ref": "4945254e-96cc-4c9f-a184-93b0b378ee86",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "98bd916c-c62e-433a-8786-119c26e3dfe3"
        },
        "item": {
          "id": "8fc9d57c-444c-4eba-bf2b-3bdbe5247ffd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d4997cac-0351-4912-b60d-dfb964c6b573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f713d53-e4ca-48b0-8979-216dd2ffa448",
        "cursor": {
          "ref": "62f2d3d0-412a-4a31-8585-bce60cdedc4e",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8d3651ef-2c6d-401a-8daa-ae89b545e545"
        },
        "item": {
          "id": "1f713d53-e4ca-48b0-8979-216dd2ffa448",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2300b8ee-039d-4a33-a164-21a1f18c2536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681f5944-a543-4990-a6cd-b92a9a4e99bf",
        "cursor": {
          "ref": "fadd3f1a-673f-473d-84fb-880bb750f49e",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4897719f-1ea9-449c-ab59-8dba32d370cc"
        },
        "item": {
          "id": "681f5944-a543-4990-a6cd-b92a9a4e99bf",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "99af3296-56b4-42e0-b59c-7f666cb35130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cdeb20b-a522-47a2-9261-cbb03249febb",
        "cursor": {
          "ref": "9b3c3488-72c4-48c0-8404-db52fcb7e389",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "de1dc276-ba9e-41a5-b68b-f31dbf174699"
        },
        "item": {
          "id": "7cdeb20b-a522-47a2-9261-cbb03249febb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "732d549d-d609-4a64-8b19-8cbf625ee447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e6b9e4-1e48-446d-8daf-f281ae10142c",
        "cursor": {
          "ref": "8df3686e-3dc6-4dbd-bdc0-9a79e5d09987",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "92e438d1-1e45-4516-8712-86fb73915ea0"
        },
        "item": {
          "id": "a8e6b9e4-1e48-446d-8daf-f281ae10142c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "432da9b3-15aa-4311-8a26-8c09f4ce68aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b444d977-05f2-4943-af8a-e52cf4e1da10",
        "cursor": {
          "ref": "8117e505-edec-4c36-8d3a-22dabe0e1b32",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6bd406ac-3228-4fab-a4c3-95b708c5a7f3"
        },
        "item": {
          "id": "b444d977-05f2-4943-af8a-e52cf4e1da10",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0ace9a0f-ce2f-4fb7-8007-b6eef404742a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d59642c-d6ae-4562-8231-d225f36e084c",
        "cursor": {
          "ref": "b475aef3-4de7-4895-820d-bd6508021ca2",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5e990cd3-d729-40d8-ba06-3103898cac32"
        },
        "item": {
          "id": "1d59642c-d6ae-4562-8231-d225f36e084c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5f8792d8-91e6-4337-a328-82509ef78fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ec0112-cb7c-4102-bcd0-5ed5d82f2ba5",
        "cursor": {
          "ref": "e9e0e763-16a3-4b7b-a5d5-8e9ece3f5386",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1f860fe8-f9b0-46f4-9e14-6e3742a4dcf4"
        },
        "item": {
          "id": "78ec0112-cb7c-4102-bcd0-5ed5d82f2ba5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fd6a4027-525c-4f99-980d-d7767722f5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc5eb88-75f2-4e62-9aed-532917eedadf",
        "cursor": {
          "ref": "4507cb49-2359-4938-9edc-3ba2e840d6e7",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ca1ea781-c038-47f8-9ae7-d14567ecee66"
        },
        "item": {
          "id": "8cc5eb88-75f2-4e62-9aed-532917eedadf",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8c543ed9-ca3b-4321-a2df-752266cccb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4d08d6-d723-4a84-a3c4-8affa8c4c00d",
        "cursor": {
          "ref": "29e71c6b-3d18-42fe-8cae-d9a6570e3cb3",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f04af8b4-49bd-49fb-b133-966892c03a45"
        },
        "item": {
          "id": "ab4d08d6-d723-4a84-a3c4-8affa8c4c00d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "161e0dd1-5692-4e52-8f62-e1ebcabdab7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844535e8-feed-4ef2-a8ad-6c012439b9bd",
        "cursor": {
          "ref": "0676768e-4425-438f-9d83-cc22338f6321",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e5249abb-2a93-4ad8-b973-f6bed812b1ab"
        },
        "item": {
          "id": "844535e8-feed-4ef2-a8ad-6c012439b9bd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "09db9dd2-1aef-493b-a843-c74793d7c5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b384310-a566-4c04-9062-6551d52137d2",
        "cursor": {
          "ref": "7a8da696-f527-4ddb-bb22-d4d3d6b0893f",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2687abf5-d97c-4c84-9347-50363de815a6"
        },
        "item": {
          "id": "1b384310-a566-4c04-9062-6551d52137d2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9fa879a6-ad57-414f-bed0-ee2a95352a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543f46b2-34c6-41b5-83eb-5bfde0573399",
        "cursor": {
          "ref": "2ef65aa9-bfcb-4aee-b62a-e3d63bfe21e9",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "dfcd850a-57af-48ba-97ac-d13ae30a5b13"
        },
        "item": {
          "id": "543f46b2-34c6-41b5-83eb-5bfde0573399",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b94423a5-85ec-435b-bd03-bf5785e073ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c220f1e1-eec2-40da-8b5b-e171b6471c83",
        "cursor": {
          "ref": "37e5231f-11ea-4416-995d-a8cc6c5db96f",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "97545510-6d21-4005-8fe2-21df977f47f0"
        },
        "item": {
          "id": "c220f1e1-eec2-40da-8b5b-e171b6471c83",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c731512d-f750-4370-abaa-54e644b1f29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4289a6ae-2bb7-4807-b24c-eda314fbcbec",
        "cursor": {
          "ref": "894b6f2a-f453-4b1a-a3de-316d45da3ab9",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "02adc417-237a-4817-8b82-1840d4b9da49"
        },
        "item": {
          "id": "4289a6ae-2bb7-4807-b24c-eda314fbcbec",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8669a415-9ea0-47ec-a181-b6aa036f3652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1475f9-1bd4-4ee1-87c2-c50c0bdf0cbc",
        "cursor": {
          "ref": "ca44676d-416a-4b23-9376-28e6622d5179",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "00799a80-4524-46bd-a997-79f46f20e006"
        },
        "item": {
          "id": "aa1475f9-1bd4-4ee1-87c2-c50c0bdf0cbc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8a8840af-5913-48cd-8c9e-1794785162dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2289c7a2-8ebe-45b5-bd42-34f021eef14c",
        "cursor": {
          "ref": "53423131-3cbf-4bf7-ae54-c051f2b9c20e",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "35defa55-f531-4dd8-bce6-182697d61c71"
        },
        "item": {
          "id": "2289c7a2-8ebe-45b5-bd42-34f021eef14c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9d605d56-2f39-470c-9469-f146c5369f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d03bef8-1963-4db0-bc0a-77bd847a02e6",
        "cursor": {
          "ref": "056cfc31-20d9-4e87-8a0e-18d17d68addf",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "641f1042-7c96-4c17-a772-a1baecc52a40"
        },
        "item": {
          "id": "2d03bef8-1963-4db0-bc0a-77bd847a02e6",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "dd09f6f7-a66d-43e0-99a6-cb70dd0a044c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b0fb8a-6a47-4371-8324-7b0f075c787c",
        "cursor": {
          "ref": "87904e82-455a-4033-8faa-646ec3c1d8d4",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a865ef4a-eb8b-4ce5-a1a6-efbfb7d6e487"
        },
        "item": {
          "id": "a7b0fb8a-6a47-4371-8324-7b0f075c787c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a12752df-3337-49f7-bc2f-3cb29b1c1166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be50c92-489a-4e6d-b7aa-70a04eac8222",
        "cursor": {
          "ref": "6866c45b-3a30-42ac-bfc5-cb2d93a5a730",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c2a1d586-5bbe-4694-9135-127d3be630cd"
        },
        "item": {
          "id": "7be50c92-489a-4e6d-b7aa-70a04eac8222",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "847d5f3d-af26-4472-acd2-035a2cf226e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470ca024-4c2f-494b-8bd5-88626368e9f5",
        "cursor": {
          "ref": "a5ec35de-b288-44e0-a06a-e5f444883e9b",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "759a295f-2b4b-41d3-a2ce-dc166ac82cfa"
        },
        "item": {
          "id": "470ca024-4c2f-494b-8bd5-88626368e9f5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "175aac48-9966-4495-b7bd-4514281941d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c412ca6-98cf-4459-862c-d370ce89003b",
        "cursor": {
          "ref": "38ac7478-9578-41bd-9944-d87b03277f2f",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5ac519e5-274c-4e44-9335-b485d7901dd0"
        },
        "item": {
          "id": "0c412ca6-98cf-4459-862c-d370ce89003b",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "384427ca-3892-41ba-9dbd-d3862ffa847c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 241,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883d0a95-d971-4e42-be4c-20a3cfd63ca1",
        "cursor": {
          "ref": "ef355cb5-45c4-4c45-89a1-e73ffda9427f",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e887975e-4dc7-4ffc-955d-24e6e19a61fb"
        },
        "item": {
          "id": "883d0a95-d971-4e42-be4c-20a3cfd63ca1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9739307d-155e-47bb-ae1f-776ebdc31e4b",
          "status": "OK",
          "code": 200,
          "responseTime": 446,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6728cfdb-d24d-4327-9655-fbb1c6dfb5b7",
        "cursor": {
          "ref": "7c614bbd-5950-47cb-b617-3745e76a3c1f",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "cb6bf890-283d-4b7b-b1cf-493fa4dfaa62"
        },
        "item": {
          "id": "6728cfdb-d24d-4327-9655-fbb1c6dfb5b7",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "8deb37dc-7878-43dd-9c69-0bb5ed20a441",
          "status": "OK",
          "code": 200,
          "responseTime": 339,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2713cd17-14db-46d2-b3ea-4d513c877751",
        "cursor": {
          "ref": "7cf57a52-1fe9-47e6-9e38-97e0fe75b5a6",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a3665638-7049-4ad1-8d15-41f871f4c135"
        },
        "item": {
          "id": "2713cd17-14db-46d2-b3ea-4d513c877751",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a0215cab-64aa-48a7-b0de-f198e5701ee3",
          "status": "OK",
          "code": 200,
          "responseTime": 420,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9064b05-e69e-4986-9a9d-1d1147176aae",
        "cursor": {
          "ref": "75269381-00a5-4772-83c8-b413b9750964",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ac5310b0-de6f-4805-9511-339b6a66eaac"
        },
        "item": {
          "id": "e9064b05-e69e-4986-9a9d-1d1147176aae",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4d951f8b-2535-4407-8db8-01e24a662eb6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9064b05-e69e-4986-9a9d-1d1147176aae",
        "cursor": {
          "ref": "75269381-00a5-4772-83c8-b413b9750964",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ac5310b0-de6f-4805-9511-339b6a66eaac"
        },
        "item": {
          "id": "e9064b05-e69e-4986-9a9d-1d1147176aae",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4d951f8b-2535-4407-8db8-01e24a662eb6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9064b05-e69e-4986-9a9d-1d1147176aae",
        "cursor": {
          "ref": "75269381-00a5-4772-83c8-b413b9750964",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ac5310b0-de6f-4805-9511-339b6a66eaac"
        },
        "item": {
          "id": "e9064b05-e69e-4986-9a9d-1d1147176aae",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4d951f8b-2535-4407-8db8-01e24a662eb6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd2c0d1-c7da-47de-8fb9-0f06518813a0",
        "cursor": {
          "ref": "670ec65d-cd59-45a2-8ce3-09029a88bfb5",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b74f5c87-163d-4705-b1af-90ed9a460c03"
        },
        "item": {
          "id": "8dd2c0d1-c7da-47de-8fb9-0f06518813a0",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "c9c8f624-11d1-49bf-b667-c7666b4d3af4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 313,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040d19aa-3bbd-4367-a290-bd79e505814d",
        "cursor": {
          "ref": "268597dc-95ca-48ad-b3cc-cc664315b1f1",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "50366299-1882-4ab7-bb73-1c285dd5e0a8"
        },
        "item": {
          "id": "040d19aa-3bbd-4367-a290-bd79e505814d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "662de194-8337-4947-8d7d-f5ad217ccfcc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040d19aa-3bbd-4367-a290-bd79e505814d",
        "cursor": {
          "ref": "268597dc-95ca-48ad-b3cc-cc664315b1f1",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "50366299-1882-4ab7-bb73-1c285dd5e0a8"
        },
        "item": {
          "id": "040d19aa-3bbd-4367-a290-bd79e505814d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "662de194-8337-4947-8d7d-f5ad217ccfcc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba593a3-27a3-45ac-a25c-50757240f816",
        "cursor": {
          "ref": "a200e02c-2f1c-4716-8973-a7215b2637ad",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "59174a6c-a0bb-48f9-81ba-20e606f706ce"
        },
        "item": {
          "id": "5ba593a3-27a3-45ac-a25c-50757240f816",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "f836f7b1-9fbb-47f1-a2e7-51dc03824d51",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 562,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e96a05-68a5-4a98-a032-3b11ef232ec8",
        "cursor": {
          "ref": "bb030038-74f8-4ddd-8bf4-8dbd1079447c",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "10638c9e-be13-4ede-ae5b-43a3ea00d98e"
        },
        "item": {
          "id": "b3e96a05-68a5-4a98-a032-3b11ef232ec8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b87563ef-a959-4947-a34f-0117a67ba83c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e96a05-68a5-4a98-a032-3b11ef232ec8",
        "cursor": {
          "ref": "bb030038-74f8-4ddd-8bf4-8dbd1079447c",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "10638c9e-be13-4ede-ae5b-43a3ea00d98e"
        },
        "item": {
          "id": "b3e96a05-68a5-4a98-a032-3b11ef232ec8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b87563ef-a959-4947-a34f-0117a67ba83c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1386a2-728b-4b45-bd06-bf7b630a8c0c",
        "cursor": {
          "ref": "af2e282c-2b85-46b1-99d5-3c88e4e99c7d",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "95b4e498-f800-4802-be33-4045e716afda"
        },
        "item": {
          "id": "6e1386a2-728b-4b45-bd06-bf7b630a8c0c",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "0908449d-7541-45f4-87ec-c84f68be2295",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1124,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}