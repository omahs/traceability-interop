{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1bf5e54c-202f-4028-b9b9-a1324b031b86",
        "name": "Clear Cache",
        "item": [
          {
            "id": "35d56fff-75c8-4b3d-8eec-50d56a5f9a5e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a0f0628e-f71f-46b2-aaa2-7f9e1f5ee336",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "90a31fc5-59ea-44c9-a0f8-bf92a0e01bf4"
                }
              }
            ]
          },
          {
            "id": "e26a457e-7a5e-49f3-80c3-08c6b52a0a7b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dc3b91c2-298a-4c87-8d30-74a64291a7ac",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d07ef718-76b3-4b44-be50-5e5017f6daf9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1f848d92-a0ab-4be5-9cc4-8a97fe86d59e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "77ad7d33-05ba-4918-8da6-c5f45e1bfc4e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0d482ee9-58dc-4bb9-96ef-80a23fbc27cc",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a85cecb0-d5ed-49b8-bcf7-bde42952bde1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "edf1b52f-3b2c-4a49-846f-47de6e6eabcb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f3beb76b-a000-40af-9a0b-9d0c0369d231",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "53d3b7cc-4141-41fe-9fef-a8183b8a286a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4ddb6561-5d61-4381-87db-5fcfd0118f86",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d599c5a7-811b-4be7-b95e-e8d35fa42992"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae25fe64-e3ee-475e-a4f4-b18bf6b2de6a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "18afac06-e6b6-4a41-b884-54e17b01f64c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46f324df-f6ae-4013-b3e4-0e8d93c05467",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1fc0a2c5-98d2-446a-8322-57d1b61b4d1e"
            }
          }
        ]
      },
      {
        "id": "c5edfe38-8eae-45cc-bd52-2115b199445e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ed29917e-7e2d-408e-b1a9-311ff82e1000",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cacfdad8-8f94-4eb9-8ff2-7c6b0a72a6f8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cf43ecea-7eb9-466d-a178-4696a995f1ed",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9340909-8f47-47b4-a8f5-08cce61a3fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65750f86-f9a6-4ea3-b8ad-16e9597e71aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce34431-cb77-42f1-b5c3-a824c9a3614b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f157f5-9804-4129-a4c8-60d3884a247c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32d41197-b99c-45e3-a673-f6b0ca4b5b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1524b8e-625d-4fd0-8500-6c9ba8354e8e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92c9f8a-0bfc-41ef-a1b1-9ecce1d3fe4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a77b727-e3dc-404f-8910-6ff4fc0f12dd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4c75b1ab-7d71-46f5-9083-9017f41344d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df17f70d-e86b-4e4d-9dc3-5d33a742759e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc44c6c9-6978-46b7-b177-a6354f09e62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08381bc2-99af-42fc-8c69-84f98604794a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46fd2b2-82c6-4467-b2e6-44700b05e32b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c16b46-1eee-4577-b285-dbbccc87f187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7164138-87b0-4f30-bb36-103bce743862",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e68fa2b-0337-4af2-a19f-57d98fe236b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07145954-0292-4176-963b-c3f1171daba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243bc444-ab79-4a59-8fcc-fa0883e37827",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "1a9e05b3-bc92-4948-b63f-abf712aa6314"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1fe14e88-3a46-44ca-9691-984fe839fa9b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "44d24619-a092-42d3-9a5d-bba994bc3aed",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26af7857-102c-4d25-a247-8ebdf8baad88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "33f70699-3449-4548-80f3-78c7907bcd21"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "043bd477-c515-40d5-aa81-a4bdd6f76c4f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "59422904-c32c-489b-8e8d-63af512b79b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d91b6391-aabe-486f-9e2d-f1d02913e84f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1b90026-5725-47a6-a678-b3541884df81"
            }
          }
        ]
      },
      {
        "id": "d88f5e49-b382-4de5-bfe8-3052bdcc352d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "91304761-cb56-4f7d-b6c4-3f9932d9c4c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cacafd23-d20b-417a-8066-14201302a500",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f0875bcf-0b6e-426e-ad24-ab7fbba3afd4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a92e015-2c96-43ea-82dc-e26d5dce44c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b93a0e-20c9-4feb-a77b-bec6d4f29806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b75fd8-61dc-4717-909b-c8ea4e293947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf307118-4a56-4c49-8dfe-8df427f47b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e703158-1a80-4aa1-90de-8330dfe8998e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850b525f-73c9-4dcc-8cba-9ae10f977599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b657b3d-2150-4f81-957a-5850f449f829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29aef63-9484-4147-9b7a-981de1ecd622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38ecc2c3-0be9-462d-9ee5-072a93ccc729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428c24fc-80f7-4e67-a43a-b940897181f2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960a54b5-541b-4321-b1f2-f8b67d80205c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0352156c-ed5a-42eb-a542-5968aeaf24cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061b1dda-c979-42d9-a7ee-9dcb9062debc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "069202f4-bfd7-4534-85b1-676b7634cf69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24899349-c222-4b2b-a6d2-4e117a961292",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c6a00e-bce8-4c8b-bc82-f3f53ab40e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad975658-7e07-4eb4-9f54-c1c5644cbb04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26131038-526e-4a6a-8b09-bbdb4ac51923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3338342-5fc7-4743-9f14-16b75c0dbf17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f98828-e261-47cc-acff-c62003c1dbd8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02b1e0a-2eaf-46e5-aec2-154bd0265287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b101364-5be2-468f-83a4-28e6db3b2c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905ec639-60a7-4ebb-b129-951a6c23e20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b3550bc-8e02-4041-b5e0-6fd34e619baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be825d4-8695-4d30-a686-aa25aab07341",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9020d53b-66e1-4be0-9f38-9c94d4a95a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc6f81e-9653-44e5-bb18-b9cba1cc22ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b46083-8d9d-4126-a05c-cee630827bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d97aa69-26da-4b8b-9022-e39dbafb23c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e18e5e3-b35a-4202-89b9-968ac89f13f9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504b7107-0f74-49be-b595-a4ad4f89b9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49fafe0-b12c-4da3-813b-a4affeab5a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2392a22-99e5-472c-a0ad-bc642d3b8e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5afcc820-6e94-4d36-a5e7-e018e927f541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d3dad6-b1ed-4f9c-b308-b145bc786cd5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc397fd-bed6-466d-8e96-cb897a7c9f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "471fc08c-4ef7-42ac-952b-244171dc2914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3977dd61-8c8c-451d-ae8e-8a0a6c80bd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b72888a-23f6-47ba-a02f-39e609c53725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052100c3-caeb-4523-a6fe-53b45f9f6881",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6b5535-7a4c-480b-a4a8-b7de896d1dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37adefc9-3a0c-4e50-96b6-dec926ef417b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800c1687-bd25-4622-8505-9c83e9905ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "facfa022-d411-4ecb-9027-7797ef10c9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2af78ec-d857-4334-b229-b9f56be1de43",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a07dd2f-6a4d-4482-9c20-df1f9aa08efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38bd1aaf-240e-4d0d-92a4-56b54c94ba45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb924aca-61f0-4a17-9c07-07127375c8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3138b776-9072-4f9b-9116-e24fe3925a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c639d1dc-d2f1-4e9c-8d15-80ee503d2b3e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f781dbce-9924-4c7e-a673-b306139ea32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9164c66d-c496-4136-9ad4-4e02cba8b6bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e676cb8c-8bc6-424d-9408-24bccab509b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32c39a38-33e6-4483-a3f0-d7ad184ddf8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a74ea97-4cb6-408b-add0-2999f5eee9eb",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0a43e8-8912-4144-95e8-44428947cd13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bdaadd5-413d-4be8-b3f4-bee31d817457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895ce2c9-2129-494b-a75f-ccd2acbe85cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba540e74-4667-4d37-969a-117dfb42cd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7a2561-4db0-47c3-ada2-47bf76b4a1f0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04756f4-0afc-4f69-b0fa-09682914b7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ef5cee-9997-436c-a8ad-87ab4fc0ac4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259cfdde-9656-4519-9390-2b043066a798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fe28056-cddd-4de4-9949-bf5fcdeccc72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1505cf-c86d-4ad3-82b2-c54d0886177b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b77a3f8-d402-4051-bf44-1e6885f3109d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192026b4-a2be-48fd-9de7-43d65b373f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5766e28b-ce68-4fe5-b470-e1dd81038bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb681ef8-8a0c-4db8-85ba-ced9764896f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a18c66-0f41-47e0-9188-5039de163447",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13db2986-7062-4aa3-8046-09a65bb45704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef91be51-7bfd-4b9f-99b5-0c31405c4c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6131954a-b08d-478b-a82e-fb5f6ffae957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98a2aa0d-2fdb-43d5-a136-bd5ef93d6af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3950bd6-9a5a-4a20-8f5c-1eff51cad27b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858930d6-6add-4235-b797-932c64823658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df2ad2f7-d71d-4fd2-ad20-3b34e62df57a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a527d767-4927-486c-8044-bfb9535d0fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e6432c8-a6de-4fbc-ac30-94084080457a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a0479a-94e9-47a6-b6a2-f72eb064bead",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e474d2bd-04c5-46f2-9037-e4ae10aec608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7611f263-4726-494b-9bff-853fdc46061b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66549146-752f-4e98-9a6f-c79a59306b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3301b147-b411-44e4-a88a-65cfe08c90d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b756ebe-dc11-4f09-843e-7fe95144ae8a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8404bd7-57d9-4f41-98aa-123098daadb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96508cef-1ae8-435c-be58-9301906ca72d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96394ee-4dc6-4c43-bc81-c10a63d8a21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee01a7e5-7419-4284-bede-b6eec362d611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c726cec-1e1c-4f68-8490-acb3e26b5211",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c682c5-fa68-40c8-8e5b-f5bd607f10a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c6def4a-b90a-40fe-954c-e5d84ad558ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d758d6e0-2d40-495d-ad58-8da771a10756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f207bb06-3606-4b48-a6b7-918baf37a19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1ba329-5e4f-4c8c-9f1d-a9cfd46a659e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f565e6-537d-46ad-977b-42ba811e840f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d30bd103-6efc-4140-86b7-a24e31227551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443a084a-ca68-453f-8e96-15ec6fec1922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e58a072-23ce-44f0-8604-f944baabcd54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f41f3f-2157-4772-b477-d449f25879ea",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507d3a34-cfb9-463d-93ec-acef751f8d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c3eeddc-ccae-4752-bc01-bb22cd8b1444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfb658d-01ae-4a13-96bb-17a1256c5ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "723fc9ec-03bd-4f40-b07b-2372e027f54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f060e63-72cb-4b9c-9944-d17b77c65a69",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e19930c-7cc4-426a-978d-6fbe91dbf5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b56d714-0656-4e85-a36e-acf594d9d44d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894269c0-2455-419c-a471-c92257f571f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37974ebf-5da9-4efc-998e-cd8fb2ec8f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ebc2bc-eefd-4718-9617-ee83f73a7d78",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33746f8-042c-496f-8542-368b137eb5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0474b19b-d315-416e-9141-75e19f7d1fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca070db2-f825-40e3-9d50-419aa5e66ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc7e687-c338-475b-a2ee-f3f60f607a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af96fff-b1a1-419d-9a13-2cd81809b84d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efa9795-76ca-419b-96d8-a664194e7df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cfd812e-34ad-41a7-8a28-97b4b6ab1a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a1344e-b465-42f1-a9de-bc4e91395040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e35dc21-fb76-4f74-8a42-9a5b626f5b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccc50fe-3435-4447-a08e-fb182500efc0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99161c9-59fe-4bae-9ff4-c693bba562b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe84514-25b2-46e1-b891-bd159db68030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338946a5-76de-4763-a6ae-51be164aa534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c322bb0a-914b-4a02-b676-83267fd2dbf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f1f137-3f49-4a82-adc1-aa184a8bb26c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ad64d9-7efc-47c5-929e-724ec04f3c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90cb56a6-200f-408a-a3c0-d4525b6f4d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65792504-ddca-44cb-ae23-28f71613657c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e4211ff-9224-4da3-ab46-0cead194e0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ee267e-82e1-49a1-a5ce-ea0066ff43ab",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149fa8d9-643b-403c-87f6-fcf769f3470b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "527bef92-0055-42a0-bf69-30400a986b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a268213-b099-4de6-875c-1fa6fc6fd206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "48ae40bd-9d8d-419a-8f54-9e097ccbdfd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b888c8b4-2b5a-4db5-b5ae-0aa1c7a509a0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f407d8-725c-4a51-b5ff-508733c4a402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe28481-33ab-4814-b779-63777c915e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66ce119-89dd-482a-9e00-ffcb0688f394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b66a6760-827c-4d1a-a360-45772c02a4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6db8e6-a003-48ab-97dc-030027297b28",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e56bf87-8ea4-45dd-a279-70f400c9cf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c630bce-8229-49c1-a9c1-cb023a0ccf5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553f101e-ab52-4baa-a132-962b8d41fe30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "56d53ef0-876f-4f1a-91bd-be8dba42edae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb1b2ec-d2a1-4c59-a244-dc2c1e5d5031",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5df1bd-9854-4796-9239-154ce63d439d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6e6e4f-0eb3-4a10-8449-26ab9d8c8e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bd444f-7e75-4969-969d-2ee1da1c65dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "92f19ecc-0aed-41f6-83e4-6a01e32a194c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd887c87-1767-4a51-90fb-9631f13dc138",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a229b625-863c-4c6e-a7e6-fea7a7e95a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a180cc-fa5b-4e83-892c-ec1a18a535a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d843b2f-9dd7-4ab5-865f-1cdc7f3d1083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd5b410-63aa-40ac-b586-e148012df12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db81bb12-d809-49e2-b6a0-15b2ada0fa5f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f968727b-d083-467d-b2c5-ffafd2b92b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d348c296-33e3-4321-af87-1e11582ccdca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27943c00-cce7-4d7b-b34d-705f3dbb3f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42a9c6a0-d48f-4c9b-94b3-74346bf5581d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06f5173-922c-45e0-915b-a30ba5890a78",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aac1b7c-e1da-4c30-b225-a216997107fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be5cfc58-1133-439d-b9bb-9e5206b7f6ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176f7060-b289-45f7-841e-ce50f0ee62ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5782202-134f-403e-b08b-3b9f000d4bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fab234f-d84b-41db-9fbc-75f9a3375ee4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0372e74-4804-442d-bf4e-b43b17413e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1611dd5c-092f-4d25-970b-a8ac6d02d7bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0277f44-5918-4b8c-9e13-f27abf274ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28588d53-e3c5-41a9-81e5-2f00a0582c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e68d09d-6589-4068-b15c-473882068a0e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f081ba-5735-4faf-a478-1601681e1526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58f3c36-d3de-490e-802e-b91b3d08c67f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa8a546-b74b-42ea-8f4c-b4a2d2df3ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1a0e5e-4e0e-47af-8001-23068a0b88cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b4d258-65a0-46ca-a6f5-70dd4049b98e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a4db1e-0030-4262-8687-4138f094bb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "657ed3b2-3ef3-4ad6-81d1-90470cf49b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3572c9-b5db-40be-8600-14b2a926a50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e413d299-d890-44a5-aa06-c5025c6238a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc36385-81b9-4c98-87fd-bb4d4bcae668",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2edc52-a1a8-49d8-8c5a-4b75d760c3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7904ab-b454-4a6c-9d47-d809ade06e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff76e296-560f-4d19-82ba-4f3766b86d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "154d6d7f-689c-4a10-b41d-ec6e4cd7d767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7639f74b-125c-49bd-a6ea-af061a83e801",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "838e77d4-6970-4573-9ab6-415d329778b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a5b0c0-fd0b-4490-a17d-9cad774ec817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee398d5-b116-47ba-84ab-1f02a5eaa88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aae96235-003f-427d-9c90-761283c2b8ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4927d16a-54be-417f-81a0-968bca9d006b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb072c4c-18b4-4f44-9206-e0e7a75410ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af843086-2cba-4879-b7c8-b3dfa05f2b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e6fea2-c27e-4631-b6cb-850ad5f595c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0672e5c4-ea30-449d-bc51-9ddd5f6d9e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1be8bf-7ed7-486a-a2ad-bc6f3a51ee8b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cb7549-3b94-45e0-a21c-0139b7373243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6709e1de-5584-438b-9593-f151acf93377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c438b37-4076-4dc4-b294-c305d8975a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ace57682-f786-46dc-8a87-dccd3a88d7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5362a60f-ca36-4cdf-b8c8-c45ae9fcd162",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed21b16f-a24e-4625-87f2-a96aeedd282a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66376404-38db-46dc-a69a-9d439ebf5ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604606b6-23aa-42a0-a330-1212a5293bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea3b322-a1f0-4f6e-934a-c05bd308bcaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d8a62a-14d8-4e75-8a43-38bee01a5b15",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa653e8-48db-44c6-bb58-6de2cbfb9142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e037523-521a-4918-a846-f41a18aacb6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a802600-85df-4b8b-a45c-a6bd0ced4f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3fae49e7-ff0d-43b9-88e3-e5d842914901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d605e62-e3a0-4ce2-ab0a-5f19f7e53a62",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0597ea-caeb-4815-9ab9-82f456392f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224506a0-7f18-459c-a8a1-0bd05957bcf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff34a78-e8a2-4f39-9668-f44adb1de75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "85e61dc3-a7c8-4829-aea3-f060bc4b48ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0f1179-8707-4333-86ca-84929c951241",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1d6aef-52b3-4233-aefb-874e639742cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f53096-53f6-45cf-9b62-a72917a46238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8c4050-006b-451d-b2a8-2aa9ee5d9b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4293ef3-4c66-496a-90bd-f220e7447811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e35b08-4e71-49ba-890d-55d00823ff70",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fab2c4-ebc8-4b5d-8119-515fe960e976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b701f78d-fd07-496d-a66a-0cddabdcb3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01d37ce-cba8-4ca1-be2c-65fe89a07993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "670eef58-cedd-469e-ab36-ed04255f4050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e63fb95-54bf-48e4-a93b-d5fb2603324d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc30c697-b51f-4c73-a603-1df4bd01978e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a392aae7-eed4-4cd5-8f16-a0a0c78b8738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f303757-f0df-4934-bcbf-486b0685e833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0738e3-e6f5-4105-b712-9cccbbb91ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e916174-0cb1-481e-8e55-63d06aa62a23",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d277ca81-1cae-4167-82b4-4171b5e68eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b384b34d-a076-4222-8c1e-4bb0993ad12b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69128d6d-05b1-4970-b83e-ab65996cd9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70de4830-8414-401e-a4fa-48d4f3dc85e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ecd8efb-a9a9-40fb-b480-3110d909ef43",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f7ce0f-e426-4242-85cd-91ba77d72647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc89334-cc4c-4801-a8ee-e54da22e0b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08084a51-e39d-4d11-a6b1-e7f42c5e5571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54fe5c72-e5e3-4476-822d-03a3a512ad3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d19f1d-8982-4d6e-83f6-4073d538d16f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5623387-b756-4a46-a97d-f5bbae27953b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f12b32-ad00-40b7-bf66-a58f42222cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6573611c-fbb9-413b-9723-64f37f6a3085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "437a7d47-b645-4bbd-89f4-276eeb3384fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ce3e5a-c6dd-4aef-82d1-84d683bac40a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3197d13-7bb3-404b-8ffc-00ffbf3cc05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f84bae-9edf-4f4b-8884-18caee8120e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbcf845-7373-4592-9998-116a7abc9eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "255423ef-865b-463a-ab81-c1317be1ae41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6dc5ae0-dad5-4d8b-867a-01706cf3b72a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0eb963-39d4-424c-b20e-2da579ee4b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c68cc4-e68e-4fe9-8442-0912ea089024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0942251f-c360-4f85-b84c-14aa56d37faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d511fc0f-aa7d-4cd3-a3ae-1a24d6da000d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e463d777-c906-4ec2-8f49-8cd9bace2222",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41830426-7eca-4537-aaae-8d18b83c4b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a864e2d7-3bdd-4324-a14d-2c8fc3b078fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fac4c15-f34b-4943-b6a8-f1279c0a5d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "87865886-bbaf-46b0-851c-920cebd33852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47bb662b-2521-4ff4-9748-8005e7fb459f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17199f42-29f6-4e01-9fc8-e372cdac32b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c709ae-4690-48ed-bc39-85a915fd4578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95097242-40a3-44f4-bc54-69d9a97e9ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "244f7b4c-23bc-4a91-a1b3-1867f77e3595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119d95c2-5711-4f03-bd21-06d2d437096d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6631a5-0a4e-4d8d-9f27-d731b0ea4163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc11e77-46c4-41c8-ac97-aa0dcbddf73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc04fbf3-df44-41e8-8380-bec0d8c36aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff61436e-ed8f-4820-ad97-af311335e51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a997dd98-4bcb-4a11-8760-4c1d785dd780",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e49a11-3471-4709-adaa-f50c9a46b584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "511cc2ea-2ab2-451d-8e1c-da78e7e214ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bdd13b-2e0c-4fc4-bbd0-2c6d87696049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1fc4a63-68d6-41ae-9adc-8f5b678c194e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754e061e-30be-45fa-acb2-0c5aeffcb93d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8524f9-e64a-4c9a-bb6d-c68ad49fb6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "556a7314-767a-451a-bb50-fafb59c5cdc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b256a2-957d-4690-aa13-7e2e813d88d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d552a645-378d-4348-8162-030849332bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d42771-6e7a-4679-a678-049c66b7f814",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73861dd-ecc6-4719-ab82-632a369f63b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26413d78-387b-4654-8f9f-3293f0c7a5ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbac353a-5eb2-43a4-9a9e-0da242f696aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "415daf62-1f4a-4457-97ec-574aa1112fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98a9366-5e75-4ebd-83cb-69cd45448309",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51dbca3-ba30-47fc-85fb-8e17e02e7142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e023357-6657-4ed7-a283-9fa8e5398df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a26fd4-cde4-429e-a5a1-f874a12c24d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c721b61f-d270-4c10-895e-e2e037663d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee7ed49-9557-4581-af9d-5fbcbc2b6d46",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655dd64b-22a2-41d0-93ea-275db0742a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad277bba-a8c2-403b-9824-c19ef6c94ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9395daa9-6e72-4879-a9cf-b47e3e4f4557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb9ec87b-6677-4c41-8a36-5ab8f6b4e048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424802fc-771e-4f1b-a68d-14d586719d9d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "428544be-697e-4601-934f-30933e17e1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b0e396-393b-49ec-9aef-d6e81b65f787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b09f62-38e9-4dd3-a622-ec5c77d7d7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf828161-e190-4687-a673-341f431c6b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f13545-7799-41a8-85cc-bdc35ee4ccc0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639635b8-1f98-4520-8e05-10116d4b5770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d371816-27ae-4cdf-9293-186f366bd852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72d1890-0f79-488d-b4d9-89947831f87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c36879-18c2-4e40-9806-2a1f9b61b7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d9f22a-4ce3-44a1-92e1-7ca220caca29",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4ee611-3569-4d83-b1b0-69568ffa5bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da279d9-2b04-4ddf-a6d4-244a61dfb206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1cea6b-c39e-42bd-8250-967c438b6a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7966ad01-4441-408f-8535-ab640b5fcc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032834e8-015e-4a68-b9c3-4b57f6d92048",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2bdeca-6918-4775-9f14-77733239d21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6946d17-c628-4fe6-b3bd-4cda8bf71b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9caba1-a3eb-4135-a216-f929e6f914a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1892ccc-6d8f-48c2-b145-5b08eafbbfe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b7ca85-7560-4bfa-88f4-d342009074d3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7010a2de-2a7f-45c4-a7c6-04e21f8adf8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f609bb-84b1-4847-a5d9-a21f33e3d40a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2641ce4-fd5b-4874-a842-a9938aa3c197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54e56614-02b8-4ded-8211-3f877faf2a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74270031-ce31-40c1-9451-f23dbd132ce4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1858764e-214c-4fdd-bc3a-504c467dfce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9494a7b0-6461-49cb-bd40-b5518dfdd7ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5d0eae-af82-4a32-8375-9e3e1a76c58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf50c9a-f8cc-4706-a5c1-e523f7bee772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffbdf9d-cb00-42c8-bacb-c5d50a051cd1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c67280-a74f-40e0-800f-d096bb0c1538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7448f6-77c5-4fc7-949b-a549e3434a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d321d0-f607-4ff7-ae08-32d7aff01d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dbfa19c-4c11-4954-b71e-ea05e49c625d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a14e59e-545b-4dfd-8c5b-1e1112509d64",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f979cc-c846-40d1-9f36-9852f1ca124d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e610ad00-60b1-4ed9-8bdc-82cc117cdd56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b19865-af94-4e0b-ae97-d465f6a9913d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1727ae4e-7ccd-49c2-a657-c7c81578d3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7521ffff-300c-4a1d-b6c7-78ac66c146e5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f964a6f0-63ce-4c12-9c4e-04aa5f225b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "417d7c18-54e5-444b-90a3-37070d4a0ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b0325d-1619-4dc0-b4ff-6b7369fcaefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f95c97-e185-45a5-94f2-3c9a37d0b178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fe0096-e8a1-44ff-a77f-2da4578213cc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fc28f2-4730-456a-b64a-bd6e0a156a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb12e662-a476-47a5-8245-94a5751263d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8910cb5-fd74-46e8-ad55-e16b134acde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "137c5df9-ca97-41b5-875f-2e01bcadc417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fcadd5-c562-44f4-9590-d71f0663a2fa",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bdb46c5-ac8f-4b99-a8a6-7c553fce1e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "543264a3-ab90-4c6e-974b-c446c424de91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4209c2b7-bbf9-4377-8ac7-3842e07fab91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "057eef64-ab20-4bc2-9945-45440dff3c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2343d5bc-07a5-439b-b95b-29568bba7226",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7826bd80-e867-4bfa-94bd-e004427e7f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b528bdc-395a-4bec-9f28-3fdb45e03268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8dde56-04b6-41b8-bcad-0a42aaf97557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb79572-085a-442e-a20c-351365c09886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8cf218-f2ae-40a9-bee3-380d4ab03034",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0981eb-c8e7-4512-9d91-2f3af142ef82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dcba6e5-43db-4414-8219-4d8d8064572b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec35044-5647-4ea3-abd4-acab8accf2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "707da92b-3afe-4a1b-9c46-0f931a4e46e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7938e0-dbfe-4d24-957c-60034cd475d7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ba8308-8a50-4064-b14c-d28f48d2ad6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3410ac3-280e-4379-8629-8434711cc767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d896aa-e288-468d-b07d-43aa7ce03f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "38ab0cf8-9b39-40cc-b8f4-061c98cacdca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2973c0a-6b24-4f85-86e3-9de9decfab08",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0e9d15-9412-4d25-a48b-1a3b1d6b24cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ce6ae6-6387-4206-9ce6-5bdf7aa026d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2929f3-601a-431e-acf2-463f0025d094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3934def4-9cf3-4d09-ad88-4fb16f5b0807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1d4674-88bb-45c0-b36c-b22461f82230",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db40e7d-7a1d-42d8-b6a8-eaef895ba36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7f0b68-0390-4ea6-ae46-609e4b832538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f9672e-2f1b-4999-b8f5-539f3614e987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9fe37b5-6e98-40a9-9def-ea3ed226f420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489865c4-52a1-4ace-8c2d-3f3e4d244b61",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b8eaf6-4c96-469f-b2c9-878475e1794c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc09e0bf-fb7e-4fc9-b34f-9ac42e7651ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a0d7e2-f17c-4c19-89fd-0bd521c73f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68184aad-63f2-4c6c-8b54-0a304261178b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4d214b-2b9b-4ccc-a925-511e274d5516",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c716a619-5841-4467-a74f-a9a165dbc8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c039ebd-6ff3-4abd-87de-02c22d1f31c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4ba5ab-d804-402d-b34a-3517cae3f65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3aec525c-ec38-40cf-9e61-b692c44542a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4745456-e17a-4a70-9b4b-70f01bbfcebe",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0965c12-5c22-40d2-8632-c99873b1b7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f287a8a3-4b3c-4a61-8e5d-33c7a6567c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10d228d-fd30-4e5d-ad43-4c61d49299ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5dc8271-5bcc-4436-ab10-c9fec4bec4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335cd38e-ac6b-47fc-9316-9a7c50ed4b01",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48e17b1-2e6a-42da-a38c-edf26fc7cf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a09a8b-9559-4945-8ba5-e92fec0b0934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa84b63-5c61-40a2-8fdf-20f2c7827264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "957b34ec-9e54-4f3d-8086-3240e00369af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c42ca6-57bc-4365-a5b4-ef9709c5f816",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7705ce31-9f12-4244-baae-b37b53ceef3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a098d1e-a5d1-4bcb-a8de-8831805cf92b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd372ad7-0c76-4f37-9941-0398a5faac44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b87e307f-62b3-4ad1-bb5b-6691ee8c63c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff2bf42-8562-43af-a7f9-612aa51f1409",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37275559-3782-4e24-bb20-2e9c3b9e34a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571ea582-021d-421c-91a6-edd7c5470ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9578dfe-ee42-49bf-ba81-76ee1fc1da8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e50e332a-a4ca-4775-8d1f-395843bedfee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff15289-bdf2-4d7a-ad41-47c028a4d99e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b38ead7-52d5-42c9-ab21-30ddd0eba6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9530c30-c781-4eef-bb76-3b2f6aec44c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ebe97e-74bf-44be-8d44-1e55f2c0605d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99c57ddc-fdbb-4b3d-80cf-fe899b77892a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c70d6f-e41f-4e06-9a63-7d74c0e01bac",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "356e2c78-fe53-431f-aacd-cf3176378594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc13639d-41ea-4515-a79f-7e38c65c894c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a15544c-309d-4792-8935-32135e3e69f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db4d01a8-add5-47bf-bd96-7e9491f65b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e422e96-5c48-43b9-9c29-9d8ded3634c3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ded958-b03a-4e77-a09c-c14f941048f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0716e462-3995-4627-b531-b92dae52fb0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d545b8-2fa0-4d32-8e58-b9ae4cbd67e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f43794b2-299d-4d8d-afdb-aac21e4259ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf5b54b-3508-4947-a9bf-df0b263eaa93",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6122f9-5597-4744-9d99-936093df4807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e0eeb6-a4a8-4f9c-9d85-e322ee6c886f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83cd703-ff2b-4f94-b472-cd7578eba423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d118ff00-fb6d-499d-ab37-08a6b06ee99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c770e5-cf27-4ad8-aee3-a132d413fffa",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c54be94-730b-44b3-920f-a23fff607938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ebe770c-2e7f-4b0d-9ceb-8b83bb73b8a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0a3f34-32bd-4037-80d4-3b5173897b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7188faba-58a9-4320-ba3e-caeaa4cbf1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412e7a43-4142-4f5e-ad94-1ded92c6b31e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bcb948-d2a6-458c-b14e-93adba0ee1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c63fd0-6e74-4bc1-bfcd-557adc262048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22935a55-1cd6-4c9c-99d9-7c908da94834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a8b573-10cd-4a2e-9e54-31e1064b5f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a019665b-543a-45c1-a432-49ea79f2137c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3cc487-0194-46fd-b24a-ece895bbafc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a8210e-bb4b-4717-b174-68ec3938dd6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83932cc0-d63d-408a-a91f-2de2f28d23f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fc5b5fc-c535-4549-87d6-843ed691c54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230cce52-c1d3-4e04-9b61-6f0d5f8ddd6c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bca9c5-e023-4793-8d98-277dc899b910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec1b6d7-93e0-4cf6-8887-9c6f6d7b776f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d2859c-6006-4b89-9424-dae44dbf628d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f380d608-1de5-473f-8dee-54ba92994291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8736546-4ca8-40d8-9c9e-5f475e98e6b8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb28f7e-9dc8-4271-b430-dae5289bd3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba87cbc-baed-4a5e-8e81-89a8c606a6ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f79b18f-c9a4-4f29-b404-8cc54cc39f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "74560fb2-1b9c-4fc6-9c91-c14cc8ac3661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a223eb33-f438-4e5e-84cb-f2587b1dcf0f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b087380-fcd4-4c81-bfeb-ac5c9e202f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9baa2d43-35ee-4d1c-8fa3-cef0373a174b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08505ba3-bb91-45d1-94ae-4d51c5eb7c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3384c770-8bcd-42f8-a269-cc9b9b2f5878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ae04bf-4e10-4f5a-aa42-bd9ab81d682d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99da70b8-2239-47bf-95bd-7def9bc00119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e59d3566-155d-4168-9608-c61fd9d97712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0b160f-17fa-4b61-908c-5288db83054b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "425ec1fa-af81-484e-b05c-0b325d2a6177"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f1cdd733-91e5-41b1-b6c1-95911cac4e53",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b201bdb4-8e89-4013-bd61-1be998c3e2f5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "798b8800-52bb-4f56-b46b-6d115958c331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "403b92c5-3928-4711-b409-80876cc69602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8385c343-cfe5-49ca-92a3-78085b195010",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "9624909d-d4f5-455f-b459-b1786dfa6ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c69f838-c322-4d59-a353-78720d562326",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99263d1-c1e9-4211-bd9f-a34b0fc19751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f126ea3b-36e0-4e48-a1ed-8ac8b15f2fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1883f19-60d2-4b96-afee-47cc9ed53074",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "d207dc2e-4bd6-4375-9336-21a40d383515"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6db4678-9c2d-491c-9779-f04d38a74caa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef9a1e93-f1d3-43b7-8780-331e8e15af0d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7613176b-8109-45bc-a4aa-c59abb815437",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b6e3a53-9413-4b7b-b61d-5ff4a1d9a0c6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "541a6d93-e7c9-4d92-be73-9749ae2c053e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "17b597aa-2558-496d-bf75-a489399d7e5f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fb77869b-6cba-4e42-ad50-ee03d7686e7f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3f2022e4-114b-42cb-918b-6a5715f7dfd7"
                }
              }
            ]
          },
          {
            "id": "69bdb304-919d-4d09-94f2-e907f51bfee5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "adcaa7d2-cc5d-4e3e-8be4-e1af6f99277f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b5936c0-7615-4df9-abba-f50787f05e6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e70816c-00cd-4083-b0dd-3396c356830c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72fef88c-71f5-4561-8bab-7aca29d2c02e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "35e66abc-3a28-4b94-b221-07e8e03bb335"
                    }
                  }
                ]
              },
              {
                "id": "7a9e88d3-98f4-4c2b-a2e0-45eccaa27cc7",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "faef6de1-578e-424c-901e-c3e54e0b2d80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6f8ae4ba-6cf5-4fc4-8d4a-f3bf33d20a35"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "263f0d20-4c30-4963-9ac0-bbaa2a02d438",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dd7f3819-8c44-4042-89f4-aebe56398aa5"
                    }
                  }
                ]
              },
              {
                "id": "e2923251-a840-4023-8cf8-036fa4989d3e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f5824e2-3800-4960-a08b-295103f75fee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a21ea64-b137-43a3-8b70-1bfe72c26f60"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0ec3366-0da9-4d62-933b-9ce1e30391ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "32a90f1a-9cc6-4ee6-989d-13d4d12ca460"
                    }
                  }
                ]
              },
              {
                "id": "42defe03-5ce0-46dd-9f23-f9c53c2625ef",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e26a299c-96a2-4b97-a2af-0dd0f1606787",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "15fe51b6-ac3b-46c2-8b9e-ffd1665eef43"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d98819e6-9ac1-4180-be4b-825d4905b521",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7c884189-18a0-430d-b5d5-ed6ccc23e1d4"
                    }
                  }
                ]
              },
              {
                "id": "3fd8374e-6533-401c-af6f-6dc90bfcbff1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "703c20c3-a24c-4875-a7f1-d2bc7b7dee48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "439c78ae-ea83-4dd6-852b-d32b8364df39"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb14d7be-180a-497c-9110-7088f70fb9d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "956c6abc-d759-4323-8a7c-4b4b019b60d1"
                    }
                  }
                ]
              },
              {
                "id": "27d30459-b634-49b2-aeef-bf21965145f1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0fbdfd9-46f4-41de-b02e-0a272c649bc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b3a80042-ba1a-4c25-a3cf-3c523a1376e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22b713e6-a751-4e39-8458-b3d16db28eb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "78194d4d-97cf-4f0a-92ab-3eb748449b66"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4d0ed583-f602-4ad9-8599-654c65c54e51",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c77ac837-7919-4083-82cc-d702210eccc0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e4ff2f16-6ea2-48c1-b5ba-098b10cc2cd1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3963d2ae-3df5-43df-8ed6-145bf75d37ef"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b2514ee-6b3e-47e7-a392-8b869ab950a5",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b060f2e8-7778-4381-8969-898853bbf244"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8e089be-e324-4b3d-b8f6-e2e429bd38ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a69c6029-73b7-494b-b773-873e539cd777"
            }
          }
        ]
      },
      {
        "id": "bab4bcc0-d64e-40a0-be2b-cd2a62325779",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "19630f07-e86a-4c30-b049-1d8b2f22df38",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86cd01bc-7cdb-466b-8182-a8ed5f9f55cb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8327c9b4-eed9-4e05-9dab-0c103572ec29",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c623db-53c0-4f8e-bffb-fde6d7ce9c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9014886e-743b-4cc8-bb14-13b2b81aaf8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e351d1-4f73-4c3b-ba5b-00b779b37fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8778c00a-a0fd-42b3-add6-d4e2be22394e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9b28ca-be1f-421b-98e6-d9bff103c847",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b5a538-08d2-4909-98b8-2aeaef9f95e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e69056-261d-4889-ac5d-dcdb4c3f155d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5d40d3-56f3-41ce-a2fe-53064da0cb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0cd0b5-29d3-4db1-b767-b4705b91fd02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c4460e-1820-4af8-a6dd-f4197924e96e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92904a04-1d7f-4ae4-b3e0-116175d3f962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff5e163-3e77-4f43-b6f0-e4111029864b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609ceae4-0ba2-4942-a92c-c1f961578561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78a05115-c267-4449-bda5-b0526ee31f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a713c1-58d6-4bb8-ba42-14f780f6db2b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d4441e-d48e-451f-8352-53e699c6db80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dcd6261-792a-43fb-8769-a35383507cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d80c20-1913-4d8e-a17c-6e8767ad5802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45cac6a6-b90c-4be0-b646-025ea3b29031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c1cd6b-a90d-4383-a7e1-9cb9a3d7bbb9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cf1123-9503-41cf-b234-516fd962a547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b75748d8-2634-4bee-a7e3-c796cf23c6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c682049-d52e-4ef8-9824-3c29624a6cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a5604a-6d58-4626-9d6e-031445cba7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da527f9-4cc8-4a9b-b8d7-71e2a6b2c685",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6c3a5e-98e9-429f-bcf1-019693fdf581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff967e3-ddeb-49ac-9e33-8dadb19b88a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a121975-171a-4f20-a830-43765c8f2f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "36639456-fd9f-4685-94a3-f272d9255c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8480af8e-f80a-4542-8f98-f32433a1ac8d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31ea747-9325-4df7-8a14-d753b31006e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "029edc08-c13d-4366-b197-9b38d6b51411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f395579-ba6c-435f-8c08-02cbc0c68d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "93c897b7-c55e-4f4f-a971-f2208cc23ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edc1890-f1bc-469b-a218-8de7089bab69",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013a9b0c-5aad-42b2-a2ac-544d316625e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf9f6cf-3cb3-4e3f-9a29-8c6fbcf6e431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de782c8-0e84-400b-98ba-1885cbd4dab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1797559d-a464-49ae-b8dd-3dbd46d54084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8ef358-4583-4b88-ba3f-f7247189e960",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b7bcd8-fae3-4684-bc60-d3f141316f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b72efa2-51b1-40bd-98b6-7b897bf04916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c84385-c50a-439f-b35e-919abdfe44ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c64a6c66-9028-4b19-9fca-e6b49c135965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699a3deb-a7b7-408e-955f-a12f88fd2964",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d28d9e-f3ba-475a-8cfe-d239dc074ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f03e268-132f-45c7-a377-57c20c6588a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b491cdbc-2c0b-43ad-adc8-5728e5b880c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d452aaf-5380-4543-88ad-844cc787961f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa6d678-f22a-430d-908a-59a569dee10b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27df884b-571b-4416-9d1d-e24cbf5ce70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925ce034-3731-4e9c-8825-87a4691dac11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79952a8a-f0cc-4196-8c5d-08982bbe2e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5301b0f1-7978-42eb-ab4f-ef6e84f4098f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cb7342-520c-4888-8e9d-61b06cae8281",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e8be5b-1cc6-422b-8289-dccdd4db79d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dea9e2e-056c-47aa-a0af-315cb6cebe95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef67b12-91cd-4b49-859f-e0ea8493e57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f6da611-20cd-464e-9ded-3e4eeb97d7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8159cd6c-727c-4be5-8bad-04aec7f9bc69",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83a5e1d-ca96-4cc7-a5d1-b36ea14f1f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf5ddb5-67cd-4865-8756-22eaf1720321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98c4a51-4d8f-48a6-a192-fbeb70fd23ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "82bd47d1-249a-43f8-85ec-95b4dc623930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceccfe8b-0eb1-4639-9bdb-9e9f20bd0e58",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84425f0f-5952-4b20-b56e-64f5adb3d04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34757e77-19e9-43c4-be54-88c6d82a207a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9eecd18-23f7-4cf4-8c94-4c29be477e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dec4e017-ea06-4c29-9104-94454fafbf52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9bbd08-6db7-437f-b7ef-acb905c3f6b4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10709a3-5e03-479c-9453-41a50eb66c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b5cacbf-7032-4e87-b54f-816005d0f38c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937fe20d-7f17-4df5-968f-b7d99d5b3146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "74e2151c-e592-41ff-b9a1-cebcd49831b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d283cff3-fe38-44c8-8834-33f47829bcfa",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51db903d-9576-4d5d-b7d6-e27b5b136f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6c5df2-e374-4d75-b386-7a6dab979b9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43b3c14-6384-468a-a845-b68e05a2994b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8650a196-3125-4102-9ebc-5432f527f2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb7e2ef-45fd-451f-b72f-cae2cdfaa065",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e4cceb-cc9a-4ee1-a472-28dfa3c4397a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f2e29c-c679-4054-b01c-ff7e822bce5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13674b86-75f8-4ff5-b4c7-3a302cbe9a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "16f903d3-c471-4bc4-b935-5db160bdd7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46974e35-6d8f-4552-81cc-69c3a775358c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb0d028-dc81-4d19-87b3-d28c3d1020ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5863eb04-28b0-486e-92de-14d59bfabd11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad43e103-90f9-4b10-b470-7018da699f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9546f6c4-03dc-4140-a49c-3efcc4748a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49350a42-2b2e-42bd-9ceb-c7624e93cd40",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab85c5d-39a6-4263-b04d-331b8e856107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb4aaf0-d853-46ef-8675-5f6c07be9a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff759542-c2ae-4d1e-bd1d-9416e1026972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d34a6a12-ba6f-45ec-9219-90dc7b4e7b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb0478b-6173-4520-b65a-a51f871a9e3d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095a83c8-3069-4239-a15b-21f0fe538c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a569e6f4-6360-4857-8d93-d7f9a01c66a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5724f4-56d4-4d77-a405-62b6db842579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e89b093-9740-4eee-95b9-dc284f6f96d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5488157-e218-4dbc-b69a-1fdb971000ce",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6208ce1-3ef3-4eae-be5c-da520ba08f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f42a7fa4-a528-4799-8f40-80d8f105555f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a58e789-7897-47d1-b501-26318597af58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "891a1747-e596-4750-afef-63961f6847ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b312765-5fb6-4a3c-bc37-c2b66919f653",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "570706d9-3279-4ee1-80f3-ef222629ab42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9bbfc5e-1bf1-4636-9dd4-43bc97202cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca780909-1a52-420b-bec3-ce1575bed648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd234f4-4e50-4bc9-9dc1-cfcce74bab62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3683914a-00ff-45b6-9c79-1b3c724ab062",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916851a3-fce3-455f-82f5-2b59a12b5cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14acd60-26b0-4b5f-9fa2-60ef7e6066f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623fddea-2bb3-48fe-9886-f62b71a49feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd09129-20e3-4f19-93af-be55a0f4e5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4180c543-a8ab-4ff3-a485-dff10ec86256",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457ce471-ac28-4d8a-a6ca-c25b1dcb7a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a064aa4-b182-4d81-a91b-12f6634404df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d9ee17-5c21-4b29-9444-fbc74424e513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd610a7-1a20-4196-9832-b4329dfc64d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefa5fa4-3d74-4856-baed-3b1ea96dac3f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be03858-2335-4608-8e3d-878e63b8c5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd6601c-a5c2-4707-bd05-d44da84a8a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61fb1bf-5516-4569-8e31-9679103af70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84707213-7cb8-4ae0-8f1c-5dd52b9c4c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc6f2a6-2ca7-4595-85c7-f6f4c07f7861",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b9fe93-9cc4-4ae2-9e0c-4df88f398100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b4fc650-4510-4150-bc54-631a493c1d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4ea2d5-bc1b-4010-802d-cf24206a92cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afa72e3a-1ea8-43cd-87c3-f3f20324083a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af083b37-84f8-4dcf-bf6d-4d5283991e1b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee94df9a-a826-430f-b34f-e9e9f52b3e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ddf539-7732-4102-ba88-3249f558dbfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f202d178-d1f8-485e-b90f-929cc2d4982f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "279653e9-2b99-44e8-8ca0-ac0640e91605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223b9998-015d-4952-842e-850812ad5433",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6027d0eb-9f77-41bd-8a61-3288f3365eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d22d5903-130f-466c-ac26-a51d267aba02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7822e9f6-e503-4abd-afd2-e973fd1242c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14aca9ba-fba0-423d-8952-e216fadc1acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74447f0-87ca-4ed1-bce7-4ef1bdd21751",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565f5c03-5567-48ab-b5c0-a94b8f77605b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac0b9de7-ac59-4722-be98-c68e4db1615a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb607b3-6efc-4873-a045-fc6a4ce1c81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5db0de5c-bf6a-4152-9275-29a7b0b9169a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c040ba63-8a47-47c5-a1f0-3341efa4a469",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea201370-246f-4fec-8385-5117b40fccd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f4a33d3-c238-421b-9a12-9cb2cfc5ef5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32fc1eb5-eef7-4079-949d-573ecff62c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f1bb69f-488e-4a10-ac43-41eee36c7b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bd6aae-46a3-4029-ad84-e225aa0b6e3d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8e51af-32cb-4506-87a8-a9f22480a2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe3852f-5ccc-46ea-a33f-e4f6a18269aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e60a09-973a-442c-b8d0-c0ed0bcc8f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "341126fe-39b7-46e0-8d90-2637af4dea45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d4ae3d-2e3c-4882-9def-930e1614fb9a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d8d972-c5dc-4cdd-8f9d-02f631e9f5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a52dcf11-a003-4db8-a19e-0c2aa623ec12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf668ff2-e857-4b42-86ea-1403ab296e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "874a3076-daa4-4ba2-abf9-cdae57d75755"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6466535d-3c98-429a-a404-222e62c4bb07",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d924a8b-15d7-4981-9a93-0bd2fbdcba37",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21380de4-2f1e-4bc1-956b-5ee5f1035791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613b0e5e-5cdc-42a6-8b79-e9a66f500f7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "022bbeb8-7dc6-43c3-bc2a-6a2d3a6b47f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d117d98-0998-4937-b883-fcbabc9214f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f1f967-a9c8-4531-a9ec-b3b3f2d9d8b8",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d66f942-0bd1-4137-baca-883f1150fe1c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "85c8b9b4-0754-4c4d-b2bf-abb3e068b9ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dde07f0-7ee9-4c18-a160-3f4ed75010f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7222fec9-d37a-4055-a08b-25e63cede06d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13bafe0e-6795-4dd6-ba9b-124692d18853",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da6a0aa0-56ac-49c5-bdb9-a16ef21bb37d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32ea489e-437c-4476-8c57-6586472fb0b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14d6d845-546f-4824-bf5c-693ef4ec3753"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98b055c3-d117-45bf-9602-f2946d7ddce9",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "099a82e5-e833-4706-9348-991c639f136e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51866bce-c729-4437-826b-8945e9cde576",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cffad571-3b23-42d9-9d03-47d8fe85c23b"
            }
          }
        ]
      },
      {
        "id": "2ae4b8bd-7c39-43f1-a1fb-41c9ee146c25",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "201339f5-68d5-4ffd-aaf2-81fe8fca612c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "42cf91c1-9b27-4a1f-91f8-521e76e80145",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7ffff496-3f3a-49df-83dc-0ac93e2f42e6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3510218f-2c61-43c9-950c-22fb31d93487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea05efba-a07e-4719-aec0-6b3e66b18c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041c8e7f-ebb5-4501-8a5c-d5666580fbb4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd08264b-d663-4037-9771-f986d34a4e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d80b66-4dd7-4080-9bee-aa4da0fcdb2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d33bf6f-3c0b-4c9e-95f6-922133b58275",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0713cead-5b6b-4840-b584-0f04cb7951dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76fd8732-2d96-4f67-bb96-8b5f91b4bfb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74d2552-ce70-4307-845f-e79e9f79336c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7534a8f7-e40f-4314-9edf-6a91298f5a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222a1d0b-23f9-469d-b102-f5cee3229069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a59fd4-b3a4-4533-abeb-f47218cdb0ef",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9689830f-b8dd-4a15-bff7-bf935e709290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2bea466-42cb-4d41-9112-a5f9ff4f6fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012077ad-d82f-4bff-ab99-8751e6068adb",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4409fe9c-f8c8-4177-bf6f-365d30ab8ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61977ef8-b070-406c-81bb-9bed6000d0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733fb371-ab72-4954-96f4-390b28bc3452",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec288dd-dbdd-4e6a-b592-c3d8f7744e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ec14e0-d754-4d9a-abd5-10454cec5be4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ba7e3c-2ba0-4399-8e15-6dd071148333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4eaaf7-13a9-461c-9e5f-90f8d2560896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ce717f-2724-44f7-afe4-0a0ce2d07ff0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed03a45-f83e-4054-ad1a-26804e82a96c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba9420b4-7b59-4621-ba74-c064ebb40c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5830143-41bc-49d7-b79c-5a2cd18140f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a588942-6b58-4237-99b6-9f23c820f73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bcae07-d5dc-4863-8c53-88152963a737",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1cc7d6-61cf-4d0f-9113-0948ff27728a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12eb2a47-8078-4d7b-b8e3-aa16bdee3c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d095b6-5a9e-4221-8ce3-6e3abd49b56c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9759462d-aa4c-4541-b15f-53beb5eec8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e91508-eb2d-4592-80e0-22ee51af46a1",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e6c118-52f3-4b33-9d4e-005719ad5023",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93b8c537-f424-4364-ab16-557bc3661806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5b5186-9fca-44b4-96f6-22d1b7b86bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4423b128-62d2-4340-a96d-8f91550fbc4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1beb12c5-360d-482b-b576-1d034116aae5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a06cbd-1538-424b-ba92-48d5effaf0b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97053ca-06de-4265-b277-0b1f604e4eed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c250761e-d2b8-46e3-bff8-03c5ef9cf502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d783c0ec-493d-4d4d-b582-e6d6aef2b347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557ddc6d-4a64-4ea6-8cdb-d93787ad892e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b0faab-1964-4839-9e73-94e23c579b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "664564a5-8bbf-405c-8cf0-0c9739a683b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da13655-fe06-4dec-b73a-a299324e8d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "638a5d9e-4065-4714-8edf-809cc050fa4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea06a31-195b-472c-9e1e-013e35f60e49",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364f41cd-331d-45a4-8641-4f4333fc44b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cef43e9-3c79-4488-b146-27ffb430725d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee40e79-6b71-4b91-b81d-b473be771b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c54e7c37-b32e-42b8-9441-ac7753d2a5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6febe9b-378a-4f54-ba9f-767ece5820e0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96ec258-a7b4-4d1d-9414-da55b8b75e36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50e1b8f2-157d-4b22-bae9-6baa447ecc14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e7e945-42aa-460f-8d81-599cb59effd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4edb002d-c768-4ce7-a54f-5f1ec2161e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775050bb-9552-4203-8e44-2ccc5bb945e2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8bc39d-5e7e-4af2-a853-0a7f52b96373",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "267a7890-45b9-4d69-848f-1e74ebafbfe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc90620b-779f-4949-a156-9cfcf667a73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c95ea287-c327-4251-aae1-73cbfa736f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5179dad6-b898-435c-a0df-29d937da33c4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e1ebfb-9987-4f00-b9d7-3fad8da9b57e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ca30070-f2ec-4b49-9d7d-4a4c784c4cbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9c5a28-1a38-4305-a7bc-5dfdcb9d5c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb416315-ef34-4b2f-a9ba-ff7cc133e0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f0229e-a7fb-4b1b-910e-e604a9717a67",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44363b8b-959e-4017-8fda-052bdb937073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da68816c-b300-4e78-b1ea-f73fb434e49e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b87b526-a963-4d5b-a0ea-d5d2398f8042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6366802c-d2bc-4ac1-ab4a-5aa34f841950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e73dab7-64a0-4d5b-a1cc-596065614c54",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1475ddec-e883-4ab8-a00c-145b08046725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a94459e2-71a8-4492-be8a-82bc6099fc6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64f9cb8-fdc5-468e-b351-fd7d4106f9c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1247e4dd-e359-46d7-9c62-7b0ec19743d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4ef4fe-fe8e-4564-ba8a-75ef7dc3ae72",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad322e2-079c-4606-8f3f-4a0579d8e99a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca9504a-181c-4ad8-a03d-77deaecb1734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c85e9a-5006-44bb-a121-4e0de74a4fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a33b596-d7d6-47cc-8361-7321db68f333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054c479f-d4d8-4565-a36d-1298435945b6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d771402b-f18f-40b7-bb49-88fc07327c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e2ba83-1c93-4f85-8f0a-d97459f1f8c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fda068-c37e-491a-b604-c44f160c993e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e5f1ed2-9766-4eca-a73a-0489d8aeb05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8b1459-e1cf-42a8-b08f-96cfe84e197d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e41631-6e7b-4744-85b0-5e9c512e1a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21a75b6d-68f9-4c37-ba44-39dc17e01c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d94bcf-b683-4f28-bf44-a2a169631833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4b592e-4bdd-458a-a61f-7ace5c11ded9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078c03f6-80b5-40af-9a07-34da14f53b67",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61db244-7562-4e1d-aa6a-debf90407114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f5ff11-0b4b-4cfa-8271-4d52b0fc6c74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ecd226-feb7-4337-a452-b84e3490f8ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c492ffd5-11b5-424b-8a75-8b91dabd2ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ad10dc-33b1-408c-91d8-6dd59c21ed4e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a154b1-9405-4bca-9f5e-0a95fc8aa7f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c80521-f2a1-4092-a8ed-9be2166a3be8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad765607-03ca-418d-a98a-7c0b97695241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a7732c7-7f08-44b8-a6d6-e1652f80a3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1d9cfe-540b-40f3-b636-338003e5a6a5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663fa7f1-e459-476e-8e78-9d7105b968dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce20907e-a8f6-42ab-a152-d3d576e171ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4489c32-356b-49a8-840c-85f4693151f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0503d131-7aac-4810-b8ac-d6fc7b8d7542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e4b6f8-6b1e-4b3a-9519-b7a86e437dad",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fac084-ee96-4529-8756-4c3092553d8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "def0105c-9ba7-4a4e-b32c-cf498f579f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9999d0a1-56fd-47f8-a115-650b03890c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "970d571a-b0b2-453c-8312-08bb287dd95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952c3889-343c-4094-9c24-86d8a4beec02",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4996d20-7d47-4528-9a38-ed601c359311",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d619ecf5-c173-48bb-b794-acbf0c8c638c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aedf076-b2e0-42c4-a47c-78c8bc946088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e81d851-6d52-4531-9dba-3e3f8363c903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066ffd67-4a8e-4372-b6f0-4e7739e7dc24",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754c744b-a3bc-4292-8654-0cd718159cd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf1a900d-702e-485f-b40f-f07da7b039ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4aa8d0-5aee-4403-b40d-3088332a836d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76fe3f78-394d-4814-a0f6-5ab334a9f17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65fdb19-0436-4a62-8de9-601c8429e967",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a56267-5bab-4d90-910e-dbed301baf64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d91138-1816-47ce-9eab-6f4dea6565aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b6ab5a-dfc1-4b81-ac60-0f2176d0155a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604f2e60-77b0-441c-ba0c-69b3aa48581e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5298a4-a8f2-4d9f-ae77-4edbc0592c5b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d624c2-4e36-436c-be2c-2b7af2d1d9fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "792493c8-910d-45b8-9295-a03a6ebf0998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c67914-6769-4ca8-a64d-6048751eb1b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48f8294-9032-44f1-a84b-bff1d138ee56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db70c98d-4dd9-47b8-953d-d87d4265ab48",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd4ace9-5288-4b7d-8a70-bac2a440bc95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63f4b7b3-c6a3-4ea3-b974-3d16b3dd7ece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11cda9e-3266-4cf4-b8cd-a2b3e9c46793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc69087b-f385-4611-aba7-2200316aedf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591b6e53-40ba-4463-9c20-9509982f9392",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71b2728-6b63-4104-bc73-af984452d78c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f4f99ff-5c93-4f43-b4b6-d3de808e6b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0150a776-bbc0-40b9-9eb1-f1edef8f6a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12af3569-3c1f-4200-9c87-de7e6f655014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd004d7-4a47-4a73-a968-4401bb8ece48",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de942a91-14c1-470a-b0b4-252b953c43df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18ced25e-918c-4445-b501-07c66fa829c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04120a6-0047-426b-a623-6c444b8ff484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a061482-e591-4af2-bd65-1531f88deddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb48894a-8711-4953-b8b7-f574f2192c2c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbd115b-ad96-41ed-ac74-5c8491d8a4a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afa74129-b49c-41ee-aef1-7f51ebfe45d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9392c2-720f-49d1-87cc-435347220634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef4c9bd-6cc9-40d7-a0a1-83371262b15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6df980-e312-42f4-adf2-2241184e17af",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f5dca4-3f2a-45cf-8b30-5b599b4233ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cfd7643-2020-4eb5-abca-d6d9c7b49d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b74badb-ed7e-44d9-8ff4-3da730194d8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7832ca3-99e8-4f40-8b49-6468fb9b1e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8df9b9-4091-4a19-bb10-8e3fae099970",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0f010c-10d1-49d6-b5c2-cee158624d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162b5c88-c215-44ec-b276-d0f5e9baff65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ea226c-4de1-4906-93d3-31e14ec5d06a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcdf9d9d-6e03-40eb-b57f-d42b49b7b512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ce16f2-23c6-4201-9796-0245f9f7ef0b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184ea5e2-c230-4000-a0a0-8eb04c8d3033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24451d55-2460-4c8a-91db-1950791fac79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad386cf5-cf7f-4222-9eda-63b879054194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d9592d-e155-4795-bfc9-6278a87e0416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8753195c-8f16-41c3-9a06-371b2f98e551",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95251a3c-fd71-4ce9-8b24-f529989319c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671109ff-ff4c-4550-a9f1-60258ff50e6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dcf538c-e8cb-4826-8b2f-a823bd48cd7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92946553-d402-4cc2-84ff-a7bda1749a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533d400c-0e54-4f16-828b-0908e536899a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a1ea54-5e9c-4274-85f1-54fb10ebaead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e6aa31-79e1-4f93-b5e2-4d2985cbabf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "291c0b52-333e-4d23-9e14-b530e51f28fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a96b09-5dcf-49a8-abf9-71a3e23f7398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c130accd-42a1-4977-aeb3-7410ef43d14d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb04fe09-dc76-4b21-8f14-b480e9683b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43567158-20c0-4455-9978-7e0e480b2ef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e46ec80-1ffe-47f0-a3d1-338e397f1baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3c5b6a-fa98-493d-9cdf-e658e0570912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5d5fde-5b76-4276-99f3-f5110b0e058f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dff05a5-0264-4e35-a9ba-4199f5e891cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2cb2b0-e87b-465f-b903-518329220757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b481a256-c5c5-4a61-a1cd-3bdd820ac1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669b6b75-1c06-49ea-8cec-09410bba9325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c665d454-608e-43eb-b8a3-064b7437bbf2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf719b0a-81e9-4544-98e8-15118e24d620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a78a913-896c-4e1f-9e8b-70a61a739690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e22717-94be-44d9-abb0-21a40100ffb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c830b3-0bbd-4fb1-ac8c-ecbf968fdd97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307faf2a-f036-465b-ae36-2200b2dd206e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21450d5c-9138-4e07-8cdd-7ec0fb7bfc1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "798a2020-e064-4348-97a5-7ec587fe0a64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb34490-e93a-49c4-a549-b00165149048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df26ea6-3759-47e1-ba0a-5896d676a225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0420dd-d30c-473d-9f92-7be9bf319776",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010b1cf5-6dc1-4d2b-b2c6-624c7781373d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d652815-d66b-4e58-bba8-2c08dbc820ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82560e82-915d-466e-84f1-0dd744333f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d4676a0-668c-4da0-b9aa-d384b1c99c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8afe1926-c1c0-4495-b30a-bd7ea45eac76",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bdae412-a377-4076-a74c-39005d4f56aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c78655a-c3e4-4847-8e30-87fceca774f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc584852-ee3b-41c4-9c85-06637e14bd13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5daa5989-cb7f-4442-a1bf-55328417a13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d66196-027b-46cd-ae10-cd7e03fab49a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd228b67-5d65-4e8d-85bd-d97ce2c65aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ccba9a2-19cf-43cc-9762-2e7ee0ce0b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc79080-7149-4b6c-ab70-27cd1f96a3fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed5cd9d4-222e-41ac-b87c-130e1e4e928c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62eccd5-b384-40b1-b427-4e863b50fcad",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99a4b7d-81a8-460c-9909-ee85c315104c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc59e0b-30d5-4211-af12-a98320bf0a92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58b9bbd-06a7-473a-9eea-c4b671cd71d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4aca247-d7e7-44c2-8e88-eb1b94e3185c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5bcca8-d6d2-4b45-8d2e-74042d87795e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a003440d-4f60-4ac2-88cc-806da9f6b682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2a9896-6097-4f6f-ac7e-74bd0b737909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16950f32-fe66-4662-bcd7-919b577303e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08851b78-4425-4036-a91f-f961c4ef0ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d10989-f12c-402d-9110-9af28121146d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770c29b9-898c-4249-9175-24bd61fbf387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8023aac0-3e92-4a00-9b74-c65d0176582a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb026baa-3c0b-42a0-924d-1e4b3148dc92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bdaf5d1-60e3-4566-adb7-c52ac817a426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d873ac77-79dc-4366-aae4-ef6f1571aef8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9db27e-8cdd-4b52-adfb-768a4a7b7382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d96032e-3dda-45eb-96ab-2cc6e671d6f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3828b2f0-d0d1-4973-aa75-955dc29c243e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b18cec4-9ffe-48d0-b8e8-d206ab84adde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80e14ce-e8d2-4cfc-a05b-0c2e814fe34b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a229657e-084f-45b3-910c-fadc06cc60e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481646bc-2896-4dc5-8646-cb5ca05279c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6179b4c2-d3e7-4001-bb7b-04428dd035ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c6e125-705d-43b2-bed1-fa19233f3ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925a3f94-d5d5-464e-a19a-98ee35fa9397",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2287a38b-f88a-4f53-942e-f41ba4f65d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d12d1fb-1655-48bc-a7c6-040e963915b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b6548e-6e19-46cc-935d-4274f835d93b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3f9de8-fd7c-4c61-808b-d6f1d1b7d1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd6e31e-2fb5-446e-90f5-94b2f06519b3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93476204-9f5f-466b-a1e4-1d4ef5e11978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d499c10-6938-4fa8-8146-774019ec0092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b78212-aa19-4b7a-b3b9-24bc642e9c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a53e5075-6c95-4f77-af02-62cac4592951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200ca829-77f1-42be-b487-0a4ac224c622",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d351adaf-b0f9-48dd-82d4-b61454860987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf5906c-db2e-48d6-b24a-0549ac8540ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e97f4de-1215-4a4e-a548-04d202a7461d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170ee8b6-1425-4b23-9ae6-c66e2276c455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc480ae-4b51-4af6-820a-e3840d85bc8b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f3e3d9-1e0a-4ef3-bd94-16c8525f3741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b711b0c7-8b24-45e8-8a7d-875ae836f82b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac273437-406d-4306-90fd-f699cc4b8708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde74ee2-5cff-4d0f-b50f-99dbaffe9973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e6656e-0cec-465d-95d4-1f3a29960502",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f906cb51-2bd9-4fb6-ae48-21981227eb35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3f5518-cd3d-49fe-b165-0a09a9e2e06d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3dfdfb-3134-4ddc-88a6-7ccca1a27736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c1afedd-91aa-4578-8609-b63ded458a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100981fc-851d-4161-bda1-76c5364ac00c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d053ea1-c9a5-4cd7-8212-8c8811a4392f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d695a7-4b3e-464b-badb-983f9372934d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "241fff16-be44-4e64-b6e7-3e17431d4aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eedbe192-f3c7-4fa3-ac74-1f9c54828322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc469e9-961e-48be-8109-67ae70097043",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a554696-1bc7-4c7a-a65e-f79e0edde774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8078930-2314-4bed-803c-7b2e3d1b5f1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "281de5f3-76a3-4b9f-9999-940937f7b78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "279589cc-4049-444c-8236-34376c0cf4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a276643-0151-4d04-b526-2520fe6ad046",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6b6f53-8eea-4244-984c-fc9544966b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "894304c5-732d-40e9-b9c4-9c7aeb249ff5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "221fec34-238c-42bb-830d-465491cbc92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7b849b-905b-4264-856a-e48d75edb95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92888e1b-bbb7-4db1-9c3f-f6ae7c6fc78a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924ec399-16be-46c4-bede-c8d36b2516ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d369e7-119c-4d22-973f-d7c592a1b37d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a362217-2223-4585-8b1e-9980a1755e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4419e4f7-aceb-48cd-9112-cd2612ff0709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc938040-581f-4650-9f21-b633a7fdef3e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf465b6-c17d-4ac8-a87e-0c6ce6176c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a8d313-2b96-4397-8a48-1e20e778a959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb11db8a-f5f9-4035-bc9d-23c26e3c8ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d3804a-672b-4d62-8814-509d3a7aa7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f515e1d8-9b70-427d-8be5-5d6822a58783",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e100a1-ad0e-4626-ba0e-c193774c38a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8367ab2d-51a9-46c8-991d-fdff61592010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "723ca776-bb67-4d9e-912b-d89cd5b40eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "473031eb-a137-48dc-b1dc-00520685b60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac03f440-3b92-43cb-b511-d59ff386e7d0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b570f65-4f75-4bb9-99c8-1821793f5e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc68ad5-0c25-4dbb-b3d5-08a2898ef22f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f15d63-9493-4c48-884d-d21cab5770c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c7a7f2-5f16-4185-9ff9-9d2599129858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449cf68e-59f5-4a95-bea0-8886941912f8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4434509-f6cb-4d74-bb3b-f8888389732c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b602d76-8eb1-40bc-824f-5becd693df3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70685b97-8aac-40c4-ba02-f5f68e40eb51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e2fa77f-bd35-45bf-87a6-59171c4ec3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21cdf89d-404f-488b-b861-86b0f879db25",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e92eb56-a1e4-491f-88b7-6a38e29243fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd370afe-6e4c-4dd9-8bed-98cb00f863b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95b5b35-4ac2-4cb2-9259-5a586c3da784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d7aa0b-88dd-4edd-9b10-b183b4db3fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8949d5b9-2a72-44ab-8690-ccefa80a37af",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb4b8e3-3683-4748-b3bc-f2c3f6c34d31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b30fe62f-27ed-4fb3-9bfe-0ebc29e26cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1486d441-b31c-41f6-9f03-06aa0884efd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce84a8b-a8e7-445f-b456-19b9c838aaf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2212e630-4e32-44f2-a67f-980e9b565861",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff5b7ae-fa4a-444f-b15a-a6e534d8b228",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23f99d1a-69a6-443b-bf1b-a413872ad91e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36aeb1d9-9731-4ab6-8a1f-49c66c5078fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01c7dc6b-3aa1-43ea-9123-3ea7c54e8aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb973e3-89bc-4f26-8d31-c14d50afedb1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8493d61-f9f7-47c2-84c4-7bf038e8fa1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19a3214a-bbdc-4334-9b7e-edd6a72055e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a702243b-f374-4fc0-8f01-9fae08b00766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c77dfb1-083a-429d-be89-2ec328e45664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d97902-02bb-4000-ac40-e1481c4c5d52",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae400fb-6ac3-4d3a-898d-ecdaffbd1db6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1642d05-8b29-430f-82a4-392be600c573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "155de06f-f9e2-4e54-950b-12b4d20c5067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1032b48b-313c-40c1-8acc-bb37a4766dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e062ca-1f6c-4d6c-bb6a-3f81ac9fd420",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f27b79-4b3e-4a65-bff1-18ea41427a16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47e0bef2-9a99-4b79-9d43-7a7e8bd99c58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b31b02-0890-45b7-8609-abdf0b8a4fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9790929d-667b-446b-8ae2-10f56f82000e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a557f8-b18b-4282-b450-8f382f4c351d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a305a7e-f18a-4019-89aa-f3952eb1a87e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ba93bfb-78fb-4227-a88d-99f120baab86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc213c1-e1d3-4277-869e-623813151251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a88cf7-4dd0-41e3-ac79-79d9a3745b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0b492c-2bad-4176-9c5d-b194cfb1ded8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e657d63-91f1-4dd4-8cfa-143546b2c265",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6a25738-7389-4a7f-b7f9-96aa81365eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c100bd7-cb77-4c6e-991f-21af1f862fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14535b0-e5b9-4c5c-a530-239e17976178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2164ac7-1482-433c-8fe1-38ddc37dd5ad",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f30278-fce2-4e3d-8db3-184728519815",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab036a3f-9e01-4aef-86ed-8b7c3d92de28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "350bf1b3-73e6-4b32-bcea-e6ac7c654c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8928ced9-93dd-4718-895a-548d254f4b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbbe0af-063f-4759-84d2-ea5c7c7a235f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ac37f8-34b0-44d0-be00-132c142bed59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1a87c2a-9857-458d-a60e-1e24e59f2bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d283078-d36e-43fe-a335-781edd1ee816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643e81aa-5f1a-4a62-9b49-c73fc2603f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d471ec3f-3d13-41a7-b205-8cd7062f6c97",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1e89e6-fdfb-4ac9-b95c-ae1834211b35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5610dba2-d1f3-4731-a385-98bc7727bb8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3ad14c-42d0-43d4-949e-2ba4fb8907af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d946ded6-ffb6-4fb4-bfad-6fb31506ba83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a46846-644e-4563-8cd1-58c874d59a60",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36354e8c-594d-4bb3-aaef-62828c46be27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74ef00e3-9947-41e3-bc5c-5b3f766c99c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cad560-d597-450f-84e0-d0b00c122f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822909a6-79ee-44d3-88e9-c8d44da276c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a141d2f5-09b7-46ad-8732-fd1395af710a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c524272-658b-4737-81d8-f7c911b82fbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86ad3e89-0cd6-46d5-822a-01d3ecd6ed58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8ea355-5a44-47f7-a944-a74b65bcecd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0048e36-b26d-4981-a964-9bf20935ed52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19b9dd9-ef63-4893-8737-0aaf67cb1355",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff47e54c-f8fc-4b18-986d-43b22bf594da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e08e8ab7-31e4-4eef-a0dc-5d1814697543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80cddd8-9230-457e-8fe4-b565ef3f4f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f6184a-e97e-4dc1-9ea6-05c15c3b3e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ce9be8-aab1-41c3-99ef-62d545ea1123",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec14a8c8-b312-4b5f-941d-e4cca97e37f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a96e089-20c3-4763-872f-a0bda4940d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "300ea947-e2da-412d-8f8c-da5e8a346c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61414b13-bde1-4bdb-aef7-0f7026c2cbeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586ff26f-ce23-463e-b718-4f13c41b7e72",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c998d43-e445-4a4c-9883-786a3593627a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89c18dce-aee6-4a04-8b11-bd45e8b9829b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7adbc7-2a27-460e-bf2e-f8153e1ca860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa82499d-c3f7-48a8-97b0-b43a24065c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c9f7f2-9ca3-4b45-b237-d467117d34a5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b819dc3e-fd1a-41d8-8b69-15442e0efcd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8fcd9d2-a9e8-4c7c-968d-daa531b217c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9b402e-8525-455f-b403-afe9bce3fceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f819f973-2b07-4c9b-9a2c-456a68800f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdba9b5c-6629-4294-8142-0fd6bc75b01f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba16a90-4fa9-4c17-9e85-fc6058e05174",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2b32a68-1efa-4ead-a7af-7e304a054ed4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a23965-fc0f-4ad3-a7c4-c43f0daecb5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8bda3f-d55f-4f2e-b20d-420bfcbe53ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2b93bf-e8f8-40f6-a8cf-035e7e245c8c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d6b01a-53bf-48b9-850f-0ae9d4780a5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e1871cc-2f62-4fdb-a71e-4ab32350048c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "720fb3a4-cc8f-478a-9445-8e544450b2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74688154-e7f5-4740-a1be-3978442dce82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f8149f-8dd3-435c-a7d5-f0ac6bd22c19",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ab08fd-e844-4052-ab53-77dc23d05da3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5aab9f1-939c-469b-8b82-16c7d0d3927c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd92efd-0744-48be-a82e-f94d68b2e3f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a59332-4bfe-433a-ba3e-d443a076da4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9514b4a-030e-489b-912e-7a895a3d7dbf",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02edd73f-8751-43c3-b0ed-a72ec0025a64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7a51c5f-ae50-40e4-8314-06255cecb3de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c11651-24b9-4db1-b16d-e1dcc4e0216b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5cbfbe-bbec-43b9-a685-7a4f64149efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b35627b-78c7-4b6b-8eab-9c9d4c4f0ea8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3f37e2-c85e-424c-a742-136672165648",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a69d7724-605b-4612-be8c-5b5e10da807b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6dce9e-b745-4375-93ab-ad584655442b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15afc883-2b25-4c07-85cb-4b05118259b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf98e33-7924-492d-90ec-322876139ff3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9827e84c-4ad6-4f1f-aeb4-f7b5ad5bbe2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0c05d50-ad55-46d5-974b-0ecd3a7c3bf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0abff93-6027-4c6f-b77c-961c498b146d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230c8894-f481-4312-b5e5-7ce957484426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c255f0cd-55cc-4aaf-aa76-2e3b528cc13d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d81827f-bbf9-4e40-b4cf-90ad65fb1d10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d002043e-3316-4c9e-8eac-d6242b0ec8c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8095838-01f7-4353-8d79-6f20f4666aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "107e1e8f-ac9d-486e-bd36-9ef9b4fe95ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092cb3f2-a6d7-47a9-9f32-de9e31d79552",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2400d6c-2aa3-41e5-a454-bfbe200e80ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea8e0220-8da0-4b9c-8cc3-671e255c2dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "101e9421-26fb-43c3-a045-b88c0892110e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d17011c-754f-4b84-b366-032c9a7b5b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ef07fe-3ce0-4274-b914-491a1adc04a2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dee27d2-1032-4a55-bc20-21e8d9d5bd1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cb6a67a-34b0-4f99-8748-4bb71ef07d49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75891ce3-39cb-448c-bd71-a9a97864694e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4edb96aa-ef01-4d2e-b8db-c955b76e037f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3c20d6-bbbf-4dd1-81cd-66e15eaf0e21",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebe0675-004f-48b8-a043-6f0602ecf7e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fc41a37-cc08-4e09-990c-33fa0c5ebe20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47dead28-b12b-4575-b882-1b593b0979e8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c598ae15-e0ca-4e85-931c-f0f36f1bf189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47180e5-dd87-4559-8823-0f4b05654bda",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058747c1-b882-4864-85b2-e78fe81f826d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2508e19f-12f3-4e12-aa78-6cebfabe71e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7e5b86-75d8-45e3-817b-9f18d4c6da11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4488ac2-f5f5-4843-8950-322a913e4d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deef891d-4e13-4af6-8770-fe4d7c68758f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509f6f24-de17-4890-aed8-5d1032c3a930",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "872403ac-788f-4202-a42b-81461c1928cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc6885c-d183-4377-95e9-01ea7779e38d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e7afd6-0d61-4261-977d-7a2e94edecfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad68e03f-0fde-48bc-907c-3d8f0ebaa2bf",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5691abfd-4de9-4d44-9353-346114d03424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1816bdc8-5027-40e4-964b-627b332954a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ad1bea-eca8-4cf2-92ea-cf89afd81788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3265ef1-52b1-4b8d-9ef9-c8f6c56265ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f4b9d8-9c23-4b85-bdc8-8d788038761c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacbb16e-d482-43e8-8885-27fcef88393d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ba5b042-2499-4a06-bbdc-dccba6ac032a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17f78da-a9c7-486b-bfcd-a670f17f297d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5332b767-e930-4c81-9488-884e0e8e2c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41efa6d5-e19c-47aa-b1e6-9dd439d2dc4d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749a64fc-7f69-43f3-8996-ad814278534d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a63c1ce-6cdc-4f2e-b9d4-f3f1b1e33251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c83905-ddb0-4fc4-b677-fceaa6148a12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e7b9e7-a410-4c54-9e66-a00dfe05ccb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef14ab5-c591-434e-bf68-0b991fb2723f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7c0f40-1620-4ae6-83c6-72cce0d0bc2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cba9b1c-43ca-4268-8078-88072c06c6a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c558acc-bef8-46cd-91e7-116eae45e896",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab0d387-b217-4ec8-805d-900e49721498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f102738a-c8a3-41fe-83e8-3917de421857",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbfcb60-5a99-4682-bbff-ad6b242c6162",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a7e2b9b-4205-4813-99d4-247d996ec6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c254fd-0985-4d6f-b8e3-0bff37a8be4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ef77ca-17d0-4c47-b068-6a9423d40123"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eca9e2af-0347-4da4-b974-2c5b83d5877d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3950f4e1-6886-4581-bfea-f9bc0a5bd6f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26c04d68-27ff-45a5-af21-b67c78c6d030",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88c906a9-1ff4-4bab-85ea-382f2628df7c"
                    }
                  }
                ]
              },
              {
                "id": "45448ad4-85e9-4cfa-b228-61d8ae0e6c25",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fbfcdf16-fec2-4dee-9dd2-606b15192a62",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1790d7dd-2e35-4112-b716-497293637024",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bcca4cdd-2eac-4f2e-a3d9-e3120e9a33f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb99e6b0-5a44-42d1-b2df-a03fbfc5655a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1555dd8-4dbe-46d0-b64f-0fa7d1c826e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60cd3e2-1508-4b3b-9230-34ac5b17f525",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5d9b1d-d811-4fa6-853e-af59cdfdafe6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0686d8e0-a548-4ff0-a2e0-47eeff06480b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4c55cd-705e-4443-905a-08ac7f888550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e05ecc4-6494-47ea-adac-9b5940dcb717"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea427a67-bd55-4769-9ec7-b91a6d209db7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4f50ebe-2489-4b8e-bdd4-9f9cf6a4bf84"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05ae2aab-00b6-4925-a3e3-bd74f4bb386d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90bd20f5-1033-4e61-94f9-d1ed37ea54a6"
                    }
                  }
                ]
              },
              {
                "id": "6a240974-3bf7-4636-a589-014bf36a4672",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "199e2f59-2c57-418e-994f-72c410341387",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0ac788-288a-4ed5-a5f7-399b1899a40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "69361790-30cb-4d5f-9330-659ab6eeb610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ba0e90-c1a8-493c-9ecb-8bef0dd4cf08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c9a24a-c97d-4319-8278-128a21a25c55"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4672e173-6b64-44c8-a39d-ce69e5918861",
            "name": "Positive Testing",
            "item": [
              {
                "id": "540fb4f9-dc9f-4d9d-8011-44e0aed521a3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65157c38-dd52-42b8-a7d1-df564ee3c9b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cc87b12e-e8dd-4d10-8cd6-b1723bc7f391"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7afddc45-f38d-4e05-b932-ccfa76519d0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4a01825-719b-4301-83d6-c068e3874730"
                    }
                  }
                ]
              },
              {
                "id": "f47f7b1a-13c0-4f28-a27d-f8dd762f38d4",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca3d7910-5be1-441f-8cd7-2f466446f5f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3aaca561-7a18-464c-af52-f260fa4b0f52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1f19fc6-7b86-4dc2-9361-4f3604052399",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cbeafcf-c01a-4eda-9d1c-58e680b741d1"
                    }
                  }
                ]
              },
              {
                "id": "b5016ff7-7b18-438a-8497-2fa927615360",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fe6231a-547b-49fa-be97-5d4e0ee16796",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "05e9ce6a-7939-4da5-b2e1-f3f900345071"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ee82e03-b7ad-4dd8-beff-3d55e030cfe7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "190db253-aca3-4051-bc7d-dbecd6b23523"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f01bbc8-efef-40d5-9f4e-3ddde600ce5a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "89a2f848-ee85-4c2b-a909-c8f2541b244a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "666c7f38-4ea2-444f-b646-f4a8fe07231b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dae26d61-b99c-4a59-a388-30506e3d534b"
            }
          }
        ]
      },
      {
        "id": "66849545-06c8-4a2a-bd9b-a024c2a48c3e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d7a4ca2f-6020-4e02-be18-f1f2572e10cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b612b917-ba00-4689-bef4-987d8b336b11",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c6256a3-dd67-4e10-b04b-195f170f0297",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c600a6-3c61-4125-8d2b-1344034874c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "524ec950-5118-45b5-9917-8961bdf58eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9a82ef-6378-4ebb-a6f4-661d7b4a7de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1036a1b3-b4a4-4e2f-b750-576b6dc6a0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fdc213-0602-44d1-8ffc-e541f2d56026",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deaa7871-ee39-453e-b4c1-27451b9d815c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "02115feb-c0f7-4f80-8bc0-0f28039108ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d5139f-f410-4287-9ffb-a00143e713bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "791b9270-b503-43ce-bf31-19e7f7b99fb1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01b34a87-da27-4490-a0e0-6a4f359c961c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b50ef59-5368-4e34-a963-9386ae9fd172"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c943c768-7339-4bb7-91af-cdc589282b06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4626e9a-cdc2-4c7b-bffb-fe367118ce6f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b365eb9-428c-4286-96dc-5da5604b79b8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b6715f77-82bd-423d-be4e-06921c1dd2a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3e70229-df36-4bb5-9401-8b2e4233f535",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2992a2b3-2b19-410a-8462-76cb9dc3c168"
            }
          }
        ]
      },
      {
        "id": "33af983e-19df-4936-85fe-9cee0fbb65a2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2b350d32-7169-46a3-a2b0-9232d41e23f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "030911e0-3539-4fbb-9838-058f985a5f92",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31ba8af8-02c7-47c6-987f-c42f1c5f8015",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318815df-2a7e-45e3-9091-58e5f7da18a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "74e65e67-a3da-4db2-b6c2-bacd3148dcb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51355342-12a7-4fe5-9c69-2733eea05af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7967f46-23a4-46a1-a2bd-e1d3614ff93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a51c067-74fb-40ed-9072-cbec3d10ebb5",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d4cca1-0b6c-4a9d-9a5a-953178191d12",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2acc75f7-d110-4f8b-989c-180f07ba5bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49e1fde-f06e-4c2a-9e06-ef1b5477c9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfe141e7-f737-4f64-8e90-37fe56e70a2f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22029ebe-6f6b-4633-a6f6-0c70fcef7ed3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbd7c12b-432f-4b89-8e5b-3e965a52b8b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32557a63-e71a-4edd-8bfa-10db35d19cee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b867830-0519-45a0-9024-3199dcae521f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12b54d0f-1cf8-427b-a981-1a61a94b3ba9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "88610105-a37f-4481-b0ff-7e3f0d8e03dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab19c3b0-5eef-461a-aaa0-ff4678c574d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f7b24a5-f3b2-4f05-b819-acca59659535"
            }
          }
        ]
      },
      {
        "id": "26239061-b987-4a55-ad1e-f073796b935d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "78854082-42a0-4230-a106-3e4adbf183b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d5e28c6f-1c2f-4645-8335-13b5fbc1ccc5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b7c2ae3c-297f-443c-b232-b7e681908724",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365ee3f6-7354-4c10-af38-9dde2a26a18c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4f5c1e67-42d2-4c00-a111-c0e625878ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5840b5-2e12-4391-a5e9-992a5531d602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49c8682e-1c51-4e3d-8596-df0f5887dda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208fdfb3-979e-44ad-a11d-e7d6c9ef395a",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf6c366-2087-4cee-8a1d-4d9458e79b61",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bb47a982-b199-4f19-9f1f-0d5aafc31140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9337c65b-dc87-4816-8d6d-ae32e905fc1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6fd710b3-8ba4-4e55-b5af-f4174cdf9db2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9021451-f943-4327-bc0e-e59e6992781c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b310b730-347e-4ee7-8fe7-27e5739c24fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f587317-0f68-45d4-ad92-d1aabccad481",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a6cc8ef-f029-4c40-ab8a-ac3e9e1fb3af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e736ffcf-9562-42a6-964d-af85867cb7dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7c01b03b-cef3-426b-929e-c49a245d3ade"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f722bd5d-5cb8-432e-852e-fc925acfa356",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a4830813-95b7-4a74-9584-d21dfc48b94d"
            }
          }
        ]
      },
      {
        "id": "45fb0ad0-9910-4a3f-b863-c834b7bebc9d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa6affae-cb56-4e53-acfd-84de2ad4b91b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c776dc37-6b67-42b3-b247-4c28cca74d6a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0c3d3ab2-2638-44f6-a612-b02e5fcc0067",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0180a0b1-09c4-4618-861b-1598e4cdf4fe",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e30fb8c-f9b0-4885-bf9f-bc05f6b742e6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 536.7586206896555,
      "responseMin": 14,
      "responseMax": 4707,
      "responseSd": 495.6698312211187,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1669829754617,
      "completed": 1669829908703
    },
    "executions": [
      {
        "id": "35d56fff-75c8-4b3d-8eec-50d56a5f9a5e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9289eff4-9521-4210-b634-b38831538b4c",
          "httpRequestId": "cd4c6a45-efbd-4e1b-995b-3f53c01d6c2d"
        },
        "item": {
          "id": "35d56fff-75c8-4b3d-8eec-50d56a5f9a5e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0186f888-0456-4932-9616-66a8eda6c92f",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 0
        }
      },
      {
        "id": "e26a457e-7a5e-49f3-80c3-08c6b52a0a7b",
        "cursor": {
          "ref": "01005237-916d-4304-8394-cf31bee636e8",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d5786d80-ece5-4fc4-bd8e-c11005e77a1c"
        },
        "item": {
          "id": "e26a457e-7a5e-49f3-80c3-08c6b52a0a7b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "004f212d-2e28-4ae1-bee3-127f34ae5c85",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "0d482ee9-58dc-4bb9-96ef-80a23fbc27cc",
        "cursor": {
          "ref": "79de0381-e1e5-407e-999f-3c3e1843f65c",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "eb6727cf-8e99-4e96-8334-afd91214c516"
        },
        "item": {
          "id": "0d482ee9-58dc-4bb9-96ef-80a23fbc27cc",
          "name": "did_json"
        },
        "response": {
          "id": "eb28b215-4e42-4140-a005-6f8e9670d6c7",
          "status": "OK",
          "code": 200,
          "responseTime": 649,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf43ecea-7eb9-466d-a178-4696a995f1ed",
        "cursor": {
          "ref": "7dda9f6e-eb80-459d-b41c-db5d502154bb",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "da1c2545-0a8b-48f3-9923-4aa98af96a81"
        },
        "item": {
          "id": "cf43ecea-7eb9-466d-a178-4696a995f1ed",
          "name": "did:invalid"
        },
        "response": {
          "id": "7367a033-08f1-489c-b202-e081b04f7041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf43ecea-7eb9-466d-a178-4696a995f1ed",
        "cursor": {
          "ref": "7dda9f6e-eb80-459d-b41c-db5d502154bb",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "da1c2545-0a8b-48f3-9923-4aa98af96a81"
        },
        "item": {
          "id": "cf43ecea-7eb9-466d-a178-4696a995f1ed",
          "name": "did:invalid"
        },
        "response": {
          "id": "7367a033-08f1-489c-b202-e081b04f7041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce34431-cb77-42f1-b5c3-a824c9a3614b",
        "cursor": {
          "ref": "b7320ca3-96f1-495f-afbd-5cfc34ec9873",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e2f9d648-dd6d-4b44-9006-b244251c7607"
        },
        "item": {
          "id": "5ce34431-cb77-42f1-b5c3-a824c9a3614b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5b109281-8952-48ec-86e1-f11f50b680a0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 584,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1524b8e-625d-4fd0-8500-6c9ba8354e8e",
        "cursor": {
          "ref": "1970c99c-d980-49dd-9a30-2a745d201120",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "35e8aa1c-75b2-478e-8f41-96e6a013a3ef"
        },
        "item": {
          "id": "a1524b8e-625d-4fd0-8500-6c9ba8354e8e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6d95ab66-611c-4da9-8ec8-375bceaee942",
          "status": "Not Found",
          "code": 404,
          "responseTime": 481,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df17f70d-e86b-4e4d-9dc3-5d33a742759e",
        "cursor": {
          "ref": "7d07ca25-7f86-4845-8aa8-33e32483591c",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7c2b1c0b-a596-4ea7-81d4-110b7e56556d"
        },
        "item": {
          "id": "df17f70d-e86b-4e4d-9dc3-5d33a742759e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f5a3cde2-8c48-4756-8b78-f13a611bdee8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7164138-87b0-4f30-bb36-103bce743862",
        "cursor": {
          "ref": "19336a8c-7316-43a5-b986-8f0b0d6dee4d",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "01da442c-a5c6-435e-b1aa-b4eca0f966f1"
        },
        "item": {
          "id": "d7164138-87b0-4f30-bb36-103bce743862",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d9f54eb5-f13c-49ff-95a9-48ce6ed79f13",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 508,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7164138-87b0-4f30-bb36-103bce743862",
        "cursor": {
          "ref": "19336a8c-7316-43a5-b986-8f0b0d6dee4d",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "01da442c-a5c6-435e-b1aa-b4eca0f966f1"
        },
        "item": {
          "id": "d7164138-87b0-4f30-bb36-103bce743862",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d9f54eb5-f13c-49ff-95a9-48ce6ed79f13",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 508,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d24619-a092-42d3-9a5d-bba994bc3aed",
        "cursor": {
          "ref": "1bde82b8-b3f0-4db1-9940-c0a7ad6903a4",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1f0311f4-4536-4422-8033-35b6dce8e7fd"
        },
        "item": {
          "id": "44d24619-a092-42d3-9a5d-bba994bc3aed",
          "name": "identifiers"
        },
        "response": {
          "id": "cc75d5b3-fa92-4101-9605-31b882e426d5",
          "status": "OK",
          "code": 200,
          "responseTime": 731,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0875bcf-0b6e-426e-ad24-ab7fbba3afd4",
        "cursor": {
          "ref": "d0da84fd-4809-4de2-aaf5-0eaafb51311b",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "89fe02b7-784f-4023-8aab-ce728e8c1f32"
        },
        "item": {
          "id": "f0875bcf-0b6e-426e-ad24-ab7fbba3afd4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "122ce18e-451d-4220-bdec-e438edf50800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0875bcf-0b6e-426e-ad24-ab7fbba3afd4",
        "cursor": {
          "ref": "d0da84fd-4809-4de2-aaf5-0eaafb51311b",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "89fe02b7-784f-4023-8aab-ce728e8c1f32"
        },
        "item": {
          "id": "f0875bcf-0b6e-426e-ad24-ab7fbba3afd4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "122ce18e-451d-4220-bdec-e438edf50800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e703158-1a80-4aa1-90de-8330dfe8998e",
        "cursor": {
          "ref": "af4e881b-b89d-4bad-82e3-0918c1906e59",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9c2ae72f-88ee-4b55-831e-2e5dd08e8f3d"
        },
        "item": {
          "id": "4e703158-1a80-4aa1-90de-8330dfe8998e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b7a8781c-e780-4f40-84d5-2f4c5efd99d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428c24fc-80f7-4e67-a43a-b940897181f2",
        "cursor": {
          "ref": "e6a18a7f-8825-49a7-836c-326ac62f6895",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "63af4978-1570-40b5-a4df-5b35afdc5bb5"
        },
        "item": {
          "id": "428c24fc-80f7-4e67-a43a-b940897181f2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1340d0e3-d0fc-4403-939a-6016e599f58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24899349-c222-4b2b-a6d2-4e117a961292",
        "cursor": {
          "ref": "7cd1f0f2-6e3c-4503-8da1-79c135d5cf3e",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4a50fd3e-d2ae-4fa7-b14d-49e85ed58e8b"
        },
        "item": {
          "id": "24899349-c222-4b2b-a6d2-4e117a961292",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "29fbaf74-e1a4-46bd-bb18-be9fee20ca9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f98828-e261-47cc-acff-c62003c1dbd8",
        "cursor": {
          "ref": "b266e91a-6360-49c6-8d67-87c5a35c1987",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7b3a25c5-1d00-4da4-a1be-adf64ddb771c"
        },
        "item": {
          "id": "a4f98828-e261-47cc-acff-c62003c1dbd8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9f77fe6f-aa5c-4ba8-8ed9-8118f2c97686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be825d4-8695-4d30-a686-aa25aab07341",
        "cursor": {
          "ref": "bb3d0037-9f5a-40db-b79a-32d70b545bd8",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1780da09-9752-4cfe-8aa8-018963a93791"
        },
        "item": {
          "id": "9be825d4-8695-4d30-a686-aa25aab07341",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6ad815cc-c2de-45be-98f0-197f1de9cde2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e18e5e3-b35a-4202-89b9-968ac89f13f9",
        "cursor": {
          "ref": "f4a8d91d-b4fd-4237-a3f1-8e3863d1a0f7",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8e66cc99-de3f-4571-98fb-4f917f6ead0a"
        },
        "item": {
          "id": "7e18e5e3-b35a-4202-89b9-968ac89f13f9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0b5f2863-305e-45d7-ac4f-ae2827590986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d3dad6-b1ed-4f9c-b308-b145bc786cd5",
        "cursor": {
          "ref": "cb50c93a-ec37-4725-b411-a27003e812df",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cda1bbbf-6b38-4a8c-9fe5-133875bda8c8"
        },
        "item": {
          "id": "35d3dad6-b1ed-4f9c-b308-b145bc786cd5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2abbe951-f243-4886-8126-92807be44f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052100c3-caeb-4523-a6fe-53b45f9f6881",
        "cursor": {
          "ref": "129321c9-8312-43d0-83c0-b4af4e1a3851",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6074fb9b-9ab3-4c3c-8855-43db6c3861b1"
        },
        "item": {
          "id": "052100c3-caeb-4523-a6fe-53b45f9f6881",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0c12253f-0b00-4462-8706-8ffa4a4409a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2af78ec-d857-4334-b229-b9f56be1de43",
        "cursor": {
          "ref": "d7748d98-87a2-4d33-adaa-e0f9c8a0513c",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8950fd3e-6537-4a59-8fce-8b894394a857"
        },
        "item": {
          "id": "d2af78ec-d857-4334-b229-b9f56be1de43",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "bb1e4a9e-3e1b-4663-8804-63c1e1ddf4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c639d1dc-d2f1-4e9c-8d15-80ee503d2b3e",
        "cursor": {
          "ref": "bd1776fa-b31e-46eb-9f56-3c5e9a602afc",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ad644df6-690a-4534-8113-ed167531d9f6"
        },
        "item": {
          "id": "c639d1dc-d2f1-4e9c-8d15-80ee503d2b3e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "baf012bc-985b-4827-bea7-4592f77c3d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 936,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a74ea97-4cb6-408b-add0-2999f5eee9eb",
        "cursor": {
          "ref": "570a08e7-38b3-441d-ace7-430f6a1394ec",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "768596f3-48a3-4198-819b-65295d58bc2a"
        },
        "item": {
          "id": "3a74ea97-4cb6-408b-add0-2999f5eee9eb",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "dcaa0785-fff9-464f-a738-5616652e52b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7a2561-4db0-47c3-ada2-47bf76b4a1f0",
        "cursor": {
          "ref": "e47dc968-eb3f-4813-a008-bfd0874de512",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "aec8ec54-3c02-4597-814a-f5864de5c909"
        },
        "item": {
          "id": "8b7a2561-4db0-47c3-ada2-47bf76b4a1f0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c1535da0-6873-4cac-827d-1705ea99849e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1505cf-c86d-4ad3-82b2-c54d0886177b",
        "cursor": {
          "ref": "b9a827d2-94e3-458f-b53d-c2497febb6c3",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "27f0827a-61c8-4e4c-848b-0048f6e2e606"
        },
        "item": {
          "id": "ef1505cf-c86d-4ad3-82b2-c54d0886177b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4b05dde9-9ff8-45e0-aafe-1951a76c504e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a18c66-0f41-47e0-9188-5039de163447",
        "cursor": {
          "ref": "5fbf13fb-8ec8-4c44-bd4a-a15ef506cffa",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8e60329d-fbfa-474e-bbe6-f26545f76c3a"
        },
        "item": {
          "id": "f5a18c66-0f41-47e0-9188-5039de163447",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b98707e0-bff2-49d9-96b8-445319b8ac59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3950bd6-9a5a-4a20-8f5c-1eff51cad27b",
        "cursor": {
          "ref": "aba83bd7-e8e8-46b3-84b7-c3ec76063244",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "01ce3342-c3da-42ff-a903-b88851d3a330"
        },
        "item": {
          "id": "b3950bd6-9a5a-4a20-8f5c-1eff51cad27b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "612bdd1e-813f-42b3-8f17-e80ac57b08ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a0479a-94e9-47a6-b6a2-f72eb064bead",
        "cursor": {
          "ref": "c6c11795-9abc-4eb6-8429-47574ad99179",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "770ce4d0-64a8-4fe0-9151-08530e752e1b"
        },
        "item": {
          "id": "70a0479a-94e9-47a6-b6a2-f72eb064bead",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e4482f9d-c547-4819-8c1b-9cbb4ef6e22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b756ebe-dc11-4f09-843e-7fe95144ae8a",
        "cursor": {
          "ref": "9bd165da-9777-49b1-8786-f9289e0d6fd0",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ea8cec45-4084-40ec-a3b2-cadbf1915549"
        },
        "item": {
          "id": "4b756ebe-dc11-4f09-843e-7fe95144ae8a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f2c308eb-9139-4ae9-9f54-67a1ba988747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c726cec-1e1c-4f68-8490-acb3e26b5211",
        "cursor": {
          "ref": "e2973258-71d1-49d2-8cae-5e4d780a00d3",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3ee1eb81-dcb1-4429-a8ae-aaa260e1f480"
        },
        "item": {
          "id": "5c726cec-1e1c-4f68-8490-acb3e26b5211",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e1723171-e492-47d2-a653-7fecaa4600d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1ba329-5e4f-4c8c-9f1d-a9cfd46a659e",
        "cursor": {
          "ref": "334f26d2-01f3-4705-b2b8-c0f9215edfc7",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1c7a6c50-7047-4863-88ec-ff00f79a0f25"
        },
        "item": {
          "id": "2e1ba329-5e4f-4c8c-9f1d-a9cfd46a659e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8ed4ce6e-3d6a-47ad-98a4-dec50ba9a50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f41f3f-2157-4772-b477-d449f25879ea",
        "cursor": {
          "ref": "18f30c49-a648-4b25-be96-cb31fa730ba8",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f72de776-319b-4f8b-8f19-e896eef85723"
        },
        "item": {
          "id": "a6f41f3f-2157-4772-b477-d449f25879ea",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "51137659-7fa7-4338-a72f-04f622800d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f060e63-72cb-4b9c-9944-d17b77c65a69",
        "cursor": {
          "ref": "b752fc2b-3ffd-40e7-ac79-a81919c5a68b",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "cc8b3ed7-78f1-418c-8f49-d8cf3b49beb0"
        },
        "item": {
          "id": "1f060e63-72cb-4b9c-9944-d17b77c65a69",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9b4254bd-cb2e-476b-b097-3704625cdd40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ebc2bc-eefd-4718-9617-ee83f73a7d78",
        "cursor": {
          "ref": "217b337c-bd82-45d9-835e-7dbe3ab00fad",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "dfc64d40-fb74-47f4-914b-326eb5bcf389"
        },
        "item": {
          "id": "55ebc2bc-eefd-4718-9617-ee83f73a7d78",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "741763dd-8d74-4997-8775-5fd299a5463a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af96fff-b1a1-419d-9a13-2cd81809b84d",
        "cursor": {
          "ref": "f454470d-cffb-4882-9b7e-74f251cc2618",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e52b4da9-10de-4aab-ba6c-33c6dc2e236f"
        },
        "item": {
          "id": "5af96fff-b1a1-419d-9a13-2cd81809b84d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "89fc372f-e787-4df1-adbe-7becf9b16dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccc50fe-3435-4447-a08e-fb182500efc0",
        "cursor": {
          "ref": "c609a7c7-2ae1-485a-a83b-13617b71edd0",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6f9bce16-bc2b-40c0-924f-26a87a788fce"
        },
        "item": {
          "id": "1ccc50fe-3435-4447-a08e-fb182500efc0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "13c27866-a1d0-4c21-8ee4-273aec795efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f1f137-3f49-4a82-adc1-aa184a8bb26c",
        "cursor": {
          "ref": "a1915249-0f91-4c15-bf8b-6ec55e2181a8",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "dd0a598b-e4f5-4ab9-b9b7-8842e3dd0c14"
        },
        "item": {
          "id": "85f1f137-3f49-4a82-adc1-aa184a8bb26c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dc40fb01-7bcb-46fd-982a-add6b484ab03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ee267e-82e1-49a1-a5ce-ea0066ff43ab",
        "cursor": {
          "ref": "c3d537cd-fb23-4153-8d4f-4593f61276c7",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cd1d9332-c1ce-41bf-8905-f3a9fb5f1fd9"
        },
        "item": {
          "id": "e3ee267e-82e1-49a1-a5ce-ea0066ff43ab",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "44dff6f3-f370-448e-ab38-e8f80fcf816d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b888c8b4-2b5a-4db5-b5ae-0aa1c7a509a0",
        "cursor": {
          "ref": "cb6f8a29-856c-4a36-9b31-7aaa45e4009a",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f2bd5b4a-b458-4911-9b14-16cb92f54b3e"
        },
        "item": {
          "id": "b888c8b4-2b5a-4db5-b5ae-0aa1c7a509a0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ace81068-a683-4379-860e-be35d24cfc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6db8e6-a003-48ab-97dc-030027297b28",
        "cursor": {
          "ref": "c496dd9f-b090-4f32-a193-bb82dd62b4da",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3c1610ed-07f9-417a-82ab-06a1502cc2c8"
        },
        "item": {
          "id": "9b6db8e6-a003-48ab-97dc-030027297b28",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "cb2f667f-2a50-4e6b-8d93-404223b5c113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb1b2ec-d2a1-4c59-a244-dc2c1e5d5031",
        "cursor": {
          "ref": "821a8c16-577c-4e0e-8cc3-193486cc7cf5",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "203088be-3189-4cd2-9665-449cc0902ee3"
        },
        "item": {
          "id": "8fb1b2ec-d2a1-4c59-a244-dc2c1e5d5031",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e75516a8-7eb4-4ec4-9d06-db7798fb5815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd887c87-1767-4a51-90fb-9631f13dc138",
        "cursor": {
          "ref": "a52a553d-0fe0-4e50-8d9f-267ad7a81d04",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1ea0b9ee-5436-41a3-8c94-9e2b68bb4212"
        },
        "item": {
          "id": "cd887c87-1767-4a51-90fb-9631f13dc138",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "676597ef-013d-42ab-803e-e85b4e48e2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db81bb12-d809-49e2-b6a0-15b2ada0fa5f",
        "cursor": {
          "ref": "31d0cfc7-3311-4a60-bcdf-ffcf7d8adca0",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4307ee5e-7cc3-4a37-a11b-569778c1b275"
        },
        "item": {
          "id": "db81bb12-d809-49e2-b6a0-15b2ada0fa5f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "12de158c-d805-40df-aeb5-e59622a0a464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06f5173-922c-45e0-915b-a30ba5890a78",
        "cursor": {
          "ref": "4a094650-0097-4063-b7f6-9dc86afa5e08",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5082676b-9380-45e7-b6bc-6f9f043e83a8"
        },
        "item": {
          "id": "b06f5173-922c-45e0-915b-a30ba5890a78",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "de0224ed-6206-4fc9-b651-aa660af5b8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fab234f-d84b-41db-9fbc-75f9a3375ee4",
        "cursor": {
          "ref": "9975ca48-07f8-4139-8d20-0f350108351b",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "48c84449-4b72-43c2-8593-25fdd203f179"
        },
        "item": {
          "id": "5fab234f-d84b-41db-9fbc-75f9a3375ee4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f62d2539-03f0-45de-bbee-769ca95909c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e68d09d-6589-4068-b15c-473882068a0e",
        "cursor": {
          "ref": "0568e797-4bb9-4fd3-ace5-a46403217395",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0678f388-dc63-4d37-9b07-e94363dfedff"
        },
        "item": {
          "id": "7e68d09d-6589-4068-b15c-473882068a0e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "73b59918-3f0e-45aa-bd72-863cca1720ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b4d258-65a0-46ca-a6f5-70dd4049b98e",
        "cursor": {
          "ref": "7e3b992b-c368-462f-aab8-8ba0d8709a2a",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4eafd5f1-5c08-4146-b9b3-ea3d9400e34c"
        },
        "item": {
          "id": "c7b4d258-65a0-46ca-a6f5-70dd4049b98e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d10cdfb3-bf31-4988-ba83-83b792894695",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 660,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc36385-81b9-4c98-87fd-bb4d4bcae668",
        "cursor": {
          "ref": "824dea9e-7025-4ef8-adbc-85a1a91bab3c",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4991aa9a-8cdd-42e7-b6e5-c8fb90b5f505"
        },
        "item": {
          "id": "4bc36385-81b9-4c98-87fd-bb4d4bcae668",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c384a44a-d3ef-4f58-b2ba-4de9a1b9885f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7639f74b-125c-49bd-a6ea-af061a83e801",
        "cursor": {
          "ref": "528f00be-59ea-4f45-aff3-3e84ff92f687",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "70b2a119-4a2a-4bb8-990c-fd8cbd420719"
        },
        "item": {
          "id": "7639f74b-125c-49bd-a6ea-af061a83e801",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "448be9bc-a6e0-47ac-942f-b3d44b552f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4927d16a-54be-417f-81a0-968bca9d006b",
        "cursor": {
          "ref": "9fe9154c-7496-434b-a8bb-7103ced8d1ec",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9543e374-b2f1-4b20-bb18-f94d29dd253d"
        },
        "item": {
          "id": "4927d16a-54be-417f-81a0-968bca9d006b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "98ec40d0-b77b-4155-a674-69fd8dc5193d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1be8bf-7ed7-486a-a2ad-bc6f3a51ee8b",
        "cursor": {
          "ref": "08943662-2433-4ed8-a7aa-485d96b53383",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ac806ad2-a922-4f34-bed7-d4511ab698de"
        },
        "item": {
          "id": "3c1be8bf-7ed7-486a-a2ad-bc6f3a51ee8b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f0d56ac6-631a-4be3-8f9d-b1f1112d5be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5362a60f-ca36-4cdf-b8c8-c45ae9fcd162",
        "cursor": {
          "ref": "c616bfe9-69ea-4997-9760-aad4c8ee29a4",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "625ebfa0-23d9-4a6b-86b2-1de910f8bd94"
        },
        "item": {
          "id": "5362a60f-ca36-4cdf-b8c8-c45ae9fcd162",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4de79e84-c340-444b-9040-6ce114d350e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d8a62a-14d8-4e75-8a43-38bee01a5b15",
        "cursor": {
          "ref": "4aedd9b3-e28f-4ff1-9209-c5bb33e4b055",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "56f02ce2-6fd4-45d1-a02a-d0c62858f202"
        },
        "item": {
          "id": "23d8a62a-14d8-4e75-8a43-38bee01a5b15",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d5fd6d17-e5c3-4d19-a5c9-684785d66ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d605e62-e3a0-4ce2-ab0a-5f19f7e53a62",
        "cursor": {
          "ref": "871159fa-7c54-45e6-8d61-d41983a71198",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "da12bb52-d5c3-4dc4-a297-778bee422f0e"
        },
        "item": {
          "id": "1d605e62-e3a0-4ce2-ab0a-5f19f7e53a62",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5efb3435-0dd2-4a25-a901-56b9a689c4d4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 610,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0f1179-8707-4333-86ca-84929c951241",
        "cursor": {
          "ref": "a68de014-61b3-4125-8644-043999b12945",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3bb04ec3-587b-46a8-a075-de2b32340b0a"
        },
        "item": {
          "id": "4c0f1179-8707-4333-86ca-84929c951241",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5dcc793d-46c2-46db-9058-3b569a2f3f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e35b08-4e71-49ba-890d-55d00823ff70",
        "cursor": {
          "ref": "889e5c1c-ba11-44df-b763-cf9447756a6c",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e45d0988-26cd-4f0a-b4cc-ac0ff4438bed"
        },
        "item": {
          "id": "28e35b08-4e71-49ba-890d-55d00823ff70",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7bd5cc30-3720-40b9-99e9-b639f1f6b667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e63fb95-54bf-48e4-a93b-d5fb2603324d",
        "cursor": {
          "ref": "2b4dc429-ef98-4f6d-b4d0-6b7ba4a6359a",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3101eef9-5959-450e-9f75-70d1151e5b5b"
        },
        "item": {
          "id": "4e63fb95-54bf-48e4-a93b-d5fb2603324d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6fe24dc1-77ee-4c14-ba86-e6e2850b403b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e916174-0cb1-481e-8e55-63d06aa62a23",
        "cursor": {
          "ref": "b256b8ab-5f1c-4dd7-96bb-e77bd7f2349b",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c9127690-a1a9-4863-bba2-5b6197872193"
        },
        "item": {
          "id": "8e916174-0cb1-481e-8e55-63d06aa62a23",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bc90e785-1ea0-4d11-a7c1-e1c3a8ab2811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ecd8efb-a9a9-40fb-b480-3110d909ef43",
        "cursor": {
          "ref": "a3e6bef0-5e57-48c5-9e43-298bbca5125f",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d5707eed-5a1f-49fb-9f70-6b5c2970eae9"
        },
        "item": {
          "id": "1ecd8efb-a9a9-40fb-b480-3110d909ef43",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "38cdfac4-bab5-4ecc-aab2-0fa0e1e9fafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d19f1d-8982-4d6e-83f6-4073d538d16f",
        "cursor": {
          "ref": "8d05d13a-3eaa-4559-b8c9-ec3d3c5dba1a",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4b962498-13df-43ba-a2da-0315ddd7e7ca"
        },
        "item": {
          "id": "86d19f1d-8982-4d6e-83f6-4073d538d16f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7fb873a6-f313-4fc0-9865-ec1336b456e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ce3e5a-c6dd-4aef-82d1-84d683bac40a",
        "cursor": {
          "ref": "a14c2e2b-65d2-412d-b5a8-284e7f553ae7",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ee06874d-5248-4078-93e3-1342c2f5fc48"
        },
        "item": {
          "id": "a1ce3e5a-c6dd-4aef-82d1-84d683bac40a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "da11be1c-1f94-4d60-86c2-e4a0b3c8463e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6dc5ae0-dad5-4d8b-867a-01706cf3b72a",
        "cursor": {
          "ref": "fb06cfd5-a2bb-4443-97fa-395ca9cf1a54",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d4936e2d-aceb-48d4-873b-25f896511f4c"
        },
        "item": {
          "id": "f6dc5ae0-dad5-4d8b-867a-01706cf3b72a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5fcc980b-4630-4149-9087-fecdf2dd32ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e463d777-c906-4ec2-8f49-8cd9bace2222",
        "cursor": {
          "ref": "527af4b1-8074-40fd-938c-de14053b5183",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e691fa03-0662-4a4f-899e-812e753bce33"
        },
        "item": {
          "id": "e463d777-c906-4ec2-8f49-8cd9bace2222",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "90f18f2d-b68c-4d4d-867a-a7a6e6c99363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47bb662b-2521-4ff4-9748-8005e7fb459f",
        "cursor": {
          "ref": "ff4d11b4-ffb8-4fe7-8e49-acf40aa0a51f",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2efa5a6d-8ed1-4824-9ae0-97afb8eb94d4"
        },
        "item": {
          "id": "47bb662b-2521-4ff4-9748-8005e7fb459f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "58c88421-dc99-434a-b6ab-3b7295b8289f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119d95c2-5711-4f03-bd21-06d2d437096d",
        "cursor": {
          "ref": "5469db82-c9bb-457b-af44-932d1f6217ce",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "575536ff-e998-4d47-8a9d-4338dded6c55"
        },
        "item": {
          "id": "119d95c2-5711-4f03-bd21-06d2d437096d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "27bbf59a-88c7-448a-b1ac-de373ab1d0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a997dd98-4bcb-4a11-8760-4c1d785dd780",
        "cursor": {
          "ref": "fff78519-511e-49c3-906f-b3a6ab1aedaf",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "266bbdb6-3c19-461e-be0a-f1b767bbe91c"
        },
        "item": {
          "id": "a997dd98-4bcb-4a11-8760-4c1d785dd780",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ebe02341-3940-4a01-a7c9-7dd1f5598e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754e061e-30be-45fa-acb2-0c5aeffcb93d",
        "cursor": {
          "ref": "0eb652ae-6dd7-4153-8a8d-34e32cb5c5d9",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d128923e-fc56-4b14-a122-f120f3569d23"
        },
        "item": {
          "id": "754e061e-30be-45fa-acb2-0c5aeffcb93d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6ae28d76-fe75-48ba-a9a3-ba0ae73d25f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d42771-6e7a-4679-a678-049c66b7f814",
        "cursor": {
          "ref": "ec438295-f510-4bcf-9512-330e6dda7ef7",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c274735f-0526-446e-b484-e5209cd31f29"
        },
        "item": {
          "id": "a0d42771-6e7a-4679-a678-049c66b7f814",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2f226f9f-5cb0-4b86-992d-01dfbdafb56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98a9366-5e75-4ebd-83cb-69cd45448309",
        "cursor": {
          "ref": "583a695b-ab49-4ab9-ab2e-d21547f9c52f",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4a9a410b-4ad3-4d8b-9f43-20c802d47a07"
        },
        "item": {
          "id": "c98a9366-5e75-4ebd-83cb-69cd45448309",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "dd4d1e06-acfc-4dc4-8fef-7891cf86296b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee7ed49-9557-4581-af9d-5fbcbc2b6d46",
        "cursor": {
          "ref": "8b06517a-7e2e-484c-869c-59a422c2f48e",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b099ac33-b76d-47c3-8f5f-37b3eeee6897"
        },
        "item": {
          "id": "1ee7ed49-9557-4581-af9d-5fbcbc2b6d46",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8777bff6-0a6d-4e85-8cc2-71d506cd292a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424802fc-771e-4f1b-a68d-14d586719d9d",
        "cursor": {
          "ref": "88ff669e-365b-4705-85c6-8613babf60d3",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d5063eca-d0c2-4640-898e-36580ec65fe1"
        },
        "item": {
          "id": "424802fc-771e-4f1b-a68d-14d586719d9d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c4676ade-a49a-4bcc-b5e4-9398660faccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f13545-7799-41a8-85cc-bdc35ee4ccc0",
        "cursor": {
          "ref": "2c61ef6a-6750-488a-9138-8f8dbdc6a23c",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3630bccd-3954-4124-b0db-d666cac2d883"
        },
        "item": {
          "id": "c7f13545-7799-41a8-85cc-bdc35ee4ccc0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c12563b5-f6d6-4756-9de4-8f31248abd2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d9f22a-4ce3-44a1-92e1-7ca220caca29",
        "cursor": {
          "ref": "57eb68ff-7f13-4736-99db-bd3e9d1214c1",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1575a050-a2b1-439e-8f89-5514cfc1d326"
        },
        "item": {
          "id": "93d9f22a-4ce3-44a1-92e1-7ca220caca29",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d06bff8b-0fa9-44d4-8173-a6f852cdfaea",
          "status": "Created",
          "code": 201,
          "responseTime": 2699,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "032834e8-015e-4a68-b9c3-4b57f6d92048",
        "cursor": {
          "ref": "c2ef338d-1457-45b3-8ce9-cd1e616ef1e3",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a8f62d8b-66e5-42ac-9cd9-413fe2b355af"
        },
        "item": {
          "id": "032834e8-015e-4a68-b9c3-4b57f6d92048",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5de5b21f-58a3-47a1-a4c7-2b67523fa425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b7ca85-7560-4bfa-88f4-d342009074d3",
        "cursor": {
          "ref": "f11edc40-4e97-4d40-b9cf-bbbb594d1f6c",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c254863b-38a5-4f39-9d7b-a517ea16e07f"
        },
        "item": {
          "id": "54b7ca85-7560-4bfa-88f4-d342009074d3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f8ef54f8-a5a3-4d81-9264-227067d7a57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74270031-ce31-40c1-9451-f23dbd132ce4",
        "cursor": {
          "ref": "dc0774a9-1b2d-4fb6-abd5-0cc67e4e1023",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d920a716-3770-464c-8c3a-14e9ef79dbe9"
        },
        "item": {
          "id": "74270031-ce31-40c1-9451-f23dbd132ce4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9fcfff98-f51a-4846-bb8d-af314e25016b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffbdf9d-cb00-42c8-bacb-c5d50a051cd1",
        "cursor": {
          "ref": "f7266a84-a60c-4954-b134-ce11095017cb",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9b2e0ce2-5a7c-4145-adf8-498eb13e0c30"
        },
        "item": {
          "id": "7ffbdf9d-cb00-42c8-bacb-c5d50a051cd1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8c82ede6-9543-452f-9437-246de67160ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a14e59e-545b-4dfd-8c5b-1e1112509d64",
        "cursor": {
          "ref": "67914eaa-1dc3-46d6-bd04-d1dba9d0e4dd",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1b61d595-f91a-4372-aedd-e599a83916f2"
        },
        "item": {
          "id": "9a14e59e-545b-4dfd-8c5b-1e1112509d64",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "02c70878-dac5-4153-b199-b503f89f25c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7521ffff-300c-4a1d-b6c7-78ac66c146e5",
        "cursor": {
          "ref": "b6a3e28a-9b78-4c13-8444-3b51e552b1cf",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b1c0bd45-3edb-4875-b28b-bc54726bcef0"
        },
        "item": {
          "id": "7521ffff-300c-4a1d-b6c7-78ac66c146e5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fccbc20b-172f-463b-adc6-2bf6fe985658",
          "status": "Created",
          "code": 201,
          "responseTime": 2538,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "46fe0096-e8a1-44ff-a77f-2da4578213cc",
        "cursor": {
          "ref": "976c8f6a-f239-4800-81a0-7b0a9ce7d7c1",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1a80c6ab-1c17-4f78-85ec-3597a21a3759"
        },
        "item": {
          "id": "46fe0096-e8a1-44ff-a77f-2da4578213cc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "76000804-acff-4ae2-9c84-211ddde35f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fcadd5-c562-44f4-9590-d71f0663a2fa",
        "cursor": {
          "ref": "a153b902-f7c3-4a97-8901-cc0b3efdee56",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "19826baa-744e-43e5-9bc5-4cc35c99db12"
        },
        "item": {
          "id": "37fcadd5-c562-44f4-9590-d71f0663a2fa",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4d09c9ec-136a-4f6a-8c1b-749e2aadd039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2343d5bc-07a5-439b-b95b-29568bba7226",
        "cursor": {
          "ref": "ed06b88b-6684-4616-a03c-dc293d9f50ec",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d72ccc0b-6e3d-4274-b922-951fdbe52d3d"
        },
        "item": {
          "id": "2343d5bc-07a5-439b-b95b-29568bba7226",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "fb14b939-0ce1-4720-8108-2bbca9eea88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8cf218-f2ae-40a9-bee3-380d4ab03034",
        "cursor": {
          "ref": "f9e44a78-8765-471c-8255-ac101a764f77",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "aa906b28-de32-4497-8d40-011a150be069"
        },
        "item": {
          "id": "7b8cf218-f2ae-40a9-bee3-380d4ab03034",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1f90c012-643f-4e4b-9ab6-71da14961934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7938e0-dbfe-4d24-957c-60034cd475d7",
        "cursor": {
          "ref": "7a16e75f-d728-4634-b531-6ae07ae07147",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b0afd344-edac-4b0c-b811-3d19113e156b"
        },
        "item": {
          "id": "ae7938e0-dbfe-4d24-957c-60034cd475d7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7ea25e3b-f035-4e63-b7fb-73f1f25b6fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2973c0a-6b24-4f85-86e3-9de9decfab08",
        "cursor": {
          "ref": "0344e617-a0ab-472a-981f-45bac1bee8b7",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "495af8ab-61b9-448e-b0c9-aadad41e9559"
        },
        "item": {
          "id": "b2973c0a-6b24-4f85-86e3-9de9decfab08",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3a8405da-7e01-4174-be4a-326c339f48c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1d4674-88bb-45c0-b36c-b22461f82230",
        "cursor": {
          "ref": "04103e58-1181-48e0-88e5-462b3a965e4a",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0eeddd2e-353e-4826-b510-3d9fba3220f4"
        },
        "item": {
          "id": "8f1d4674-88bb-45c0-b36c-b22461f82230",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1572f88d-28eb-40be-889a-387dafea80d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489865c4-52a1-4ace-8c2d-3f3e4d244b61",
        "cursor": {
          "ref": "b9dc414b-426e-46cd-95bf-9cf581db326f",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "dbd02e1b-0f09-47c2-b752-9eac80dc1964"
        },
        "item": {
          "id": "489865c4-52a1-4ace-8c2d-3f3e4d244b61",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a42ccebf-8d72-4201-aa95-19bb539898a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4d214b-2b9b-4ccc-a925-511e274d5516",
        "cursor": {
          "ref": "6310f26d-07e3-4f68-bd77-7e8133ac6069",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "34d9c8a5-e51a-42bb-9722-c8a0e72b7407"
        },
        "item": {
          "id": "ec4d214b-2b9b-4ccc-a925-511e274d5516",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3ff75bfa-53e8-424b-85b7-9dfd7f4b48fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4745456-e17a-4a70-9b4b-70f01bbfcebe",
        "cursor": {
          "ref": "a10c36ae-4bcb-4d84-b4bb-0be74f53b1b6",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e7b8d9bd-29dc-4dc1-a60f-dbb95bbddfad"
        },
        "item": {
          "id": "f4745456-e17a-4a70-9b4b-70f01bbfcebe",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b80b847b-28d8-440b-bd7f-988096c23bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335cd38e-ac6b-47fc-9316-9a7c50ed4b01",
        "cursor": {
          "ref": "69132b2c-17e9-4c23-8a50-8a2e7970e85a",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f9d5defa-b830-4e20-a8fd-bd40ef7d7139"
        },
        "item": {
          "id": "335cd38e-ac6b-47fc-9316-9a7c50ed4b01",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "dd222af0-ab90-4847-a141-614980667ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c42ca6-57bc-4365-a5b4-ef9709c5f816",
        "cursor": {
          "ref": "28c30ce4-ad88-4702-88e3-40963d4ff5de",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7b70052d-f4cb-43a2-bddf-2cdc6e85f296"
        },
        "item": {
          "id": "49c42ca6-57bc-4365-a5b4-ef9709c5f816",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f3249a7d-e5d6-4c42-b8a4-211c7c4fd555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff2bf42-8562-43af-a7f9-612aa51f1409",
        "cursor": {
          "ref": "759455c4-8bc8-4333-92e2-f4c88bf50795",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c01063bb-dc24-4d82-98e7-b61ff8ee298a"
        },
        "item": {
          "id": "dff2bf42-8562-43af-a7f9-612aa51f1409",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d823fe63-c503-472f-af22-82afd0aa1a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff15289-bdf2-4d7a-ad41-47c028a4d99e",
        "cursor": {
          "ref": "fda83f67-7c23-42f3-8a6e-cddf87016797",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2c9a0bd7-164c-4e3b-a682-0e56918ffb31"
        },
        "item": {
          "id": "6ff15289-bdf2-4d7a-ad41-47c028a4d99e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e7464c0d-80c3-49ea-b00a-19460a617a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c70d6f-e41f-4e06-9a63-7d74c0e01bac",
        "cursor": {
          "ref": "309dc062-6cd3-4b8d-be9f-30974a0f0be1",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "224d5725-d08c-4a38-8900-925c4b72031e"
        },
        "item": {
          "id": "98c70d6f-e41f-4e06-9a63-7d74c0e01bac",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "70a9c21e-535b-441b-8bdd-3797f790f29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e422e96-5c48-43b9-9c29-9d8ded3634c3",
        "cursor": {
          "ref": "d6598b9f-89aa-4b73-8f14-5c0fed5b7d2d",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "196407ae-7919-4b22-9ef4-4c75ca2aaf40"
        },
        "item": {
          "id": "9e422e96-5c48-43b9-9c29-9d8ded3634c3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "59070a1f-0511-45aa-9944-8d49ae01289e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf5b54b-3508-4947-a9bf-df0b263eaa93",
        "cursor": {
          "ref": "1d266e18-34dd-41b3-90ff-f244c2263703",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c216dd6f-1fa2-484d-89fa-696e67ef43c8"
        },
        "item": {
          "id": "adf5b54b-3508-4947-a9bf-df0b263eaa93",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "57e5692a-859b-424a-90ca-b64c9db83cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c770e5-cf27-4ad8-aee3-a132d413fffa",
        "cursor": {
          "ref": "a1eb0f68-805a-4513-bca1-1bbf2d0d76ca",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8e45f719-b1cb-4d28-a546-fd26fef4419d"
        },
        "item": {
          "id": "f1c770e5-cf27-4ad8-aee3-a132d413fffa",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bfe06b1d-04c8-445b-a9b3-040d0f62feeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412e7a43-4142-4f5e-ad94-1ded92c6b31e",
        "cursor": {
          "ref": "1580daf5-7b87-415c-a85c-04745ff226d8",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d389ba2e-a942-4ed8-ab17-b4c9c963728b"
        },
        "item": {
          "id": "412e7a43-4142-4f5e-ad94-1ded92c6b31e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "40fed015-f944-4acf-a7db-edb3558c5a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a019665b-543a-45c1-a432-49ea79f2137c",
        "cursor": {
          "ref": "e87c43b0-c787-479d-973f-97e5b4e46ea9",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "39b47d4a-3c5b-4080-b858-fa12a2536753"
        },
        "item": {
          "id": "a019665b-543a-45c1-a432-49ea79f2137c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "df021e0d-53f0-4f1f-acc8-2c659c12cf98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230cce52-c1d3-4e04-9b61-6f0d5f8ddd6c",
        "cursor": {
          "ref": "b0d776ea-331c-4676-a454-75b7d9db031c",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bb2e7c3a-8e1b-4149-9b25-d2424bb955d4"
        },
        "item": {
          "id": "230cce52-c1d3-4e04-9b61-6f0d5f8ddd6c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3b84c051-e108-4161-a587-2f8a3377c516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8736546-4ca8-40d8-9c9e-5f475e98e6b8",
        "cursor": {
          "ref": "a4420b0d-d0f2-4598-b779-8d93aec89a52",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b13d64ea-f3ab-4d71-babc-8727de9dc183"
        },
        "item": {
          "id": "f8736546-4ca8-40d8-9c9e-5f475e98e6b8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6500c409-b2fc-4725-b20f-c6568b533204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a223eb33-f438-4e5e-84cb-f2587b1dcf0f",
        "cursor": {
          "ref": "a42d3968-e49d-47d8-8af5-8c395d74519d",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "86f0e9aa-ea76-442b-9be5-bae662a3c8c2"
        },
        "item": {
          "id": "a223eb33-f438-4e5e-84cb-f2587b1dcf0f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "90894b32-9dff-4b5f-9d37-5460e2d8a017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ae04bf-4e10-4f5a-aa42-bd9ab81d682d",
        "cursor": {
          "ref": "b770472d-9c45-4657-8312-98cace7f36fb",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b2ba7f8d-5e54-4192-8826-b720938cf7a4"
        },
        "item": {
          "id": "f7ae04bf-4e10-4f5a-aa42-bd9ab81d682d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "01d91aa3-226b-466c-869b-896e4b004291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b201bdb4-8e89-4013-bd61-1be998c3e2f5",
        "cursor": {
          "ref": "535a0799-2d1a-4160-b34d-3ecc0beda85b",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1ee711fa-70f1-4349-942d-6767dd033e59"
        },
        "item": {
          "id": "b201bdb4-8e89-4013-bd61-1be998c3e2f5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7ef269eb-abd8-48c3-a72d-3066543dad4b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c69f838-c322-4d59-a353-78720d562326",
        "cursor": {
          "ref": "7ba3dc5d-60ff-44d6-b53e-8b617e0f3866",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e52ba76e-9c5b-4686-b626-6a94520ce16f"
        },
        "item": {
          "id": "6c69f838-c322-4d59-a353-78720d562326",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "710cc321-28b0-4d57-9bc5-fb1082632a86",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 582,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adcaa7d2-cc5d-4e3e-8be4-e1af6f99277f",
        "cursor": {
          "ref": "73644f53-447b-4432-ba8b-a6415bab6247",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c8c2214c-6d95-498d-9751-7d4a34e2ae4d"
        },
        "item": {
          "id": "adcaa7d2-cc5d-4e3e-8be4-e1af6f99277f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b81249c8-acaf-4f94-b3a5-de198b6b8229",
          "status": "Created",
          "code": 201,
          "responseTime": 4707,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "7a9e88d3-98f4-4c2b-a2e0-45eccaa27cc7",
        "cursor": {
          "ref": "41ca4a46-d298-480e-a3cf-86a9a9afd83b",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e9cda18e-b11e-4526-b385-ffac8c27108b"
        },
        "item": {
          "id": "7a9e88d3-98f4-4c2b-a2e0-45eccaa27cc7",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "012647f7-a0f9-46f2-8d03-48afe3f1ddad",
          "status": "Created",
          "code": 201,
          "responseTime": 2958,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "e2923251-a840-4023-8cf8-036fa4989d3e",
        "cursor": {
          "ref": "c95c6962-4c83-4dc8-8e5b-ab20f2192548",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d50d4052-f1f4-442b-aa69-04b8c61a4e58"
        },
        "item": {
          "id": "e2923251-a840-4023-8cf8-036fa4989d3e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7f8f8026-ec23-4c9d-9b70-844df5824e0c",
          "status": "Created",
          "code": 201,
          "responseTime": 2528,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "42defe03-5ce0-46dd-9f23-f9c53c2625ef",
        "cursor": {
          "ref": "8406be88-9be1-4520-ae6c-bc1e090703f5",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ba7e65ec-3677-4d1e-b0fa-05e14c78fa16"
        },
        "item": {
          "id": "42defe03-5ce0-46dd-9f23-f9c53c2625ef",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "de6299e8-23bc-47b0-8cac-ead7c327a208",
          "status": "Created",
          "code": 201,
          "responseTime": 2854,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "3fd8374e-6533-401c-af6f-6dc90bfcbff1",
        "cursor": {
          "ref": "b9aa2955-bac8-44e4-ab92-e2008d35e4fc",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "59c64262-f978-4e41-99f9-b6ec6bdfe124"
        },
        "item": {
          "id": "3fd8374e-6533-401c-af6f-6dc90bfcbff1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "fc52e439-95e0-4c45-822b-6dede4e826de",
          "status": "Created",
          "code": 201,
          "responseTime": 2545,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "27d30459-b634-49b2-aeef-bf21965145f1",
        "cursor": {
          "ref": "dbc88b26-add3-48a3-9aa6-81fddecdc35a",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "427ce4c5-50cc-466a-9342-7de7ca83532a"
        },
        "item": {
          "id": "27d30459-b634-49b2-aeef-bf21965145f1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "086506a9-9a5a-4a7c-9094-66a578cdd6a7",
          "status": "Created",
          "code": 201,
          "responseTime": 3705,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "8327c9b4-eed9-4e05-9dab-0c103572ec29",
        "cursor": {
          "ref": "1814c841-68d5-4ed7-8072-3afcfe772939",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b11e3480-88d2-47f4-89d9-d682c373683d"
        },
        "item": {
          "id": "8327c9b4-eed9-4e05-9dab-0c103572ec29",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "62115eb4-2999-4802-b4c1-44262e727ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8327c9b4-eed9-4e05-9dab-0c103572ec29",
        "cursor": {
          "ref": "1814c841-68d5-4ed7-8072-3afcfe772939",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b11e3480-88d2-47f4-89d9-d682c373683d"
        },
        "item": {
          "id": "8327c9b4-eed9-4e05-9dab-0c103572ec29",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "62115eb4-2999-4802-b4c1-44262e727ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9b28ca-be1f-421b-98e6-d9bff103c847",
        "cursor": {
          "ref": "2ee4492c-4e88-4252-9d48-5fd3d2d5198c",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "de8f312b-2433-43b6-b312-d74a61cbba03"
        },
        "item": {
          "id": "5c9b28ca-be1f-421b-98e6-d9bff103c847",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "76fe5975-2629-4d4b-abee-655a261c0eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c4460e-1820-4af8-a6dd-f4197924e96e",
        "cursor": {
          "ref": "a5116c0a-68a8-42ae-bb3f-ed811e7fdac5",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "12cf63f5-986d-45b3-a8b7-fff6f62f0a79"
        },
        "item": {
          "id": "47c4460e-1820-4af8-a6dd-f4197924e96e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "59aedd2d-0e85-40a3-bb03-a7c9c84b4047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a713c1-58d6-4bb8-ba42-14f780f6db2b",
        "cursor": {
          "ref": "da992669-9dae-4df0-91a4-bb421dc515cf",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a4cb19f9-bb4d-4783-a9e2-767cf7aa061d"
        },
        "item": {
          "id": "a3a713c1-58d6-4bb8-ba42-14f780f6db2b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e688d593-d0d6-49cf-a54c-ac8d035ad67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c1cd6b-a90d-4383-a7e1-9cb9a3d7bbb9",
        "cursor": {
          "ref": "7fd1696c-98da-4e4d-b169-8e125ab767ff",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e0888430-6ec7-4ca9-a8fe-2b51d53d7e49"
        },
        "item": {
          "id": "31c1cd6b-a90d-4383-a7e1-9cb9a3d7bbb9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "59f3fc51-ca33-4672-a003-159cb313d1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da527f9-4cc8-4a9b-b8d7-71e2a6b2c685",
        "cursor": {
          "ref": "595534bd-16f5-468f-aee4-52bceb281e23",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "76e85c5c-2000-4c87-acb0-f5edb22414c7"
        },
        "item": {
          "id": "8da527f9-4cc8-4a9b-b8d7-71e2a6b2c685",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f1201148-d579-43b5-bf44-0a7bb4f7083a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8480af8e-f80a-4542-8f98-f32433a1ac8d",
        "cursor": {
          "ref": "eb74b4e6-7962-48a0-ad32-a77e5b6e5cc9",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a030522e-cf71-4872-8235-20441a8893b9"
        },
        "item": {
          "id": "8480af8e-f80a-4542-8f98-f32433a1ac8d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "29cb1647-f1c3-4555-ae65-b6525de7c2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edc1890-f1bc-469b-a218-8de7089bab69",
        "cursor": {
          "ref": "e4a83f14-c3a2-4d37-80bb-1eb0478c5d8f",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "47b8c6c4-9212-49cc-b5cd-6fc09299287a"
        },
        "item": {
          "id": "0edc1890-f1bc-469b-a218-8de7089bab69",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6992f94c-e4e1-4a9f-9f8b-244879ffdf4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8ef358-4583-4b88-ba3f-f7247189e960",
        "cursor": {
          "ref": "39ff6831-c1c2-41bc-8073-9f5826387cbd",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0fe4d4fd-d56d-4fac-9469-7a7d02ea5a9f"
        },
        "item": {
          "id": "2e8ef358-4583-4b88-ba3f-f7247189e960",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "efd61e5d-a39c-4375-8d08-02fdef552d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699a3deb-a7b7-408e-955f-a12f88fd2964",
        "cursor": {
          "ref": "39b3c9e7-1327-49a8-b022-d47d41d22277",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "02d8b0fd-ee63-4920-8f7b-55cf05e1432f"
        },
        "item": {
          "id": "699a3deb-a7b7-408e-955f-a12f88fd2964",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "31e58770-f5b9-4a75-b5a0-f5f6e14a24f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa6d678-f22a-430d-908a-59a569dee10b",
        "cursor": {
          "ref": "c63a1e7b-85f9-4df1-85d2-4f73141a88eb",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8a1a6a95-af28-49d1-ae2a-a575e267c835"
        },
        "item": {
          "id": "4fa6d678-f22a-430d-908a-59a569dee10b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "04bddc32-28e4-44ef-bc22-91e717051401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cb7342-520c-4888-8e9d-61b06cae8281",
        "cursor": {
          "ref": "568c0e72-df24-49dd-8759-eb652e2cb2d1",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a3e382d3-b47a-4e37-ab98-470e5e14bb89"
        },
        "item": {
          "id": "54cb7342-520c-4888-8e9d-61b06cae8281",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3168d557-28cc-41cf-b2ad-3019bcf00369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8159cd6c-727c-4be5-8bad-04aec7f9bc69",
        "cursor": {
          "ref": "2f900e17-e1f1-4121-b79d-b748f82dde65",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "59a6e8c0-13fc-4bf0-a840-1ef5b32dbb3e"
        },
        "item": {
          "id": "8159cd6c-727c-4be5-8bad-04aec7f9bc69",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8308eaf7-aa30-4606-9838-553e15e51ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceccfe8b-0eb1-4639-9bdb-9e9f20bd0e58",
        "cursor": {
          "ref": "262a7703-a418-4c1b-bc86-2e4c70177570",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9d865006-e17c-4415-8258-183da0fdf400"
        },
        "item": {
          "id": "ceccfe8b-0eb1-4639-9bdb-9e9f20bd0e58",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "025d6b9e-122e-4159-b4d9-5e1cef509ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9bbd08-6db7-437f-b7ef-acb905c3f6b4",
        "cursor": {
          "ref": "763974e5-6b24-44d7-a9fc-d67e88d705c5",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "213703e5-602c-418a-b431-82e50c9292a4"
        },
        "item": {
          "id": "9d9bbd08-6db7-437f-b7ef-acb905c3f6b4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ec41f887-c953-4b65-855c-275bdfe93076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d283cff3-fe38-44c8-8834-33f47829bcfa",
        "cursor": {
          "ref": "602198a5-caea-48aa-86e4-4fe0fe872f55",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ff049fd0-8600-4f95-8b15-f679d0c093e1"
        },
        "item": {
          "id": "d283cff3-fe38-44c8-8834-33f47829bcfa",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fa74478c-89a2-4f74-8934-177d01428b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb7e2ef-45fd-451f-b72f-cae2cdfaa065",
        "cursor": {
          "ref": "12e60b19-174c-4c91-a2df-0cf26d41795b",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fff6a7a2-8c05-4346-84db-c2d0eec994a3"
        },
        "item": {
          "id": "4cb7e2ef-45fd-451f-b72f-cae2cdfaa065",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2791b6bc-9387-41ea-8237-8338a4d1ee53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46974e35-6d8f-4552-81cc-69c3a775358c",
        "cursor": {
          "ref": "9695fe52-76a4-4c72-a0a6-96af2fae9007",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ba54a920-4625-4326-b703-7a0e7e029cb2"
        },
        "item": {
          "id": "46974e35-6d8f-4552-81cc-69c3a775358c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c99677e7-a164-4004-912e-a6b9c2554898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49350a42-2b2e-42bd-9ceb-c7624e93cd40",
        "cursor": {
          "ref": "f4d831c5-9339-4162-b5bd-998f9cc80745",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ccd428c5-9336-4d40-920b-f178e0b30dfe"
        },
        "item": {
          "id": "49350a42-2b2e-42bd-9ceb-c7624e93cd40",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a9b286d9-fbf6-41ad-90c3-b768bb73f7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb0478b-6173-4520-b65a-a51f871a9e3d",
        "cursor": {
          "ref": "56c2457b-63b1-49d5-9ce3-480d2435ba9d",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bbef90a2-efab-4d8d-b289-1f255bd0e393"
        },
        "item": {
          "id": "6bb0478b-6173-4520-b65a-a51f871a9e3d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c678c427-9ed1-4f0f-a808-a47275035b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5488157-e218-4dbc-b69a-1fdb971000ce",
        "cursor": {
          "ref": "68b6b7d2-f948-48d7-a878-3c980c991a91",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "07cb7fac-550e-470c-ab0d-73626370793d"
        },
        "item": {
          "id": "b5488157-e218-4dbc-b69a-1fdb971000ce",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0f35b9da-3c76-4779-b2ec-a9d884a68161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b312765-5fb6-4a3c-bc37-c2b66919f653",
        "cursor": {
          "ref": "f78f07b6-8264-442b-987b-252781150527",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1fe668e2-c3e4-45f1-86b1-fca9024f1093"
        },
        "item": {
          "id": "5b312765-5fb6-4a3c-bc37-c2b66919f653",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "faf613c6-08ff-41f9-a016-9226634f88de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3683914a-00ff-45b6-9c79-1b3c724ab062",
        "cursor": {
          "ref": "25abf78f-0db1-4ac7-9f38-e8a9ac115787",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0ff4e84d-a92b-48b5-b0fc-7e874accbd95"
        },
        "item": {
          "id": "3683914a-00ff-45b6-9c79-1b3c724ab062",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "80c6d81e-ff7c-4270-8652-cc014582cc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4180c543-a8ab-4ff3-a485-dff10ec86256",
        "cursor": {
          "ref": "1fcdcc4c-0958-4428-968c-41b855a0db5c",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "81d1009e-e917-4f12-a909-b371a6126066"
        },
        "item": {
          "id": "4180c543-a8ab-4ff3-a485-dff10ec86256",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d8997710-855a-4abe-8a8d-bab6af2ac583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefa5fa4-3d74-4856-baed-3b1ea96dac3f",
        "cursor": {
          "ref": "fe3b1746-71b3-4348-8ac9-3ec5b0232156",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "debf8663-aaa4-4ad8-aee2-15014eb1a9de"
        },
        "item": {
          "id": "fefa5fa4-3d74-4856-baed-3b1ea96dac3f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dafadfff-b71d-4b72-9df6-743effedb293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc6f2a6-2ca7-4595-85c7-f6f4c07f7861",
        "cursor": {
          "ref": "958203ab-45d4-4645-90d0-77bae3679ef6",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3b359942-8dd4-417c-902f-2789d900fd37"
        },
        "item": {
          "id": "9cc6f2a6-2ca7-4595-85c7-f6f4c07f7861",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3abe0426-bbbf-4a7a-b35e-c29d1ae169f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af083b37-84f8-4dcf-bf6d-4d5283991e1b",
        "cursor": {
          "ref": "206c66a0-4eb2-4848-b483-6aa27b0f5620",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8e54f10f-b792-4fbc-989b-faf068467db1"
        },
        "item": {
          "id": "af083b37-84f8-4dcf-bf6d-4d5283991e1b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1970b3d5-30e8-4641-82a7-837450c57cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223b9998-015d-4952-842e-850812ad5433",
        "cursor": {
          "ref": "e8412a46-a1aa-4fbf-bfb7-19a589d389d1",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b55de56f-2774-4bf7-bc65-b038545b5980"
        },
        "item": {
          "id": "223b9998-015d-4952-842e-850812ad5433",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6d3af480-1da8-476e-bd69-f5fa903cac91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74447f0-87ca-4ed1-bce7-4ef1bdd21751",
        "cursor": {
          "ref": "2df6b411-7e6f-4a62-bf32-4007e80716ca",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b58cbf60-e925-44bf-850e-cc8d2ee828c7"
        },
        "item": {
          "id": "d74447f0-87ca-4ed1-bce7-4ef1bdd21751",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "743ae7ee-b738-4473-a26e-feada06193eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c040ba63-8a47-47c5-a1f0-3341efa4a469",
        "cursor": {
          "ref": "94a983c0-9c69-4d78-8099-4e3d853ad55d",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "bdac7599-997e-43ef-bbbb-f4894807b78b"
        },
        "item": {
          "id": "c040ba63-8a47-47c5-a1f0-3341efa4a469",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "544450c6-ab9e-4bac-aec7-1110bc957d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bd6aae-46a3-4029-ad84-e225aa0b6e3d",
        "cursor": {
          "ref": "2f0e56b1-5447-41a0-bd56-4c3cd661993d",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "55f92602-e8cc-4819-9bda-42d7e1ebcc42"
        },
        "item": {
          "id": "b1bd6aae-46a3-4029-ad84-e225aa0b6e3d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2d56ea7d-a52e-466e-b49d-f1ff09f1623f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d4ae3d-2e3c-4882-9def-930e1614fb9a",
        "cursor": {
          "ref": "f3dca74b-16f7-44eb-817a-1c1d245dabd1",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "335ce3ec-8fca-4801-a9bc-a1feb3fbcc03"
        },
        "item": {
          "id": "c1d4ae3d-2e3c-4882-9def-930e1614fb9a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d7ab8a50-b03c-46e0-b33d-34831aea08f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d924a8b-15d7-4981-9a93-0bd2fbdcba37",
        "cursor": {
          "ref": "f3ef16aa-4f6e-4af1-a03e-c11b5dc1282e",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f7a3cf63-9f20-4a7c-b8b0-26cd9ae381d3"
        },
        "item": {
          "id": "8d924a8b-15d7-4981-9a93-0bd2fbdcba37",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1a88d4b5-214c-4ac4-bfe2-c99068a9e054",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f1f967-a9c8-4531-a9ec-b3b3f2d9d8b8",
        "cursor": {
          "ref": "e50e17ee-f585-4c7e-881a-dab71e3de3a6",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "166971e9-1d2d-4f6b-9007-a197142e92b7"
        },
        "item": {
          "id": "f8f1f967-a9c8-4531-a9ec-b3b3f2d9d8b8",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "e7fa7560-77ce-424e-bd8c-72d1a1a8f41e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 561,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffff496-3f3a-49df-83dc-0ac93e2f42e6",
        "cursor": {
          "ref": "a9cae862-b61e-46d2-a82d-6c250e47a0bf",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0a813657-31ac-4277-9f74-25c474bf3da3"
        },
        "item": {
          "id": "7ffff496-3f3a-49df-83dc-0ac93e2f42e6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "603f82a2-84be-4fc1-9d89-1e442f54673d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffff496-3f3a-49df-83dc-0ac93e2f42e6",
        "cursor": {
          "ref": "a9cae862-b61e-46d2-a82d-6c250e47a0bf",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0a813657-31ac-4277-9f74-25c474bf3da3"
        },
        "item": {
          "id": "7ffff496-3f3a-49df-83dc-0ac93e2f42e6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "603f82a2-84be-4fc1-9d89-1e442f54673d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041c8e7f-ebb5-4501-8a5c-d5666580fbb4",
        "cursor": {
          "ref": "6b1ef6b9-9c7f-4d1b-80f6-4ac7ba914a2c",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4d2131f0-5fe6-4541-bfc2-0e2567e84986"
        },
        "item": {
          "id": "041c8e7f-ebb5-4501-8a5c-d5666580fbb4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4172db76-91bc-43d2-863f-357974cc9c62",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 301,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "2d33bf6f-3c0b-4c9e-95f6-922133b58275",
        "cursor": {
          "ref": "a0c5a781-9907-42af-89bf-38e425c8b38e",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5f66cefb-9974-4f74-b52a-6487aefa4b80"
        },
        "item": {
          "id": "2d33bf6f-3c0b-4c9e-95f6-922133b58275",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c3370762-5a91-4aca-b422-0a37c0c9446e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74d2552-ce70-4307-845f-e79e9f79336c",
        "cursor": {
          "ref": "896e6703-65d3-4ac2-bdd5-86977e34ee77",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8ba7a0e2-e1de-4a6d-82f4-75b3513a9907"
        },
        "item": {
          "id": "a74d2552-ce70-4307-845f-e79e9f79336c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5b3894d0-0bdb-41c6-9532-1902d337c6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a59fd4-b3a4-4533-abeb-f47218cdb0ef",
        "cursor": {
          "ref": "78420838-7179-4c39-8876-a4b245236eae",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1732b335-0d38-4d0d-8994-fb679c55f450"
        },
        "item": {
          "id": "34a59fd4-b3a4-4533-abeb-f47218cdb0ef",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4774df63-d916-4c0b-96fb-b62b58bcd2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012077ad-d82f-4bff-ab99-8751e6068adb",
        "cursor": {
          "ref": "69818c1c-a537-44c0-af76-062e0f784d47",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a2770b53-09be-452d-abfd-c0562c7c15c0"
        },
        "item": {
          "id": "012077ad-d82f-4bff-ab99-8751e6068adb",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9f56a587-b64c-4bc1-b04d-b494666f4c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733fb371-ab72-4954-96f4-390b28bc3452",
        "cursor": {
          "ref": "5790bff3-7bac-4b36-924b-bfc4da749a8e",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "59358d8b-15df-4527-9a34-79f4f0f110d4"
        },
        "item": {
          "id": "733fb371-ab72-4954-96f4-390b28bc3452",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3aa98761-2f0b-4f8d-83dd-f526871e88c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ce717f-2724-44f7-afe4-0a0ce2d07ff0",
        "cursor": {
          "ref": "8fbc11ea-0435-43f2-bf65-4cde3583e380",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6928f04a-e64f-4854-9624-8dd9cb784e85"
        },
        "item": {
          "id": "94ce717f-2724-44f7-afe4-0a0ce2d07ff0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5e80fadf-a4d6-4e47-bda4-e85371e88aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bcae07-d5dc-4863-8c53-88152963a737",
        "cursor": {
          "ref": "fde071df-a9e9-4770-9a8d-745e3f45344e",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b6fb9245-cc1a-4a21-a143-23ad443cf5b4"
        },
        "item": {
          "id": "a6bcae07-d5dc-4863-8c53-88152963a737",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "791894f4-6d5f-46bd-b491-a761766e4f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e91508-eb2d-4592-80e0-22ee51af46a1",
        "cursor": {
          "ref": "285c1064-20f6-40d2-927e-02a2f05d9b03",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7a2c0798-382e-4c06-a662-4db200bd7ea8"
        },
        "item": {
          "id": "42e91508-eb2d-4592-80e0-22ee51af46a1",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9d1d9b2f-e5be-4fe4-8324-0270e52b58d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1beb12c5-360d-482b-b576-1d034116aae5",
        "cursor": {
          "ref": "568d6f26-c488-4317-8af9-2e89e0c52259",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d882eb3b-0219-46a4-8941-653deb5a925a"
        },
        "item": {
          "id": "1beb12c5-360d-482b-b576-1d034116aae5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "24af5f9f-29be-433c-965a-45994c79a6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557ddc6d-4a64-4ea6-8cdb-d93787ad892e",
        "cursor": {
          "ref": "8f4a06c0-297b-40dd-9cde-2144359f12c3",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4ef6490e-25ed-4712-acc3-a5db6a066800"
        },
        "item": {
          "id": "557ddc6d-4a64-4ea6-8cdb-d93787ad892e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5ba286ef-7510-4440-b6d7-154d32cc3f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea06a31-195b-472c-9e1e-013e35f60e49",
        "cursor": {
          "ref": "5911f3cf-6c1c-488c-b89b-666f4c6fe742",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9e2dfc03-24ac-4e52-a896-7021157dc968"
        },
        "item": {
          "id": "bea06a31-195b-472c-9e1e-013e35f60e49",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "daba0a63-6bd0-43fa-b9db-c62f94df2ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6febe9b-378a-4f54-ba9f-767ece5820e0",
        "cursor": {
          "ref": "07dd8bac-ec19-4f13-aa0d-e1938a8083e1",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "00e601f2-013e-4963-b659-20c783209126"
        },
        "item": {
          "id": "f6febe9b-378a-4f54-ba9f-767ece5820e0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1589958f-2dba-4a3b-b41d-2d09d53f2975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775050bb-9552-4203-8e44-2ccc5bb945e2",
        "cursor": {
          "ref": "11217442-5a8f-4072-89ba-0093ce099058",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7930c111-7a5f-4ce6-bd48-07dff54f67fb"
        },
        "item": {
          "id": "775050bb-9552-4203-8e44-2ccc5bb945e2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "294b46a0-e761-414f-b35f-086564ac030e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5179dad6-b898-435c-a0df-29d937da33c4",
        "cursor": {
          "ref": "500a35a6-ed38-4a80-b05b-50f5f893f9a8",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1c6754af-bc9b-4be3-a7cf-078d5abfa18e"
        },
        "item": {
          "id": "5179dad6-b898-435c-a0df-29d937da33c4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "15afc01b-991e-4987-af6e-8098a8547f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f0229e-a7fb-4b1b-910e-e604a9717a67",
        "cursor": {
          "ref": "24736325-ca10-4aef-b24a-52a444a175b9",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9cb0cab0-2619-4dbd-be74-d0468eeb790a"
        },
        "item": {
          "id": "93f0229e-a7fb-4b1b-910e-e604a9717a67",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3e630920-4779-4372-8e5c-3e6d9eec9c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e73dab7-64a0-4d5b-a1cc-596065614c54",
        "cursor": {
          "ref": "4aea5cfc-3abe-4840-a870-857004e0cf6c",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "82bcc489-6267-4679-a669-5f94b23ad90c"
        },
        "item": {
          "id": "2e73dab7-64a0-4d5b-a1cc-596065614c54",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c734580b-561e-4192-b89d-60d9c41512df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4ef4fe-fe8e-4564-ba8a-75ef7dc3ae72",
        "cursor": {
          "ref": "46599d9f-75bf-4863-ab2c-2169db0a3c48",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "711e95be-172e-484a-97af-6e574ac85f15"
        },
        "item": {
          "id": "fc4ef4fe-fe8e-4564-ba8a-75ef7dc3ae72",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8e9d7c76-a8b1-4380-beb8-64ecac752d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054c479f-d4d8-4565-a36d-1298435945b6",
        "cursor": {
          "ref": "7d3bdb8d-e670-4bbe-b481-e211ebbb0c41",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "57b5cc12-edd9-4696-97ec-01326e525b6c"
        },
        "item": {
          "id": "054c479f-d4d8-4565-a36d-1298435945b6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "96f77066-be11-473d-be66-f53f86ca43e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8b1459-e1cf-42a8-b08f-96cfe84e197d",
        "cursor": {
          "ref": "420dd84f-7c81-405d-b179-f7e5ed9f1c7b",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fa19a9e2-d44d-4b76-a658-30b426cdfb82"
        },
        "item": {
          "id": "8d8b1459-e1cf-42a8-b08f-96cfe84e197d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2a025bd2-0258-431e-af42-a3643d51c6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078c03f6-80b5-40af-9a07-34da14f53b67",
        "cursor": {
          "ref": "1e6e0c33-f14a-4e59-a343-2ec972273d57",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c17d9541-08e2-4ee9-9c59-26a3e530303f"
        },
        "item": {
          "id": "078c03f6-80b5-40af-9a07-34da14f53b67",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9dfdd812-1351-43f7-a08e-7e5d7395550a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ad10dc-33b1-408c-91d8-6dd59c21ed4e",
        "cursor": {
          "ref": "3550bf54-3beb-49db-8391-be1fcb66dadb",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b13b273b-48a5-40c3-8f41-9e94b0f1fe37"
        },
        "item": {
          "id": "34ad10dc-33b1-408c-91d8-6dd59c21ed4e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1b6613ca-27d5-4bf5-ad72-fdd57d446a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1d9cfe-540b-40f3-b636-338003e5a6a5",
        "cursor": {
          "ref": "a3c32ef8-4eae-4180-a3ab-9961efe1f635",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "60c2ea6e-df58-48c0-acc2-3bd56da54817"
        },
        "item": {
          "id": "6a1d9cfe-540b-40f3-b636-338003e5a6a5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0b03f1be-d3db-4317-a078-1c3def1ebdb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e4b6f8-6b1e-4b3a-9519-b7a86e437dad",
        "cursor": {
          "ref": "4f2131ee-fcac-430b-b459-3d5dde81662b",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f91a9d7c-407e-4826-8f49-4101cb4c350f"
        },
        "item": {
          "id": "a9e4b6f8-6b1e-4b3a-9519-b7a86e437dad",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "26057eaa-bdd6-4bb5-9278-a435c720cb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952c3889-343c-4094-9c24-86d8a4beec02",
        "cursor": {
          "ref": "22cc35be-dc60-4a18-8410-b3fe8c300104",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6075a992-f788-42f6-8560-2cac020ae869"
        },
        "item": {
          "id": "952c3889-343c-4094-9c24-86d8a4beec02",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4c6a8043-d40c-433c-8de7-b02ab38ee1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066ffd67-4a8e-4372-b6f0-4e7739e7dc24",
        "cursor": {
          "ref": "eadd34e3-c147-4ac0-a2d5-e3b7274bad8a",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4fa7d5a5-70d1-4fb0-9f0e-f7377b106ae9"
        },
        "item": {
          "id": "066ffd67-4a8e-4372-b6f0-4e7739e7dc24",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f16894bf-bcbd-426f-a98d-99cc15812d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65fdb19-0436-4a62-8de9-601c8429e967",
        "cursor": {
          "ref": "631cd73e-e4cf-43a9-8e70-7b7eb5d67d87",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "56960628-7ff3-4277-9d3b-cb246a1b82db"
        },
        "item": {
          "id": "e65fdb19-0436-4a62-8de9-601c8429e967",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6f798609-8ac1-40b6-b189-fc30dd411bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5298a4-a8f2-4d9f-ae77-4edbc0592c5b",
        "cursor": {
          "ref": "a5681224-5e6e-4982-a635-2acf3be09066",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9e03539a-ea42-4035-a92e-60eb83258c33"
        },
        "item": {
          "id": "0e5298a4-a8f2-4d9f-ae77-4edbc0592c5b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9a2cb124-b1b4-4c7a-9c36-29fc11ad6472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db70c98d-4dd9-47b8-953d-d87d4265ab48",
        "cursor": {
          "ref": "53cd2cf6-0794-4ef5-b8e8-2602d1778d4c",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0ebf9ec3-07f9-4119-830b-190902cd48c1"
        },
        "item": {
          "id": "db70c98d-4dd9-47b8-953d-d87d4265ab48",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b337490a-62c9-487a-84ff-ceaf500cc988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591b6e53-40ba-4463-9c20-9509982f9392",
        "cursor": {
          "ref": "1c4d85a8-7beb-4cf8-b8f7-ab35fb8f4f7e",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9742a1e2-df8a-42bd-a111-065231cf286d"
        },
        "item": {
          "id": "591b6e53-40ba-4463-9c20-9509982f9392",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f9419c67-54d0-4a34-b14c-9074db1f03c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd004d7-4a47-4a73-a968-4401bb8ece48",
        "cursor": {
          "ref": "989e99ef-c01a-4173-92f1-6f3b41cfa962",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "127400ac-c4cb-41f7-a0d3-97eff2fa4a8c"
        },
        "item": {
          "id": "7bd004d7-4a47-4a73-a968-4401bb8ece48",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4908cee2-3f39-4742-a2b6-d44f62ab7165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb48894a-8711-4953-b8b7-f574f2192c2c",
        "cursor": {
          "ref": "b67ca274-cba5-4ca4-b8b1-a69df5b98060",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2aace5be-78e2-46e7-9423-cc86a6309c99"
        },
        "item": {
          "id": "bb48894a-8711-4953-b8b7-f574f2192c2c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a514216c-e614-42f5-a7a6-3efebaad0be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6df980-e312-42f4-adf2-2241184e17af",
        "cursor": {
          "ref": "6119d6cf-617b-46e5-b4dc-e47745fcf74b",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "fe20ab00-b027-4e3e-84d9-ec0c2a9f62aa"
        },
        "item": {
          "id": "4f6df980-e312-42f4-adf2-2241184e17af",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e61630f6-cd1c-40c1-a998-d5a05e88132b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8df9b9-4091-4a19-bb10-8e3fae099970",
        "cursor": {
          "ref": "66c6a09e-aa7a-4af0-949f-0152ddf65a21",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "678b559f-83ca-43ef-9be9-9b624a83ba33"
        },
        "item": {
          "id": "ad8df9b9-4091-4a19-bb10-8e3fae099970",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a2f3e54d-eee2-493a-92cd-3559e9d9b824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ce16f2-23c6-4201-9796-0245f9f7ef0b",
        "cursor": {
          "ref": "8681c1aa-6b32-49e0-821f-5f38ac9202ec",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a145373d-c90c-470c-ae55-8b132eacd2f1"
        },
        "item": {
          "id": "26ce16f2-23c6-4201-9796-0245f9f7ef0b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c63d4dda-5443-42a2-aafb-34a35885fa4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8753195c-8f16-41c3-9a06-371b2f98e551",
        "cursor": {
          "ref": "819b3806-ecc7-4a67-af16-826ae15b7ecd",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4eb33876-0c41-4146-a2f4-aa930bda30a4"
        },
        "item": {
          "id": "8753195c-8f16-41c3-9a06-371b2f98e551",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ca01bb6f-cfd4-406b-b291-e710aeb2f839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533d400c-0e54-4f16-828b-0908e536899a",
        "cursor": {
          "ref": "1602b3f1-0e7b-4f80-84d2-40d545497623",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b98a18a4-e0f0-4cab-a43d-ca846d31a531"
        },
        "item": {
          "id": "533d400c-0e54-4f16-828b-0908e536899a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7ffe86f8-7033-44db-899c-0abbb2a8f267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c130accd-42a1-4977-aeb3-7410ef43d14d",
        "cursor": {
          "ref": "457602e4-b9b4-48bc-96eb-83eb3296ff05",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3892b116-9b86-4fdd-9e22-6da58a62705b"
        },
        "item": {
          "id": "c130accd-42a1-4977-aeb3-7410ef43d14d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "58f7f98b-3dd8-40d4-b8a4-3a0c521cfca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5d5fde-5b76-4276-99f3-f5110b0e058f",
        "cursor": {
          "ref": "e0a33229-c38c-4371-a391-c87fd3342912",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2f0e26f8-a82a-46e1-bd24-814786cf7640"
        },
        "item": {
          "id": "1e5d5fde-5b76-4276-99f3-f5110b0e058f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "20f5f151-2b66-47af-83c7-e944af20ab28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c665d454-608e-43eb-b8a3-064b7437bbf2",
        "cursor": {
          "ref": "6ef20767-7dfd-48bb-a0d6-bf8a8eeaff24",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b3788310-1185-44e2-ad31-46b5dc05b80f"
        },
        "item": {
          "id": "c665d454-608e-43eb-b8a3-064b7437bbf2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1989f430-40ec-4ae6-bc6a-8acf41b6ab9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307faf2a-f036-465b-ae36-2200b2dd206e",
        "cursor": {
          "ref": "852727b8-6021-4e4f-b6bd-f1ea9957bd96",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1849b79b-12ac-4447-bb16-95bc6eb8fb02"
        },
        "item": {
          "id": "307faf2a-f036-465b-ae36-2200b2dd206e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ed470c0a-42a9-46fb-9b9d-1bb4b536b1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0420dd-d30c-473d-9f92-7be9bf319776",
        "cursor": {
          "ref": "c171c25b-2888-4b60-a3ca-f764d21bb8cb",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "fd9f611d-19e1-4aab-b313-7e0e1d3a4170"
        },
        "item": {
          "id": "eb0420dd-d30c-473d-9f92-7be9bf319776",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4a18a949-c8af-46b7-a68d-8276d5f57c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8afe1926-c1c0-4495-b30a-bd7ea45eac76",
        "cursor": {
          "ref": "6b9a6b31-5c9d-4291-adc9-7f48b99aea67",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3a76e2de-7f63-4c15-9b12-209601016898"
        },
        "item": {
          "id": "8afe1926-c1c0-4495-b30a-bd7ea45eac76",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5dc1c631-f406-419a-82b4-4ede89d678ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d66196-027b-46cd-ae10-cd7e03fab49a",
        "cursor": {
          "ref": "410c4563-b173-4a56-941f-684d57805101",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3b4f489c-1aa7-48ae-9149-fca8e879124c"
        },
        "item": {
          "id": "39d66196-027b-46cd-ae10-cd7e03fab49a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c382c405-9161-4ceb-9459-8044eb68407a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62eccd5-b384-40b1-b427-4e863b50fcad",
        "cursor": {
          "ref": "954d32ed-d31e-4fec-8f9e-00f64d875046",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f9d56cfc-e297-42d0-b7a9-6923840fc19b"
        },
        "item": {
          "id": "d62eccd5-b384-40b1-b427-4e863b50fcad",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f68db0a1-4dd3-46f6-b4f0-774429e4e90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5bcca8-d6d2-4b45-8d2e-74042d87795e",
        "cursor": {
          "ref": "b52dc5f3-8aab-43b3-84c5-75b6be99504f",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "312b9290-137e-446e-b80c-a95084877dbf"
        },
        "item": {
          "id": "5d5bcca8-d6d2-4b45-8d2e-74042d87795e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "88eae877-681c-4d28-a085-d517b1ab33b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d10989-f12c-402d-9110-9af28121146d",
        "cursor": {
          "ref": "5994e7d0-6808-40fc-8016-e47028cf247f",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ce22674b-e490-4633-adf2-4d94378e01c9"
        },
        "item": {
          "id": "89d10989-f12c-402d-9110-9af28121146d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "eb354c32-a220-4281-87b7-2f349d3e8449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d873ac77-79dc-4366-aae4-ef6f1571aef8",
        "cursor": {
          "ref": "7b401b24-e827-4465-959d-261d3f91f8f0",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8368519f-1c84-4a2d-8663-acceb5405ab3"
        },
        "item": {
          "id": "d873ac77-79dc-4366-aae4-ef6f1571aef8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7e5d0a58-6de3-41f5-936b-a3e04badeb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80e14ce-e8d2-4cfc-a05b-0c2e814fe34b",
        "cursor": {
          "ref": "3e040174-da76-4c23-a6ec-1d9016def581",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0cce6f77-9685-42cf-b049-65dd73d68cb6"
        },
        "item": {
          "id": "c80e14ce-e8d2-4cfc-a05b-0c2e814fe34b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "51d0594e-6bb6-4da1-86b5-daf43f67427e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925a3f94-d5d5-464e-a19a-98ee35fa9397",
        "cursor": {
          "ref": "ea6d0b69-06b4-47f8-aa43-bb9925ba8915",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3494cd0a-1340-4053-a980-ff9a9809ac5e"
        },
        "item": {
          "id": "925a3f94-d5d5-464e-a19a-98ee35fa9397",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cecd5bba-dccf-461d-abab-bddb1973489c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd6e31e-2fb5-446e-90f5-94b2f06519b3",
        "cursor": {
          "ref": "b892f143-caf6-48ed-8000-72c3a04dca9e",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ccd3840e-12a6-4f5e-ac44-3b88ae3de203"
        },
        "item": {
          "id": "8bd6e31e-2fb5-446e-90f5-94b2f06519b3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "275d6748-23a4-467e-9ba6-95f3c2f2e67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200ca829-77f1-42be-b487-0a4ac224c622",
        "cursor": {
          "ref": "3d1bbed0-e19e-4ed6-b5e8-4854dcc873fb",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "90059d20-79f8-42d0-81aa-d2129e31fff7"
        },
        "item": {
          "id": "200ca829-77f1-42be-b487-0a4ac224c622",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9d7d8051-8419-4d07-8451-f51d9393f37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc480ae-4b51-4af6-820a-e3840d85bc8b",
        "cursor": {
          "ref": "c517ddb8-b4c5-4f35-960d-5e0bd6e4722c",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "531b52b4-9d8b-4447-907b-a31cb0dec47d"
        },
        "item": {
          "id": "6bc480ae-4b51-4af6-820a-e3840d85bc8b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "70fee196-e91d-4131-900b-656361dbce88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e6656e-0cec-465d-95d4-1f3a29960502",
        "cursor": {
          "ref": "412887da-2500-4146-b82e-e03a2c432de6",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "79f336d3-80f7-4ddf-b645-7cdc5c2bc8ab"
        },
        "item": {
          "id": "a2e6656e-0cec-465d-95d4-1f3a29960502",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "fa669158-a56f-410e-80ea-0fd9319e19c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100981fc-851d-4161-bda1-76c5364ac00c",
        "cursor": {
          "ref": "b256d0f4-d607-4804-8b05-3d92b2f6c445",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fcb4469e-88bc-4c5a-9862-3d73fe5c8254"
        },
        "item": {
          "id": "100981fc-851d-4161-bda1-76c5364ac00c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5cb9abe4-aea0-4de2-9305-c1fafe1550c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc469e9-961e-48be-8109-67ae70097043",
        "cursor": {
          "ref": "d0798f5c-a492-46f7-b65c-74568b01f925",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a49a1f7a-8096-40c9-96ce-2606df0d3206"
        },
        "item": {
          "id": "5bc469e9-961e-48be-8109-67ae70097043",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6c687062-860d-4fd9-aeb7-64f97f667c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a276643-0151-4d04-b526-2520fe6ad046",
        "cursor": {
          "ref": "824c1534-a299-44fe-be75-738b950205d7",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "77f6343c-a21a-46b8-8af0-3196ac857798"
        },
        "item": {
          "id": "5a276643-0151-4d04-b526-2520fe6ad046",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "14cb114c-3cce-4a47-8011-6d1cf2f9950a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92888e1b-bbb7-4db1-9c3f-f6ae7c6fc78a",
        "cursor": {
          "ref": "85ac71e3-ccbf-47d0-ad1a-4c8234668b4c",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2bc823da-a70c-4877-93b5-5659591453d4"
        },
        "item": {
          "id": "92888e1b-bbb7-4db1-9c3f-f6ae7c6fc78a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6df2523d-faec-4118-94b4-58759e34c120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc938040-581f-4650-9f21-b633a7fdef3e",
        "cursor": {
          "ref": "54d4093f-704d-48cf-8995-780837495f13",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9ccbaaf9-37c7-446f-9420-416a09874907"
        },
        "item": {
          "id": "fc938040-581f-4650-9f21-b633a7fdef3e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6314331e-0778-4412-94b9-a40014e54285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f515e1d8-9b70-427d-8be5-5d6822a58783",
        "cursor": {
          "ref": "0834f762-31a8-4648-9073-91b6b16e4d14",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e11e38c9-0dcd-4e61-a7b4-7690c294b700"
        },
        "item": {
          "id": "f515e1d8-9b70-427d-8be5-5d6822a58783",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8dd85030-09e8-46d9-8998-776b24ebe3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac03f440-3b92-43cb-b511-d59ff386e7d0",
        "cursor": {
          "ref": "d6182b2e-a34a-4c01-955c-b457b4f712f2",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9f96fd2f-62d5-42af-b60e-547882cce93d"
        },
        "item": {
          "id": "ac03f440-3b92-43cb-b511-d59ff386e7d0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9b618e61-9299-4cef-b375-ace07856b834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449cf68e-59f5-4a95-bea0-8886941912f8",
        "cursor": {
          "ref": "2dc8efa5-8939-40d8-940b-8ac5bdfab294",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "447a0b56-2ab4-4264-bfe5-546e322105c3"
        },
        "item": {
          "id": "449cf68e-59f5-4a95-bea0-8886941912f8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7a08d2ad-3f97-47fe-adfb-6e705cbd6553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cdf89d-404f-488b-b861-86b0f879db25",
        "cursor": {
          "ref": "8f66ad68-9f38-42bd-9ac1-f403c86c22e2",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8b667c8b-b3e8-4f00-84a4-de51f5b9a9af"
        },
        "item": {
          "id": "21cdf89d-404f-488b-b861-86b0f879db25",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "65822cd7-6c1a-4c4c-9411-19e6b9453099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8949d5b9-2a72-44ab-8690-ccefa80a37af",
        "cursor": {
          "ref": "8dc78783-8195-4b10-aa6c-b345e546b233",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b264b740-8db5-4ece-a37f-17ff2585445f"
        },
        "item": {
          "id": "8949d5b9-2a72-44ab-8690-ccefa80a37af",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1ec90946-1dd3-4743-871f-0809f079cc17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2212e630-4e32-44f2-a67f-980e9b565861",
        "cursor": {
          "ref": "f7440760-116e-48e8-a6f8-21339067559e",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ecb6498d-b7a3-4005-bf62-12d0a3a0bfe6"
        },
        "item": {
          "id": "2212e630-4e32-44f2-a67f-980e9b565861",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "95adf021-55ad-41c1-8025-559c36bdbd1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb973e3-89bc-4f26-8d31-c14d50afedb1",
        "cursor": {
          "ref": "be4ea963-b177-4587-9d3b-a5d6aeabc75b",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c5f992ad-9624-420f-b226-e1c3e801a3c9"
        },
        "item": {
          "id": "4fb973e3-89bc-4f26-8d31-c14d50afedb1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d55c3694-98ab-49f4-a23a-df11040bdfed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d97902-02bb-4000-ac40-e1481c4c5d52",
        "cursor": {
          "ref": "c477c1ab-40c5-4a2d-927b-a38f1ead3d38",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "af3af372-bed1-4649-91c3-7c738590862d"
        },
        "item": {
          "id": "f2d97902-02bb-4000-ac40-e1481c4c5d52",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7238f1ea-07db-4ed7-a2eb-d7363469a63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e062ca-1f6c-4d6c-bb6a-3f81ac9fd420",
        "cursor": {
          "ref": "e44c956c-7612-494c-a163-6801e5eb4286",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a2fe34ad-691d-4aa6-96ac-736710d14d17"
        },
        "item": {
          "id": "d2e062ca-1f6c-4d6c-bb6a-3f81ac9fd420",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1e9c008b-79a9-47d2-9537-fa28ccdaab69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a557f8-b18b-4282-b450-8f382f4c351d",
        "cursor": {
          "ref": "41e59360-ccb1-41c4-b55d-4bb651583618",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "347c53fa-0746-42d9-88f5-7888f10f9b18"
        },
        "item": {
          "id": "48a557f8-b18b-4282-b450-8f382f4c351d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0b16457d-49ca-4993-8eb2-722c4bbf1a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0b492c-2bad-4176-9c5d-b194cfb1ded8",
        "cursor": {
          "ref": "9c03a428-2eaf-4183-88f5-26821c338b57",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2b9e9a81-be57-4030-b932-163a26eb4ece"
        },
        "item": {
          "id": "bc0b492c-2bad-4176-9c5d-b194cfb1ded8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "092a05e9-7f64-44d1-bba2-4d5b8a81e811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2164ac7-1482-433c-8fe1-38ddc37dd5ad",
        "cursor": {
          "ref": "e795b3bc-bc25-405f-907e-e7904d81151a",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "144c2a3f-5407-474c-b929-a3e0c909e755"
        },
        "item": {
          "id": "f2164ac7-1482-433c-8fe1-38ddc37dd5ad",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "21620a2b-9095-4e0a-b168-9ad138347791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbbe0af-063f-4759-84d2-ea5c7c7a235f",
        "cursor": {
          "ref": "0f61d981-f969-4a56-b82f-3fe0ba34b78b",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0b7b3365-6d37-4f65-a630-d730172348d4"
        },
        "item": {
          "id": "5bbbe0af-063f-4759-84d2-ea5c7c7a235f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "deeee7a2-51bc-4a12-88bb-eb724b63e4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d471ec3f-3d13-41a7-b205-8cd7062f6c97",
        "cursor": {
          "ref": "10e45c37-4969-4e50-8574-00a14e378401",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "814285f3-2094-455f-8823-d7e1ad5dc661"
        },
        "item": {
          "id": "d471ec3f-3d13-41a7-b205-8cd7062f6c97",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "162cede9-bfae-4650-812d-7bf9c5235e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a46846-644e-4563-8cd1-58c874d59a60",
        "cursor": {
          "ref": "db02faf3-f876-4510-9f95-3f77edd379cf",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "af85dadc-a96a-40f1-9018-3cc218056335"
        },
        "item": {
          "id": "67a46846-644e-4563-8cd1-58c874d59a60",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "cedc0093-4f08-48c1-8f0a-a87def49de6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a141d2f5-09b7-46ad-8732-fd1395af710a",
        "cursor": {
          "ref": "590691f0-efb9-4dd0-a3c6-771e393e7ee9",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8d4790ac-151f-47c9-8f4d-c59e49be545a"
        },
        "item": {
          "id": "a141d2f5-09b7-46ad-8732-fd1395af710a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d908d40a-4e8e-4ea4-bced-43d44f38f297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19b9dd9-ef63-4893-8737-0aaf67cb1355",
        "cursor": {
          "ref": "15b15de5-4982-4b29-bbc1-b3a44763a8fb",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "261892d0-bd2d-4c83-b63f-67cf9ba0c74c"
        },
        "item": {
          "id": "a19b9dd9-ef63-4893-8737-0aaf67cb1355",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9084b790-a0b9-4666-9fd3-f5badd6a3feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ce9be8-aab1-41c3-99ef-62d545ea1123",
        "cursor": {
          "ref": "2c964a26-750b-407a-97db-be4dad8fc631",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f145d80e-5b7b-4132-bb14-09177c78077d"
        },
        "item": {
          "id": "c9ce9be8-aab1-41c3-99ef-62d545ea1123",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4fdb7c34-e456-42e8-9f02-cab5f97070ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586ff26f-ce23-463e-b718-4f13c41b7e72",
        "cursor": {
          "ref": "4c4aee77-2eae-4bfe-8629-b29b4358cf1e",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a284fa20-a741-4f50-bb6e-89440abebe88"
        },
        "item": {
          "id": "586ff26f-ce23-463e-b718-4f13c41b7e72",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6d31a351-715b-4734-b63d-f84878e1a836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c9f7f2-9ca3-4b45-b237-d467117d34a5",
        "cursor": {
          "ref": "ead03044-f917-42a5-bd7c-9dc99b11568b",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9962b544-8813-48a4-bdb6-2c48865e2830"
        },
        "item": {
          "id": "c1c9f7f2-9ca3-4b45-b237-d467117d34a5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "af163977-5a02-4ce2-ad39-8e90f09510da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdba9b5c-6629-4294-8142-0fd6bc75b01f",
        "cursor": {
          "ref": "a67c416d-e821-4ca4-8574-d12e0c028ed1",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6ef24e25-9960-4ba9-86fb-0ccec36a67b5"
        },
        "item": {
          "id": "cdba9b5c-6629-4294-8142-0fd6bc75b01f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8262ec65-8b5d-48c5-9719-d933df4ad270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2b93bf-e8f8-40f6-a8cf-035e7e245c8c",
        "cursor": {
          "ref": "aced9d68-8458-47c7-a8fc-78e5ca922915",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "22844073-1b95-453e-84dd-c968953120c8"
        },
        "item": {
          "id": "ac2b93bf-e8f8-40f6-a8cf-035e7e245c8c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "46cd5b5c-2e71-4a43-8280-cef4b9d0a2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f8149f-8dd3-435c-a7d5-f0ac6bd22c19",
        "cursor": {
          "ref": "b88a518f-7cf6-488e-a9c1-ab2fae3e04c6",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "974cf465-ae0b-482e-8f30-7ab1fb2558df"
        },
        "item": {
          "id": "80f8149f-8dd3-435c-a7d5-f0ac6bd22c19",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "37576f8c-9617-4b70-8b9c-8d0e69a1be9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9514b4a-030e-489b-912e-7a895a3d7dbf",
        "cursor": {
          "ref": "58b0ccae-8242-4ca4-b15e-d6ddb419f3fe",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "81b29c65-17db-43f2-b61c-3094099ccea4"
        },
        "item": {
          "id": "b9514b4a-030e-489b-912e-7a895a3d7dbf",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d5d8107d-bd54-49c7-88a4-f024f962f914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b35627b-78c7-4b6b-8eab-9c9d4c4f0ea8",
        "cursor": {
          "ref": "f79d316d-f227-473e-8508-4e4fb35644ae",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b2064c97-a548-46c1-9873-085a20bcb1d9"
        },
        "item": {
          "id": "5b35627b-78c7-4b6b-8eab-9c9d4c4f0ea8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "04525e6d-d9aa-472b-bf60-848e56a5fdf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf98e33-7924-492d-90ec-322876139ff3",
        "cursor": {
          "ref": "df947909-d370-4bed-9836-db551f341c92",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ee64474e-f41c-4006-ae6b-086a8a207066"
        },
        "item": {
          "id": "bbf98e33-7924-492d-90ec-322876139ff3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ec535ae9-8eee-4cab-9f07-721f19efafb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c255f0cd-55cc-4aaf-aa76-2e3b528cc13d",
        "cursor": {
          "ref": "431e46ec-14b6-4434-b957-6a3e761f7ab6",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4dad1097-0f62-4a9f-aab1-72a89bd3835b"
        },
        "item": {
          "id": "c255f0cd-55cc-4aaf-aa76-2e3b528cc13d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "08a7e2f5-0457-4ddb-aace-eb39250f567d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092cb3f2-a6d7-47a9-9f32-de9e31d79552",
        "cursor": {
          "ref": "0fdb49cc-02c0-4bd0-bdb4-a622c659adcc",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "72ee8504-a786-42a7-b464-a01fe3a74d5e"
        },
        "item": {
          "id": "092cb3f2-a6d7-47a9-9f32-de9e31d79552",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2ec15b87-0a86-4abe-9e29-76b7a3fff950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ef07fe-3ce0-4274-b914-491a1adc04a2",
        "cursor": {
          "ref": "ca23277f-a232-4447-96c8-2eaa5b0ffa85",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0754dac8-7cbe-4304-b3b1-0e8d2ed46384"
        },
        "item": {
          "id": "45ef07fe-3ce0-4274-b914-491a1adc04a2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "433c6d16-b326-42df-901d-a7c9e074f91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3c20d6-bbbf-4dd1-81cd-66e15eaf0e21",
        "cursor": {
          "ref": "32bcdf46-6a5b-4870-ae31-36e9d0d41757",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0537100f-28d5-4312-afd6-4c3e4be13f14"
        },
        "item": {
          "id": "db3c20d6-bbbf-4dd1-81cd-66e15eaf0e21",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f2716a4c-4e55-4aff-891c-728f97d2c26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47180e5-dd87-4559-8823-0f4b05654bda",
        "cursor": {
          "ref": "e68c9b23-43c1-4f98-afb6-c865aa83f9c4",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "eea5e2d9-b31b-4451-9132-835bcce19009"
        },
        "item": {
          "id": "e47180e5-dd87-4559-8823-0f4b05654bda",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ec6fb4d0-6f2e-49e7-9032-41cb8b00e93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deef891d-4e13-4af6-8770-fe4d7c68758f",
        "cursor": {
          "ref": "bcc9761d-d448-46ea-a113-191fa80998c0",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6daee4cf-691f-496b-b245-3d381c6531e9"
        },
        "item": {
          "id": "deef891d-4e13-4af6-8770-fe4d7c68758f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9866e09b-8348-4bb1-9395-ad44ccef037d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad68e03f-0fde-48bc-907c-3d8f0ebaa2bf",
        "cursor": {
          "ref": "dde859f8-46f6-4c06-9499-4716ed0d5784",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e8cb7887-eaf4-4c01-9464-722d3a3f7181"
        },
        "item": {
          "id": "ad68e03f-0fde-48bc-907c-3d8f0ebaa2bf",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "654be73d-2082-4872-a7ac-91f9da945a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f4b9d8-9c23-4b85-bdc8-8d788038761c",
        "cursor": {
          "ref": "66dacc4b-562e-4825-b537-062ee1471953",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "87a0b81c-1bad-4b92-b75e-fd8c6e9c0aa2"
        },
        "item": {
          "id": "26f4b9d8-9c23-4b85-bdc8-8d788038761c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1f11f89a-0295-4c6e-a337-359bf5d6c751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41efa6d5-e19c-47aa-b1e6-9dd439d2dc4d",
        "cursor": {
          "ref": "54aef0a2-2ba1-4d3f-bf65-d0e55742d865",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "00d108e4-be88-40b9-a22f-53aeb0cfe7cf"
        },
        "item": {
          "id": "41efa6d5-e19c-47aa-b1e6-9dd439d2dc4d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "735372bc-07c8-4e03-9058-6d4fa4f42bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef14ab5-c591-434e-bf68-0b991fb2723f",
        "cursor": {
          "ref": "d5203235-2edb-49d1-93a8-4d557e249abe",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "72ddbaaa-d593-4e45-b640-e0d7c2e514db"
        },
        "item": {
          "id": "fef14ab5-c591-434e-bf68-0b991fb2723f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2c9143ab-adc1-43af-81ac-63a9b7bc7270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f102738a-c8a3-41fe-83e8-3917de421857",
        "cursor": {
          "ref": "36a09849-79d4-4797-b740-c9be3828a550",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f9d0bb48-c4f9-41a0-a997-83c99012aa6c"
        },
        "item": {
          "id": "f102738a-c8a3-41fe-83e8-3917de421857",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "289a1431-0561-4247-bd40-23e5584c1bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfcdf16-fec2-4dee-9dd2-606b15192a62",
        "cursor": {
          "ref": "63bfaeef-b39c-4f88-a183-69e6860cd0f4",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1543db68-5443-4410-9247-f82bc1db1626"
        },
        "item": {
          "id": "fbfcdf16-fec2-4dee-9dd2-606b15192a62",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3b74b1d9-7ae8-42ef-94e3-7c5e9af48ed1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60cd3e2-1508-4b3b-9230-34ac5b17f525",
        "cursor": {
          "ref": "7e24a7bc-2310-46dc-91f2-b81b09575950",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3cd8a2bf-15c2-4c3b-aacc-f581d65326d1"
        },
        "item": {
          "id": "f60cd3e2-1508-4b3b-9230-34ac5b17f525",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "a00c6da7-71b9-4775-b57a-ee1e7576aec6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 303,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199e2f59-2c57-418e-994f-72c410341387",
        "cursor": {
          "ref": "7e6ba342-d665-4941-b8a3-7a4ddac42272",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "dfb4d4e9-5377-4464-ab9c-bfa76ccd83b0"
        },
        "item": {
          "id": "199e2f59-2c57-418e-994f-72c410341387",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7ca45d65-31bb-403d-892d-aac14e582d33",
          "status": "OK",
          "code": 200,
          "responseTime": 393,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "540fb4f9-dc9f-4d9d-8011-44e0aed521a3",
        "cursor": {
          "ref": "1d3c6a92-f544-48df-8f3b-8ec1e8bcc635",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7859f249-a425-4666-8f6a-f7255f03da5e"
        },
        "item": {
          "id": "540fb4f9-dc9f-4d9d-8011-44e0aed521a3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d34b0a4f-d61d-4477-8d4a-081b56df553b",
          "status": "OK",
          "code": 200,
          "responseTime": 385,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47f7b1a-13c0-4f28-a27d-f8dd762f38d4",
        "cursor": {
          "ref": "b67a10c3-a6b2-4062-a8b5-1dd3923dc354",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8b5eac38-d019-4c2c-9ad5-fbe11d860175"
        },
        "item": {
          "id": "f47f7b1a-13c0-4f28-a27d-f8dd762f38d4",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "13534cc8-b684-4bf2-aaa0-f3107a301c3d",
          "status": "OK",
          "code": 200,
          "responseTime": 395,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5016ff7-7b18-438a-8497-2fa927615360",
        "cursor": {
          "ref": "399fa3e3-43f5-4dee-97d2-4766889ffe84",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "884e8b52-bfbf-4db1-a108-357cddf67c96"
        },
        "item": {
          "id": "b5016ff7-7b18-438a-8497-2fa927615360",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7a2b4b90-70da-40dd-8db0-aa38b10ca0a3",
          "status": "OK",
          "code": 200,
          "responseTime": 347,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6256a3-dd67-4e10-b04b-195f170f0297",
        "cursor": {
          "ref": "701e3459-609c-486c-a158-d248ba461509",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6b9f2232-c1e9-4b6e-8892-638db6f8d709"
        },
        "item": {
          "id": "3c6256a3-dd67-4e10-b04b-195f170f0297",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b9421a55-1176-478d-a0df-5af9609ae33e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6256a3-dd67-4e10-b04b-195f170f0297",
        "cursor": {
          "ref": "701e3459-609c-486c-a158-d248ba461509",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6b9f2232-c1e9-4b6e-8892-638db6f8d709"
        },
        "item": {
          "id": "3c6256a3-dd67-4e10-b04b-195f170f0297",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b9421a55-1176-478d-a0df-5af9609ae33e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6256a3-dd67-4e10-b04b-195f170f0297",
        "cursor": {
          "ref": "701e3459-609c-486c-a158-d248ba461509",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6b9f2232-c1e9-4b6e-8892-638db6f8d709"
        },
        "item": {
          "id": "3c6256a3-dd67-4e10-b04b-195f170f0297",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b9421a55-1176-478d-a0df-5af9609ae33e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fdc213-0602-44d1-8ffc-e541f2d56026",
        "cursor": {
          "ref": "5bca389b-cca2-4a5a-8662-10f0f2ca0e52",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b7595c03-57aa-493b-aab2-7064ec6c5c75"
        },
        "item": {
          "id": "16fdc213-0602-44d1-8ffc-e541f2d56026",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "778caa85-55e3-41bf-8017-841cc4743c3a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 277,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ba8af8-02c7-47c6-987f-c42f1c5f8015",
        "cursor": {
          "ref": "303d9e3d-50a5-45ac-94ed-833c2060ece5",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "50394c3c-5dab-4a47-ad32-74baff12c2a4"
        },
        "item": {
          "id": "31ba8af8-02c7-47c6-987f-c42f1c5f8015",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "931fa781-aa93-4000-a75f-84ff73eb23bb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ba8af8-02c7-47c6-987f-c42f1c5f8015",
        "cursor": {
          "ref": "303d9e3d-50a5-45ac-94ed-833c2060ece5",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "50394c3c-5dab-4a47-ad32-74baff12c2a4"
        },
        "item": {
          "id": "31ba8af8-02c7-47c6-987f-c42f1c5f8015",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "931fa781-aa93-4000-a75f-84ff73eb23bb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a51c067-74fb-40ed-9072-cbec3d10ebb5",
        "cursor": {
          "ref": "d045f618-62e6-44b2-aaf2-9bb0f39b766c",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cb0e782a-e0d9-4ef5-abf1-51497900d4ae"
        },
        "item": {
          "id": "2a51c067-74fb-40ed-9072-cbec3d10ebb5",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "7276f8d7-f1de-4e2f-ab98-9665f8715b3e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 545,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c2ae3c-297f-443c-b232-b7e681908724",
        "cursor": {
          "ref": "e3d98da6-f5f0-40f5-b9af-0efca8360c01",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "bb05bfe2-d0e6-42d4-9cd9-272df10a2554"
        },
        "item": {
          "id": "b7c2ae3c-297f-443c-b232-b7e681908724",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3769f318-1d8d-4cbf-9339-362d5b7f6f46",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c2ae3c-297f-443c-b232-b7e681908724",
        "cursor": {
          "ref": "e3d98da6-f5f0-40f5-b9af-0efca8360c01",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "bb05bfe2-d0e6-42d4-9cd9-272df10a2554"
        },
        "item": {
          "id": "b7c2ae3c-297f-443c-b232-b7e681908724",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3769f318-1d8d-4cbf-9339-362d5b7f6f46",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208fdfb3-979e-44ad-a11d-e7d6c9ef395a",
        "cursor": {
          "ref": "bf3b4ff9-1eec-4d37-9928-0ddf3cc464c7",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "effa9db9-6795-400c-8548-e2774dd6c922"
        },
        "item": {
          "id": "208fdfb3-979e-44ad-a11d-e7d6c9ef395a",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "660d954f-a37a-4f1d-bca2-884ff02b9c95",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 569,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}