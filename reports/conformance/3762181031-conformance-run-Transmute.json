{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "734614bb-12fd-414e-8756-eac4cc868a7e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7d182a20-e26a-4d8a-bcbb-c175204962a8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "90ee3a8f-2803-41f9-9437-df6a6d8999dd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "00bccaa7-6e48-4440-9963-fe483994ae29"
                }
              }
            ]
          },
          {
            "id": "1f1d5524-545b-4f46-ad18-b185b8e9ed65",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1a15080b-f778-4478-b372-3bb9922bbcd8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8bc6e3dc-2d73-47ac-92cd-b8be579eaf32"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "acd14db5-4e3b-454a-bf0d-2db80d483b14",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "19d872e1-473c-4cf0-8359-d84f535a5c2b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ec112740-57bd-4e01-aa73-2b559ff10852",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63f401aa-6172-46f7-a99f-4e5efddfd3f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0eaddbd3-e842-455f-aa39-00f98c5b79ce"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "013857a6-5fa6-4743-b5d0-d76a98894924",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b121073-0886-4e8f-bd03-43ca693c6e6a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d5eb12aa-5d07-49f1-a94b-3233b369cca3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "00e785e6-db2e-4b38-9386-ee9aa185f561"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56d601f7-fb92-482e-82c7-4e4bd509ef0a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "41292e91-a6bb-4086-bd5d-505f6dcc2c4d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e490437-1267-4231-8b1d-b6d779be4fd1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "caef453f-873a-4175-8524-b1f8e0a259f9"
            }
          }
        ]
      },
      {
        "id": "69c07eda-30fe-41f0-a21f-a22dbf19b58f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e474c2fe-f213-4507-9f38-c5dd5b901b0f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e124d784-bd3f-4147-8aee-60c0787c157d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1b8ca60a-6234-4e82-bffb-fd34c18df97d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b74b5b-c171-4f70-88c7-aac1f3aec61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33fcd1ad-36f8-4ae6-93ff-1ca2604555c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73549dfb-f8d2-4375-90c1-27e44c810888",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9f9b0a-cd50-4cfc-a0cb-f21483730b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99f823c1-7c66-4b00-b5ad-7538bf4dccb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3147da9-5ff3-47fb-9510-c34751584c14",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d1c0a5-4e03-43df-b287-952bfbcf2244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc6320c1-bb86-46d8-aaf7-ab0c926a681e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "11ea413a-1741-491a-a58b-1498aac98714",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1ac1bb9c-dad7-44c9-aab8-bbb39d5be02d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89658972-7bb4-4774-af9a-e385cbccc5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6919bffc-23f8-4242-8c2d-dca7e3422da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a2648b-30c3-4b58-b7d4-f991589e64b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0aa3409-2d9d-4211-ab27-51479cdc1315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b600ef91-c9ba-4c49-9702-4786766c711d",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b25172-66b5-4c88-8148-493b0fa548f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e65b16c5-0e81-4be8-9f12-02869f247c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95db96d-4142-44c9-a662-8c77b1aad1c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "00dac651-1626-47a1-a7d5-ec9cd795b7e3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a3fd08ac-0005-4605-b744-6bf58a8db5e1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "480b106d-fcaf-426c-a2c4-f3588d032063",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5b5dfb9-5a79-458a-8d60-adddfc3f7882",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0fd985f0-1e6e-4b90-8793-aa548c25f581"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c290db5-84cf-46a2-beac-5e729353cd38",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "d9eb416f-f185-4abb-86c7-3deb0f41e00e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "356cbc78-24c0-402f-b65f-cce70dd845af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "182c1e30-1cc8-4da9-b57d-c0ad978ee7dc"
            }
          }
        ]
      },
      {
        "id": "ba368c0e-9056-4e30-bb95-b71cb0dcd64d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "dceea623-45ed-4942-91b2-4852e7de4e99",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74ba5a9a-7af9-4707-b9db-f834eeb85be2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8e794fbb-1d23-4d4f-95e4-a2f22d3d25bc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e028b1-66a2-464b-b116-2a5c92df3357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce6280e3-4a6b-4267-9873-9d2d988c1680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23370187-de14-4b19-8a2a-e7f2be74d69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0f2a3a0-822c-47ce-ad10-1617d5189b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0f85dd-b1ba-4ce3-bd69-68ffe55eb666",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91fa0ff-d0ef-46cc-951f-2d80870e0437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887565f7-d4c7-4b5c-b282-66c950179d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bd05eb-0e0f-4261-a4a7-f39d65a6cb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38e5a2a6-d605-4322-9c91-d6eb90c470ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0370db-5476-4c0c-9d59-af89b34e17c6",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "959c1507-1f4e-4eed-812a-80aacce581d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e68a23-d63f-40ef-8d2f-1a9b49d3ad0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440194d8-e323-4a3d-a3e9-c69456bca25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9beb3a49-db9f-47f7-b0e6-8686c4b7f35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33446e0-c351-43d5-8b9a-d30ca3211396",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e25e3b-22a2-425a-8f30-98bc48df6d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f6af4a-b3c1-41a3-b85e-6b379ea851e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c75279e-533f-4788-b49b-e195a1e1b68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7647d407-3184-4390-8cc6-35e0dcf2def7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58154a2a-c220-4580-ab96-fcdcffd2e25b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea67091d-9b37-4a09-9a1d-1931a4873399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9364c284-1f52-40b7-a574-3543c0f11ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2982c3ae-8588-4e84-8e06-e94ea3f34f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "550023c3-0e22-4c42-a867-34c31238ef31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788ec28d-62fd-4d85-8214-62c3284dff61",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabf864c-e93a-49fe-99c3-50c33279a1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ffe23d2-a28e-4ccd-b341-5c61b39241f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b0dd1b-4afe-4cf4-b0e0-3251f101a38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "524a5b79-0fe7-480c-a424-bf83ce41743c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb9a86c-64bc-41f4-b0f8-fc792addf553",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fd24f2-b24a-419c-91d1-394a0729d53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ca6db2-b04b-4339-8d0f-62d56df64b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ea9711-664d-4ed0-b639-92ea41846498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f95f570b-21ad-4170-b64f-cf81d4f04829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2c19b9-f8ea-4fa6-8ae4-cc0342b53f54",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceaf61d4-d17a-4219-a359-bb57c099ea3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e06602cf-967e-4a27-a478-19b709af35bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e844c8-439f-4e1f-9b38-08d591ab91dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "833c5f43-9512-421c-8b01-79f96add2545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a937043-d8d7-4ba0-b3e0-80003eff6f3a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef27812-10ad-4168-82ce-e3a4c6bc30c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6fdcf8-66b3-45e0-93de-cf750fe1e43e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87839aeb-5fa3-432c-a162-5ab5bb09e137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "978954dc-ddbd-4186-94c4-23dd31c221fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e421e583-3b8b-43c0-96c9-fad5e1a9f45f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3fedce-4109-4886-a2e4-9a7ced39f5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ac89d0-572e-4c55-a975-33f29ad625bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5e6252-bf90-4d5a-b02c-4fa1f5f15129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20413ae8-acac-4c3f-a113-6e37d98fcc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10365a1b-e400-4206-a096-3299537dc2dc",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411339af-cc39-43a8-a8bf-e0dd53efc10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5074cd-c19b-4991-8174-7dcbb058e70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e363d0-333d-401a-b3fe-172cb7a60101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e654fb54-d004-4d4d-b0c5-2cf9dbc5a830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb06581-76b8-4955-b3e9-ed64cd1b6d5a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103fcad5-cf71-48e3-b28f-032b4b5b3b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1cd8e0-c9b0-41fd-85d6-b823b093155d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82b2011-8a6f-455d-8fec-dd3809722a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6673798-6be5-4768-bf3b-5f257cba9aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bddfbc8d-74af-4bd5-85cc-1362439230de",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "720aae32-21de-44f6-9f9b-2179c0449ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be3a62d5-174c-4f04-b381-76ee01c96068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2e24e7-08e7-4944-bc59-ee98ae266b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2c6fcf8-a56f-4707-842b-f575dfa34b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f260a2-b5dd-4c16-b4cb-d9f523d36f18",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8714ff9e-fba3-4dd5-9e87-fb5128b6cbc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e4f5460-3df9-472e-bbd2-5c89be153b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0a1607-2727-4d2e-a919-ca1e0ce5e9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "60b95f90-ea12-4355-99fa-6a310c21628c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13040479-60f4-4c51-998f-8b528e0f612e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb5f6e0-288b-4a55-bd33-ae6c22c9f58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521f493a-ad89-4ee5-b6bb-cc252840b645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8802364e-0f42-4493-a980-d72e3cdcf297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9067f8cc-b703-4191-9370-0562113d257b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad81fd2f-d4c3-4db7-8160-d268744e40b5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0bc060-d782-4ebc-a915-fcc75ddef1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a36991-1060-485b-89dc-c4415e13d44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539c9aa1-7a2f-486e-800d-06f52a07d645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6746b017-0dc3-4f00-9c11-55341ff7553a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3632aa90-2369-4c5f-9020-3631eac5e656",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c98d8f-6c18-49ed-b7e9-dad4dc86a355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77445a0d-23e9-4c70-a0aa-0cea19988e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b07e852-5b72-40ab-877a-627d5928aa93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a8d6107-1782-4383-8fb9-b6c8ce27fbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0289fc3-5a3f-4ce2-9306-b60f1648a053",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a468b7a4-2be8-4861-90fe-cf30bb58ac16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec39841-5d8a-4e12-9d52-af9a63b60ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e365f966-2151-436e-8bdb-08447b16d098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70a32646-7a90-4d61-8b1f-7b2a24322685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef30e606-06aa-4fd8-9bfc-eeb4920dc7d0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257494e6-beb7-4cdb-a1e7-d0bc33a58605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa7ce4f7-a435-48ed-ac7a-2a2a57a9f3c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f356656-be82-4c4b-a2d1-fc425278c1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4350d66a-a309-4573-a31d-7bdfa26a88c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690b049e-32c6-4953-b796-bb940ee63ddd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2934f414-f73e-4a25-a3a4-806823f5524f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72569425-0b84-44c4-9c15-5691f7feb695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e5e85a-4e1d-4e12-a638-2cd9fc9ebac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e18b47-6966-458c-b0ac-67d52981226d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7476b3-9384-4190-91e5-953cde881fac",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e561b4f8-b014-43dd-a4f6-63afcee48a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07dba751-40b1-4731-8961-74a8063598fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41edaf9a-dc2f-41b6-a376-3cab3eff0957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37164347-d5cc-4a5e-9435-cc6d0664deb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223e62ea-f8aa-4b39-ac1e-c653c65a49bc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f9c2ab-c6bc-4beb-a837-8bd1d6b08151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23db1992-95d2-4803-b011-17bbbcebdced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5d53dc-a431-41a0-8ab3-525eca08c067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1249bbe0-453a-4028-81cf-1beeb369f34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511484d8-0cee-4eee-968d-d800ac7700b6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6cdbe5-3e5d-4667-86d3-d1e82567e95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03062604-c738-4c31-bd56-d6ede946d416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "becacda7-e7a5-415e-9abb-63b5f8be0b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45c74b98-f1cf-4b64-b2a2-3781c761df84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa3ec98-4a6e-41d2-ade3-614b32c69940",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab99416-1c5f-43ea-83e4-9a9ac6548a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34f4430-a8d8-4da8-a47c-f7c96a0e9de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b95f6fc-6a91-4657-8bad-fd50e0858192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b09d19d-a4d1-44aa-be45-9f9fce89ab81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b88759b-3e77-4c9c-9ba6-c1fac9fcc912",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662e1836-ec30-481a-920b-98f9348471eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab82471-b3bc-445c-bd15-fd70299d5b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b4b889-ffcb-46b1-8dc5-a88d75c1257f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dce4568a-bd44-43ea-9e59-40b6a1430caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413bfdd7-31ff-45a1-8567-9ab159c739d2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1e7e4d-a005-4f89-9647-6d73c1c1d5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94d4c0f-0010-4dd3-9c5c-a7e57fb9ce24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a01c55-2e0b-4c76-9e76-6bd2fbef0078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4579559-f5dd-4571-82e1-9fc366b57897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ca4464-ba1f-43f2-a77f-91851246c49d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee044ccf-f68c-44a3-b27e-4141d3c25dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee4caf97-8ba5-484a-b1dc-fb3359825deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4383713f-7a11-42f6-8f24-3fe155ffcd38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf3fabd-191d-4660-8320-911d8863b8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0836c960-e64e-4aca-90ed-2d0823aafdb8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723f58ba-0219-4bc3-a023-31bea98a600b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b6326a-1dc0-45eb-9773-87c1a9bf2c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e2043e-3aa9-4bc2-8390-53158e7e6383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "25b075e6-2b43-404c-a262-8945bdaf0731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753c0463-9b9b-4e65-a085-7c2444b4ddf0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698c28a9-7ef2-4c55-8613-c7ceb7d00f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0ce4b7f-1f0d-40a1-8a5a-436d4d738f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b166906-f957-4947-9aad-e585015d4539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05a87869-4408-446f-a60c-31d827e2d754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8a0be1-b75b-42fa-b0f4-016b1e5e705d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89bb223-72ee-4811-8f71-875584cccf58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35949691-e89a-4ee3-86f3-c044eeed45a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4845eda5-8243-4db1-9740-4a77a08ec8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "df3b81d0-cabb-4966-a959-172f24a014ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe32ba8-529c-43d1-9c4b-c87abeab861f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a06753d-9b68-4ae4-8b21-dce47db324ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5332bf46-1a86-47d6-9f46-d38ff2bd3833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a04d3e7-0fa9-4288-b616-6e264b1af95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "11ab6fe3-9b5b-4492-afc6-cd5b7e995839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52322e6d-4a89-438e-91bf-082dc6157dc1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41dfa355-24b8-49c0-8a1a-7d9a8c5f64dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a70c60-9c11-4490-bfa0-39e1b4835316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1c2e63-40ed-4016-9300-55fc84360731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "61b5840e-b70c-4cfe-9145-11f0df05e820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a46fe35-a7e4-4a1a-a362-739ba3d1730f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebc95e4-ce43-4e44-a90b-96472eebf0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c60e060d-4816-4c6c-80cc-9788e6f7e910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1a8097-33e1-4fe9-a8a0-895bde2f63e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e040bbc-77a3-4481-8a1e-a32a826405d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd411de-03eb-42c5-8a91-02eade919358",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4895dd-690b-4ce3-8134-e93a0f17206b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a0f95b-3a8f-4431-8a8f-dabac6a3811a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffbdf95-fdfd-4ad9-9654-b52329c958c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56135506-bf61-45b4-af38-597a2cc26f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb718303-49cb-433f-ba5b-71721d3ecea2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30689ef-4d4d-4bcf-8836-f13dd648ab6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc41b645-3c53-4e52-8ec7-423b557aa569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9100cc8c-9638-483b-a3b7-b5a5c79acd68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2041bf-23b3-490b-9bb2-78025297ba34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1bf544a-4d8b-4ed7-8a84-7abe642133df",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51c6528-0518-403d-9284-9e312ed60c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e70147-d47b-4160-9433-160a9736f6f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd4363b-7d03-40c1-830e-78c3380151cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e811a2b1-a917-468d-8018-c07fa85ea7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06040c7-9d4d-45bf-b1a0-e3c16494a5e9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05399fbc-a044-4a77-a09b-c6838f70b4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99379317-f5b4-4725-8364-41f6732b6b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e39d18a-c222-4c09-9ec3-1cacc60559c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd2f25b-fe88-48c2-9ee0-e704c7b81a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1d87d6-4c15-4e07-a543-d3a1880fa2b8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b0923e-d6c8-4d3a-b79d-a22499c5cbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fabfdabe-06e7-4466-b7a4-a47e80618ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03901003-e2ae-49f5-96bc-c23a6623b099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc705f6-24f2-4263-8acf-b88ba58f2b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c1e7e5-dc54-4865-8a50-4716f86bf78d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14585026-737e-484b-ab72-06e4885a565d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8fc206-5231-4998-84a7-41d496d0edc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748ccb02-0fdd-4131-9177-d434e961851d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b72e7716-da18-4681-b968-2ea49d1ac335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa87635-fc27-4c58-bd91-9c08b2a90ffc",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fce0d89-b593-40a6-bab0-5b0d9c2bfec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2ce114-2f1f-4f56-85f2-50feef3d2f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0b36dd-0304-4872-b5d5-4f8e3845b6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f316614b-8b00-4806-9b15-cf5becbc93b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ec1168-2cd7-4815-b750-dbe13a3f9341",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25865472-b0a2-446a-b052-49fd9b6ac7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea10ef8b-14eb-44eb-8e91-f796d0fac224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911b438d-48b3-46f6-a2a9-1b5b906827d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b398ed6d-a03f-4562-a3bf-e9f880c0ca6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623dc833-022c-402c-acfa-69e533cce920",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4828aa0-2742-4eac-928d-032f5da8367b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1eb6cc-00e4-43c2-848a-ccc2a6569097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee1f11f-64f0-489e-b887-5b2f8b5532a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d73f89e-2f38-4b09-836f-210075beeee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd9c26e-1085-4917-a96e-5669a6497ec6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3474c112-f0c0-43e7-8d89-b26504cefec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ca3854-612f-4977-8e7f-61fcea418dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb827a88-2a21-4761-942b-6bcb7671378b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc664731-53a2-44d2-84a4-45f85cff2bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb17f49d-4af1-4c16-af86-ee98f96602d3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a173ed-ba3f-44f9-a131-40a6be0d88ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b919141-7743-4e79-8e2a-e3df800ed35a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b903ee-c35b-4a36-985b-5a2cdabcdb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa06227-c2bc-437a-968c-ffc5200f543d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a37027-4fda-4269-bb7f-c2af7055b534",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b232b669-6abb-4f85-aa6c-95d4cc897aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce644cd-b539-4687-bd1c-798ef151606d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b19390e-789f-434b-8b68-61e0d8ffe805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa5d5ea-1a43-41ce-ada6-815bc3f84cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a04fd2-02a6-4e64-adaf-f45c35c39680",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6141dab7-5bff-4bbc-b98b-1edb4070bb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d06edd-27cb-472a-b63c-d981f285b8e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277bcb9f-3d69-484f-b80b-304bfe475190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fafdfba-e98c-46f6-94ab-a5271137da5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3b4d99-c5cf-4480-9a39-f3e514c8d136",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d085abbb-4fa9-4a7a-a896-056167324484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab7ba90a-e04a-4693-83b8-5ddcebe2dbc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0efb35-acc7-4e62-bd66-06cd03ddb66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a17711c-9b76-492c-af3b-ecc0f27f0426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7723bdf-7e36-4e84-aa9f-3498c9bf7602",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114d3be8-2e4c-4f8b-bdc4-d11c35784725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de278f0-3659-4db0-9fd1-ba0f00d7e962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b050018d-23fb-4376-8d11-c8b0f59636cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ae0008-c476-41b3-b904-be711f2fce6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb43142-2bb2-41c8-89e1-bb7ee708b6bf",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45aa423c-a751-467d-aaf5-cbbc836eaee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c702e357-0fde-4eaf-8612-b3ed284a140c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9cabbe-ccca-4311-9f5f-4dc4b7824c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c225047a-58ae-4757-a177-397db126503b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d572cf-ca00-490f-a7c4-a5813ec335ae",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18495966-c24f-4acb-8247-585656ceec6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4bba253-8b95-448f-adcf-69cff2bdcdc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0430a2fb-3688-41fa-8015-1d3c4031432d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1178863a-84d9-4ac1-b92d-6b6558cd7980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b4c83d-4564-4c7c-ac23-1addaca4c72e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b563f6-6264-4187-b186-8d774c47dd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a60d81-c7cf-4804-9745-e0f4347cab67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ab980c-d117-45a5-8ad3-d7bd6d99949d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82397e96-bd22-404f-b569-f5f1464d0748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8ec9c6-1cbc-4bdb-aee5-441a4a36930c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529551b9-1c35-4a6e-9048-ebc9e36ac4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed25181a-e228-4e7f-8b63-a1e26deea4c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0861d761-de33-4540-a4c3-df2762d0834b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "507ec5e6-359d-4e26-bd20-ff05c43ea1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ced63b-9dc9-441e-9820-a1493d42748e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07c5e84-7e2b-40d4-82b5-04351ef8282e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67401df1-7437-498e-9937-d33bf42c75a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ad0cab-047b-4d89-8c03-4b792805eab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8db5c0df-8b35-4cf7-af66-da0a66427269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b779ea19-e84b-45c4-b9f7-e62cd7531f8e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1cae47-eec6-4f74-b31e-811fcfc86027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7510d2-14c8-4d34-9448-57d0915b0cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152243e4-8a30-49ef-bd90-a450ddaceada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb093d6-22eb-4862-b578-d2448a023bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d4a22a-6df7-474f-a051-0d48d2ec9665",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d956e13c-1c38-46eb-be9c-b69d6439c080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb28b8a4-f0ab-4009-bb2d-9d0f93d94a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88536682-c0f8-45a1-9dba-a49f7624f1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38b6d38a-8a5b-448f-b363-5a3a136d72ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cee5572-97ad-40f6-893d-4b53e54e3253",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05b6290-f15a-4b91-99ae-0eed5ceeaa3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa865643-7173-42cc-a3c5-2b461f9e5f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5e54a1-50d2-4cc0-a537-bfb9395776ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec70a8c-04b6-434a-a376-dd16fec19996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d89476-b2bc-42f4-8e1a-e8a092231140",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcd65e4-07f3-4e53-8bf3-45d9f98cb0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e74755b-c617-45e3-a3ba-dac0f268058d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f4c0c5-34a1-4d97-8959-95b9d865b2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "014cef10-6fc1-4079-b549-f3a28f3dbeb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23187b96-170f-423d-92be-251fcc10d6c5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e772aa0-aed0-459e-898c-607198944d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf7680f-4a6e-43c0-892c-ef1ad2872db0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43eb00c3-be22-4d85-aeec-8ad669895109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d087800e-9c64-4176-88ce-3ce70fd05515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0f9ca1-6f45-42e9-bbd1-680c12bad867",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db028d41-9a5c-4994-8097-ddebe244448b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2cefad-05e1-4803-8496-d8841f2127e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dabc8dc-9ad8-4c1e-8ef5-d0dee245cca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2679b6d-becc-4153-b1d3-bb24978f7361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b034fe6-e2c9-4570-9526-52b5172630f4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ef38d3-55ba-42e5-9f08-d453a923c87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8747b675-c79f-4ae9-afbf-4f3e905a3514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbacd577-4f60-448e-b803-0d0e7c9ba52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4284525-1f39-4a6e-ac8a-11fa37029919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26f3af7-e9cf-42f8-8521-1062968ec857",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e0c06a-6a07-4428-a033-324d9b60e8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991f31f0-8a98-4836-81d5-e2a08c30dd74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d52721-eada-430e-bf60-5539ada5e326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4185a8a3-9155-4bca-9941-06135045bda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3cdeda6-dfec-433e-a7b1-efd556ee4e45",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9904f2e-3b75-4ef6-b4cb-d4ea249ab413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a33f78b-5962-4b7e-b7c8-3046dc6627bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6561a653-6aaa-4686-8cc5-7d67f0184efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd99d9ba-d343-4970-bde6-259256f30c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eedc7300-bf27-4533-b757-e1c1d2cf1fcb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19cff20-0d61-4302-abe7-f05c7dba56ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d6ae41-0d93-4d08-8030-c9a411d32801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcfdf57e-806b-4dea-a299-ad91871186b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e6bda3d-00c9-48fd-a740-6deed15edf50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afc6caf-87a1-434c-b2d5-cf27113077dc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c176f06-823c-4d00-aa87-4e8704c31a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee57723d-c342-4daa-82b5-e93458365960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7c7a82-5edc-4a44-bd69-65a3b5c5a069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "83ed3edd-191e-4e5a-b8ef-253e2354f7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceac0236-c43c-4116-b72f-36cabeaa2c98",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359dd86c-a705-4263-a503-7d3aebc9db43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd97cfb-a2bf-4b82-8af8-9d898a448dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec7ce19-2706-4b74-9e2b-3345d1ef2eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a501fa72-2f0e-498d-8f67-4c6c63f0f4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2885d7-d3ef-404e-8cae-fc94870bd7fb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999235bd-b9e6-4d3c-b158-7a33da148b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994ee226-be68-48ad-aaa7-e3b3200d09e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e16ba0-822c-4313-bc43-eb389e0fd1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0dd1dd2-0a29-4442-a9ae-f3479344cb97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8b0fb1-11a3-4ea8-9cea-396873d183f2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03ab676-c4ff-4c7b-b29c-be4d89f78b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0607e7-5e41-4fff-9047-da31aaaf097a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e320c1c1-e528-4133-a4a2-1d51391c3759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18c790e8-653a-42fb-95c5-d88216eaab5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa168e94-216c-486b-9a23-a1cf9f30cab1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49236378-2d2a-4109-ade7-ee32aca38a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0edeae48-a16b-41c1-96e1-55004302dd35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595e6506-b2f5-4e9d-ad9b-78854a6548ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1885ac96-5a51-43dc-9064-48c15010c3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fb2a70-f299-4579-8d1c-0d856c766b40",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d6ac25-e2f6-4af0-8cf3-1838fb67ed10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4be9242-f286-418a-bfcd-cab3e18e0d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d710a24-9fd4-4e21-bb9b-57a3d16d61eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7879b68a-8e35-49cb-90d6-beb5aafedc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91344661-1b59-4a66-ad91-e1c5ccbf152a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c2f7c0-c07e-481f-90f5-dec8b02ef0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467f9d07-24be-4bbd-b243-2808b92e8eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a909c810-f0f6-492c-8bc5-d7ac1e5aceaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "490033ce-6d57-4c20-aa8c-d804cca93437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7d88a7-cb98-468d-8d91-f0862304ad95",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8caddd0-a03d-44cf-9ea6-2c7db8221036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df148a6e-e810-4ca3-b7df-3f2b1a065063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078a4982-03b4-4928-ba7b-635f71fa7551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff62239d-d644-4f82-915a-f5ae4aa36ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477c1194-6c21-4be9-8b5a-7153c0b0f656",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7318ba71-cc5d-419c-900b-9cf6bd6805d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0bfbe2-38a4-4f05-bcbe-f58f7154e3ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea916963-c081-48e5-813e-6fcf5ccdf332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0313391c-7130-407e-bd70-9917f6fac579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb83da5-b877-4b22-8ae6-adc6519b36ad",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de589db-da42-43db-aa29-1f9d50969869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a098cde-934b-45fa-ac60-571d2c66542d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e8545b-b920-4ddc-b286-77cf8e1afc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1636b8bc-e1be-4258-8f53-169c47a1a575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce23200f-6b22-40f4-bb1a-91710153634f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa99770-9e5b-4946-9bc5-e875522ec914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bacbdd02-dd21-4226-a6ec-f98f95d401b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97e900e-c4bd-4efa-8df8-76c206eb63cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24162c30-67b5-45ab-8bfd-f14cd6de8c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fee9d2-a474-4ef0-8f2d-762e9e26ead9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda08417-dbb0-4ae7-b566-cc4464086eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77a988f-ddd9-4ed5-b3da-e188d1149624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228a9407-9864-4101-a100-bd0bb717ec72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb30603-f4ea-4584-8c85-2749cfcf9847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23b6deb-66f1-4fb5-a8f6-1fc4b693f88b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b948a25-52c3-46e3-9917-778044bf4c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb384ed-18d6-4ced-b0a9-547a6304dc74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd3cb18-7b1b-47d0-9d4a-bdaaed880da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c1c059e-df5e-4735-a67a-79ab73a20d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e77f19f-3551-4d54-a7ca-04b2b884520c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "491c4211-dded-4ff1-9ba5-8d297832b32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bbe1c27-31bf-4164-9472-de502e28e836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0964ea-d9d3-4ad3-8f85-65a9fc703d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5745a207-cceb-4bf9-97a6-d81057f646fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae015ae6-44b5-4ddb-88f1-95fd3e5b2c13",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b22a53-186a-49e2-8297-944b257a31e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21f9648-0f7a-4709-9167-5c409b123e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8728d0-cc46-47e9-81b0-973d6268becb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfce55a5-977c-4b5d-aa2b-d21327db23fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772ff81e-5e69-4e48-9e19-afc40f095ee4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cebe3e5-7464-4d58-b229-c31e176bed8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6152c34-4b0b-4a9a-aa05-f81f21f15e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07c38dd-c5c7-4a39-bccf-7deeca502a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa326081-1c29-48ba-96c7-097461d7c3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133d7b8a-ad9b-41e5-bf12-3c0aee4d206a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692233b2-cb2f-409b-93f8-a63e28343546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a68ff10-16c6-4e38-b0ab-239a02899581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018fdca3-1647-48ae-b446-ea9e8b2fc153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "edb18e78-f1f3-4ea1-9e69-02a17b7665a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437edee4-c3cd-438d-b7d6-6bd2ffcb46fe",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92235994-6b92-4f1c-a78d-90409b6e2975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07dc9437-dfd9-4985-9ecc-b995e411643e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac6c59b-f6f9-4bb0-bb5b-cf47576d2e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c92b9957-f9d6-4887-ba8e-ad8f5aa448ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759899d3-9f00-48ed-b867-d831b67cc0eb",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2a3e00-0d56-4f36-bb38-941493ee874d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f48a3fc-6e25-49e4-bfea-1c7a299a33d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9315779-72f0-4075-9987-ac8b060e0384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b4c87826-87f9-4e10-81e5-063eaf59fb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f9f7e7-4baa-4feb-9f3b-175aa837d061",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d430c202-40aa-42ff-85a2-a00a5a703f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01a46c9-bac9-460d-a825-f9aeebd627bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e0225d-a82c-4d6d-9607-0b25a7fa5612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "26ebcfb2-c9e6-4aeb-8f22-83e16e60cd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16eee4a7-f343-4bf3-aca2-ef6f3f453055",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4d6fe5-9efc-49bf-9d04-dc4a93bbe05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed86414c-79b4-4959-9e85-d4f969cec209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c27ae1-6317-48da-bbcb-ed2232223a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7288d4a7-407f-4b7d-a0ed-55210a63e8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf68a88-b9a6-41c0-95c4-961357c03e85",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d9a380-3635-44ec-8124-f33fbf41b2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae13f55-08e8-411f-95a7-70af7a74e1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86aa9d8-4a0c-43f1-a4a5-8c111cd80ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4238e6c2-78cc-466a-8d62-a72765761ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f23e16-bd8a-46a6-b62a-115ceb45de5a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc35a4a4-499a-45db-af52-8066add32cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77663639-f6a0-4db6-8087-8b54c462a95b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a6195b-a89d-4a7b-b1c2-28561e853fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b3fe0d-f53a-4caf-96dd-a32696f238bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee012cb-9855-4bc0-a6bb-9427f2b5d5a6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90663444-1180-461b-b48f-5172e80e1735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6339c7e3-fc7c-43f9-b6d1-1208b9e1e41a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d026fdde-2e09-47f8-b330-17044bf68fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ef95d2-635b-40fd-84ef-385679a2b89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd384de2-f635-4a9d-88af-ff12b0257626",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98577e94-766d-429e-9499-0efbdde2db60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f106db4-f255-46e3-a871-e5427262ce4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c82fa5-1943-4f69-88a4-32074a5200c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64903f64-4736-4c43-af32-5aa91da3bc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19335e20-b291-407c-9586-58d8bd871862",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f981ed9c-44ce-4ce4-a28d-78fb0f089d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde65adb-48b1-4fde-8edd-e8b71c0a0f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddce16fb-ce77-4e99-a85f-49144ffe0248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e652786f-83b2-4831-a7f3-f1a7990d9206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad703132-12aa-4fe9-9682-5c7331c5ee90",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7d1efd-01cf-43b1-a8c3-1b590cf44b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7397413c-3812-49d7-8c22-eb0e9a635eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df192db2-48f8-436c-91fc-1e8bd78f0559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "24ea1326-014f-442c-beb5-036a021bcdb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b410def3-cd58-4990-8c08-733e8c29283b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb766e2d-621f-4f04-992c-597bddfe2dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f4ad39-4082-4531-b835-01713145f015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cfeefa-f963-46e4-9cd6-77335a22ebf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "39ff6676-73eb-4b09-800c-f34165d037b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b51e6a4-6c5a-443b-8c08-6074cdb81194",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba26e726-0222-4c6a-9f2b-2d813df8a86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6c7b75-347e-423a-8207-ce7ab55419e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f624650-9163-4abe-80e7-fd9ef025b175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4fb908-4286-4239-acb0-89b10d26a0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f0f328-e815-4832-814b-1a308f55fbba",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddda02c8-b5b2-42eb-9b72-b45bbeeed1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81226dc8-3d34-4093-af87-839af992c938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4bc7be-43c4-4c7a-883c-d414fc95ba01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a213dcb6-a09f-4c49-9cf1-d5138150af2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b53c48a-b103-400e-9156-48b2b57c94ab",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce137deb-ef2f-4e54-b747-010019fcaaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0a21f7cd-04fb-4247-b19b-b2fd9ca5209c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4660e075-b94d-4027-81a4-e45193c7a88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ade6798e-74c2-46b0-86c9-24f5c24666ba"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cdbd4a2b-2b5c-4c70-a7d2-44066ef6701c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "03afbff8-e9e6-40e0-9a61-5a3617773633",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d86a6c2-e995-4881-9e1e-39d780989cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b3f464f-a158-40b1-aac1-09a3b263e8ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b79c3eb-9fcd-4bae-9a92-9119017094e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "c8c411fa-3e70-4a1b-8c9a-1f79ac3211d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075a43af-ff18-4913-bc13-c9b69536fe46",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecbb7a3-19fa-4b80-9695-65c3f6df1f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "518b61ab-27f5-4453-bcf8-538b08a90959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4e4394-880c-4da6-adb4-bd26c3a3c322",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "1f9e4f61-11c3-49e9-bb1e-94f9322f7094"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27eb3f69-f738-4fb3-b9c0-7924d00133f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdc0d00a-614c-447b-81cf-37995a12e9e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "437d3594-6c5d-4d06-b4fc-6f9846df1950",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37a3a756-829d-4ea3-bb29-1ae611fd6dc6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "861872f5-4503-4b5e-9d0b-c900fc2fa84c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a2d78189-dcaf-4952-abcd-88af8c0d12cc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4b6b29ca-8312-4489-a218-5f14ae35a8cf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b6cfc8df-0924-4b4d-8529-cf25f4aaf08b"
                }
              }
            ]
          },
          {
            "id": "2cecf314-6243-4da3-a2c7-8ddecd7b712b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ef1b0a2b-e3ef-4475-9dc8-d7911a5ad6a9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c4c61c2-50ad-4ebf-8032-744cf8fefc78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "23001cb1-b478-4355-8eab-ac5c5a2e4a3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f2affae-ec05-416f-bf0b-f8a4a36a55de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "01caaf77-e9e8-4549-a726-a8ff1bb6d9dd"
                    }
                  }
                ]
              },
              {
                "id": "d6dad38b-0ae3-44a0-8a3e-b9402713a625",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fc64b27-ab88-4f40-9bef-cc0509b1a6f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6039b507-a0a0-491c-ae9c-ee929bc4fd60"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9fc6446c-d9fd-451c-9fa6-efae038b5077",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "011a33b2-dc44-4026-96a2-edb0dc42b177"
                    }
                  }
                ]
              },
              {
                "id": "f837a1ad-6e67-4c59-893a-d48cbdd9607a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "acc71f67-68b9-41c4-a643-e1b161799ac1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c601f3fb-34c6-4b49-8474-c31d5ccb5e95"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c4d1fb9-3fb7-459a-b0dc-81db6e039247",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e98670f6-a65a-4f28-a8a0-9d35c3c49370"
                    }
                  }
                ]
              },
              {
                "id": "36333fba-2df5-4cce-8d55-39d44c2dd87e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34403cb0-5745-4861-8a56-96f3e5fabd8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f38a4dde-0cc1-4676-b19f-f8bd64090d99"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06a3d089-7df9-4c6d-ab25-97cbfe5fafac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a5365e1c-9aab-4af7-9a85-a87055928020"
                    }
                  }
                ]
              },
              {
                "id": "5ec93809-baf2-4d2b-8075-73cfb1d92d7e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f16c6b2c-4dff-44fd-9355-159d88bf6eb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "99ccf52b-3984-4b1c-9bc0-2b190193b04d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ea2450e-3d0b-4b9e-9b59-655a2abe505c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "96b47e4f-457e-47e1-a709-cf5b34c9ed23"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "31116d38-cec9-411e-bce3-b2cff61301dd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f3236efe-a6a2-40c5-a963-d7b7314ccd2b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "85ad620e-c7dd-4d5e-bc5a-5c89de1adc5f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "29706126-3458-4c49-a89c-29eb0628face"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ea2f5a9-c77f-42ca-86ae-4fa94815f8eb",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a2239598-ebdb-4953-a42d-cfd39d863054"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84f496e4-29b6-43bc-baf1-b663b1d70210",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb3bf4b0-99cb-42c7-afe5-5b411b02551f"
            }
          }
        ]
      },
      {
        "id": "14bb3f26-e1d1-4a6f-af2b-ed749c0c61ad",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "81bd9ee6-ba35-4c5f-82db-efa383b8d89e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab7be9fb-3a14-4bbd-af2f-0dca153b692f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "814f86d8-40f9-4fe1-8bb4-eb820516349a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d9c522-d08e-4c96-b9fe-8ee448889554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05759976-9de8-41a6-aecd-f7a74f13aa9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8f80bf-fdf3-4eea-9ecf-3d69764a6f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b005cc5b-67a0-4caf-856d-e0ee9cfe5862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061f6fa5-272e-4ea5-941c-04aa0e07ea68",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da4c536-7b80-466c-aea4-c64bc95ca976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11b96a0-44f5-4b78-8375-355cb730b4ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad49a56c-8a3a-41c2-b448-78166662757e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ba3dd95-b7cf-4b3f-bfbc-7877c22a0c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63be733c-883c-4786-89e7-bd5fa6fde4c5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b915d990-fe4f-471f-b29e-d4ba52dff417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314a6510-9956-4894-9728-55162a20c423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0dee14a-c6e6-4913-bd7c-9459ffe23c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc7e9bf-c01f-42a1-94f4-63dc800d572d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce79c1c0-64d3-42f7-835a-d40824dbbe5c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a4938a-989b-436a-ba8f-c2444a193a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "136b7b26-618e-4f95-9b03-1e30a34d5ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30a488b-6069-46d3-8676-a49d16ab92f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8cf9e4e-6b39-4076-a9ed-73bfbc7151c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb0b8b3-da9e-43aa-a36d-fe2e9a67a5e3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab03901e-ca05-4a0f-b711-2d326f54f88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dfe9722-1636-448e-818f-fe8381701fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0318ca04-59c0-4eac-9fbf-4b3d8fba54bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10903ab7-9d60-4000-97cb-edbc49d328fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c956ecf-d0cd-47d1-a700-469c4cfdbe79",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc65358-5ba8-41f3-a200-bba881ba5dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12645a31-528a-47ba-9fde-2ebd135387f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb0f3b8-a37e-4377-9a6c-12537efa57b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff4456e3-e7be-4b8f-80de-347c259a82a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9556bb77-17f5-46fc-b5ab-c68adc704a7e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67639b9b-7f94-45a5-bd53-1f284160ac32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "971f5ef9-7419-4b07-a09f-e9d40cdf65e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66120f77-32d6-4085-93b6-f0c64e03f928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "af030c28-b4ae-4b66-a39f-ab716f3bf154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6f014b-a886-48c0-96f6-4f02cda62e26",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbccdcaf-245d-42d8-aebc-6d227a043678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9927034-c716-4dd9-88b0-625133ad5715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5664483-85e5-4aa7-bf5e-191895bb8710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6346cac1-878a-4be4-8ff0-f439bef831f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b899ca5-050d-4d77-8268-7d3d74355b04",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f660aca4-5233-45a4-989d-ab2f34495e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a78b0c-a62b-4e8a-9c46-c0429726163a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6077c5-36a6-42b5-81cd-87e6c175332f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f145ce91-1ae5-4a8d-8e43-3124bb926635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd708789-e65b-421d-988b-a116dc708aec",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb23cba-c51a-4e26-bbd4-0536ddfeb23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11bf49f5-8282-4976-9a88-ef8d1ddbeac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f5a7cd-3276-43a0-879b-84036d67247b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d6bb073-bbbe-4aee-9b34-64084a08182f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8e4f46-7d8b-47da-8255-b0f5546c0df8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d877239-6244-4009-9824-48613d7a2021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75367164-6874-48cd-a67d-50cdc11ff5b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd4b500-82e0-447a-8f6f-18e4cc60443b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "578c471e-4f4f-48c6-9342-d446304b5fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed569036-df5a-4633-88c4-afd35508c8a7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42235b0-c0c1-4328-be02-12ac9ffd92d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c570342-0050-4647-8325-693aea67fea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d5c294-fb25-45b1-9cd6-bc37b0e3337e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b33841cf-29e4-4915-93e0-dd4da2688169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd0594b-7b4b-4e6e-8365-7c2c3bac0646",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8b7450-3a7b-468b-bd79-5a5229d8ab87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af54ab45-7814-4808-abcb-f0d3dd8c1b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c402c38a-5bba-49eb-8f42-b641b8b85fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c05a26ec-4e0f-4f77-8b67-987cc76d89b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4fc1fa-2d3f-4a22-87ea-b45a26562e0d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f910459-c6ff-433e-975d-0830e2533f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249c5f0f-6b97-4d8e-8418-0621a314b886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838dea9b-04bf-4d83-b2db-a4239ae7ee0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "222f970b-f7ad-4c15-965c-19111557e94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f566625-4fa2-4e7d-a61d-45185e9166c9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9fa32db-b10f-4949-aa42-eeff2a7de104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9bda90b-4487-4c4c-8fe7-affad1171e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccfbb33b-4cb8-4f6f-a509-de7df884917f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a10b769-f9f3-46b0-9fc0-20feee4bcbe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c891cb15-c097-42a4-bfbc-4e46cfde2937",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a0d052-4224-4bed-ac0e-370ea97d929d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc740961-2d8a-4787-aec7-eda83e7244a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c613a17-c5c9-4e1b-b214-a1ca359e9dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "77493491-b921-458f-ace9-6d4ebd4f5c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d565e6db-783d-4f95-988a-ea696003cdc4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4611cb75-3a66-4be5-b4f1-781749fef29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b86d9f2-166d-44ae-b5b2-76cb48de19d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005abb6e-5df3-4eaf-a52f-11a804afb4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a65f366-09be-4e35-9dc5-f82a28e73891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b513fc-cd66-47b2-8758-fa040859e9fa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186d81c0-a6ce-43ea-8849-9518199ba09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaafa5fa-e264-49c9-98c9-524d99147940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa41adef-a35e-4fb4-8e24-b1e9a4d58397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "26fdadf2-0db8-4c12-8b54-02b1b97349e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae41997a-277e-4076-ba11-a14a60d7ba67",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2132c607-4074-4bdb-877d-f162f0016153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b45de2-38d8-4b3f-b858-e6cbd1b39243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef82a5a-1319-4af4-8346-b7aa7504c998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a2e494-5f36-42aa-8cc7-c2e18cf44809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599468aa-d45a-4213-927c-82e33d031b59",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18a6621-eb45-4506-9636-5d43810bafe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82514690-69b6-4448-91a0-3874d2a912c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f9a159-0951-4116-a09a-c26f6faaedbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a58af46-9f8d-40a1-8adc-460a97749ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0c6e9a-caba-40f3-b31e-c9b7437b152b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7865c43-25dd-4253-83ed-82e28efd2e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d256e8ba-a66b-4782-aa1a-af93abf976e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4440364e-304a-465a-9c09-b3b65d05c12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e8f6dfd-edb4-412a-8cfd-3e4b02b0fa92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7762e6-96c4-40ed-9d11-a587f108b68e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77d6f90-c01e-4c94-971a-218c2393701e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a952c9-b9c2-49c7-8dcd-64a89772cc0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad17da8-a570-44cc-bdd9-3e8e39a482bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "781d92ca-ef15-4202-9c9f-5ccaa8336aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f088f2a-0a8f-48b6-b469-0eef4e18c682",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d8a555-f83f-40cb-aba2-0f51db2efc3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3cba74f-b796-484d-9526-a350d50e03a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4272367-6923-4089-9d29-f7b2fe0c5cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09560fbf-57cd-49b7-bbbd-752f121a910f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a00d02-8a66-4038-80dc-9d357189eecd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c52812-1d93-4548-bc3d-1b5b1af3774e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0943ca7e-bddc-47fb-823c-ae372c38d32b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689ca9e3-60f6-471a-b6f9-f99e7c94a97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17fbebce-3732-4eb0-875e-f3c11ca53e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2389d523-aac9-43b7-bc9c-2468f3ab2fcc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24c4fcd-5b54-48a3-b4d2-448788d11824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5bc8b8f-ef4b-4c2b-8103-b8506600bdcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9433a40f-116d-44ed-8bfa-6ea9fa1af239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11065d15-6b8d-4453-9564-f16d24f3391e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73bfa9a-04e3-4d9c-8098-806528f53773",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8a644d-1eec-4ce0-9ff7-09598dd55876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f68edb-f980-492c-b048-c319bb3c73d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6237ee8-0302-44d9-9afd-6a48316bea49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c34505e-0c1d-4917-ac48-880d8c842e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2cf066d-32bf-4f1c-be5f-9ee0a8681011",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6dd5231-b723-49ae-bc2c-40796e5527b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57c8573-c05d-4275-ba4b-e6c91454c69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d05eb4e-ff4d-4f49-b989-311900e2fdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "383eb574-3504-4ec6-b94b-ce46c7057a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef81421-615b-4147-9165-232d6f02dff0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f766d62-8a52-4681-97ec-64d9b3df2764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af34bc7b-92d0-4e9b-be98-35cfa1c95d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e249f0-d6b8-4e6a-ac79-5ad54bca0d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91f6ebc1-e67a-41ba-8d6d-c2fbefe8b13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce6d402-b200-4258-917c-3ad766b09ded",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6ffd06-f42f-4591-97b3-e83871fc2125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84f5098-c4a7-405d-b0ca-81e8d7c543c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe1009d-5582-4467-a80a-dc9455184e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e21ace93-e7f9-4ece-92f0-e119b8406b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7889eb1-1e55-40fa-871a-853d3adeaeb8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e509c8-6521-4566-96df-93934f55d09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6277d562-5b32-4d80-a371-7febe419775a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc2e975-343d-407b-a36e-0e358f0bba96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5baf40f4-cd01-4179-9eaf-a21e3abfd6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495947e3-c469-4dc3-bafb-12a4845e4ab3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a04155-d3c4-47d8-8b26-09e5d0b3efd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a820b74-3f12-4c44-881b-2799999d38a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3d6921-81b5-477c-bd2a-25af1b510431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cff61306-0bef-4073-b584-5846de2eb088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b3ff14-1294-478f-a661-33828d44a727",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd9bf72-5b43-4486-9956-34ecfb6decf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d806b7-9925-49d3-8122-71b95843404d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819ae843-d730-4e37-b5cf-2b2292317dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9938f64-e72e-47ce-bc90-ba4203ea1471"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "91b97e3e-ec5e-4460-b033-d8a14187ed24",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "22135c89-aa54-4303-9607-ee1ec5a40812",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7aa953b-f93a-452e-a2ef-b2f9220c749a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6745244-3ff5-4111-8135-ca05377fcced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e421ec2d-44ee-49f4-bb04-d8eeaca0b2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5dad737f-9efa-414d-acdb-0d379a3c1155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b843a8-697d-49b1-98a5-ed341e221c94",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca3ceb7-1c07-4754-a40f-312547c1ca81",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "ba6531bd-2a01-4939-87e3-f39e6c129085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f449254e-56ac-4c1d-9b11-e4d8d6a81fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f4aa59a-d3d9-4d76-b9f8-28afeca66f02"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d3cbcbc-780b-4d13-b64d-93b3bcdccd24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed3b0dd4-9f71-4272-8237-1120857079e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7efcf3a-9cfd-4111-976b-b66b69dc981f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5246fc3-5aff-4989-a64b-56d4ca08fc31"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b9baf9f4-4aa9-4e69-b666-114a0886f664",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "86711f95-c45b-48b7-b7f9-77744d37a367"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e755a21e-c04e-415c-a928-15e69f30948d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74b5483d-23bb-42db-9bb4-4312185d06c3"
            }
          }
        ]
      },
      {
        "id": "3cf57940-ce2d-464b-ad24-292a718cff52",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3f2efccd-1aaa-4a64-9235-6fc61c1359b4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "73c628d4-26f0-48bb-bd81-27d36c4c1bb4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "836d54cb-5faf-4d74-a64a-5576a54f851b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908230c3-0d94-4ba4-b56a-100bd01e0dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a70473db-935f-492e-bb08-0bdb9170c6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6866733b-61ee-410e-bb9b-ebcce8bd9520",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4cdc45-789a-4053-b5a6-3cb7b382dd33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc846a9-e5bf-41ce-8487-d6de360ece17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99c9fbd-f4a1-4f8f-ab9c-7ae30bef7520",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35abf477-2510-4c2d-a22b-72aa55f03861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a98c068-8619-443a-a90e-4cd6f6821720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09495eb7-b8f3-4123-81d5-72a8db0c5ae4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faeaa63a-0ff5-44f6-a459-95ebdcf59bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4419bd06-6f72-4935-a0d4-02458ed943be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52249d1-58cc-4419-b3a3-7122d675c92d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac37af7d-552a-4b6a-b0fb-39e62ee73054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e9eadf-c193-4aa4-8ed0-1614c16366ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050d8803-92e4-4122-ae47-ddbec9364a88",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7960f4a2-d4bf-4edd-bf08-418f63c6f30e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25026519-f003-41d2-854e-e2fb98843489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2566a5c4-2470-4e84-a15d-a45f53ca977b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ccc258-2790-4fb4-9dd5-d7a8e1ab9076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c23d6e-9019-4a14-b9ab-e5eaa740e694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "661b721a-f14b-4508-a8ae-6a4b047d2afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a28ab2-56d7-40eb-9d3e-c5d60a885752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd5be99-e04a-4737-bb93-029529cfa6ce",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edaaae0d-e0cb-4a05-a569-adc5d2203b89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fc1b6d5-0c84-4123-8c5c-ef0eb6c83067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d979180-d2d4-4043-a8fc-d6883aca900c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14da726-1c7c-4b96-9239-94dfd80344f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e8a51a-ff7a-4ba1-9d9f-8b80d584b6ce",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab79abb-3bd4-4e6f-9254-0e4a4f766b02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfb6897a-a427-4459-b437-0b960ac2020a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45dcd6e0-2e25-433c-b7b6-fa10bd4e6048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8e59a6-0ee6-411e-b308-4b41c061eae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d123889b-c9da-4193-a7cd-3f1d60ae47d8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0256c6b-f88a-4380-9b8b-0d24744a0e7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28b53e98-fb6d-4b16-95d2-664d92c20392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3529a48f-982d-468a-ad21-e5ddd0e6eb55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99e351f-ded5-4497-9df1-0d61920c2638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9259d7cf-140e-4efd-b163-4a1a37617bcc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc762d2-4542-47ec-a19a-5098c7336dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310bbdf2-b7e6-4b7d-9c1e-f66284fa1a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58735601-1d98-40bb-a575-84040157ca5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8908aa98-b27e-4be4-b93d-6d7ba3d0e9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9bd04c-464c-469d-88f7-6393b3917922",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b778557b-382f-4757-a71c-2174559bcaa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69557ea-52dc-4d98-816a-7f31b77b37ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d25e73-b23b-41db-b37b-3e6da8b0d892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950c5c2d-e9e0-42a2-b445-ac472fefb84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2150aeaa-e8d9-445b-9cb3-fc4adad281a2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7513bf61-14d4-4c21-ba24-9fa3bc9e8309",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "726c221a-2f03-49d9-bd01-3772c32b379f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1337294-9956-435a-abe0-7f44d1cbba58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3fcf04-8f79-46cf-929c-a217afa35ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d676ec-da78-4fe2-94ee-a84600082fa6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72859488-ddea-489d-a63c-25ab464b7aed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b4fcfb3-1dfd-49e4-8259-862efc859fa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f389a09b-f7b1-4184-93cc-6e062a98518b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c198a0b-5816-4e2f-a89f-695b4683e90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b72557-faae-4ba7-98e0-1774135116ad",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce45e964-28eb-48f9-8c94-3a900da5b189",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63d252f2-a559-4469-878d-9f172703d378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af6f5c9-584e-401d-9e76-001017b7ba1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6298b6cd-27f7-45ec-a18c-1eb44ffa9fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e534f86-c8ef-4cb4-97aa-be9697e43f6e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab210e9-c746-4fdc-9922-f8c21a984643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d4ac833-b36f-43cf-846e-d268341173bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60befe82-690f-4d00-aae2-ca4bd9a849b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ebe139-6113-40bf-9831-6a97a1654fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9636ecd-9488-474c-a879-10c22778dcff",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b4d529-8fd1-4e31-9457-9858c9e2541e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bc2dd52-4ade-42a7-9d3c-c1c6d4e41753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "266b8303-7e1e-42ac-b0b2-1336aebac92f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e4d82f-7a99-4d9c-96d9-af5a6a54fd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88122234-a8c8-4ccb-b593-c9b748fff340",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6469880-c04a-4dd3-ab28-59655fc60f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1711cff-6f17-4fa0-ad59-6eb7a041be71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16947b3a-1882-4cd5-8391-c00dbfaffc29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef6e588e-5f2d-4a48-8e86-5bfbc23fa1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905fdec1-2aa0-4a76-b60a-0b9a47105aff",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd286e6a-1569-49ff-9d80-1cdfad2d1399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f286564b-3479-451d-8c50-ead7dbed3e11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c895f49-9703-4ff4-826c-fd2d3a935c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70cf10d8-4d4a-4d7e-b55a-9d7c1817cbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec993d2-aaab-441f-928d-2e549031963a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f160c54b-c4ca-48a5-9381-23d12a102738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b807cff-a8b5-442f-905d-ba3ceefe2cf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "000aeaa1-3d1d-44e7-9924-ca3381b3356c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edda26fe-e5c8-4fb9-a5fa-e5f809fc667e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48fc687-6184-4fd3-9c2a-9025cabf41b3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17174130-39a1-4f21-ab23-4add3b1a7225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe21231-52df-438d-8a9c-e1194c5bd1aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93fb541-fe10-4cc2-925c-d8091e3e85cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e9865db-3aed-496d-818c-6e5c44e6f070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f28cf7a-3bce-4519-871f-6af41a539fc5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c395fea4-882b-4058-9bf0-4ece748f8cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c55bea1-4a74-45a0-906d-fb8d7475ad5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41de3776-d08b-4c42-9ee2-7d43e69ce8e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37fd38c8-db04-4d0e-a051-8d8ddc9a08b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eed6f0d-7020-4232-96f4-f1840e828a6f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78712e9d-94a1-4352-8bfb-0506895529c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a2bed2-653f-49d5-9213-f2aa281324af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "491cba82-5fc2-4fe0-a271-547c6f4be7c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4903d443-c136-4dcc-b6fb-6c5b2e20dca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff30d65-55b9-402f-96f0-88c21b8532fe",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48e45c1-ed08-4170-930a-cd183be48e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e23bd36-aa0a-4a36-ad18-50242b5c040b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0620d9-a813-49dc-a02a-9a4e6904f92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b23a28-444d-473d-a5df-48ebd2f8fabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb6fb50-6bcb-4d1b-ad6a-f6e853b75279",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548e3965-ce62-44a1-8b01-9a44f2d2010e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ba5fc19-0cbc-4977-a33e-52f0019c443a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "515da8c9-6081-4b32-93c2-908730185b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e729082-c3ff-4621-89d1-40ac892c98d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd40bd6b-18d9-474e-a5bd-977f9da1800c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6473015-a464-4244-aadf-eafa0c250557",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "697e4019-2073-44fe-92d0-6afcf0fabc81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2570dc-9187-486a-a060-b5ba1f702a00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880c402c-d975-43fb-840b-edab2bf86db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ffb855-b34f-493a-a9df-ac53ecfade71",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebab407-5b81-45af-bf9e-17e9e68cab4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8995a15-f76e-457b-bbd3-4539b994bc6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d73e19d-f9e7-4962-86ca-82e940fa91df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed98b310-cfb8-470c-99a8-c976155bff3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561e3f66-8c4e-43f5-a476-afa9c0d636b5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fd1c10-9918-49a0-9747-38a66ed0e241",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bb90c6c-d5f0-4264-8c48-1210200bab45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d6ea07-b95e-41f9-a941-5c297a393b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f638bc33-bcf3-47f6-8b14-2eeee0558fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833d376f-8ca2-4bda-b3f7-095c2e685c7e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3988f04-d8a2-4491-a33f-2441ef9b843e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f26e5a4-3e56-4d53-a6b9-6ae6dcde4d0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8fc806-6233-4843-8379-a8eb6fc705a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "584f5aff-446c-40a2-97d8-22d74b22cace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b195f6-cfb3-4c7e-ac8d-800de8d67a94",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc091b7-e2f6-41eb-8672-68de926baba5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5ad51ae-c56b-481b-a5d2-b5e47639e4f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2f1ac8-7d09-430a-ad1a-ff65833b2056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5216cba7-f03e-45aa-8b06-89360d532fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bcc6d9-e77f-402d-88bf-9f9159c38e2c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb506f4a-4874-4748-a006-054a77b45602",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aef05cd-de33-4ce3-96a7-398b26f0362f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62c16ff-2fb9-44fc-9c76-c24c62697bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47fe4ff1-bde1-4d13-bb3d-d0a603004c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f767b774-e56b-41e7-aea7-5c25c7cd49b0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04cbd6d-6301-4dc8-b008-0239cf494f1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "366bd315-088b-4af9-901b-5f61b5ff4ae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3651ed7b-889f-44ec-ae13-59f8554a3ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c685281b-a84b-4ec8-9969-c36d14c1c8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03da284-43d8-42d2-9be7-14bfa0a232b0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83dc9378-1abc-4232-b9e7-ecb6066dbb64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5ff761c-4240-42fe-a765-ef8dc7b5ccfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2782cc29-e554-4a49-ad9e-0393fca9d8e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f060ecc4-0aa9-4ae6-ad84-c6b07633f892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1991bbd6-64ae-454b-8dd3-dc7898d1ccdb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb75f3c-9432-4951-9396-99a78be2bea7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bc31441-47fe-43b8-bd14-00d481996c5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c749f7-39f2-467e-93a0-bf0baa58d540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4497fa0-1118-4738-b5f9-67bb7a5b556b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b219e5-6804-4e55-8d9d-e01253554959",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6648593-5297-4b41-84ec-3b664d485b8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1997b76-dc9c-4679-a366-9d047e2c1448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "582587db-d00c-4a41-b6ac-8e4bb1f7ffef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d37986-98f2-450c-a7bb-8fad38f2c3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c92e46-c6b2-4d7b-9736-a9c863436ad7",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067cdfbc-cc68-4843-9ce2-c45507df5f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e92f01-a9ef-42ef-bc45-0dfe9becd9ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2f0261-5ec4-486f-860f-fd72612032a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d92912b1-d78f-45cd-83d2-82f8b24410d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf7137a-cffb-4af4-afde-86df0ed268f7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02dcad75-e8c2-481a-84dc-f3db564cbaa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65cec58-7aab-4555-a1f4-7920046a71d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e832bbda-46cc-4264-8bf1-84bd1a3e6e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdff5949-49ac-469a-bd8f-96d73471b2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49be29b7-6955-462f-a57e-4fb8ce342475",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d8cd9c-8677-4a70-bf85-d0e9d55e0688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c3462b-063d-4409-9a67-871819ff8d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f56d403-1a4d-4ba4-bd98-692f9eb9b922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f02f8a83-8d03-4692-a054-4b08013a3496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e9557b-73c8-4410-8142-a0606eab7b8f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8973b4-c15d-4a66-bd16-a29894d1b013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e754910-05ac-4807-b00f-d8d9296ec2e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c9ca9b-743e-4185-9433-c40f9162d4da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ceba56-0d3d-4d62-9aff-dd6bd643f2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df276250-dd66-4c86-af27-a507f36d2a4a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf669fe-032e-487d-ba00-f0e26542a628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723b8d08-53f5-4380-af67-532ec6ce30f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "726cd5d7-322f-4a51-a9b8-0bf48a620a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe652c3-81dd-46ea-9da3-4e44fa061675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac923a7a-eb9b-48c0-a4a6-001efe256f3e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6f9778-ef09-4f20-ace4-3d46cd76f99a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08cbaff4-33db-4396-8c9f-a948d4701ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f731c8f-1aef-47bc-bb63-eddcf5b60506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1665e09d-fabe-46cb-812e-f3211156c844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ac7b72-884a-4f1c-b286-5a2a7e77cf4e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26122f18-caeb-4da2-ad3f-789b8704ba1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ca160a-c9fa-4d04-8ae1-7af6e1542af6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33878f2-6c89-447e-a775-c3824af5554b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f551bf2b-5aab-4c41-8518-fdfc5bc9f537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3d4681-9e27-4beb-8fa9-20a8c420347f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6ed547-eb4a-4417-82bc-5a61e59465e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a911e527-8a20-4053-a3b2-3401c033eb85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fde38ba-e5c4-489b-ba82-87127e777e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1dc618d-24ab-4518-a93a-b606c0951a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b36e7f6-1c04-4b7a-acfa-258a517df6cd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ec5609-27ec-4df2-b3ea-f557fdefc2e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f0219fc-bd52-45a4-83d6-584a87346055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4f67ea-8d18-44bb-8377-11e7de24189a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f007feb-b0ce-493a-8350-3bce68d529ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087137ab-3810-43d7-b42b-f9942b5782a3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86016701-6c8a-428c-b97c-f20730c07cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54836276-10bb-4253-bc92-58656a4418e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f0322b-d4f6-454f-944c-2b619e658acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4763d09-cdd9-4d24-9396-17e455ac69f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45ae49b-b34a-42bd-a7a3-ecdccd054116",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6cf8e9a-2d44-4b20-896f-fcaa971dde8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e851f6d1-1c70-4ccd-8dd3-517ba98eb9ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04764b7e-1a5d-4070-b52c-2ab1c30a5445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a9ba5b-70e5-41bd-bdc8-f088777910e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7746236f-b5f6-40ef-899f-f3285513c118",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6c7c96-77f6-442b-8160-bf7651e542ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb730618-f384-4409-bbc2-9cd42fce4e29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4e19c2-65fe-4597-821a-815af148373a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd028400-2efb-49cb-96ad-e029e996fc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b809d27-30be-42a5-9ba7-b17f60925adc",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f99348-4723-48cd-b1de-5eb6476629d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "389a074c-8d86-4e5d-a915-187d52579676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "559604c4-4126-4dcc-8dad-5ef1caf5afb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625a5e21-eeb8-44fc-bd3a-377db8d10d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f99ee9-14b1-4649-a5f1-3713de8b5207",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c103b1-6584-46b9-b83c-64f548edff41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af5b820-5798-40f7-a25b-25d092b753fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6aa8d3c-4a9c-45c9-9196-eddfb05fffc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c528b5-ce05-4cfe-81b1-d17c4a21e8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a87beb-097a-4084-8ba2-8b0428b6b6b3",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17ccfa0-c741-4cc0-b949-dfd581b55143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f546301-6f76-4ff9-b2af-9908279401cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16db267-6dd2-4bd2-9ddf-657af51e2c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61cdce4e-71d4-4f5e-a080-6b354e9cca0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f229f37-de0c-4231-9146-60050d07c6fc",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a6e3e1-d914-4b0a-96d1-0bfbc96e3442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e11ff7a-d024-4f34-9e82-6447206cf20d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e80fc13-7656-4716-a6e4-ffc20c7f6f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e547c80f-74db-480c-8d3c-906ea73fe686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87b1912-570c-4025-88c8-8101d3c8e79c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17311f3-8894-4fad-b074-308543aa9eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff0e32f-8b6d-4a92-ad08-93ba31482923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d37c29-8ba7-429a-8de3-99d1e8e9e976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae54b7d8-44e7-4e59-a11b-0a215601f093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690328d5-4d5f-4c7a-a01e-c75f376ee14b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a009faf-5866-4c41-b7ae-aa2bb9b9852e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5ab3ec-2762-4093-9a9f-42034cd92336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f834b8d-f8d7-43bd-ba3b-23a07f4a1fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547e495f-984c-40d3-9c2c-6aa3ec3c66a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29632885-13f4-4308-a45b-b73b21bfb81d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b02b465-67ee-40a9-8bed-c438ca470427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de2d5de-646e-4242-8d64-8c4e3cae4893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32d221c-bba3-441a-8cb1-090f6974fdb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc3f268-5cc6-4919-a8ef-478457431d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6469d9a1-f22c-4fa4-a5d0-0924f5cfefe6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44e4a52-667e-4a6e-95dd-3a77c4c67c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41316a2a-7de0-4e46-ae21-a5bb5d074b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2d194b-be2c-4d87-ae0f-dc88f8b5ebce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f013eef5-4d61-4ed1-83e6-437ba009bddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4537bc-0128-4290-af15-66bb1024056a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ca0c9c-19ba-434e-8e87-4f64db4a451d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5333b297-1540-490e-8f15-407bba760dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb960c2a-6064-46b9-a271-d32a0b5c4fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf5dc17-86c5-48c3-b4b7-facdaaddd10e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3578d4fb-cd63-4ae7-b26e-54ca621f967d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ada55ae-e7cd-48ad-a71a-e5376c8ed33d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98ec70e-c9da-4b7f-96ce-36a979551407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37d6dcd-0415-4544-951e-a711ccabc162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f97bec-62d6-4a5e-a901-27f7b37d3561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bbcf39-48f6-4268-b02e-0f43949d58b4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a535e23-008c-49a7-8431-5376a4484a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206950c4-4dc8-4041-ab8c-cfe91895bb27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08220418-0e9c-4a16-920d-163bb54dc258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d687da-a964-4dda-8948-5c5fe48a3cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b499cd68-9930-4810-beff-2ba143486898",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b6347a-eb2d-49b1-bbdf-c3a92e6a2f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a20b73d-3057-4ee0-a5ef-a6b5e105506c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be18a18-5702-4361-b5a7-4b49964b3955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f9c721-da01-4e36-8c55-00eda4e94162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135be930-2154-4942-8547-5599eb017f12",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84957f8-9a7b-46e6-a03f-b909ef9f4435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4fdd3e-65a4-44d0-949b-ce911d35e061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab8c309-2b02-435d-8015-0fab539cf9bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59432f56-cdd5-48cb-bbdc-f4d0de92122b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd3d9b1-6967-4189-a2dd-0350bac995c8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3574cfc7-9a96-4caa-ad36-26f58a91f727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53532baf-ef42-4d38-bb55-12a159f3f0cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d393762c-6dee-49ac-921e-8f426b15153d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea30020-fd6f-43ca-a4bf-e860bf066bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec041b51-d90c-41c6-a29b-497db31c04cf",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00fc9899-2250-4cc7-9634-a5b31703247b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b008a3-5c47-46d8-be40-824e6fdbfcbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a80cac-4a25-45b4-b43a-97b0b64408df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b6f89c-317f-45f9-bd74-f4c1b5f0b33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9535f00b-1a69-4561-a5ea-977ffbb7e02a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cdb1af-4c0c-4f17-a3ce-5e2a9dc60546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1671712-8dd6-45a7-83e9-0e44b66872ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70bf1ae-8258-4a5a-9831-9a85c050e078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2830006-6d36-4ae0-8ad0-338d1b0b10b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69926611-81af-4864-9c4c-550b2c38c0dc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6268e2d2-dc2c-45f2-8957-6ffb8929599e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4dfb36c-2399-4cbd-af73-760c4ead9030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "755ba691-a073-495d-9d21-efd909cd1a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147796c6-22a9-4f9b-90e9-990ab31dab23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa17b8e-574b-4bb4-8a4d-bf5d7b04cd62",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d624ed-2cb3-48f4-80b2-85a997e076f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dddf7d7f-d20a-4405-ad4f-238a2919b0a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc425ad-619a-425a-a158-df666549d6a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c58d0858-de53-4d7d-a9dd-333cc6871e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b610cc78-f69a-4507-94c8-105da447e05d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f3fe6c-9848-4636-8034-f5bed7d9a54a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "425c1167-50a1-4b57-a34c-f5e574bc23c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6cec64-49f2-4aee-a855-3778c7b8e53c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac7a8e8-6a8a-4e74-acf4-67866d019366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76a44e7-0907-42a5-9f4e-c4a0ff54eb1a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74598745-88ea-4db7-a979-f3a04dcf1b4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18291cf3-be99-4466-a134-4e1a9fcc605e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3013ba2a-35ed-4890-8ab6-5c443a74e5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba5f6e3-d5f4-4e72-9aa5-47098db2b984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5052fa-ed10-4596-8d3c-5f757c557f71",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5434c4c1-983d-4048-81ce-044079826049",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44f617bc-1c52-4647-ab0f-0c0a58bdc90c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0adf1dbb-dcdf-4971-a96c-cd3ac14214d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36643d9e-e00f-48b9-8cc7-9ce852d51b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5c3441-86da-4dac-9016-34155bcee556",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d89e0b-993f-42b5-aff9-56ffdf242b6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38b0716a-30aa-4db6-ba6a-6a493b52ebb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec223bc5-dfae-4cd7-a934-9b902c966d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2443c30c-0d91-403e-a847-4bb799e6cc16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff23c386-371b-42e5-b838-fa0a05d4e901",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0440cb6b-4ef4-4b64-9da2-f0f8275cd275",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d89f5db8-c25e-4e02-9d02-cffbb19601e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c929fb9-d895-469f-a36f-a663fcc40d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3bc15b-efb9-47d3-9ef6-9dcfb5fa6a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957a6aea-65e9-4a70-8539-738f26b93531",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28314e9-c685-42ab-9903-2883260e51f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4439232-0cc2-4f8a-b278-ffe4bdb30ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76141d21-3a7b-4c3e-83f4-425cffabe934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b0ab43-97a6-4730-af12-11348cb02f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71e5c78-874e-4244-9c91-63e4880546f7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32803caf-6e14-4972-af8c-9bbb9a00223b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e3351ac-d669-407f-956c-75e569dff0e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd1b249-5657-4e22-b1ac-a3fa01925a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eae5038-deab-4fdd-84ef-bb4fb072d717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f55cecf-6a47-4f85-a527-972169d376a5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ab7093-775d-43b4-a29d-a4c9cfb2d87f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "527bad0e-a1ab-4116-b8b2-10906b23a70d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc20d3a-6876-49a2-acd8-0ba443040808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1c70641-68ee-4604-b178-98d79a52c6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa53adbc-6f5d-4342-b548-d821d5543e7c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40e3c45-4ea6-4950-b234-5f32f53c456b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b00e70f-d33f-47c2-8179-d1115f270311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fe4ad7-78da-411b-ab54-3c493e9247b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55593e27-a411-4fdc-82d7-cf69cb29e7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4fcc64-cf22-4884-8d8d-802e08253468",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8d0fc9-b42e-41d6-85a9-efa02d1651e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28e65c29-0705-4594-abae-708eb3210f99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac4df90-fad4-4933-9309-941ddae2c278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1f276a-8ca6-495a-954a-df0a824a93fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a936c5d-1f28-4c28-bb59-997e40c0abe9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4c836f-2e12-4a36-9fb1-bae937997b6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "940b6abf-dc01-484b-86a1-11dd30a0d314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a71fec-f03d-4fe3-b64b-cdc1c60e5869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5651bf-bee2-4da2-ab9c-1d65c379fd57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b397f3d3-98c2-4b3b-800d-cd094ad4bb83",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2828c6c5-dbfc-48c7-93e4-d9028220b0e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b382fb6b-fdd6-4a13-b861-2c44d54f64bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b068bb5d-cdd1-4878-ac4d-5a1ca4036edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11adc102-e454-4395-be84-cff0674a13db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86ce200-383c-4b44-9ca1-0cc84784ba82",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfaa82e0-81ec-4152-9f09-8942dff2601b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ce05326-2576-4a68-8ab9-c61fad126053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "477c9719-28ab-4688-babc-c45cf2c3ac97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "151d6b98-4628-425d-9a2b-3df1c5986e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9109ee8c-0c67-4195-b69e-eac78662d0d0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1b9706-6a54-44ef-a08a-bc93f6446736",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5db01ce8-b183-45e6-8dc8-75157b8fc5d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "799d4953-cbe9-4ab7-bd38-4c55c2e173b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99bb86ae-1d37-485a-91c5-2b9f8da1d4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00232a21-0d68-41be-a007-3505c2dec5f5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d431d5-5d0d-42aa-9652-abdc4555f836",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3e692a9-e582-4983-8797-bf1ff582e4ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ab4f94-6426-4c2d-9252-472179f2718d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b185c558-3405-449a-9ebb-325d0897c235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c6ef05-04fd-494e-a4a9-4e255fa56fe6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf15cf9-6072-4d17-9b0e-0d2bbd45bb08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18ffccf1-22fe-4621-aa63-52c91cf3df7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "948f0eff-0d67-4d0c-a682-7313c54b1f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a43a50-0d8b-4c8f-a67b-a0090d94885c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad214e4a-8a31-48d4-bb0f-536c80565205",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2f426a-195f-42fd-917c-f0d47841c5cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90a00381-73dc-43f0-abda-8218c680de1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93d9bf1-ad5e-4856-9e46-43ee2c5108aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41e44c4-0885-4726-aaae-8d85d52192a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57f60e1-32cb-4ba8-ad9f-60ced9005eca",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f64e70a-6076-437f-826c-1afc45c58f8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22334dfb-8704-48a5-9ead-081718de445a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "553a6644-8804-4eb2-a583-cfe30ec5d818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc09fc4-6f6e-4328-9bdf-5e9541aeb3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc4f98c-9e76-417d-9a05-97613483fd88",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40754c98-65fe-4f9d-be75-444ead093f39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45c18c06-7fe1-41f8-9a30-97e205ebc33c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62c6b5e-659e-4de7-8189-be8cd542d91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03db048e-47df-4250-9686-0f152b188f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e3eb4a-a6d2-43e3-8a3c-589f4e00e1ad",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ccbbce-9224-48e9-9cb1-51dbace5a732",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0311082-bcd1-466c-b766-9a2d67ef1b99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20e4f92-222e-44b9-b77d-c345dc31ee99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af724ff-ac53-4519-b508-b23ad32924ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677c4955-ebf4-4a38-bad1-95f31cceecc0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c6b983-9b0a-4506-a837-5f64d0ae5b86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e089226-6af2-45c3-ac71-0fe4c0936c44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c020941-ddeb-40dc-bda1-f4a0bfcf1f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6a21fb-070b-4f8f-a4fb-faaa38ae46b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3fdca3-1db3-42f9-8d78-b8728bbc4e2b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb504aa-2359-48a4-bac5-1b263db93b65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d7db599-9317-4200-b340-aa91141b9dd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c64182-419b-49af-ab90-665c456818dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7442d0f4-e995-47bf-80eb-e67c5622e3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330b3c52-63f1-4041-b664-ad53c4b9954e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63721fde-7d28-4eb4-a7d2-aa48db853710",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5db933e3-5b3a-4993-88f6-9244adad6f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10623229-db01-4bfc-a765-d60967d2e742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0ced56-bda0-4c80-8401-99652fcc2b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598cf77e-7214-4ec9-86e9-5f0362428515",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed62c86-af1a-4842-a6b4-80eca1429549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50deddd7-2c2b-4284-9f28-66614e62c8f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd5cf0a-1e48-4e45-b6b7-c6f17e234432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86caf479-4121-4d85-84b4-b39baee82eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8501c5-eb59-46f1-ae0f-f30a008f35b8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67571042-33f2-40b2-aa9f-1f744f297701",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff568bfb-4235-41bc-a236-1f1b668bff3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59c6285-7f7b-4ddc-9274-585b3e1747e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09de9f5-bd25-41b7-aae1-c69b9ca7fa62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b642f6-8b77-4c6e-a37a-f184a8d796f1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5902d4e0-3257-45cc-9544-af898f82e363",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "403aca37-5717-44e1-b44b-f1eaaacad288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2dc82f-d97a-4643-807a-1fd35de01495",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd00599f-4e47-44c8-8bc3-6433274ce852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d6e742-c81a-4380-8e98-c1011fe1e173",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939b8ca2-3211-4b7a-930a-bd6c2c89b6d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "febfd99e-f5a1-4784-aec6-9813d72bd707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "540cf20a-33be-41c7-a65c-55cbf3bdca2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9469e79f-eb9a-4bd7-84e0-367b2a833daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5250f99b-19e4-41c6-8c6a-846930be52a1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d57ecdf-bd98-4b56-8374-70559b7d83d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ec4df2a-ac7f-4c3d-89c2-d0f7bb45943a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8815f722-e367-4619-817c-75bfb36c3afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1748be5f-d55a-4fd8-ae40-b355ca7163d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622e3d5f-39d2-4622-97dd-044da7b76f4e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a023f405-f0e1-4ad2-b76e-ee439f193220",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae971803-6f0c-4e07-9156-b6f74c424c81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97cc06c-033f-41d8-bd09-e2a633b2cb33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c0312b-5add-4f5e-88b4-ef69403e49d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483e3c1f-7450-41d9-b699-6dc8b3e6c17d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9e4c0e-b489-47cc-9e20-79d863f040ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "054b3caf-d004-44fa-b933-528155e44c85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ff63d0-d9f2-42e3-869c-223e69dcf748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f27ff0-612e-4f20-9a8b-72ddc44e2cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c2f261-0c62-42f1-a068-f9b596383b68",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21ff649-1ba1-43bb-a6f7-01b76155fa16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9890b74-2ed6-4832-80a3-8d4e6ee366b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f523e18-7efb-4b4f-b741-391457f7d94d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0815b9e-36e5-4f82-995c-bcf77fe123d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0c46ac-a3b1-40c5-8a98-ba63bbaa7df7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fd7661-607c-4314-a376-0b2b785122db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae1f7b66-6d3c-4036-befc-006cbdbbf380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4f05f0-3ef0-4991-b949-dfc21f3e221c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88628c33-dcd0-472a-8ec6-a5eb4a16c3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb0de22-2cb7-4055-b111-bf8bfeefd9ea",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea499622-eb8b-4c71-9207-fba96d46942f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fcf748d-a0cd-421f-8a27-94c8f7019511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5d1e48-c61e-4a1f-9df9-9d6e1f6e8155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e232a5a-0096-43b4-8b0e-e9aca0a31138"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b184ad7b-5535-4c5d-b1f1-214e07f1aa39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "778ec401-61e7-4944-8578-9383f6e7bc61"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "34f84fbd-bba0-4acf-9d91-433e7469aa9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb7ba206-52c7-4677-9df4-09a992df3eb6"
                    }
                  }
                ]
              },
              {
                "id": "22934a78-e45a-4acb-bef6-8f7670765641",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aff18458-729a-43ea-a830-b962d427b573",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec3f0e1-119b-438e-a138-def42e460b73",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "955dcefd-c54c-4a96-b37c-9a31f0768ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f91cd34-c997-4418-b6c2-44fa050ec680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc8383c2-3929-4442-ab8e-39ba40f25fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b602ef-aa71-47a0-8907-65b9f5364779",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa06e13-ece7-47db-9736-0d559daaaf86",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "75fb316f-42f6-4f21-bfb9-5b41ab10c515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "206011f9-f040-4cbf-8a2e-6dc16b2cd59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33c44a40-f24d-4db3-b3a1-42790813d4f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78992cb0-35f1-4872-a644-e9ea190209e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb699260-900e-41bf-a722-c3bc644188bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71b5c305-701f-432f-bdd1-227cb2fc4bd0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d38e7b0e-d824-4d62-a4dd-3fbdbb61d9ba"
                    }
                  }
                ]
              },
              {
                "id": "b9626782-0c07-4a71-abf6-a96a6c4f7f0b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a8fa5748-0b1f-4f4c-b64b-86b21ba438e1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c9d7b1-bf0e-4780-8a4e-2ed0e5db7556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a0c3040f-2619-4073-b1bd-a2afe5c50c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e022c47-a7ef-44f4-9729-a362ad006e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb99ff61-747a-4ba9-9185-a0d9e5deed26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "615477fb-0eb5-4e81-9213-ce6c42debc5a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d25d9639-0cd9-4be2-b770-4ef93295e25b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b87888d-01a5-45ee-a745-e7ea4a2d76b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e7527d3e-3f62-44ac-995c-476dee157db1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b50bb9b-d5e4-47f4-898f-e42db1cbad32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ed70fad-5224-4b8d-8672-fad78dcc5c74"
                    }
                  }
                ]
              },
              {
                "id": "226d843a-f969-49ab-a664-084ea69c57d6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c182d806-7467-406d-87ee-06d573ea1841",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f14f5b8a-7cf0-47f3-9956-d933078093a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07d0fa8d-2fb3-4e80-b833-61de53b4c9de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "959d1302-d325-4342-9f63-ed57c55751e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0f7f8ce-a734-4d85-a158-a3824bb367ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a9c08e37-800f-485c-92f3-4d28b887011d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0310855-2ce2-4758-b1de-513b73a6622b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4248f3c-a34b-4064-b1bf-2a9a71692ffe"
            }
          }
        ]
      },
      {
        "id": "c8936936-5cae-455a-9370-d31c37e4fbfa",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0fdc5fa9-6191-4695-82ee-6adc95225410",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14301aee-42c8-4fcb-aa0d-551021c87167",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "403234ff-17bb-4d06-8c85-439c5ac3613c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25f795e-055b-4eff-a1ed-2e8d706159a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4f2df849-7a57-4686-b7a2-22c2e4dc7ea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1983b5e3-1a23-451d-9d3a-516ae42c44a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3cb5504f-a6be-4727-a6cc-efe8c1059190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2b7a8d-3872-40e2-9fe5-0e871f0dae00",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbdf6f3a-3597-4fb6-83c3-af5ca64869a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2afc5e40-aae2-4225-bd41-2f83d5f398e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6da0f9-87cf-4f6d-a47f-d1f27d8c0325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86ebd804-ee96-478e-8efe-b6ae62a8cfe0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "692165b3-e934-4f64-b38f-2319590e968f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8ce46db-67bc-4bfb-98a1-683e8284a464"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b50964e-ebdb-488a-9ce6-de6e87bf5b6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dea0fe38-eb7b-43dd-8587-cd89d5d0cd1a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39b45449-a44d-43bd-8243-78a6c7c796a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c3d4d411-ab12-4317-889a-8b120e2a101e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23018782-5e98-440c-99a7-8bd713b07d76",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0cba18b0-2d53-4b44-bd93-a01b7e7352de"
            }
          }
        ]
      },
      {
        "id": "8566eec7-3647-4b97-9fe6-c1e1efc8d640",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "cfd81275-3b13-404f-b11c-c36934afa055",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55636478-97be-4d77-9350-79b08231656a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "599371bf-6e14-4fa7-a3e5-0e919c841300",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd643f1c-d67b-4fb0-9340-a8866b124d55",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "765d095e-b818-45c1-928c-9e24797d46c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b34bcb-08e8-408b-a47c-4ca78c041bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b291bf93-11ca-4a85-b0e1-c6e3533762d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcd1873-9fde-4c14-a47a-d6e8d854b3bf",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad66b40c-a1b1-4264-a8cb-b933ee105727",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "96539cb9-2b12-4f79-a01c-1ec090b1d4fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfda739a-bab6-454c-b7ac-a8efc9e90c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f841adb-0038-4588-b34a-851dfcd12fea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ee57136-a8fd-4781-8483-b56deb99b3e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82e8ce7a-edd5-4c3c-90fa-e589ebd8eda1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c7ecf86-893a-4feb-a060-ad9cd385e742",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0588651a-19e3-473f-85dc-a75c27ac91d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87322b25-1af8-4376-b5b8-c94e97b7308b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c25b3f04-c7e7-4c2f-835b-248b5ddcb538"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "560886da-2b10-43b8-92bc-7702fd4854a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b42ebd68-d68e-4bd8-8cb4-9480635382d0"
            }
          }
        ]
      },
      {
        "id": "e6c05804-385a-454c-ad0c-bd25b1a27f26",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "76f5e813-f4a2-44fc-9155-625d33e2f08c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "36bdc8d5-066b-4869-99cd-0117c2416b5e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e346829-37c5-44ef-8452-12270e114bfe",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01426441-9254-4e75-8528-dbffb3529d22",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d47a7e19-fd95-490b-acd9-2dea9731d6ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2b6804-2ff0-4bd9-9770-3495366382d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9687e3d4-9bd9-463f-8d37-326523542538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e2656c-e5fd-40a0-b658-5dddb7ba4142",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33a8d73-28ba-4903-856c-c64490f2213c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "aa501f64-0e75-47b6-831a-e197cdf16175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b23ec1c-b9dd-4561-bf0d-afd2a165a207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9f9ef9a-a4fe-40bf-a83d-156ffd92ac39"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3fa0d43-f23c-4b1c-9926-15086aaef1e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b89fc2e-4bc2-45cc-ac97-0c661b62b15c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "86af8b2c-fcdb-432a-a7d5-81e71ec0ec50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd00927a-7294-4dac-a84c-32e319cbddd4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d86d3fb-4aab-445e-a56a-d9b033673860",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a14492fd-9968-42ea-bc77-04620bd8545a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8526add2-38c7-480a-a191-ff9623475494",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7db5e711-774b-461a-ac75-f92d5e091f77"
            }
          }
        ]
      },
      {
        "id": "6c222aa9-0207-4aff-9e99-7785f4583eed",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b21bbc70-70e8-474c-a07e-06ba0c322f87",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b29a23f-0aed-4a52-ae4a-022fc66a20e9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "679f6b46-b274-4848-bc36-21d229d24dc1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "808de6db-64e7-4c64-8730-4b4426a565a2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3af08c03-9e91-4325-88cb-fdc1a4e19d5b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 23
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 565.8282442748094,
      "responseMin": 21,
      "responseMax": 4943,
      "responseSd": 667.9247034144406,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1671755793240,
      "completed": 1671755952206
    },
    "executions": [
      {
        "id": "7d182a20-e26a-4d8a-bcbb-c175204962a8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "df6fdcff-d2a0-4951-b56a-9820ff1cabbd",
          "httpRequestId": "85497afd-e8fb-4506-8d16-253aa1a08417"
        },
        "item": {
          "id": "7d182a20-e26a-4d8a-bcbb-c175204962a8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "de1fb80a-f979-42d8-9ada-2dbdcbd063f8",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 0
        }
      },
      {
        "id": "1f1d5524-545b-4f46-ad18-b185b8e9ed65",
        "cursor": {
          "ref": "0e4e93cb-9cb0-4926-92dd-4d7b637ca3dc",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2bb461a8-289f-4aff-a1b7-82407288147d"
        },
        "item": {
          "id": "1f1d5524-545b-4f46-ad18-b185b8e9ed65",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "52ff23f7-fedf-49bf-9bb5-c55c9f757070",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "ec112740-57bd-4e01-aa73-2b559ff10852",
        "cursor": {
          "ref": "a5acc719-c883-41aa-9cf1-41af3aef89bd",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b162761e-36f0-47e9-b505-1165a31448b3"
        },
        "item": {
          "id": "ec112740-57bd-4e01-aa73-2b559ff10852",
          "name": "did_json"
        },
        "response": {
          "id": "e0f42448-4148-4937-acbd-7579546ce8dc",
          "status": "OK",
          "code": 200,
          "responseTime": 695,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8ca60a-6234-4e82-bffb-fd34c18df97d",
        "cursor": {
          "ref": "2916654e-9469-43ed-9384-d7d031119e59",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e52be658-c14c-41c4-a97e-1f789b1115a2"
        },
        "item": {
          "id": "1b8ca60a-6234-4e82-bffb-fd34c18df97d",
          "name": "did:invalid"
        },
        "response": {
          "id": "06c9ea93-ffce-4052-94aa-cbcaf00cf527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8ca60a-6234-4e82-bffb-fd34c18df97d",
        "cursor": {
          "ref": "2916654e-9469-43ed-9384-d7d031119e59",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e52be658-c14c-41c4-a97e-1f789b1115a2"
        },
        "item": {
          "id": "1b8ca60a-6234-4e82-bffb-fd34c18df97d",
          "name": "did:invalid"
        },
        "response": {
          "id": "06c9ea93-ffce-4052-94aa-cbcaf00cf527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73549dfb-f8d2-4375-90c1-27e44c810888",
        "cursor": {
          "ref": "8c640e75-3b5e-4607-9662-39519b8ffa1f",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "94915264-4442-43db-ab7a-8b5ef5799d16"
        },
        "item": {
          "id": "73549dfb-f8d2-4375-90c1-27e44c810888",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "02bc67b9-6888-44ef-85c2-7fe4fa241b83",
          "status": "Not Found",
          "code": 404,
          "responseTime": 592,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3147da9-5ff3-47fb-9510-c34751584c14",
        "cursor": {
          "ref": "84bd593b-28a7-44c9-88aa-e464291c1557",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d6e9af0b-24cc-4a41-8dec-ca6136f0428b"
        },
        "item": {
          "id": "c3147da9-5ff3-47fb-9510-c34751584c14",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5e983c57-458d-4de9-9da0-6a0c57f6d745",
          "status": "Not Found",
          "code": 404,
          "responseTime": 489,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac1bb9c-dad7-44c9-aab8-bbb39d5be02d",
        "cursor": {
          "ref": "ba28e78e-041d-42b1-8fa2-34884ed65a02",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "254239f9-a89f-4cab-9b1f-d810a258b436"
        },
        "item": {
          "id": "1ac1bb9c-dad7-44c9-aab8-bbb39d5be02d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "10fc887c-4121-47bb-b127-b9eb60365bee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b600ef91-c9ba-4c49-9702-4786766c711d",
        "cursor": {
          "ref": "1f0ebd25-a930-4ae6-865a-b24849d6946a",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fcda0a39-9d0c-4863-9ca3-0f8abee3f9f7"
        },
        "item": {
          "id": "b600ef91-c9ba-4c49-9702-4786766c711d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f9289788-3e86-4523-a5d3-7be8e309c21b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 528,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b600ef91-c9ba-4c49-9702-4786766c711d",
        "cursor": {
          "ref": "1f0ebd25-a930-4ae6-865a-b24849d6946a",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fcda0a39-9d0c-4863-9ca3-0f8abee3f9f7"
        },
        "item": {
          "id": "b600ef91-c9ba-4c49-9702-4786766c711d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f9289788-3e86-4523-a5d3-7be8e309c21b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 528,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480b106d-fcaf-426c-a2c4-f3588d032063",
        "cursor": {
          "ref": "b57fe4f9-2649-4a23-94ed-a151f52cf94e",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c38c4268-172f-45af-a72b-15507896b7e7"
        },
        "item": {
          "id": "480b106d-fcaf-426c-a2c4-f3588d032063",
          "name": "identifiers"
        },
        "response": {
          "id": "5e1caf74-90c5-40c2-b3f7-ae4e45847491",
          "status": "OK",
          "code": 200,
          "responseTime": 762,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e794fbb-1d23-4d4f-95e4-a2f22d3d25bc",
        "cursor": {
          "ref": "96587ff1-4c9b-4433-8490-2777901c648b",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ad07b0f0-1295-4002-bfab-0e27853cb3e8"
        },
        "item": {
          "id": "8e794fbb-1d23-4d4f-95e4-a2f22d3d25bc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "abef138a-dacb-4072-b2cb-010e77ea33d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e794fbb-1d23-4d4f-95e4-a2f22d3d25bc",
        "cursor": {
          "ref": "96587ff1-4c9b-4433-8490-2777901c648b",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ad07b0f0-1295-4002-bfab-0e27853cb3e8"
        },
        "item": {
          "id": "8e794fbb-1d23-4d4f-95e4-a2f22d3d25bc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "abef138a-dacb-4072-b2cb-010e77ea33d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0f85dd-b1ba-4ce3-bd69-68ffe55eb666",
        "cursor": {
          "ref": "d0f803b7-8f95-4b8a-9a7a-66111cd8e331",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0d2986fc-37ed-4e62-9b51-94472135d3a6"
        },
        "item": {
          "id": "4d0f85dd-b1ba-4ce3-bd69-68ffe55eb666",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "046f4e45-a823-4193-97ed-cbb2f8d5e882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0370db-5476-4c0c-9d59-af89b34e17c6",
        "cursor": {
          "ref": "7bbe59ad-edca-4192-9e2a-76bddd6487b7",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7604b8a5-fd40-4b5b-8000-f0de53c21752"
        },
        "item": {
          "id": "1b0370db-5476-4c0c-9d59-af89b34e17c6",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "81b5b4ef-9edd-4432-b2e5-8ad5a183c4d3",
          "status": "Created",
          "code": 201,
          "responseTime": 2293,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "d33446e0-c351-43d5-8b9a-d30ca3211396",
        "cursor": {
          "ref": "0a7d85b8-0b4b-418f-a03b-34a306dac0ac",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ce51f857-1504-46b1-b781-3142b758707e"
        },
        "item": {
          "id": "d33446e0-c351-43d5-8b9a-d30ca3211396",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fbaf013c-2b68-46d8-85a1-cf0152073450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58154a2a-c220-4580-ab96-fcdcffd2e25b",
        "cursor": {
          "ref": "d5d01b50-3a34-4f95-9701-cf41804f944d",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9c5c2192-9e11-4699-b2b3-d02b15a1f844"
        },
        "item": {
          "id": "58154a2a-c220-4580-ab96-fcdcffd2e25b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3c0a8d18-e8a5-450a-aeef-0d036081002f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788ec28d-62fd-4d85-8214-62c3284dff61",
        "cursor": {
          "ref": "67e19f6e-935e-472e-b5e4-d86bb195e7a6",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "eed45356-c3db-4391-8182-13d342eb78c2"
        },
        "item": {
          "id": "788ec28d-62fd-4d85-8214-62c3284dff61",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0c5349bd-3fb5-4bc1-b95a-1cfe3e8c2791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb9a86c-64bc-41f4-b0f8-fc792addf553",
        "cursor": {
          "ref": "1c979626-362d-4a5e-a8a7-a00c737427f6",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "fa927639-53b1-4257-a730-f92c9a8daceb"
        },
        "item": {
          "id": "5fb9a86c-64bc-41f4-b0f8-fc792addf553",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4bebec6a-1601-4cf9-8803-ff977827788f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2c19b9-f8ea-4fa6-8ae4-cc0342b53f54",
        "cursor": {
          "ref": "3253ab41-786b-4de8-a92e-1f1aa3cbc916",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a8e7329c-f591-4134-ba75-afbfe950d9cd"
        },
        "item": {
          "id": "eb2c19b9-f8ea-4fa6-8ae4-cc0342b53f54",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b4ddb5cb-b0bc-42ff-9f9b-f87582514b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a937043-d8d7-4ba0-b3e0-80003eff6f3a",
        "cursor": {
          "ref": "a307ca75-b28f-4968-80a8-a0826627ba08",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b6974da8-2f5e-404c-a6a2-c183a83362c1"
        },
        "item": {
          "id": "6a937043-d8d7-4ba0-b3e0-80003eff6f3a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0144414b-bd2a-42cb-8311-ceeda6c451c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e421e583-3b8b-43c0-96c9-fad5e1a9f45f",
        "cursor": {
          "ref": "42db5fcb-e09e-4073-a160-baa33e8c608f",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3a7ac6d9-b471-43c0-a598-9e55be5a4607"
        },
        "item": {
          "id": "e421e583-3b8b-43c0-96c9-fad5e1a9f45f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9be9e8b9-818e-4965-9ad5-852fe7d3c6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10365a1b-e400-4206-a096-3299537dc2dc",
        "cursor": {
          "ref": "486c70e5-9adc-4950-a20b-2e579b471576",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e0dcf819-4984-4dde-985d-f1bfc693eb7f"
        },
        "item": {
          "id": "10365a1b-e400-4206-a096-3299537dc2dc",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "13cb3adf-365f-406a-ad82-d81f2265e8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb06581-76b8-4955-b3e9-ed64cd1b6d5a",
        "cursor": {
          "ref": "15859cdc-7533-43fd-b764-671bd03502a6",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "cdc38403-8c37-41e6-a501-09a3129ccb19"
        },
        "item": {
          "id": "deb06581-76b8-4955-b3e9-ed64cd1b6d5a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "62a25da7-ae05-4e31-860f-4c66b17e0ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bddfbc8d-74af-4bd5-85cc-1362439230de",
        "cursor": {
          "ref": "53efd020-ddff-426d-b00f-edc5c08d887f",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a41f5ba4-a8b7-4f69-a7c4-4b94f9d720c2"
        },
        "item": {
          "id": "bddfbc8d-74af-4bd5-85cc-1362439230de",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "48a74632-d4b1-49cc-93a5-6655d86e3a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f260a2-b5dd-4c16-b4cb-d9f523d36f18",
        "cursor": {
          "ref": "f68241f8-caa7-43b0-a5bc-7d636ad49e2d",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "64a8eb99-2f62-4b47-ad52-1555315a8650"
        },
        "item": {
          "id": "90f260a2-b5dd-4c16-b4cb-d9f523d36f18",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "693b04d2-22d0-42ee-8d8f-0dd57cf6b0c9",
          "status": "Created",
          "code": 201,
          "responseTime": 4177,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "13040479-60f4-4c51-998f-8b528e0f612e",
        "cursor": {
          "ref": "f9080cf9-3299-42f0-b124-f04d4ba74094",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "aac9c48b-812b-4370-9604-dae141533ace"
        },
        "item": {
          "id": "13040479-60f4-4c51-998f-8b528e0f612e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7e428416-60be-4e41-a4db-cb756851f25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad81fd2f-d4c3-4db7-8160-d268744e40b5",
        "cursor": {
          "ref": "1adb2a2e-1f8b-4231-b8d9-a34ef6c5f743",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c84fbaca-5153-4539-83c0-9c4c29e65db3"
        },
        "item": {
          "id": "ad81fd2f-d4c3-4db7-8160-d268744e40b5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "bd3d9489-9032-4e3a-b15a-b49131b049ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3632aa90-2369-4c5f-9020-3631eac5e656",
        "cursor": {
          "ref": "ca4b5ebf-3dfe-4913-87bd-85ad211354b3",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4f72fce3-88ff-4c1d-b20a-44614b18b481"
        },
        "item": {
          "id": "3632aa90-2369-4c5f-9020-3631eac5e656",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "35e3eb7a-aab2-4222-b85f-4fc64924d9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0289fc3-5a3f-4ce2-9306-b60f1648a053",
        "cursor": {
          "ref": "2e2a22b6-b875-4432-ac72-d44085cab7fb",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "670da415-9c06-4954-a3ac-b9008131f25b"
        },
        "item": {
          "id": "f0289fc3-5a3f-4ce2-9306-b60f1648a053",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "97243122-3e25-47a7-a83e-169a78718a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef30e606-06aa-4fd8-9bfc-eeb4920dc7d0",
        "cursor": {
          "ref": "e81cc2d2-b0eb-4467-a475-0dd298516413",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a3ea1746-aece-4251-800e-ede509e5d6f8"
        },
        "item": {
          "id": "ef30e606-06aa-4fd8-9bfc-eeb4920dc7d0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "17a781fd-2f92-4259-8f6b-ee67a8b822ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690b049e-32c6-4953-b796-bb940ee63ddd",
        "cursor": {
          "ref": "91a15913-549c-4f79-8e4d-a3afac9f5121",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "64e27be4-814f-4d1c-95a7-fb13e6bbf5c1"
        },
        "item": {
          "id": "690b049e-32c6-4953-b796-bb940ee63ddd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f4ca432a-a36a-4997-8c66-605a47302744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7476b3-9384-4190-91e5-953cde881fac",
        "cursor": {
          "ref": "62da415c-dabf-444f-bc09-918b1fa538cb",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6c2fa205-ec2c-4988-932c-d06bede238a7"
        },
        "item": {
          "id": "1b7476b3-9384-4190-91e5-953cde881fac",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1839cb50-4028-4528-96be-6139084a177a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223e62ea-f8aa-4b39-ac1e-c653c65a49bc",
        "cursor": {
          "ref": "e429ea24-599b-4ded-88b2-67dc1da0c033",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e9fa5e95-88df-46d7-b6f3-a3df10ab74c5"
        },
        "item": {
          "id": "223e62ea-f8aa-4b39-ac1e-c653c65a49bc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "37e34794-9c6c-425f-bac4-7b975a7b41d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511484d8-0cee-4eee-968d-d800ac7700b6",
        "cursor": {
          "ref": "c43ce084-fbb5-4097-912b-e168733fe799",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d1980b0b-cda2-4a64-9a02-2bf6ab3d9df0"
        },
        "item": {
          "id": "511484d8-0cee-4eee-968d-d800ac7700b6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2a04acf2-9c6e-410b-ab51-89da075eb457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa3ec98-4a6e-41d2-ade3-614b32c69940",
        "cursor": {
          "ref": "962bcdd7-d4e8-4bac-80aa-965ef58ebd7f",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "45a9f4e7-932a-4ead-beb7-e376546ed71e"
        },
        "item": {
          "id": "2fa3ec98-4a6e-41d2-ade3-614b32c69940",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "84b312ad-42d2-4b80-925f-d122fe18a37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b88759b-3e77-4c9c-9ba6-c1fac9fcc912",
        "cursor": {
          "ref": "917c1442-f04a-497a-8605-a9fea7dadf08",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "92931ee5-1f21-4a15-9d26-3ad987880f2f"
        },
        "item": {
          "id": "5b88759b-3e77-4c9c-9ba6-c1fac9fcc912",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5ca6985f-0352-48b3-9977-fcb7e0e54bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413bfdd7-31ff-45a1-8567-9ab159c739d2",
        "cursor": {
          "ref": "270d1e80-d6e5-4fce-af67-04caa70a0380",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "11a212a0-bc53-4d76-b3bf-c11aae8147db"
        },
        "item": {
          "id": "413bfdd7-31ff-45a1-8567-9ab159c739d2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d98b4c24-d425-4cfb-948b-976934282f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ca4464-ba1f-43f2-a77f-91851246c49d",
        "cursor": {
          "ref": "cf3370c9-1578-49d2-8516-e66db095bf8b",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9586ac36-cfbf-4fdc-ae02-4e8344bf9555"
        },
        "item": {
          "id": "e5ca4464-ba1f-43f2-a77f-91851246c49d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5d73d1a7-cde8-406f-8d3b-ff8733aed758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0836c960-e64e-4aca-90ed-2d0823aafdb8",
        "cursor": {
          "ref": "c35962b2-1337-4a9c-97a4-e03eb56cb116",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e35400e8-5af1-4f98-a44d-8747486087dd"
        },
        "item": {
          "id": "0836c960-e64e-4aca-90ed-2d0823aafdb8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e198fce5-2a50-471f-80c9-c571f381ba9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753c0463-9b9b-4e65-a085-7c2444b4ddf0",
        "cursor": {
          "ref": "ce973f44-2d26-47c5-bc5c-6c89678ca596",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d138ab10-4cc2-4af4-8065-009679db63bd"
        },
        "item": {
          "id": "753c0463-9b9b-4e65-a085-7c2444b4ddf0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a8082859-7494-4917-969e-b53ba6cb7524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8a0be1-b75b-42fa-b0f4-016b1e5e705d",
        "cursor": {
          "ref": "efef9cdc-4a1c-468c-a240-9be8dccea80e",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ea2516bd-c26d-47a1-beb3-5d002054648f"
        },
        "item": {
          "id": "fc8a0be1-b75b-42fa-b0f4-016b1e5e705d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "019bf53e-88de-459a-9033-6d210122f42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe32ba8-529c-43d1-9c4b-c87abeab861f",
        "cursor": {
          "ref": "06be0c5b-e3eb-47ee-9c97-e1c59eb1d50c",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f0caf4fb-6e7d-45e9-8314-492a352c470e"
        },
        "item": {
          "id": "7fe32ba8-529c-43d1-9c4b-c87abeab861f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "de25f121-0f66-45e0-b23a-d31f638b3450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52322e6d-4a89-438e-91bf-082dc6157dc1",
        "cursor": {
          "ref": "f6e2ed6b-ae15-4fbb-b3bc-0d9f1e947f45",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "51e7ca2d-13b9-4c45-a3f0-98593ecac1ca"
        },
        "item": {
          "id": "52322e6d-4a89-438e-91bf-082dc6157dc1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "680cadc2-681c-417d-b58b-95c47f774dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a46fe35-a7e4-4a1a-a362-739ba3d1730f",
        "cursor": {
          "ref": "a2607af0-f85d-4944-b1a8-53e93299af94",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d7ad3023-1832-4194-a3f2-41c61195ff05"
        },
        "item": {
          "id": "9a46fe35-a7e4-4a1a-a362-739ba3d1730f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a7619b40-170a-4548-b82a-06aab8a5763b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd411de-03eb-42c5-8a91-02eade919358",
        "cursor": {
          "ref": "817a0841-7720-4b79-af76-16730b732fb8",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "43b3f5e8-b489-4676-8329-a1798a6be097"
        },
        "item": {
          "id": "9bd411de-03eb-42c5-8a91-02eade919358",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "77566876-c493-47a7-82c0-a32c17264f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb718303-49cb-433f-ba5b-71721d3ecea2",
        "cursor": {
          "ref": "668e09a9-eaae-4dba-b9ca-e68aa8e024e6",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d9c1d7dd-a535-435d-b093-4f59cb74bee5"
        },
        "item": {
          "id": "cb718303-49cb-433f-ba5b-71721d3ecea2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9ebc9ada-0c53-4461-a34b-e5f2ca3ae018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1bf544a-4d8b-4ed7-8a84-7abe642133df",
        "cursor": {
          "ref": "61a3eb26-7e2a-49a3-891d-80ce78d8f557",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "878e04b0-174e-484e-93ca-a47144678d98"
        },
        "item": {
          "id": "d1bf544a-4d8b-4ed7-8a84-7abe642133df",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9d0ee1b8-34e2-4444-b468-bc20d9f7d61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06040c7-9d4d-45bf-b1a0-e3c16494a5e9",
        "cursor": {
          "ref": "480d6804-fb14-4410-b893-e2458030b6a1",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "04a13b84-5591-4ff5-ae0d-195bc04f4715"
        },
        "item": {
          "id": "d06040c7-9d4d-45bf-b1a0-e3c16494a5e9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "32a8e787-f4fd-4359-a78f-f161a35ca1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1d87d6-4c15-4e07-a543-d3a1880fa2b8",
        "cursor": {
          "ref": "ea226590-f85d-4b6e-847d-226e0406ba1a",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "605e7397-acbf-46fe-8672-d49d12f702e8"
        },
        "item": {
          "id": "2a1d87d6-4c15-4e07-a543-d3a1880fa2b8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "562b46fc-c1ce-487b-86fe-2dad3905128b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 748,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c1e7e5-dc54-4865-8a50-4716f86bf78d",
        "cursor": {
          "ref": "ea841ea7-4bb4-46f2-88be-64387f57fc92",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c3750b1b-0605-41d0-bc22-22a434aca932"
        },
        "item": {
          "id": "12c1e7e5-dc54-4865-8a50-4716f86bf78d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "14294811-114e-4051-9fac-16e192e26ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa87635-fc27-4c58-bd91-9c08b2a90ffc",
        "cursor": {
          "ref": "cd004b95-ded0-4167-b989-cfccb504d0a6",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4e0575fe-19a1-4f66-a057-58b5ab5635b2"
        },
        "item": {
          "id": "0aa87635-fc27-4c58-bd91-9c08b2a90ffc",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "11e08c57-8186-4d17-afa7-cc66f3c9b159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ec1168-2cd7-4815-b750-dbe13a3f9341",
        "cursor": {
          "ref": "bf41d0ce-b404-41a1-a193-d672f4e9cb2d",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ebbee5da-cb4e-4080-b865-85298f199cd5"
        },
        "item": {
          "id": "f5ec1168-2cd7-4815-b750-dbe13a3f9341",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b5aec27f-ed02-4c95-a2b0-a23054f1f7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623dc833-022c-402c-acfa-69e533cce920",
        "cursor": {
          "ref": "97bef713-71ef-4edb-80f9-13df2b9b8d54",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "681198a7-75d8-48b0-bfe8-cd02abb0d591"
        },
        "item": {
          "id": "623dc833-022c-402c-acfa-69e533cce920",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3c4dcb87-4ac9-4506-ab9b-e85c5ed01600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd9c26e-1085-4917-a96e-5669a6497ec6",
        "cursor": {
          "ref": "7ee14e18-8599-4834-96bc-33731f550699",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a274d8f6-f1e8-4259-8b9e-ef043522c58f"
        },
        "item": {
          "id": "7dd9c26e-1085-4917-a96e-5669a6497ec6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6329e7d1-5187-493d-b580-1dec7f6d5e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb17f49d-4af1-4c16-af86-ee98f96602d3",
        "cursor": {
          "ref": "fca2b924-5d1e-4b27-bf30-a753c38dcf37",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b9948800-c3d6-4eb6-be1c-0052b7943367"
        },
        "item": {
          "id": "fb17f49d-4af1-4c16-af86-ee98f96602d3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0407a588-e74b-49a8-a8c1-7808a704e1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a37027-4fda-4269-bb7f-c2af7055b534",
        "cursor": {
          "ref": "fc4e9b9e-d9e2-4ca9-87a2-56dde9e7d487",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e283ac8f-3a8d-493d-8e57-64a42ab935dd"
        },
        "item": {
          "id": "43a37027-4fda-4269-bb7f-c2af7055b534",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "53971912-715e-42e9-9c51-bab19d50d7fb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 582,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a04fd2-02a6-4e64-adaf-f45c35c39680",
        "cursor": {
          "ref": "4e9d87a0-7eac-4041-930b-e38158a9828e",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8a5ea664-dbeb-4cb1-80e6-071a8ce6df79"
        },
        "item": {
          "id": "85a04fd2-02a6-4e64-adaf-f45c35c39680",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "36b5ecde-696c-48f9-8654-bb017aa4cdc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3b4d99-c5cf-4480-9a39-f3e514c8d136",
        "cursor": {
          "ref": "4761b4bc-ba8e-431f-b3de-ec01d39f1c30",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "34ff3d2d-6a4d-4d77-81b4-e3af833c98b5"
        },
        "item": {
          "id": "af3b4d99-c5cf-4480-9a39-f3e514c8d136",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2ce34c81-cd16-44ce-ac4c-c51b4d8f76e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7723bdf-7e36-4e84-aa9f-3498c9bf7602",
        "cursor": {
          "ref": "64978eda-90b7-4986-8983-a35f5ea2049a",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fcb0598a-4faa-41ba-bb1d-1dd54f1482e3"
        },
        "item": {
          "id": "b7723bdf-7e36-4e84-aa9f-3498c9bf7602",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9967853b-9167-4b39-9a84-176a9c098d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb43142-2bb2-41c8-89e1-bb7ee708b6bf",
        "cursor": {
          "ref": "a08e97c0-f411-4eaf-aa6e-a3e011aec257",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "93acaf63-6bdc-44ac-b880-daadcc95936f"
        },
        "item": {
          "id": "ceb43142-2bb2-41c8-89e1-bb7ee708b6bf",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "32d5cff3-e48d-4116-8652-d160bf872c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d572cf-ca00-490f-a7c4-a5813ec335ae",
        "cursor": {
          "ref": "e493252a-a0ce-4017-b806-f8338b8157d1",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b08f3c94-885d-4720-9a96-e571133a5749"
        },
        "item": {
          "id": "74d572cf-ca00-490f-a7c4-a5813ec335ae",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ea7ed028-09f9-4d01-85aa-22947a5020ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b4c83d-4564-4c7c-ac23-1addaca4c72e",
        "cursor": {
          "ref": "e6f1d0ca-e43c-4ba2-ba3d-1efa0a19d5ff",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7905f3bd-3ad0-4876-b2b9-682dc208942a"
        },
        "item": {
          "id": "c2b4c83d-4564-4c7c-ac23-1addaca4c72e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "df80c26d-94ab-4af5-90fa-5e76e81f3158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8ec9c6-1cbc-4bdb-aee5-441a4a36930c",
        "cursor": {
          "ref": "881d8092-6808-4d35-a6bb-cac4c6f434ae",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "78eed352-71ed-499a-86cb-fc5beefef272"
        },
        "item": {
          "id": "1d8ec9c6-1cbc-4bdb-aee5-441a4a36930c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6f0dafc4-01a9-44ff-a808-314a4d8dde35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ced63b-9dc9-441e-9820-a1493d42748e",
        "cursor": {
          "ref": "c6db1820-92bc-41d4-ad26-dcd126502ddd",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2758731c-1267-453e-9631-82dcba5e14dd"
        },
        "item": {
          "id": "a2ced63b-9dc9-441e-9820-a1493d42748e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f2baa454-d696-4a79-9941-4418255d365d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b779ea19-e84b-45c4-b9f7-e62cd7531f8e",
        "cursor": {
          "ref": "29946515-949d-4df9-b3bd-de79ff18bc0e",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b92c04ae-b7e3-44e1-b42b-6a0a5a51105b"
        },
        "item": {
          "id": "b779ea19-e84b-45c4-b9f7-e62cd7531f8e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "81e8688d-02a0-4a85-951b-0480445e79f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d4a22a-6df7-474f-a051-0d48d2ec9665",
        "cursor": {
          "ref": "332486a1-c057-45df-aa7a-108e4bc03a39",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "026655c1-03b7-4298-a607-04baf21e6a91"
        },
        "item": {
          "id": "a8d4a22a-6df7-474f-a051-0d48d2ec9665",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "53ff7e54-1395-4fff-b295-1419e6a994bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cee5572-97ad-40f6-893d-4b53e54e3253",
        "cursor": {
          "ref": "cf722feb-c672-453f-b4e7-71751a3cc7d5",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2db76af0-6d33-4798-b388-16316e7d30a3"
        },
        "item": {
          "id": "8cee5572-97ad-40f6-893d-4b53e54e3253",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4cc62bc7-34c8-4a26-9b19-eb4b9a6794f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d89476-b2bc-42f4-8e1a-e8a092231140",
        "cursor": {
          "ref": "1065c24b-2723-4862-b556-869465252cd3",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "29cf04dc-b08b-4ad0-bf76-854d24d06f2f"
        },
        "item": {
          "id": "35d89476-b2bc-42f4-8e1a-e8a092231140",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fb33272d-23a2-4cf6-b50d-41cf378cefee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23187b96-170f-423d-92be-251fcc10d6c5",
        "cursor": {
          "ref": "11937221-345b-43a2-a315-cac8cf049a07",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f348e166-3269-4124-a83b-9680c7492b06"
        },
        "item": {
          "id": "23187b96-170f-423d-92be-251fcc10d6c5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8000daaf-c511-43f2-8ab8-fc6c8f7a770c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0f9ca1-6f45-42e9-bbd1-680c12bad867",
        "cursor": {
          "ref": "0b822522-6f97-4ffa-9539-576ce764a436",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "90c63cfc-69f1-4edf-a0bf-623d5df8b4db"
        },
        "item": {
          "id": "da0f9ca1-6f45-42e9-bbd1-680c12bad867",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5c4965bd-17f2-4381-a495-f903f33f499f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b034fe6-e2c9-4570-9526-52b5172630f4",
        "cursor": {
          "ref": "26f3e0cd-39e6-41d4-915f-e0cdbeeda756",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5ceea905-8758-4e43-955e-9875d1f90e8d"
        },
        "item": {
          "id": "8b034fe6-e2c9-4570-9526-52b5172630f4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "69141a67-5392-4e4c-91cc-9e4f85f476a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26f3af7-e9cf-42f8-8521-1062968ec857",
        "cursor": {
          "ref": "61d8b09b-2c68-40ab-a288-5c438c840454",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1d92c206-7103-41aa-b872-e7e80f5978ed"
        },
        "item": {
          "id": "f26f3af7-e9cf-42f8-8521-1062968ec857",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c2042db7-b1ec-4785-aa18-6b1245098bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3cdeda6-dfec-433e-a7b1-efd556ee4e45",
        "cursor": {
          "ref": "ef48d359-0e9d-4d82-bb67-8e25b1020c0d",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5f082a69-9d4d-4330-96a8-b61280003c8a"
        },
        "item": {
          "id": "e3cdeda6-dfec-433e-a7b1-efd556ee4e45",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "64edf6bf-0fea-441c-9b0a-b72ac1c00897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eedc7300-bf27-4533-b757-e1c1d2cf1fcb",
        "cursor": {
          "ref": "b406b8c8-fac6-40bf-9a25-a9e8872dcaa8",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2584e2fc-714a-487e-9eee-24780b4317cb"
        },
        "item": {
          "id": "eedc7300-bf27-4533-b757-e1c1d2cf1fcb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "10de5a9a-697e-4575-a276-009aa9e5685e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afc6caf-87a1-434c-b2d5-cf27113077dc",
        "cursor": {
          "ref": "a0066dd8-8d95-49a8-a212-8f78b9518623",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b07f491a-2fbd-4079-9147-5a83f7d16690"
        },
        "item": {
          "id": "9afc6caf-87a1-434c-b2d5-cf27113077dc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "627e63cc-a8ff-49a6-9b02-a2834de491dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceac0236-c43c-4116-b72f-36cabeaa2c98",
        "cursor": {
          "ref": "ed8bead4-a40f-44b9-9f16-d654c1d62060",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e4d84697-ccf0-4146-9557-89eb5e5c5998"
        },
        "item": {
          "id": "ceac0236-c43c-4116-b72f-36cabeaa2c98",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "906156aa-46b9-4b81-966f-521676c7f0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2885d7-d3ef-404e-8cae-fc94870bd7fb",
        "cursor": {
          "ref": "7cf6e8a8-6935-4fc5-b6ef-da9171e8d462",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9ff0fa50-1d9f-48eb-b127-6656b0182123"
        },
        "item": {
          "id": "cd2885d7-d3ef-404e-8cae-fc94870bd7fb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6a3d28a0-fd98-4789-be38-36c12aed6882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8b0fb1-11a3-4ea8-9cea-396873d183f2",
        "cursor": {
          "ref": "3b145207-8d5d-400a-b05a-4d982c36f5d7",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "66ab7fca-0377-4a43-b226-696e2e01020c"
        },
        "item": {
          "id": "aa8b0fb1-11a3-4ea8-9cea-396873d183f2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "453c23a6-1ac5-4d5f-92b6-e0af0306671a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa168e94-216c-486b-9a23-a1cf9f30cab1",
        "cursor": {
          "ref": "ed24dced-0660-431e-b650-feaff169e168",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "59a58eb4-b0f2-49d6-bbcb-db76c2db49e9"
        },
        "item": {
          "id": "aa168e94-216c-486b-9a23-a1cf9f30cab1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a7671fdf-dc81-461a-a674-480f3dc70393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fb2a70-f299-4579-8d1c-0d856c766b40",
        "cursor": {
          "ref": "477606e4-772d-411d-bf39-34b8308e723c",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "86470906-ed46-4d29-9b50-7a20fba9d567"
        },
        "item": {
          "id": "90fb2a70-f299-4579-8d1c-0d856c766b40",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d1998411-acbc-4ad5-bdd5-e59444e3f6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91344661-1b59-4a66-ad91-e1c5ccbf152a",
        "cursor": {
          "ref": "e7250bc0-70b0-40a7-af49-7c47f66e5cf6",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d9d5bf37-f749-450b-92b5-fe147be2baea"
        },
        "item": {
          "id": "91344661-1b59-4a66-ad91-e1c5ccbf152a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9aa7ddca-5b52-4219-b3fd-868441883886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7d88a7-cb98-468d-8d91-f0862304ad95",
        "cursor": {
          "ref": "ce7ab139-7510-4c79-a559-27af2037c8f1",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "37bfd7cd-d35a-41ae-9b54-28dd38f6297a"
        },
        "item": {
          "id": "1f7d88a7-cb98-468d-8d91-f0862304ad95",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f48a3922-e2b4-4084-b40e-2898ea816201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477c1194-6c21-4be9-8b5a-7153c0b0f656",
        "cursor": {
          "ref": "8951b470-315a-4484-9b75-fccd786a990e",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "97360ad1-dc96-4e3d-8613-ee55ec2dc795"
        },
        "item": {
          "id": "477c1194-6c21-4be9-8b5a-7153c0b0f656",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6672ea48-824d-4478-9470-ca87d6085bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb83da5-b877-4b22-8ae6-adc6519b36ad",
        "cursor": {
          "ref": "51c1e03c-bcf5-47ba-9d34-26f641bab545",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0336aad5-17d8-4ad7-ab35-525ec6905211"
        },
        "item": {
          "id": "1fb83da5-b877-4b22-8ae6-adc6519b36ad",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bd203d92-2345-4b0e-b425-da29dee04f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce23200f-6b22-40f4-bb1a-91710153634f",
        "cursor": {
          "ref": "dcbb7999-f03e-483f-af48-bae5438c0378",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "103661cc-c048-4c36-a9cc-c34c908a5e06"
        },
        "item": {
          "id": "ce23200f-6b22-40f4-bb1a-91710153634f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "566bd9b1-4043-49ca-b9da-33640badfbc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fee9d2-a474-4ef0-8f2d-762e9e26ead9",
        "cursor": {
          "ref": "f7aad046-69b4-4fc6-a50b-73ddffbe52c0",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "39cabbd7-5cbf-4095-b97e-e62643fe6bd1"
        },
        "item": {
          "id": "98fee9d2-a474-4ef0-8f2d-762e9e26ead9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e57b4bd0-4193-417a-89ee-5f6f0ac58223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23b6deb-66f1-4fb5-a8f6-1fc4b693f88b",
        "cursor": {
          "ref": "747fdfbd-b896-4734-88a2-72b42c22ae7c",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ba13d081-f0cb-41f3-9b8e-3ce7bb7e46b9"
        },
        "item": {
          "id": "d23b6deb-66f1-4fb5-a8f6-1fc4b693f88b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8aa3c557-6f80-4c5f-b063-7b0bf382f27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e77f19f-3551-4d54-a7ca-04b2b884520c",
        "cursor": {
          "ref": "3176d9c4-781b-4c36-978e-ae29fbfa852a",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "86387d0f-31fd-490b-9241-3d25dd15fc68"
        },
        "item": {
          "id": "1e77f19f-3551-4d54-a7ca-04b2b884520c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "61dd23ba-b0de-4249-b330-39e3cb50067f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae015ae6-44b5-4ddb-88f1-95fd3e5b2c13",
        "cursor": {
          "ref": "514f4d2d-c6c7-440f-975d-0b9118df0883",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "009e8058-2adc-4237-b6e5-65c446090c27"
        },
        "item": {
          "id": "ae015ae6-44b5-4ddb-88f1-95fd3e5b2c13",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0f217e0d-835c-4c30-a85e-d239aa341c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772ff81e-5e69-4e48-9e19-afc40f095ee4",
        "cursor": {
          "ref": "49355e5b-26b3-4bfb-b1c1-6855bb174977",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "dc8dbae3-515d-4d2c-b8b3-9cfe49dec753"
        },
        "item": {
          "id": "772ff81e-5e69-4e48-9e19-afc40f095ee4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c9d8fbd5-7de9-4457-99cf-c33a9c60b1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133d7b8a-ad9b-41e5-bf12-3c0aee4d206a",
        "cursor": {
          "ref": "6f43a43a-ee8f-4026-ac0b-bed8f52dba87",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "68bda3a9-4937-4000-aed9-ca08e4d22cec"
        },
        "item": {
          "id": "133d7b8a-ad9b-41e5-bf12-3c0aee4d206a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "326663de-7f4c-400e-be85-271a3bf88b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437edee4-c3cd-438d-b7d6-6bd2ffcb46fe",
        "cursor": {
          "ref": "ad815afa-f386-4cc2-b609-311df3e11717",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c26c9727-1c12-4eb1-969b-f0431cd4598c"
        },
        "item": {
          "id": "437edee4-c3cd-438d-b7d6-6bd2ffcb46fe",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "587cbb48-d479-424d-89df-3806d4b6e404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759899d3-9f00-48ed-b867-d831b67cc0eb",
        "cursor": {
          "ref": "554b062f-fc22-4530-8ad8-81e2335fbb5c",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9268a64c-9fa0-4a3e-b966-85d8c828d596"
        },
        "item": {
          "id": "759899d3-9f00-48ed-b867-d831b67cc0eb",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b661a7c2-d29c-4112-a922-11afb6873108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f9f7e7-4baa-4feb-9f3b-175aa837d061",
        "cursor": {
          "ref": "ac2fbfff-1bef-4666-81fd-29817ef240f2",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "98c6bcfb-b08a-4eda-9331-1081c15f169d"
        },
        "item": {
          "id": "a0f9f7e7-4baa-4feb-9f3b-175aa837d061",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "00475bb2-b6e0-445d-aa22-0fb6998eff1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16eee4a7-f343-4bf3-aca2-ef6f3f453055",
        "cursor": {
          "ref": "8f7226e6-f964-4b90-8047-178a2030c4b8",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "814f9e04-df64-4760-adec-bec432ccd930"
        },
        "item": {
          "id": "16eee4a7-f343-4bf3-aca2-ef6f3f453055",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "10c4c196-baa6-488d-9b50-d7eadf99e5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf68a88-b9a6-41c0-95c4-961357c03e85",
        "cursor": {
          "ref": "f1cf4f56-4988-4383-8b7f-2fb082350060",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e9aefe2c-232e-4d4b-b523-896f7596ca39"
        },
        "item": {
          "id": "baf68a88-b9a6-41c0-95c4-961357c03e85",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3b51592b-1493-4555-a86e-c40766c96c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f23e16-bd8a-46a6-b62a-115ceb45de5a",
        "cursor": {
          "ref": "5d5d2900-6d84-49d4-9a72-6288bfa4310e",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c3c8ddc7-9502-4983-aaf5-a8798bd0df72"
        },
        "item": {
          "id": "16f23e16-bd8a-46a6-b62a-115ceb45de5a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d687831f-9218-4d5e-824c-b975c4c7d077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee012cb-9855-4bc0-a6bb-9427f2b5d5a6",
        "cursor": {
          "ref": "7d58da84-4ffa-413e-ac9f-8990e3d6c94f",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1d2e0509-153e-4f6a-b1a8-6eba27a2498c"
        },
        "item": {
          "id": "bee012cb-9855-4bc0-a6bb-9427f2b5d5a6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cb11182a-b177-4447-8613-3f8c8fcc8a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd384de2-f635-4a9d-88af-ff12b0257626",
        "cursor": {
          "ref": "838c4b0a-fa99-454d-bd8a-2bb40a6b087b",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fe163d8d-5496-4981-b28e-adb6e85f0113"
        },
        "item": {
          "id": "cd384de2-f635-4a9d-88af-ff12b0257626",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b33dbdd3-3394-4977-bceb-78121532c1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19335e20-b291-407c-9586-58d8bd871862",
        "cursor": {
          "ref": "eb69d44e-6ee3-4bad-a0f9-336740399817",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "73606e37-0ae5-4da3-bb7a-ad794a29d47e"
        },
        "item": {
          "id": "19335e20-b291-407c-9586-58d8bd871862",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d667eb67-d7d0-43b5-ba8a-ce56bf404bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad703132-12aa-4fe9-9682-5c7331c5ee90",
        "cursor": {
          "ref": "59620411-d973-4f08-a132-da82ba24ff45",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5b9f8559-fa27-42bb-9a82-d40ac8f32309"
        },
        "item": {
          "id": "ad703132-12aa-4fe9-9682-5c7331c5ee90",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "55164925-8d87-4752-8f9c-0607cb64f41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b410def3-cd58-4990-8c08-733e8c29283b",
        "cursor": {
          "ref": "ed450b21-45da-499c-9438-ed3bda56dff8",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8a1a2dde-6d77-4b65-8ce5-58cf1e3a2118"
        },
        "item": {
          "id": "b410def3-cd58-4990-8c08-733e8c29283b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a49b734a-9c31-4000-bf94-057d1c466c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b51e6a4-6c5a-443b-8c08-6074cdb81194",
        "cursor": {
          "ref": "8690804d-9e8b-4fcf-8707-96bdefdb121f",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "831d613d-c77a-44bf-b5e0-7bf6a16d2b9a"
        },
        "item": {
          "id": "4b51e6a4-6c5a-443b-8c08-6074cdb81194",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "82babf6e-bd23-4f53-9f6a-ce79bd2436da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f0f328-e815-4832-814b-1a308f55fbba",
        "cursor": {
          "ref": "0a46b240-d627-4da7-85a3-18056d147b49",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7d05f081-cb52-42a3-9e1d-cd7b5cf70de5"
        },
        "item": {
          "id": "f3f0f328-e815-4832-814b-1a308f55fbba",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "25f6f7a6-3fc4-4c8a-a90d-d55119243cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b53c48a-b103-400e-9156-48b2b57c94ab",
        "cursor": {
          "ref": "8229fbe3-bf6e-465d-a9a0-53c515415a5a",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bae4bc2d-49c1-4caa-9234-d68ac6655166"
        },
        "item": {
          "id": "7b53c48a-b103-400e-9156-48b2b57c94ab",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "461b86f3-0473-4a26-b571-4c9edd27978c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03afbff8-e9e6-40e0-9a61-5a3617773633",
        "cursor": {
          "ref": "a5042452-cdda-4dee-a703-ff8b0d4278d7",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "358874b9-f2fb-43a4-a936-93851c34c424"
        },
        "item": {
          "id": "03afbff8-e9e6-40e0-9a61-5a3617773633",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0da94079-aecc-44ec-ac42-9140fa034dc4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075a43af-ff18-4913-bc13-c9b69536fe46",
        "cursor": {
          "ref": "597de0d1-b22d-4935-b63a-1c4aae17d41e",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "63aaf03b-0f14-4159-be20-97a6424fb587"
        },
        "item": {
          "id": "075a43af-ff18-4913-bc13-c9b69536fe46",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "3652ef5e-aae8-4b81-a59d-51e3c457918c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 516,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1b0a2b-e3ef-4475-9dc8-d7911a5ad6a9",
        "cursor": {
          "ref": "89bb58f4-3aa4-4dcb-a8a8-182dff8be986",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9eb372b0-8633-419c-8445-baa4f46d412a"
        },
        "item": {
          "id": "ef1b0a2b-e3ef-4475-9dc8-d7911a5ad6a9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a2157057-3333-4625-a743-6c91390bdf34",
          "status": "Created",
          "code": 201,
          "responseTime": 3831,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "d6dad38b-0ae3-44a0-8a3e-b9402713a625",
        "cursor": {
          "ref": "359e2d30-8e50-4386-9bc4-efa1d6e6add0",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6dbbc123-10ad-407f-a6e6-7eb68e0b11ef"
        },
        "item": {
          "id": "d6dad38b-0ae3-44a0-8a3e-b9402713a625",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7fc16fca-79a7-4f80-826b-2108aab637f5",
          "status": "Created",
          "code": 201,
          "responseTime": 3833,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "f837a1ad-6e67-4c59-893a-d48cbdd9607a",
        "cursor": {
          "ref": "e4c53644-33ca-4f98-b6fd-ae8b1d342159",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d87806f9-2f08-4025-8050-394c949e9bb6"
        },
        "item": {
          "id": "f837a1ad-6e67-4c59-893a-d48cbdd9607a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fb0ead01-d918-487a-b741-3c5f0c0d7623",
          "status": "Created",
          "code": 201,
          "responseTime": 4095,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "36333fba-2df5-4cce-8d55-39d44c2dd87e",
        "cursor": {
          "ref": "b221a35c-41f8-4417-84c1-c98b99dfb0b7",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f0de0809-be15-42b7-9ea9-3f128e01f1c5"
        },
        "item": {
          "id": "36333fba-2df5-4cce-8d55-39d44c2dd87e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0b0b124c-22e7-4bb9-afd7-08db77052bbb",
          "status": "Created",
          "code": 201,
          "responseTime": 3801,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "5ec93809-baf2-4d2b-8075-73cfb1d92d7e",
        "cursor": {
          "ref": "5323b72f-9646-4d2b-aae9-5c9023cbc882",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d7a957ac-c7c3-425c-8873-3b22cf423d62"
        },
        "item": {
          "id": "5ec93809-baf2-4d2b-8075-73cfb1d92d7e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "25695f8b-edde-4134-b71a-ac5a58677f8e",
          "status": "Created",
          "code": 201,
          "responseTime": 4943,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "814f86d8-40f9-4fe1-8bb4-eb820516349a",
        "cursor": {
          "ref": "34f20411-ee64-443e-ae87-e3962bbcddb2",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "72777203-7900-473d-a190-1a832352a686"
        },
        "item": {
          "id": "814f86d8-40f9-4fe1-8bb4-eb820516349a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9bfee8a8-3691-42a2-ac2a-a27e54e7426a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814f86d8-40f9-4fe1-8bb4-eb820516349a",
        "cursor": {
          "ref": "34f20411-ee64-443e-ae87-e3962bbcddb2",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "72777203-7900-473d-a190-1a832352a686"
        },
        "item": {
          "id": "814f86d8-40f9-4fe1-8bb4-eb820516349a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9bfee8a8-3691-42a2-ac2a-a27e54e7426a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061f6fa5-272e-4ea5-941c-04aa0e07ea68",
        "cursor": {
          "ref": "114e35a9-3d5f-4680-b2ee-b104b56264d6",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ff6ea855-b20e-45e6-8900-4b5dfd267dad"
        },
        "item": {
          "id": "061f6fa5-272e-4ea5-941c-04aa0e07ea68",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "864dd5fb-d53e-4edd-b71b-0a3e62392e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63be733c-883c-4786-89e7-bd5fa6fde4c5",
        "cursor": {
          "ref": "efd73cda-c46f-4add-886a-f37d5725c939",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7316ea75-c8f7-4b0b-8cbd-c25de4f6239d"
        },
        "item": {
          "id": "63be733c-883c-4786-89e7-bd5fa6fde4c5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0d543cbc-8b8b-4ea2-9895-2d1e1935a44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce79c1c0-64d3-42f7-835a-d40824dbbe5c",
        "cursor": {
          "ref": "88057dd0-28e9-4f2b-b5a5-73b7fcb436bc",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "bf3362a9-90c3-43e0-93a0-6e6bd4859c54"
        },
        "item": {
          "id": "ce79c1c0-64d3-42f7-835a-d40824dbbe5c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e1f8871e-1296-4d4d-af4c-82ea8a0255a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb0b8b3-da9e-43aa-a36d-fe2e9a67a5e3",
        "cursor": {
          "ref": "9ef39d3c-fe9c-4bf3-a84c-5aca59baf4c1",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "cae2a4ae-41ab-4436-b5cd-6b3618612607"
        },
        "item": {
          "id": "7eb0b8b3-da9e-43aa-a36d-fe2e9a67a5e3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8967d64c-0053-4d26-aba2-d245d8c58f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c956ecf-d0cd-47d1-a700-469c4cfdbe79",
        "cursor": {
          "ref": "46dc9944-e9c4-4f74-a200-78947d4162fc",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "06214675-bacf-4044-a64f-193202f71983"
        },
        "item": {
          "id": "3c956ecf-d0cd-47d1-a700-469c4cfdbe79",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4a336bd7-6f3b-42dc-9165-584c448f747b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9556bb77-17f5-46fc-b5ab-c68adc704a7e",
        "cursor": {
          "ref": "404170d4-9cab-4fbf-a74e-2d66a5a1aae9",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "25716063-6892-4384-a229-2f9faaec4407"
        },
        "item": {
          "id": "9556bb77-17f5-46fc-b5ab-c68adc704a7e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bd739f51-8d1c-4e65-a384-71ae29e0f77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6f014b-a886-48c0-96f6-4f02cda62e26",
        "cursor": {
          "ref": "9ddb3d97-61cb-4469-8706-56a3723f9e50",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4eb87c71-18e0-45d4-b91c-877de865fe1a"
        },
        "item": {
          "id": "5f6f014b-a886-48c0-96f6-4f02cda62e26",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b7a49e20-7bd0-43a4-a367-99f7f7f42963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b899ca5-050d-4d77-8268-7d3d74355b04",
        "cursor": {
          "ref": "9904de2d-ce62-4e28-9ac7-7b50d9399637",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "13454c97-c54f-44fb-9c84-cc354bbd666c"
        },
        "item": {
          "id": "1b899ca5-050d-4d77-8268-7d3d74355b04",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6933c58c-5084-47be-83c5-dbffb3fac08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd708789-e65b-421d-988b-a116dc708aec",
        "cursor": {
          "ref": "d3d45a00-5966-4679-b8be-30d4158b89a0",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "556e6fe6-b5a3-4be4-92eb-dd84a0cac48e"
        },
        "item": {
          "id": "dd708789-e65b-421d-988b-a116dc708aec",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a74e4913-4918-4d06-ba62-6a1115196597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8e4f46-7d8b-47da-8255-b0f5546c0df8",
        "cursor": {
          "ref": "8d3bbe98-126a-4ea8-acc3-d4c5d93c02a9",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bcec4b6f-8110-4e71-a6c5-bac4c65c8deb"
        },
        "item": {
          "id": "2c8e4f46-7d8b-47da-8255-b0f5546c0df8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "52ad3ec6-b9d6-4875-a958-57c832ad6733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed569036-df5a-4633-88c4-afd35508c8a7",
        "cursor": {
          "ref": "f00e392e-ee00-447e-8115-fbcdcb2c646e",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ef5d4a5b-110d-4b7b-b2f0-ce4ac2037456"
        },
        "item": {
          "id": "ed569036-df5a-4633-88c4-afd35508c8a7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "895e2aea-0be0-4a13-945c-09708645de29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd0594b-7b4b-4e6e-8365-7c2c3bac0646",
        "cursor": {
          "ref": "54a48642-a66a-4809-8097-4f5bbe834044",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "38b866a1-5231-46df-9899-5a5cd06a2964"
        },
        "item": {
          "id": "6dd0594b-7b4b-4e6e-8365-7c2c3bac0646",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "289e6ccd-8b73-4482-9b93-ee38190465e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4fc1fa-2d3f-4a22-87ea-b45a26562e0d",
        "cursor": {
          "ref": "312c79f0-0716-4b7f-81e0-56fa01defc08",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "89bd0393-9d38-4e19-b2fe-369e125a1a34"
        },
        "item": {
          "id": "7f4fc1fa-2d3f-4a22-87ea-b45a26562e0d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "20c39b54-92b4-4c5a-987a-215b32b949d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f566625-4fa2-4e7d-a61d-45185e9166c9",
        "cursor": {
          "ref": "0a403050-2c64-4c1a-8cc8-7bf43a730949",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "439beda7-2ab5-4f09-a3a6-f0183c2d7593"
        },
        "item": {
          "id": "1f566625-4fa2-4e7d-a61d-45185e9166c9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bcad552f-005e-4bfb-83d0-c700ee29ac74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c891cb15-c097-42a4-bfbc-4e46cfde2937",
        "cursor": {
          "ref": "3f857406-170d-457a-8f36-9fe4e2068787",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0f8f8f0a-aa9f-4e39-973d-7ba5efa5cb63"
        },
        "item": {
          "id": "c891cb15-c097-42a4-bfbc-4e46cfde2937",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1dc42001-954c-4ae2-9258-e68a21d1836c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d565e6db-783d-4f95-988a-ea696003cdc4",
        "cursor": {
          "ref": "bce1444b-7f92-4a4d-afa9-1572fb76caed",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "37d5a0db-d351-4467-8f7b-f827a67e6dc1"
        },
        "item": {
          "id": "d565e6db-783d-4f95-988a-ea696003cdc4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "85f8e850-9f42-4610-b079-7980f74df8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b513fc-cd66-47b2-8758-fa040859e9fa",
        "cursor": {
          "ref": "fdd7f746-9e17-46aa-8bce-ffe42f0749d4",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2eaa2be4-651d-4b77-9368-adb12593f7bc"
        },
        "item": {
          "id": "06b513fc-cd66-47b2-8758-fa040859e9fa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d76d3b4d-3560-4e8e-b2e4-8feb21384c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae41997a-277e-4076-ba11-a14a60d7ba67",
        "cursor": {
          "ref": "70109460-538d-4ccc-82de-f94007243518",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "419014e2-733c-4c66-b66a-7481539da2c8"
        },
        "item": {
          "id": "ae41997a-277e-4076-ba11-a14a60d7ba67",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6b065ef4-bebd-402c-8802-e7e8c64fa488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599468aa-d45a-4213-927c-82e33d031b59",
        "cursor": {
          "ref": "c625ae12-655c-4d38-a9e8-d08b82d4ef24",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a5de7d07-1b6b-4f0b-a099-3083a0be7612"
        },
        "item": {
          "id": "599468aa-d45a-4213-927c-82e33d031b59",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d3c08aa9-38ce-4041-8d88-4eac0bd1c9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0c6e9a-caba-40f3-b31e-c9b7437b152b",
        "cursor": {
          "ref": "556ed39a-7fb0-4219-b3a7-034aa0c71545",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ecfacaa6-5885-4cf1-9d0b-b9c6ecbf78f8"
        },
        "item": {
          "id": "0b0c6e9a-caba-40f3-b31e-c9b7437b152b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6eccff2d-74ef-45ed-9ba4-56d651e16203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7762e6-96c4-40ed-9d11-a587f108b68e",
        "cursor": {
          "ref": "0f81020b-861b-4ed7-9d9f-95561f3ef6a2",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "eae3ebf7-4f7d-4957-a1a4-1924dd55ff04"
        },
        "item": {
          "id": "8a7762e6-96c4-40ed-9d11-a587f108b68e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "31a347b9-08ac-4c85-b7e5-59ed6f8089c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f088f2a-0a8f-48b6-b469-0eef4e18c682",
        "cursor": {
          "ref": "d1d3b3e0-840a-4265-aaa7-27b64e4ff4bc",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2c57f493-e658-4a96-894f-139a6a5dd77e"
        },
        "item": {
          "id": "6f088f2a-0a8f-48b6-b469-0eef4e18c682",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "81c816da-6a55-4ad5-a222-827787ebca4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a00d02-8a66-4038-80dc-9d357189eecd",
        "cursor": {
          "ref": "cc92fe45-7f4b-4972-b052-9ee17e066107",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8b4cd61c-dcf0-4109-8b22-a8132ecebb6b"
        },
        "item": {
          "id": "b6a00d02-8a66-4038-80dc-9d357189eecd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0c8d4dc6-b660-4b44-a34a-67897e8702bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2389d523-aac9-43b7-bc9c-2468f3ab2fcc",
        "cursor": {
          "ref": "c1700f13-62c1-43a4-8dfb-5449e2bd0eb8",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8c2bd2fb-622b-4f19-add8-6271c6629a59"
        },
        "item": {
          "id": "2389d523-aac9-43b7-bc9c-2468f3ab2fcc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6c24bca4-c3e3-4ebc-b778-2e0c2935ac4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73bfa9a-04e3-4d9c-8098-806528f53773",
        "cursor": {
          "ref": "98afa21f-1c01-4229-aee9-79a135eed1ae",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9cad23f2-a6dd-4490-a68d-a7ea76597765"
        },
        "item": {
          "id": "d73bfa9a-04e3-4d9c-8098-806528f53773",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8b0c9d09-a686-4feb-878b-b48b500e3518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2cf066d-32bf-4f1c-be5f-9ee0a8681011",
        "cursor": {
          "ref": "3dfb17c1-1718-46ce-add7-c03a6a0f3702",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "16070fa6-2fc6-4a47-9b8c-5f72bf68692e"
        },
        "item": {
          "id": "d2cf066d-32bf-4f1c-be5f-9ee0a8681011",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1a55e00c-c5c0-48a0-9045-f6f5785dcf6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef81421-615b-4147-9165-232d6f02dff0",
        "cursor": {
          "ref": "07321278-03e9-41b5-a28f-34df5f59debc",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "45c0b2c7-86a5-4fd7-b135-b4846008d45c"
        },
        "item": {
          "id": "aef81421-615b-4147-9165-232d6f02dff0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "112e682d-ba71-4b4f-92be-73d314650a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce6d402-b200-4258-917c-3ad766b09ded",
        "cursor": {
          "ref": "3843ab55-f9e7-4c74-920a-e0e496dcc0b1",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ecc4f81c-9184-4845-9963-f77773acca04"
        },
        "item": {
          "id": "4ce6d402-b200-4258-917c-3ad766b09ded",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a21e77d5-f5a9-459e-9e76-8362eb4e1f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7889eb1-1e55-40fa-871a-853d3adeaeb8",
        "cursor": {
          "ref": "043668cb-a56c-4e3e-9d09-ecd91d4d01c9",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c5205bad-a76e-42e0-86c3-090a37b848b1"
        },
        "item": {
          "id": "d7889eb1-1e55-40fa-871a-853d3adeaeb8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "199c5e9b-2fd0-4271-836c-e0aa0f3a2ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495947e3-c469-4dc3-bafb-12a4845e4ab3",
        "cursor": {
          "ref": "67d073f5-cd5b-487b-90c0-8860cb350be0",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "46ef0f72-698f-493e-aae3-30a343f4bb36"
        },
        "item": {
          "id": "495947e3-c469-4dc3-bafb-12a4845e4ab3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1200f2d4-351b-489a-b562-3aabd306088d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b3ff14-1294-478f-a661-33828d44a727",
        "cursor": {
          "ref": "55e8097b-0ab5-4433-b5fa-979a3f4c4652",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9c89ddfe-814d-4fc1-ba9a-0eb3bd2f6a36"
        },
        "item": {
          "id": "60b3ff14-1294-478f-a661-33828d44a727",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ac0df470-4547-4f27-9298-78f3b4ba3ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22135c89-aa54-4303-9607-ee1ec5a40812",
        "cursor": {
          "ref": "3980c584-a7c2-4dcb-bd33-aa72c6cb9745",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "be060272-23b8-4b57-bca1-fe53ffe932ef"
        },
        "item": {
          "id": "22135c89-aa54-4303-9607-ee1ec5a40812",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0c820538-635d-44c2-a1f2-4d85930bf531",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b843a8-697d-49b1-98a5-ed341e221c94",
        "cursor": {
          "ref": "f61ae3f4-9a8f-447c-9bf7-68234672d4b9",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8c81d8c4-11fe-42e3-a1f4-8e8d4e222f74"
        },
        "item": {
          "id": "74b843a8-697d-49b1-98a5-ed341e221c94",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "d27a1e95-2638-4f39-b1e0-163a0af36796",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 538,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836d54cb-5faf-4d74-a64a-5576a54f851b",
        "cursor": {
          "ref": "5bbc3b29-7c22-4bf2-8819-1bf157c0a7a4",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9f5420f9-507e-4c8f-8179-f3e54f081bcd"
        },
        "item": {
          "id": "836d54cb-5faf-4d74-a64a-5576a54f851b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "abd0a3ad-a0e7-45ec-846b-e13390886b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836d54cb-5faf-4d74-a64a-5576a54f851b",
        "cursor": {
          "ref": "5bbc3b29-7c22-4bf2-8819-1bf157c0a7a4",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9f5420f9-507e-4c8f-8179-f3e54f081bcd"
        },
        "item": {
          "id": "836d54cb-5faf-4d74-a64a-5576a54f851b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "abd0a3ad-a0e7-45ec-846b-e13390886b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6866733b-61ee-410e-bb9b-ebcce8bd9520",
        "cursor": {
          "ref": "5a8a042e-c7cc-4fc9-b8c3-bcbaaab7c11f",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "71efd2ba-4a74-40ac-9332-1d6807e4e1af"
        },
        "item": {
          "id": "6866733b-61ee-410e-bb9b-ebcce8bd9520",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f00b984f-5504-438e-8d1f-7453cc58df1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99c9fbd-f4a1-4f8f-ab9c-7ae30bef7520",
        "cursor": {
          "ref": "ad5421b5-aef0-4229-9deb-7ea5f232efa2",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5e55d80e-a91a-42ee-9c58-962a67d9cb90"
        },
        "item": {
          "id": "c99c9fbd-f4a1-4f8f-ab9c-7ae30bef7520",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c8715495-5001-4b5e-a663-6ac3606f2498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09495eb7-b8f3-4123-81d5-72a8db0c5ae4",
        "cursor": {
          "ref": "110e9a21-ecd8-40ef-ad9e-55af80d8151b",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "fc8d3932-4962-4262-b55f-10d08dd9525c"
        },
        "item": {
          "id": "09495eb7-b8f3-4123-81d5-72a8db0c5ae4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "12e2902c-ad84-4b2a-951a-c9e86b485247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52249d1-58cc-4419-b3a3-7122d675c92d",
        "cursor": {
          "ref": "68540450-d6cc-4cb1-b984-0f18a92fa941",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b4bb3ffd-ac77-4994-bf4d-48f1779c116c"
        },
        "item": {
          "id": "b52249d1-58cc-4419-b3a3-7122d675c92d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0af41dcf-64b0-424f-bd7a-5f9753fd8254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050d8803-92e4-4122-ae47-ddbec9364a88",
        "cursor": {
          "ref": "8fa4d58a-2407-4e7e-99c5-1808cfaf98e6",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "629839ab-c5a5-4c4a-bc54-2329419a648e"
        },
        "item": {
          "id": "050d8803-92e4-4122-ae47-ddbec9364a88",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ce334907-0bb3-4747-bc6e-a0717f3a30a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2566a5c4-2470-4e84-a15d-a45f53ca977b",
        "cursor": {
          "ref": "6744621e-21f5-4ac7-9a68-ec29d69c94fb",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2650f2f1-8183-4b1d-95fb-c75b77bbd9e8"
        },
        "item": {
          "id": "2566a5c4-2470-4e84-a15d-a45f53ca977b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "df62dc34-f726-4195-930b-11c8bd8197e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd5be99-e04a-4737-bb93-029529cfa6ce",
        "cursor": {
          "ref": "6f77052c-3df5-4a31-b33a-424369870efd",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5e34024f-e74f-4b1d-b52e-9b35f4f386d1"
        },
        "item": {
          "id": "3dd5be99-e04a-4737-bb93-029529cfa6ce",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "236ac9b8-57c6-431b-9628-46d0e818af9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e8a51a-ff7a-4ba1-9d9f-8b80d584b6ce",
        "cursor": {
          "ref": "82458372-948c-4d26-a695-b45df33a5d94",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b3e85779-97ea-4bfc-8dde-af14b1de6aea"
        },
        "item": {
          "id": "e1e8a51a-ff7a-4ba1-9d9f-8b80d584b6ce",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "dba15690-c990-4491-9f10-fa228e123f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d123889b-c9da-4193-a7cd-3f1d60ae47d8",
        "cursor": {
          "ref": "61a72d8a-a24c-4e63-b277-85aacf8f95bf",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6ab7c9d7-f400-443a-830b-7f38180feb06"
        },
        "item": {
          "id": "d123889b-c9da-4193-a7cd-3f1d60ae47d8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "84676aae-b8a8-4f45-be4b-ce521d3c0d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9259d7cf-140e-4efd-b163-4a1a37617bcc",
        "cursor": {
          "ref": "d890496a-ac9b-4bf1-a393-bac26109dd52",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9c8e99fe-63c7-4877-a62f-b1356ce944f1"
        },
        "item": {
          "id": "9259d7cf-140e-4efd-b163-4a1a37617bcc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f9b75744-3a34-4453-b5dc-fd6e661bbe0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9bd04c-464c-469d-88f7-6393b3917922",
        "cursor": {
          "ref": "0f85f6e4-7fd6-4bbf-9f87-b179a981bf89",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ca34ef7f-54ec-4b30-bd7e-9f35f1b8049b"
        },
        "item": {
          "id": "4d9bd04c-464c-469d-88f7-6393b3917922",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b90d7bd5-8dac-44c7-ab56-83ca5d4020e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2150aeaa-e8d9-445b-9cb3-fc4adad281a2",
        "cursor": {
          "ref": "f08b160c-e144-4510-bf96-69240ea11dd6",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "04e178ca-ec00-41d3-91ae-d56eee99a68c"
        },
        "item": {
          "id": "2150aeaa-e8d9-445b-9cb3-fc4adad281a2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "870bb8d8-f1e3-44aa-bb77-ec1ee5bf1920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d676ec-da78-4fe2-94ee-a84600082fa6",
        "cursor": {
          "ref": "5e542635-d5c8-45fb-9042-5af11c3df585",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d4f34298-3da2-4645-90b0-5a3b5eae8a86"
        },
        "item": {
          "id": "02d676ec-da78-4fe2-94ee-a84600082fa6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "167b67f0-3517-416f-adef-e471380e5f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b72557-faae-4ba7-98e0-1774135116ad",
        "cursor": {
          "ref": "8eb34e50-7605-4a21-af00-53a513e59231",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "cfaca147-7337-4980-bb5e-845428b7c045"
        },
        "item": {
          "id": "56b72557-faae-4ba7-98e0-1774135116ad",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "56a9eb96-22e8-450c-b2fa-731f40ff9994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e534f86-c8ef-4cb4-97aa-be9697e43f6e",
        "cursor": {
          "ref": "c9a768c5-1001-4da9-9993-9037f61e4181",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c4c464a6-3bd5-4902-9cf3-70ce5cfaf3df"
        },
        "item": {
          "id": "2e534f86-c8ef-4cb4-97aa-be9697e43f6e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0a46bd89-64e9-49a6-8d01-d0c15419d339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9636ecd-9488-474c-a879-10c22778dcff",
        "cursor": {
          "ref": "e236a26f-1b7c-4d1c-bf73-48f920065041",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9bfbfa3a-30c9-4212-9ddd-e5b78b9e7000"
        },
        "item": {
          "id": "d9636ecd-9488-474c-a879-10c22778dcff",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5864a516-21b7-4307-8373-c40320faa76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88122234-a8c8-4ccb-b593-c9b748fff340",
        "cursor": {
          "ref": "7027ba8f-309b-4b6e-8621-d75c5d29ec64",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "01c099c8-6fe0-4ce3-8dca-bfbffae486f3"
        },
        "item": {
          "id": "88122234-a8c8-4ccb-b593-c9b748fff340",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "633716da-625a-4d95-9553-4275ce96f1ec",
          "status": "OK",
          "code": 200,
          "responseTime": 3605,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "905fdec1-2aa0-4a76-b60a-0b9a47105aff",
        "cursor": {
          "ref": "cec8331a-324f-4fa9-aaab-db097bd4633e",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f0651b04-9271-49b2-8381-968e162506c5"
        },
        "item": {
          "id": "905fdec1-2aa0-4a76-b60a-0b9a47105aff",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ce35e302-6c50-4c94-8c51-3cb780cdd634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec993d2-aaab-441f-928d-2e549031963a",
        "cursor": {
          "ref": "5244348b-a85f-456c-8c35-46c16196dbe9",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8a3641f3-466a-4f8d-bdac-0bb0045ea35d"
        },
        "item": {
          "id": "cec993d2-aaab-441f-928d-2e549031963a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fb050717-a2f7-488f-a7b6-054750f6f2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48fc687-6184-4fd3-9c2a-9025cabf41b3",
        "cursor": {
          "ref": "ebba750e-5657-47b5-85b4-a6f5ba6f0b5e",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "81e4383d-a970-4acd-855b-85b0eb1561f8"
        },
        "item": {
          "id": "c48fc687-6184-4fd3-9c2a-9025cabf41b3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "42317cf7-c3bc-4b1a-8d42-008d29f4d3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f28cf7a-3bce-4519-871f-6af41a539fc5",
        "cursor": {
          "ref": "de29a901-fe14-4445-8d55-bf7ecd98f5b2",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1be89085-8a57-4874-a0ec-a8a69913b4ce"
        },
        "item": {
          "id": "2f28cf7a-3bce-4519-871f-6af41a539fc5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2740fcd7-7581-4d23-aff3-22f129099b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eed6f0d-7020-4232-96f4-f1840e828a6f",
        "cursor": {
          "ref": "4f8af933-e968-42e0-ae30-15178eb06dab",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "af96300c-25fd-42da-8ed6-2688e3cc460e"
        },
        "item": {
          "id": "1eed6f0d-7020-4232-96f4-f1840e828a6f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9cf9171c-e6a4-4080-81cf-65721c34ff5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff30d65-55b9-402f-96f0-88c21b8532fe",
        "cursor": {
          "ref": "5b3e8f02-5ea0-4a31-92e4-97f75923bda6",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a5b5e40a-ce62-45dd-9269-9731f6ffc327"
        },
        "item": {
          "id": "cff30d65-55b9-402f-96f0-88c21b8532fe",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1e9402ca-9553-4eb9-a8e6-04c8c67ec972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb6fb50-6bcb-4d1b-ad6a-f6e853b75279",
        "cursor": {
          "ref": "19381d31-d20f-4307-b308-06d2a6c40f1a",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2ecebcd8-20d1-476b-aa3c-8d6f100f20d7"
        },
        "item": {
          "id": "9eb6fb50-6bcb-4d1b-ad6a-f6e853b75279",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "84548610-873e-47a1-839e-ad41fdf2b9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd40bd6b-18d9-474e-a5bd-977f9da1800c",
        "cursor": {
          "ref": "49e54e6d-4884-4daf-9477-1cf5bab0c825",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "dbbc8416-de1b-4f01-a705-65d6b9c18cb5"
        },
        "item": {
          "id": "cd40bd6b-18d9-474e-a5bd-977f9da1800c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d5603e4c-68d0-496a-a503-68cc34fbeebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ffb855-b34f-493a-a9df-ac53ecfade71",
        "cursor": {
          "ref": "e379f9d9-c205-4f83-9dc6-628d6e3570b3",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "02099811-1fec-4fe4-a545-0a18bf55d793"
        },
        "item": {
          "id": "07ffb855-b34f-493a-a9df-ac53ecfade71",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ee770ed6-71d2-417c-b415-165bb9ec904f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561e3f66-8c4e-43f5-a476-afa9c0d636b5",
        "cursor": {
          "ref": "a0cd02b2-47a7-414a-90a3-e5450af8a43e",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9954924e-b364-4674-aa44-d4645f51b6a7"
        },
        "item": {
          "id": "561e3f66-8c4e-43f5-a476-afa9c0d636b5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bf1d9d49-499f-485d-841a-3d7a304b6a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833d376f-8ca2-4bda-b3f7-095c2e685c7e",
        "cursor": {
          "ref": "1f82dead-43fa-442d-87ce-8f6733a96e6e",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "73e1462c-fbb7-4a7b-8710-2af27c0ee4a0"
        },
        "item": {
          "id": "833d376f-8ca2-4bda-b3f7-095c2e685c7e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7a41e64b-082b-46f5-92b9-3b0876002e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b195f6-cfb3-4c7e-ac8d-800de8d67a94",
        "cursor": {
          "ref": "a5b54571-e53b-47fd-8cad-2f2ad7d60cc3",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8e27e9d7-a48d-4666-ada5-0e6eaa304c10"
        },
        "item": {
          "id": "32b195f6-cfb3-4c7e-ac8d-800de8d67a94",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "31555a18-5586-4941-aff4-dcf7ac95d61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bcc6d9-e77f-402d-88bf-9f9159c38e2c",
        "cursor": {
          "ref": "366f8d4d-4d2e-40b6-80f7-922e2594b2e1",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2d7649a4-9e12-49b4-bc10-3d9192e7cdf1"
        },
        "item": {
          "id": "13bcc6d9-e77f-402d-88bf-9f9159c38e2c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1cfa6fa3-5b20-482a-b2a8-6c6f621c979f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f767b774-e56b-41e7-aea7-5c25c7cd49b0",
        "cursor": {
          "ref": "021116aa-5d5f-42a1-99b2-acef97baf0ed",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "219a0305-d088-48cd-9a9d-524cc4c217fc"
        },
        "item": {
          "id": "f767b774-e56b-41e7-aea7-5c25c7cd49b0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "fe1131db-0702-4b5b-9afe-29dcd3c1de8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03da284-43d8-42d2-9be7-14bfa0a232b0",
        "cursor": {
          "ref": "7f71f5c4-26b1-49f9-b7ca-0eb31f097a8b",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "24f8e1e3-bf43-4162-834a-b0a2e04adab8"
        },
        "item": {
          "id": "a03da284-43d8-42d2-9be7-14bfa0a232b0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3a38b525-e53c-4191-8fc2-337786737d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1991bbd6-64ae-454b-8dd3-dc7898d1ccdb",
        "cursor": {
          "ref": "1ea05ed2-669a-41c7-a7d2-c566a074f988",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ab031e5a-26f0-42da-b73a-53ebaf1b2e1d"
        },
        "item": {
          "id": "1991bbd6-64ae-454b-8dd3-dc7898d1ccdb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "13ad69d0-ef1e-4f21-a17c-152f1e214f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b219e5-6804-4e55-8d9d-e01253554959",
        "cursor": {
          "ref": "57482e81-5a76-4f87-bac0-3fc3e6901c38",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0c6bf55a-59f6-4ec9-8e07-81a535670f26"
        },
        "item": {
          "id": "69b219e5-6804-4e55-8d9d-e01253554959",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "18be5774-80aa-4e6e-a211-2c1255513b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c92e46-c6b2-4d7b-9736-a9c863436ad7",
        "cursor": {
          "ref": "16bf219c-1749-4a74-a529-0ac4898ebc0f",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "40f1dc4a-fa80-471e-9504-e98c32def00d"
        },
        "item": {
          "id": "99c92e46-c6b2-4d7b-9736-a9c863436ad7",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3ffd1e78-8c50-4015-895a-30cea798544d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf7137a-cffb-4af4-afde-86df0ed268f7",
        "cursor": {
          "ref": "e1570fe0-6d8f-4add-bcf0-801fc6565621",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8cef3248-d00e-46ba-a99f-94c8a83ea45a"
        },
        "item": {
          "id": "5cf7137a-cffb-4af4-afde-86df0ed268f7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "62eeb53b-81d0-41de-96f5-408b18dfa01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49be29b7-6955-462f-a57e-4fb8ce342475",
        "cursor": {
          "ref": "7289bd7b-c082-45ec-bbf9-4bcacd40a4cc",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a166ed44-4336-4937-a82a-bd46bd385551"
        },
        "item": {
          "id": "49be29b7-6955-462f-a57e-4fb8ce342475",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "798e14c8-3c49-4d40-87cf-1c875274a082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e9557b-73c8-4410-8142-a0606eab7b8f",
        "cursor": {
          "ref": "da1287e3-6164-4856-8458-b600a83a002f",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a36b7fda-6e25-4c46-b693-f869f36f3b9f"
        },
        "item": {
          "id": "a5e9557b-73c8-4410-8142-a0606eab7b8f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "77b30c80-8fd8-484a-934d-b4c8fbd21ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df276250-dd66-4c86-af27-a507f36d2a4a",
        "cursor": {
          "ref": "31d261be-8e24-4d41-8d9a-cc43808e0dcb",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ed31162a-ea13-4cc2-b11f-fbfc1fa3fcd2"
        },
        "item": {
          "id": "df276250-dd66-4c86-af27-a507f36d2a4a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "997fd990-53aa-4bf6-9e29-78a7e0a17363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac923a7a-eb9b-48c0-a4a6-001efe256f3e",
        "cursor": {
          "ref": "ee15f7f5-e017-4a99-afce-025300d229ea",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e2d181f1-5bb3-4808-b1ee-48b3d7af4223"
        },
        "item": {
          "id": "ac923a7a-eb9b-48c0-a4a6-001efe256f3e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "36c01a08-c0d3-4ef7-a5d1-0ebca0d371ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ac7b72-884a-4f1c-b286-5a2a7e77cf4e",
        "cursor": {
          "ref": "cb3ca9ff-29d8-4b1f-b942-a6427c84715c",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "87f872ed-68cd-42c1-bdda-54e4e87cd22d"
        },
        "item": {
          "id": "43ac7b72-884a-4f1c-b286-5a2a7e77cf4e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1a7386bc-07a0-4bc3-8169-30a9b714303c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3d4681-9e27-4beb-8fa9-20a8c420347f",
        "cursor": {
          "ref": "b4269e14-2c60-48b8-9694-6e9313a9f959",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "48d2f81c-8f09-49a0-ba6c-4eda786387a6"
        },
        "item": {
          "id": "6e3d4681-9e27-4beb-8fa9-20a8c420347f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3251bd57-b545-4c9c-863f-192c3134c2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b36e7f6-1c04-4b7a-acfa-258a517df6cd",
        "cursor": {
          "ref": "31afc01d-e723-4707-88c9-0914d1d887d0",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4a04af48-1a6c-4080-be28-b8acc846a496"
        },
        "item": {
          "id": "5b36e7f6-1c04-4b7a-acfa-258a517df6cd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d6f092a6-a3dc-4cfe-bd62-4b80a87ca6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087137ab-3810-43d7-b42b-f9942b5782a3",
        "cursor": {
          "ref": "6c43ca46-ed74-4e0b-9350-cfde76ede9b3",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5f4e65e2-fb3a-472e-8c50-ac8966609685"
        },
        "item": {
          "id": "087137ab-3810-43d7-b42b-f9942b5782a3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4065e78e-29a1-4fad-a9a1-4dad9c90c13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45ae49b-b34a-42bd-a7a3-ecdccd054116",
        "cursor": {
          "ref": "2c0f8286-c846-43c5-9358-ecd0a8c92715",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2314f62a-7bab-4a5c-802b-21e42cd3549e"
        },
        "item": {
          "id": "b45ae49b-b34a-42bd-a7a3-ecdccd054116",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1b2e8449-7c09-4912-adf3-a1b58aac7f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7746236f-b5f6-40ef-899f-f3285513c118",
        "cursor": {
          "ref": "12975c9a-8293-4568-9b5f-2dc66834d3b9",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c4ba387b-deef-4d5c-be7d-3549c4de1776"
        },
        "item": {
          "id": "7746236f-b5f6-40ef-899f-f3285513c118",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "dd772ff7-dc8a-42cd-874a-e7fcfdc7b280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b809d27-30be-42a5-9ba7-b17f60925adc",
        "cursor": {
          "ref": "9c063b7d-9011-4dbb-8848-07f1f0b3f9b8",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "57644c9c-1fb3-40b2-a473-0bec40a21528"
        },
        "item": {
          "id": "3b809d27-30be-42a5-9ba7-b17f60925adc",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "884e8ab1-328d-4324-bcda-26a007387d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f99ee9-14b1-4649-a5f1-3713de8b5207",
        "cursor": {
          "ref": "f3b47f83-e578-48a6-be89-c9e97f0ceb47",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3d74d76e-f3b8-45fd-a1bd-f8f237a7eccb"
        },
        "item": {
          "id": "c2f99ee9-14b1-4649-a5f1-3713de8b5207",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c5b250a2-82f6-4369-a199-995a3c479ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a87beb-097a-4084-8ba2-8b0428b6b6b3",
        "cursor": {
          "ref": "e14c33c2-1217-404a-93b1-04033be60127",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ca4b0b6a-c9ee-46c8-bb82-9f6a8296a2fc"
        },
        "item": {
          "id": "60a87beb-097a-4084-8ba2-8b0428b6b6b3",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "76eded50-6174-4841-a8a1-f3b8f248a263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f229f37-de0c-4231-9146-60050d07c6fc",
        "cursor": {
          "ref": "a8618a91-33bd-4d3d-bbe9-4fe8ecd5548f",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "57a35395-e91e-466c-8cca-ea08bd1184bc"
        },
        "item": {
          "id": "4f229f37-de0c-4231-9146-60050d07c6fc",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4a8b3061-350e-451c-940e-323e2bde791e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87b1912-570c-4025-88c8-8101d3c8e79c",
        "cursor": {
          "ref": "7f05f563-9197-4f87-af41-b9060c3521b8",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "07ba51bd-369d-46b3-8db6-289128f041cf"
        },
        "item": {
          "id": "a87b1912-570c-4025-88c8-8101d3c8e79c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "091ba4c6-2083-4a98-9db0-e36910a34040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690328d5-4d5f-4c7a-a01e-c75f376ee14b",
        "cursor": {
          "ref": "49b6ac47-4680-45fa-b282-4d48b6f7724f",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "214da687-0533-4dbd-a210-d1e00604f04e"
        },
        "item": {
          "id": "690328d5-4d5f-4c7a-a01e-c75f376ee14b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "72039fe4-31c7-4fcb-921c-acc17e96e47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29632885-13f4-4308-a45b-b73b21bfb81d",
        "cursor": {
          "ref": "faf02598-0726-4431-bbb2-2e05cfef0550",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "bc2ceddb-bf1c-4c37-bdc5-d38edbb3bd53"
        },
        "item": {
          "id": "29632885-13f4-4308-a45b-b73b21bfb81d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "58541ed6-d895-4df9-bcf9-609413409f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6469d9a1-f22c-4fa4-a5d0-0924f5cfefe6",
        "cursor": {
          "ref": "fdc73332-7e78-42d6-b168-4dd3dc57dc98",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "65a4c105-cf1f-4db6-8f98-100550ada5c5"
        },
        "item": {
          "id": "6469d9a1-f22c-4fa4-a5d0-0924f5cfefe6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "63e1b0a6-82ab-4b4c-b7bb-95bc2b17d199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4537bc-0128-4290-af15-66bb1024056a",
        "cursor": {
          "ref": "1bf38837-5238-4d9e-9c17-28188c611460",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ccee020a-1f5b-4dc9-860e-df577eac6b14"
        },
        "item": {
          "id": "8e4537bc-0128-4290-af15-66bb1024056a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "64beb701-f836-4b8a-b5f1-e9ec8582ea70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3578d4fb-cd63-4ae7-b26e-54ca621f967d",
        "cursor": {
          "ref": "12f2ae15-38c9-47dc-9667-4e14e871a378",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "66982fa7-ae7d-48d2-9c4a-02343e97e077"
        },
        "item": {
          "id": "3578d4fb-cd63-4ae7-b26e-54ca621f967d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0b3ff51c-eb33-42d5-a305-2b2cb9fd6a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bbcf39-48f6-4268-b02e-0f43949d58b4",
        "cursor": {
          "ref": "64e60323-de3e-4a6e-80a2-cf6cb31b127b",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "47b3145d-8274-4d4b-9b42-e10e713c2ce2"
        },
        "item": {
          "id": "62bbcf39-48f6-4268-b02e-0f43949d58b4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fec14fba-c56b-490e-960c-059a7d66d6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b499cd68-9930-4810-beff-2ba143486898",
        "cursor": {
          "ref": "c00fcabf-3077-4b26-a757-6bea70a128e0",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "30ad145d-5d28-4fa6-8069-1e576304f1c8"
        },
        "item": {
          "id": "b499cd68-9930-4810-beff-2ba143486898",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b70f1b50-2422-4395-8fe0-5a3f7a664ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135be930-2154-4942-8547-5599eb017f12",
        "cursor": {
          "ref": "b53cb223-acb9-4549-8496-a9af43a6c503",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "43ac1ca3-dbec-40d3-8878-1ca9aba94664"
        },
        "item": {
          "id": "135be930-2154-4942-8547-5599eb017f12",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b850f121-9dc0-46a4-9626-e15a2e2a5fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd3d9b1-6967-4189-a2dd-0350bac995c8",
        "cursor": {
          "ref": "0e572567-441f-4e6e-bc12-eb64cdc3d94f",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7c90b7a7-30ff-427a-80eb-5c13f288fa7b"
        },
        "item": {
          "id": "edd3d9b1-6967-4189-a2dd-0350bac995c8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c8ef5dd2-0266-47fc-9b74-ab8b0ffd9899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec041b51-d90c-41c6-a29b-497db31c04cf",
        "cursor": {
          "ref": "a2e39290-ecb8-42de-a6df-6ebf4263a6b0",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8b4078ca-9cfc-4133-9269-30ee148f4cd8"
        },
        "item": {
          "id": "ec041b51-d90c-41c6-a29b-497db31c04cf",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "91f8f5ed-2d4a-4fcb-a07f-0f70cfe893e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9535f00b-1a69-4561-a5ea-977ffbb7e02a",
        "cursor": {
          "ref": "07e088f6-2fa6-4fdc-bfd9-99bc86b79c13",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e22d3a16-82d1-414f-a829-d26d9f5b87ef"
        },
        "item": {
          "id": "9535f00b-1a69-4561-a5ea-977ffbb7e02a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "df3ee4b4-71f1-4bfe-bccf-cd3bf4a8b305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69926611-81af-4864-9c4c-550b2c38c0dc",
        "cursor": {
          "ref": "c077482e-d5c4-43d2-9d27-35d7a422bd3f",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d9dc3163-6d74-4c17-814b-9d4d0c04c9ba"
        },
        "item": {
          "id": "69926611-81af-4864-9c4c-550b2c38c0dc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "51ea0ba6-694b-4333-9591-261bd8dd577a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa17b8e-574b-4bb4-8a4d-bf5d7b04cd62",
        "cursor": {
          "ref": "b4431a78-073e-4594-9d29-37f6904039d5",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "996d6f71-711f-4ead-8d7e-e03ca3bdc6e0"
        },
        "item": {
          "id": "cfa17b8e-574b-4bb4-8a4d-bf5d7b04cd62",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "cdcdf3fe-9562-45b6-a4fa-6143e74199de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b610cc78-f69a-4507-94c8-105da447e05d",
        "cursor": {
          "ref": "269a0d4e-129f-4e50-b794-b26c883bab76",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "346d3306-dcad-4cee-96aa-7dbca4cd7298"
        },
        "item": {
          "id": "b610cc78-f69a-4507-94c8-105da447e05d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "dbe2c9e0-2e0c-4337-b2a6-50deb86cc944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76a44e7-0907-42a5-9f4e-c4a0ff54eb1a",
        "cursor": {
          "ref": "40e1483e-5731-40d8-becb-b3fc1e372c33",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b4128e02-7604-4ddc-a854-81ebdc2f76f0"
        },
        "item": {
          "id": "c76a44e7-0907-42a5-9f4e-c4a0ff54eb1a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c3b9b560-b5fd-4484-917d-451db7e6a55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5052fa-ed10-4596-8d3c-5f757c557f71",
        "cursor": {
          "ref": "f3a95c04-2359-4058-9574-5b2b2202945f",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "04e2488c-5213-4449-af40-0bcc2b01785d"
        },
        "item": {
          "id": "eb5052fa-ed10-4596-8d3c-5f757c557f71",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "164e5409-7184-4b0d-80e6-3a0c6c3598d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5c3441-86da-4dac-9016-34155bcee556",
        "cursor": {
          "ref": "9b0d5061-7358-42e5-b16d-788710749593",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "75cb1bd0-fe73-439b-8856-bee340b461cf"
        },
        "item": {
          "id": "de5c3441-86da-4dac-9016-34155bcee556",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "af2e7f48-fae4-4709-b344-faba22cac081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff23c386-371b-42e5-b838-fa0a05d4e901",
        "cursor": {
          "ref": "086e7106-f8fe-4937-bfab-9c64c6aa2290",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f2ed6555-36b4-4be2-b9ae-8630d4743923"
        },
        "item": {
          "id": "ff23c386-371b-42e5-b838-fa0a05d4e901",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5e501ac6-557c-479c-9fb6-48ae4dc4904c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957a6aea-65e9-4a70-8539-738f26b93531",
        "cursor": {
          "ref": "9d53ca1e-984d-47b1-ba7d-1891957b90e7",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2b6fc9b4-4b18-4548-913d-8755358cf7e5"
        },
        "item": {
          "id": "957a6aea-65e9-4a70-8539-738f26b93531",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "13d4ccec-98a2-4c76-8379-7f98b914d810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71e5c78-874e-4244-9c91-63e4880546f7",
        "cursor": {
          "ref": "e7a0f6a6-52db-49bd-bb28-3ab47561192c",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ac419a53-f9b5-4d96-a894-c42090de222a"
        },
        "item": {
          "id": "c71e5c78-874e-4244-9c91-63e4880546f7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2040bedb-0d98-40a1-982a-68659263dfd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f55cecf-6a47-4f85-a527-972169d376a5",
        "cursor": {
          "ref": "d2da57f3-5596-4a91-ac19-0834d9bf44cf",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2589974e-c877-4779-9935-7ce00d5ff736"
        },
        "item": {
          "id": "1f55cecf-6a47-4f85-a527-972169d376a5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "252b7e83-2665-48fc-919d-d9b4457e9105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa53adbc-6f5d-4342-b548-d821d5543e7c",
        "cursor": {
          "ref": "92fc3446-f14f-43ce-bbdf-3dde350d0655",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "98007dfd-ed67-416e-999a-bc47803b7ae0"
        },
        "item": {
          "id": "aa53adbc-6f5d-4342-b548-d821d5543e7c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5dda1c10-4b15-4a40-af1a-4a6b043c643f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4fcc64-cf22-4884-8d8d-802e08253468",
        "cursor": {
          "ref": "6e402b20-6fa8-4da3-bc75-5c3d0a46fed3",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0a780809-d180-463c-8990-2c387b45857c"
        },
        "item": {
          "id": "ac4fcc64-cf22-4884-8d8d-802e08253468",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "51d845ed-9b42-4a08-bf9c-a772ac07adf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a936c5d-1f28-4c28-bb59-997e40c0abe9",
        "cursor": {
          "ref": "022ff5d5-d2a7-47ae-933e-c8b7a916f1f5",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e89ab7df-3395-4830-8888-72fbef1c5587"
        },
        "item": {
          "id": "9a936c5d-1f28-4c28-bb59-997e40c0abe9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e945913b-7ded-4b7d-ac36-2d30c93f11cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b397f3d3-98c2-4b3b-800d-cd094ad4bb83",
        "cursor": {
          "ref": "f62c8fda-0712-4f09-acbf-882f85de63d3",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cad3a989-f43a-41fb-930b-8b4f977279aa"
        },
        "item": {
          "id": "b397f3d3-98c2-4b3b-800d-cd094ad4bb83",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "391814ff-2ec3-40ec-9573-6757ecaac690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86ce200-383c-4b44-9ca1-0cc84784ba82",
        "cursor": {
          "ref": "d96ec6fd-5c22-43a6-8c50-1032325732c3",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8c6aecc5-e2fd-492c-9bd8-a35ac563f16e"
        },
        "item": {
          "id": "b86ce200-383c-4b44-9ca1-0cc84784ba82",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a38cc38b-8d43-42a8-baa4-8d43c5f365a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9109ee8c-0c67-4195-b69e-eac78662d0d0",
        "cursor": {
          "ref": "4cd05e03-6999-4161-a54a-acf1f53bc48c",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "dfe090e2-83ed-44e1-9fcd-173e5eae943d"
        },
        "item": {
          "id": "9109ee8c-0c67-4195-b69e-eac78662d0d0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "edf47084-2025-4bea-96ac-4cfeaf37dbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00232a21-0d68-41be-a007-3505c2dec5f5",
        "cursor": {
          "ref": "dc4b9340-455d-435d-9180-868a14593e2a",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3ebd89ca-917f-4068-9068-f7153d257fe7"
        },
        "item": {
          "id": "00232a21-0d68-41be-a007-3505c2dec5f5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "465a7a57-1de2-415b-91bf-2a029a22a8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c6ef05-04fd-494e-a4a9-4e255fa56fe6",
        "cursor": {
          "ref": "44fb87ec-832a-4717-b878-746689ff8b7d",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8a5886bb-5280-4d9e-b080-ce96faec1dd7"
        },
        "item": {
          "id": "43c6ef05-04fd-494e-a4a9-4e255fa56fe6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "754e3308-0a20-4338-bc28-94311a574e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad214e4a-8a31-48d4-bb0f-536c80565205",
        "cursor": {
          "ref": "ceb6810b-a8f5-448b-9388-03673d49a925",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "eb2240ed-bc41-4e72-893f-ea0d9e96cfd3"
        },
        "item": {
          "id": "ad214e4a-8a31-48d4-bb0f-536c80565205",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "693d9a8a-8df2-4440-9d4c-b4b027f37e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57f60e1-32cb-4ba8-ad9f-60ced9005eca",
        "cursor": {
          "ref": "9e2facd9-977c-4333-86f7-57c44293641b",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8817fc00-7429-49b5-8f87-d4a640cee0f3"
        },
        "item": {
          "id": "b57f60e1-32cb-4ba8-ad9f-60ced9005eca",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d9e88af7-4835-40a7-9f34-825a1bf31374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc4f98c-9e76-417d-9a05-97613483fd88",
        "cursor": {
          "ref": "094414d1-5f77-4901-8438-cdb87487e6d5",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "14704c1f-8bc2-46ab-9476-ce8e226e924f"
        },
        "item": {
          "id": "cdc4f98c-9e76-417d-9a05-97613483fd88",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "45e22e3b-bcd0-4a9a-b07e-15a2a4a00851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e3eb4a-a6d2-43e3-8a3c-589f4e00e1ad",
        "cursor": {
          "ref": "23072426-def7-4248-ac35-2abafaf23a5c",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "43cbf5ba-67db-4008-9108-01462f951d1a"
        },
        "item": {
          "id": "75e3eb4a-a6d2-43e3-8a3c-589f4e00e1ad",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8e370b08-ca59-4bef-b2bc-54d285819b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677c4955-ebf4-4a38-bad1-95f31cceecc0",
        "cursor": {
          "ref": "67b795e3-5224-43fd-84c6-2a594a8dfd4a",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5922355a-e9be-44b0-b529-3fe319aa0dc4"
        },
        "item": {
          "id": "677c4955-ebf4-4a38-bad1-95f31cceecc0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4f90840b-545b-4b2b-8ae0-48d31a5880b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3fdca3-1db3-42f9-8d78-b8728bbc4e2b",
        "cursor": {
          "ref": "bc7b5cb1-4e5b-4913-b8a2-4a58b9f910f1",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "08ab1c96-c6aa-4588-990a-d932d351e97c"
        },
        "item": {
          "id": "dc3fdca3-1db3-42f9-8d78-b8728bbc4e2b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c95e3561-94c6-4344-b4d0-4ec30d9bb12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330b3c52-63f1-4041-b664-ad53c4b9954e",
        "cursor": {
          "ref": "a37dce16-2887-458f-b989-ad1cd295b3ba",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6bcbbddb-fd01-4b66-8864-193f53df7d32"
        },
        "item": {
          "id": "330b3c52-63f1-4041-b664-ad53c4b9954e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5fa1e894-9b07-495c-9682-7e46fa610405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598cf77e-7214-4ec9-86e9-5f0362428515",
        "cursor": {
          "ref": "839aebae-5548-4140-a050-be593fc1f4f9",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "940a7699-6289-4422-856b-96e70a9058af"
        },
        "item": {
          "id": "598cf77e-7214-4ec9-86e9-5f0362428515",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a9ea480e-f2a6-4b23-9cf3-7afa0701e7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8501c5-eb59-46f1-ae0f-f30a008f35b8",
        "cursor": {
          "ref": "d40a21b5-298c-4ab7-825c-c6035e2bb227",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "733acac2-d564-48b6-86c9-b6ec5ce574be"
        },
        "item": {
          "id": "2f8501c5-eb59-46f1-ae0f-f30a008f35b8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c3e04153-e393-4e83-9a32-6e2910c41725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b642f6-8b77-4c6e-a37a-f184a8d796f1",
        "cursor": {
          "ref": "1ea44001-60d4-4c26-957a-c1657c681f5f",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "dc95ca53-a603-4b69-8add-fdf4d054d7bb"
        },
        "item": {
          "id": "34b642f6-8b77-4c6e-a37a-f184a8d796f1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "94b54662-da84-490f-b1dc-135b352d54b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d6e742-c81a-4380-8e98-c1011fe1e173",
        "cursor": {
          "ref": "822baa81-5c0f-4208-bbe9-dc55d2bc03f8",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "747fa7c2-d35d-460c-ae1d-5c0ebc636f34"
        },
        "item": {
          "id": "a0d6e742-c81a-4380-8e98-c1011fe1e173",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "207923a4-6503-4292-8d56-46d486b3ab3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5250f99b-19e4-41c6-8c6a-846930be52a1",
        "cursor": {
          "ref": "66780181-4e46-4c77-9109-5abc16aa30e1",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6142e903-c155-49b3-a7e5-e24fe17889fe"
        },
        "item": {
          "id": "5250f99b-19e4-41c6-8c6a-846930be52a1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "96006a2f-05d8-4c00-8dbf-4339554c51a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622e3d5f-39d2-4622-97dd-044da7b76f4e",
        "cursor": {
          "ref": "1d6092ec-3b6b-4d71-ba03-0aca9427227c",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2798d3da-0af6-4854-a21e-e72521319aa6"
        },
        "item": {
          "id": "622e3d5f-39d2-4622-97dd-044da7b76f4e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7e55bf37-1d66-4eee-9dff-1da311ad82f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483e3c1f-7450-41d9-b699-6dc8b3e6c17d",
        "cursor": {
          "ref": "3ed085b5-4db7-4a2e-98c3-e1ebb929c2c3",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e2e97679-aa30-4bd1-bbad-b5713b566cec"
        },
        "item": {
          "id": "483e3c1f-7450-41d9-b699-6dc8b3e6c17d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0596bc8c-f5a2-49bc-8477-827922947cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c2f261-0c62-42f1-a068-f9b596383b68",
        "cursor": {
          "ref": "f7a7a70f-2c22-42d3-993f-3c75b5590182",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "db1f4f44-1798-4718-8370-7d775c2db56d"
        },
        "item": {
          "id": "42c2f261-0c62-42f1-a068-f9b596383b68",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7a2b260b-5e0b-4c68-b74e-c64f5b992b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0c46ac-a3b1-40c5-8a98-ba63bbaa7df7",
        "cursor": {
          "ref": "7f32cdd9-d58b-4647-bf31-445e7a483ca7",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e851c990-632c-4ff8-b1d2-75c4b86fe577"
        },
        "item": {
          "id": "2b0c46ac-a3b1-40c5-8a98-ba63bbaa7df7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9d18338c-1023-4c7f-b8eb-c38723bc055b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb0de22-2cb7-4055-b111-bf8bfeefd9ea",
        "cursor": {
          "ref": "36a42ba3-2233-4bf7-9f2d-eb203bda3808",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2505d82c-45b8-4d4b-8679-bd002505abdf"
        },
        "item": {
          "id": "deb0de22-2cb7-4055-b111-bf8bfeefd9ea",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a934e12f-bff4-44a5-90e3-ac69554d1822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff18458-729a-43ea-a830-b962d427b573",
        "cursor": {
          "ref": "c3bc0a79-8f27-4918-9384-49afd73a4490",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "42c5699e-e5a2-4efb-98b6-46eed9dd907a"
        },
        "item": {
          "id": "aff18458-729a-43ea-a830-b962d427b573",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9aa0953a-c7a2-4b2c-9c25-233b313cedee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b602ef-aa71-47a0-8907-65b9f5364779",
        "cursor": {
          "ref": "c92efa8d-a3ed-4d87-9f35-65257863b376",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "19587321-ecf8-492e-928e-ee452bd71e5c"
        },
        "item": {
          "id": "c9b602ef-aa71-47a0-8907-65b9f5364779",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "03a18985-dacc-4d7e-9812-3b0cc833da76",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 305,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fa5748-0b1f-4f4c-b64b-86b21ba438e1",
        "cursor": {
          "ref": "79ec0326-eb74-4848-9468-f3df5d176620",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "055dbc9f-3d18-4488-ba1b-750ecde8f3e1"
        },
        "item": {
          "id": "a8fa5748-0b1f-4f4c-b64b-86b21ba438e1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "37ebc795-e80c-4b8d-b3aa-b2192000f582",
          "status": "OK",
          "code": 200,
          "responseTime": 381,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25d9639-0cd9-4be2-b770-4ef93295e25b",
        "cursor": {
          "ref": "d73f6198-84b8-4559-92a6-142de8931b5d",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4e28264b-db4e-4a0a-9d7b-f2cc8a86ccb0"
        },
        "item": {
          "id": "d25d9639-0cd9-4be2-b770-4ef93295e25b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "696a21c6-58c1-4520-91a0-0c38de069998",
          "status": "OK",
          "code": 200,
          "responseTime": 3547,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "226d843a-f969-49ab-a664-084ea69c57d6",
        "cursor": {
          "ref": "e3585f24-16f5-460d-b308-e27f36d38aa4",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3e885dca-3757-427e-a47e-3f75b2ebfeec"
        },
        "item": {
          "id": "226d843a-f969-49ab-a664-084ea69c57d6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c3c8c341-6765-4b02-b5cb-9b8d6fe10fc0",
          "status": "OK",
          "code": 200,
          "responseTime": 3662,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "403234ff-17bb-4d06-8c85-439c5ac3613c",
        "cursor": {
          "ref": "3f5b48ab-fe1a-45e5-b7b2-dfc8db1136a0",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b294e3b7-8343-4bca-9926-d57410d38632"
        },
        "item": {
          "id": "403234ff-17bb-4d06-8c85-439c5ac3613c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "787beff6-704f-48a2-a902-2f61bc575273",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403234ff-17bb-4d06-8c85-439c5ac3613c",
        "cursor": {
          "ref": "3f5b48ab-fe1a-45e5-b7b2-dfc8db1136a0",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b294e3b7-8343-4bca-9926-d57410d38632"
        },
        "item": {
          "id": "403234ff-17bb-4d06-8c85-439c5ac3613c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "787beff6-704f-48a2-a902-2f61bc575273",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403234ff-17bb-4d06-8c85-439c5ac3613c",
        "cursor": {
          "ref": "3f5b48ab-fe1a-45e5-b7b2-dfc8db1136a0",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b294e3b7-8343-4bca-9926-d57410d38632"
        },
        "item": {
          "id": "403234ff-17bb-4d06-8c85-439c5ac3613c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "787beff6-704f-48a2-a902-2f61bc575273",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2b7a8d-3872-40e2-9fe5-0e871f0dae00",
        "cursor": {
          "ref": "f22c095b-6534-4214-af8c-f79c21438db1",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "78bbb29d-5f09-4a19-8bc4-9ae7b8ab976b"
        },
        "item": {
          "id": "2f2b7a8d-3872-40e2-9fe5-0e871f0dae00",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "5bf1e46b-27f7-4889-abc6-0926bcc3bb09",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 308,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599371bf-6e14-4fa7-a3e5-0e919c841300",
        "cursor": {
          "ref": "d40506f0-6c8b-45fa-9005-245d72088a07",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "92c42f41-d4c3-4948-9a6e-9544b6e892d9"
        },
        "item": {
          "id": "599371bf-6e14-4fa7-a3e5-0e919c841300",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "41dc5542-9011-4279-8606-f542d94cce9e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599371bf-6e14-4fa7-a3e5-0e919c841300",
        "cursor": {
          "ref": "d40506f0-6c8b-45fa-9005-245d72088a07",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "92c42f41-d4c3-4948-9a6e-9544b6e892d9"
        },
        "item": {
          "id": "599371bf-6e14-4fa7-a3e5-0e919c841300",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "41dc5542-9011-4279-8606-f542d94cce9e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcd1873-9fde-4c14-a47a-d6e8d854b3bf",
        "cursor": {
          "ref": "7d3c11c7-1c1d-4cf3-a50f-67e83988e340",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2eedd419-68af-4181-8191-c6ffc36d0824"
        },
        "item": {
          "id": "ffcd1873-9fde-4c14-a47a-d6e8d854b3bf",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "9111fc6f-6852-4910-9a99-e12b946632a4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 563,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e346829-37c5-44ef-8452-12270e114bfe",
        "cursor": {
          "ref": "989d19b2-9ba1-4522-88d8-436c0df0aeae",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7aeb7ab3-434f-426e-9b92-9c5bc2b9d381"
        },
        "item": {
          "id": "6e346829-37c5-44ef-8452-12270e114bfe",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7f66ac49-7f4c-4efd-af10-4eeba29f5859",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e346829-37c5-44ef-8452-12270e114bfe",
        "cursor": {
          "ref": "989d19b2-9ba1-4522-88d8-436c0df0aeae",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7aeb7ab3-434f-426e-9b92-9c5bc2b9d381"
        },
        "item": {
          "id": "6e346829-37c5-44ef-8452-12270e114bfe",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7f66ac49-7f4c-4efd-af10-4eeba29f5859",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e2656c-e5fd-40a0-b658-5dddb7ba4142",
        "cursor": {
          "ref": "084b745b-f479-43b1-ab38-0bf6491faa89",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a57a2ab1-3129-4624-a71b-98a795cc054b"
        },
        "item": {
          "id": "b7e2656c-e5fd-40a0-b658-5dddb7ba4142",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "ca867596-ede3-43d7-bf67-081485228084",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 552,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}