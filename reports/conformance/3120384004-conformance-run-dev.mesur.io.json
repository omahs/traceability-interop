{
  "collection": {
    "info": {
      "_postman_id": "691a6d66-244e-4521-a0e5-6768dd6cf6f4",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8925aec7-5053-4c62-a1fa-718172e010b6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "459dbcbd-55d3-40b5-bf56-8755bfc7383a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bb17734b-2b19-45a8-b661-7d769e6e449c",
                "name": "did_json",
                "request": {
                  "url": {
                    "path": [
                      "did.json"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0414810-70f6-4094-b08a-c034bd1b2c46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88dd4b39-0c8c-4d59-a14e-c2adb0a356d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "56ab4996-89ce-4c84-963b-70fef77d8380",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "321b37db-1eb1-4aec-890b-a076a5551c46",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86d1efb5-8180-4d21-99d6-78ea273d60e5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3694440f-3d16-48b2-8ff4-b6fef2171090",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b599e7-d07a-4869-9110-64fdab1b669f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57d73c1b-ff44-4ee5-b3d7-192bd1a10ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa83db6-38e5-4fa0-a771-f80684920a29",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb6faa0-d27a-489b-9c76-24f9d289c569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9f9c3ce-2fc9-4fca-a157-07ef1af2e4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a69b40-a325-4766-9e3e-1ba2babafa52",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707e4fd8-98c2-4d1b-8669-d655974f5f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13e43766-d773-4dc5-b9dc-d1d86423f9db"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "06505e8b-f39c-442d-a802-c6dd05bdeb71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9a86569-13b6-4f3a-8398-884bd9be3389",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6108a317-612a-4b45-9754-e83ff7a27801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4598fb4-665c-419c-a7d0-7fab863791c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4cc916-10a4-4243-82fe-cf0bf573acf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "324a4134-1e5a-453c-b7a2-c5ac2712989e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6938a4ec-5e8b-4813-afda-29fcb66aa437",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e75f4c0-e2e5-4ab6-94b8-712b76f6df51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f842ff26-91d3-4a50-a0c0-0cd7ee062688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59768382-f506-4a2b-9aba-31a9a459421f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "c8b2b6b6-e725-4e10-943c-5429c8fbb3d2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ffed1152-e9e0-456d-9b9f-c004bcf53818",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5995c76d-4c24-49d6-8d2e-34ccead9d6a5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "213c427e-0179-4714-89ca-cd8e32ac4809",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "25ebc7fa-fb85-41f6-b04a-683f390ac0eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e9904a4-4eaa-4865-97d4-020d48c80c1d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "131967e2-932e-40e5-8fd0-3ef931390c30"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0853f19-f439-495e-8022-810f582a9be5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5870334c-04fa-4142-8cfd-eb4ae4710ad6"
            }
          }
        ]
      },
      {
        "id": "2f294337-d275-4ff6-9486-0accb8eb40a7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1bb7df88-715f-4e60-a474-b0085e7b3d18",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b886b029-e17d-441d-ae15-b1fe050f476e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4fcc30ab-90a1-4d14-b237-1883d22be7a1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e578de-5cff-4d9b-aaee-6037d1056dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb75b79-2555-4ecb-b797-9ec68f8a2e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb4877b-6d73-4a36-82eb-f8c726f82d8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential is required",
                            "delete rawBody.credential",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d313006-e9de-4b32-9448-bfbd2cc06229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca601015-c4e8-458d-89d7-c85d00d0552b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4c111f-138e-4260-aa73-517f205b07a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901fb909-d22a-4989-8b82-4fc19ccd23e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f350ba-5486-4e00-8d7a-657bfad7df08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context is required",
                            "delete rawBody.credential[\"@context\"]",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15135f70-caf0-4216-b27c-599bedad9682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61854935-cba8-44a0-be20-8cdca44edb2b",
                    "name": "credentials_issue:credential.@context:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095516fb-f8e1-4ccf-803c-8660f2ca329b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a127ae-05dd-4af3-8718-2087e2b7edb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72c2e58-b99b-4137-abe4-fa26ecb99dc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context must be an array",
                            "rawBody.credential[\"@context\"] = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a210a2f5-5034-4af2-b159-a51000d58e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0006db7f-30e7-411a-b0e8-ff010e015a59",
                    "name": "credentials_issue:credential.@context.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1fa1dd-292f-4739-b29d-61938ec117d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0e8d54-073a-40f0-a2b2-512c749120f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eac1037-9cc6-4693-b83c-76c4e03e8b8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context array must contain only strings",
                            "rawBody.credential[\"@context\"] = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c4be28b-78aa-4317-8380-6fcbdae82cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ef7a25-cb4c-495d-9edf-3c2744160116",
                    "name": "credentials_issue:credential.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ec6928-ce26-4b60-a808-e643e40b2dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ecc59c-7c51-4cc1-8a14-8783cac68f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841e4924-b89a-4e23-af98-cd3d2c97d4f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.id must be string when present",
                            "rawBody.credential.id = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38c431b9-e68c-4910-97d5-6302b2332155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7d3d27-749d-411a-b9a0-e41ddce3d7e0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb12ec5-65e4-47e3-a915-62832e42bcdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35721ab-9eaa-4a4c-84c9-01bc12298f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1531abfd-4ef5-4e1b-ac1e-d82beba00682",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type is required",
                            "delete rawBody.credential.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38c4a637-b2d3-40ba-acb7-0ca02f476dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe16674-c514-4032-ae56-2ff202d00d76",
                    "name": "credentials_issue:credential.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf2b3a5-efa4-438b-abdc-2ddad134d6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2faa33c3-0efa-48f9-b42e-e86130ab3738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98cc34f-ee3e-49f2-88a7-1d8b3d7e0a78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type must be an array",
                            "rawBody.credential.type = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3509177-3b44-4296-af38-b1b4ddba596e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa370db-1e15-40af-8f14-a916cc39079c",
                    "name": "credentials_issue:credential.type.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688fc930-1637-4ed7-abe0-1170c6891cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf776b0c-0709-4420-a091-732e7d2c0a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a24f7f4-bf10-437b-b9b6-0109f1cf3af1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain only strings",
                            "rawBody.credential.type = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc248fce-08c5-4f5a-8033-57c4aa999729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a1173a-24ac-428c-a9f0-6c12defbc718",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363005e4-84ec-4aaa-b511-24268cb07aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63474300-bb04-4ff3-afbd-9f3b9e745def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9243b4c9-e9c7-4226-af93-636d170a2390",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer is required",
                            "delete rawBody.credential.issuer",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa8876ae-5c71-405d-83f7-adca8d14f790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8411f1-4fc8-4199-a905-d1d1636d9fb0",
                    "name": "credentials_issue:credential.issuer:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c31134a-9e5a-4609-bc74-f07813d0b35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7287500e-87bd-4f1d-9750-5d0920be475d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c022fa7-5bb0-46b4-bcc8-80b5ca5a19d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a string or an object",
                            "rawBody.credential.issuer = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f3ec579-a0e7-4775-9f43-d61877e0f7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4866b4f-ca57-4521-b3c2-02164fe7ee96",
                    "name": "credentials_issue.credential.issuer:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "accab385-e43b-444f-80d9-c49a27e87f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f14d35-62b1-44a2-ada9-d503dce79933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd025a0f-e202-42d3-bcc4-8680bb4a5f79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a URI when it is a string value.",
                            "rawBody.credential.issuer = \"not.a.uri\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "c702556a-a809-4f24-99fc-4ca62564ad29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec8b226-6b4d-4b44-beb0-33a7bd02b71a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27586c2-3fdf-47db-9d0b-03c4f3ba3c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55cf0874-de4c-4532-9770-480ccdca45e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fdb5385-dc78-4d1e-9bc3-d404f040cd04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be known to the endpoint.",
                            "rawBody.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "d8d1db9d-dbd3-4f7a-a1b9-633519b3cd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece7d655-9fbb-41ed-a9d6-ee386f73d908",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1a097e-7de2-4be2-bf9a-f036d72f97c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10057323-6460-4b0a-a11b-5f1b1f43440b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29b88c7-9f53-4edf-a651-f874104d56da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id is required when issuer is in object format",
                            "rawBody.credential.issuer = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "145c3d33-236f-442b-98ec-3a1613140443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783e2090-f190-43cd-a53f-50897c100602",
                    "name": "credentials_issue:credential.issuer.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685c383b-1e07-4ae2-8e31-3173c2087ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2177ca54-3ab9-4d0f-ab97-aa4eb5f866ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f376467d-80f5-4e6c-b57d-b2951159b2d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id must be a string.",
                            "rawBody.credential.issuer = {\"id\": [\"arrays are invalid\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed6c1cdb-e14a-42e1-8206-8f317f110ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822be409-e1b8-4d77-a37a-58cc91b764e8",
                    "name": "credentials_issue.credential.issuer.id:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98db065-2773-4ab2-98cf-895fef9ff15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2a1cd0-2aa2-4776-a039-a52cec66a21d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e056419-a298-48ae-bac1-c29e82f8ed60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be a URI.",
                            "rawBody.credential.issuer = {\"id\": \"not.a.uri\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "f96047ff-ec53-4333-bd94-50cadc7e48df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fac2c3-9ad9-47ad-9ad4-b3b64554f85a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f84502-3ed2-4e7b-8f0c-ecd776f92507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e52039c-b69f-4222-b2bc-0e505689f088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff69a00-fcd0-402f-9f2a-ca39b6f3eec6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be known to the implementation.",
                            "rawBody.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "f771e74a-41ce-408c-8f13-5c1d3baeb9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d463dc65-9f3e-4cc8-85ff-8adc60ba3260",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c41784-66a1-49f4-8cff-3b81df49c95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa98361b-dacf-46d3-9d8e-499c89e7d162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67aefe0-7f97-4fa7-908b-25c2ebb19548",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate is required",
                            "delete rawBody.credential.issuanceDate",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaebf9b7-98ba-418c-8bec-872aa46924a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9149c52f-213c-4994-8f12-fbded39297d1",
                    "name": "credentials_issue:credential.issuanceDate:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67963bd-dec4-44a5-8f12-18b724918cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e4fe59-1a53-4485-ad85-750306b780a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b03e87f-e20f-44e9-b949-78cc8a638402",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be a string",
                            "rawBody.credential.issuanceDate = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d372476-b77f-4d19-99f6-bdddd6e8fb74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7154dfd1-0a68-4be7-ba43-f57b83686e04",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980444f0-f9e0-405a-a135-f9423f3057b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5935bb37-5c12-4eff-bd07-6d9c4a957b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa80693-7ec0-44e0-be50-f26297f186c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be an XML Date Time String",
                            "rawBody.credential.issuanceDate = \"not an xml date time string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40f48ccd-cc18-43ce-8cf8-e259b52732be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd62e907-5e21-4cfe-8a77-7fcbae4d612a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03fb0d8-3be7-4161-8759-f3ba5c1c4fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff96283f-e8b9-4ed4-a3a9-cc01020894a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5dc7bd-539c-4b9b-bbb4-5b9bb38d2a51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject is required",
                            "delete rawBody.credential.credentialSubject",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cbd94a3-c137-4b92-8bb5-dc4fc2567b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fbd8d7-aceb-4c25-9d7c-12d0eb87658e",
                    "name": "credentials_issue:credential.credentialSubject:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "475a9546-ff8f-4bb2-b414-ac50aa82669e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b2963e-ba2f-4287-ad9b-1b5fc3cca2d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5dd6e51-635d-4b96-88da-b0ed73dd20ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject must be an object",
                            "rawBody.credential.credentialSubject = \"did:example:1234\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a92da4ed-c92b-4b0e-9505-2caf0a16e039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23138497-bc58-48f7-9909-435772cbe08c",
                    "name": "credentials_issue:credential.credentialSubject.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3947ddeb-0bc8-45e1-9a31-41b4e91cd5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a31574-1bbf-4522-a261-8ee575a90c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7249d0e-f310-42bf-8d32-16485e300523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject can be an object with an optional \"id\"",
                            "// property that must be a string when present.",
                            "rawBody.credential.credentialSubject = {\"id\": [\"did:example:1234\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56e7550c-0cdf-4079-9d60-36818147fb3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92304df-9d52-4417-9ec6-74844d18f687",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896687ce-bc6e-4477-bb29-d4fe673ea4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a38cbd-ccea-4f9a-9dcd-e6ee8ee5df7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f29c647-a998-4c59-865a-dc913338a9ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options is required",
                            "delete rawBody.options",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac19f9fb-ba2b-4a1b-bbeb-6d4501e4d611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73ec418-3a79-4d2e-a718-4b676e6f81ed",
                    "name": "credentials_issue:options:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed5f701-9b59-4c34-a26a-8c7ce9ec4a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ad1233-9146-4e7a-8ebe-368f5e4e9e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23a7e57-3132-4913-8d78-c5c72ac3bc0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options must be an object",
                            "rawBody.options = [\"array\", \"element\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9244a299-ac79-4802-8938-8e61e5025268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ecfc58e-ce0d-4ac0-b89b-4bdad9a73ff5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4d01cc-c74c-4ac1-9042-cb760c41bdcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5befb0-2a99-400a-91e5-67040534a74f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac70d516-f50a-4bfa-aa27-178475bdbbe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type is required",
                            "delete rawBody.options.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59069749-6a00-4e43-b042-b9eae9932715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6b8455-8340-49b2-a6fa-854a1006c766",
                    "name": "credentials_issue:options.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42dcf32-1725-428b-90b4-867696365765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d555d3-5ed2-41a4-8bb6-d1cc842d4988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244baa2c-7269-42a1-af56-94f7808f9f11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be a string",
                            "rawBody.options.type = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0843b710-db87-45de-a77d-13452e5c06ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28bfa1a-cbca-4b44-9465-32c289bf6970",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e873b5-d3fe-46ce-b502-cb04f92f60be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16c5e8e-731f-4d1b-9103-423b0b5885dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1dcef64-3af7-47ed-90e9-cbacc9df01b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be valid",
                            "rawBody.options.type = \"invalid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bcaf090-d9ca-47e0-a79f-aef137c5622f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25df6a50-d799-4000-b149-6a61d2087673",
                    "name": "credentials_issue:options.created:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{access_token}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6d3364-252d-4d20-b549-baf6e6aa18ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb1625e6-d1a0-4354-9285-b1f0dc3c98be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca024ca-ec94-47f3-b6a9-9f11127586f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.created must be a string when present",
                            "rawBody.options.created = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61e366d5-6693-4985-b7e5-0c81a014af67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97609b3d-6a82-4009-bfc0-c389f886da57",
                    "name": "credentials_issue:options.credentialStatus:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be301566-47b2-4c49-abc5-31c1d17f247b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d6b2170-4153-4817-8900-0aeb4407baba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c847fba-a8e3-4b47-bcd2-c2f1f4f5481b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must be an object when present",
                            "rawBody.options.credentialStatus = \"a string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ab5fed4-69a9-40c5-b5cb-e5f5c23c7fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1aaeeff-cd80-4213-bbeb-8d3550ccd3f1",
                    "name": "credentials_issue:options.credentialStatus.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7030cb-f8f7-485b-9e86-3d48070c5537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db8ecec-f5d7-4580-9add-862555daec71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7f9070-0165-4e4b-8fa1-c9ebea17385d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be a string when present",
                            "rawBody.options.credentialStatus = {\"type\": {\"foo\": 42}};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4108b85-2a97-4590-b38d-8a7a081ede0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399173ff-7f48-457b-af05-518ee27e7aed",
                    "name": "credentials_issue:options.credentialStatus.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ecc590b-0b63-419d-8d98-b0c7290e8d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e392327c-7f5d-457d-8ae3-27db2b44ec27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd001a1c-c414-49dd-bb04-4b85e1de292b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be valid",
                            "rawBody.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9188e76-ceca-4925-b642-e55def8da05e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "166861d6-7243-4cc1-99a3-ef755de44fe4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "47aac7f3-7f24-4deb-a732-1e1a8e65be53",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92672db7-bf68-4cfd-bb08-af83c9e76c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae787746-6da8-4daf-b7a9-7648e011488f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b735c990-22a4-410b-8c59-de0756119e10",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "e136777c-64ad-424d-bf61-564f5e564bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bee2e6-900a-44f7-8d95-2b7b204c9c01",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f84205-5b0a-462e-9aba-a263a8d60fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2331338a-c5a6-412a-8930-0b4c8a0a1ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b9fe5e-898c-4efa-aca0-4e23c9412915",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "cf18a990-e969-4538-86ca-d23d3f586d05"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bcfa71ef-c07e-4bfe-a48d-ac0b68bdab84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70883772-db0e-4e57-90c0-3e87a9a54180"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5ecb9c0-cbdc-4755-b22d-c5120684443a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d44af92-d9be-46c7-b7dc-b8e1b6e182e8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "16b2fe17-f9ad-4266-94f2-425d6b2c7a08",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3025cdea-7d15-471b-9e7c-7e2696a0c6da"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6ccb326f-5b47-4162-a527-534a37a0f192",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0df9262d-85b5-4406-a420-fc63b06d1f5b"
                }
              }
            ]
          },
          {
            "id": "a246f461-c27a-4ba9-b471-692919480f37",
            "name": "Positive Testing",
            "item": [
              {
                "id": "38c6782a-d705-4b98-b50a-91bc238417ac",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6e53938-05e9-48e2-b33b-b41043299427",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuance_date\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97e538ed-e84e-4ae0-a726-c2bc5c3c72fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a70c0610-5bf2-4ff0-b2c3-e625c2153b83",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "dbdfa645-0f81-47f8-8aed-419c4e70b9ff"
                    }
                  }
                ]
              },
              {
                "id": "bfb9228b-1516-4244-9d19-84617118f7b7",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "710ac659-e3a8-46a5-808a-657da172b491",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "27d4e25b-5f02-4512-8957-ff2cee9dca39"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff4e3242-327e-4bdf-b4a8-c432949facb8",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.id is optional",
                        "rawBody.credential.id = pm.variables.get(\"credential_id\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "37411752-e062-4d57-b28b-5c57d5409df4"
                    }
                  }
                ]
              },
              {
                "id": "bd7609f5-bd7e-4b7c-93d1-e1f667f07ab3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5df0737a-14d7-422c-8dd1-3ffa9cba7613",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f28584d-add1-4810-bbe2-f79541a0f9e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15689557-a0ba-4487-b19d-30408db40aaa",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.issuer can be an object with required 'id' element",
                        "rawBody.credential.issuer = {\"id\": pm.variables.get(\"credential_issuer_id\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "f3a0ad00-ff40-4eb9-b460-150bc5be1254"
                    }
                  }
                ]
              },
              {
                "id": "7c1c7a74-7756-4563-8627-b8e2ee9e5c4d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bc27e17-7450-4530-ab1a-4d3de656d095",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credential_subject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32a64104-51d9-491f-a28d-c70b205d0db3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6ff77d7-8976-4360-ad9b-e33234b7c2ba",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.credentialSubject can be an object with optional 'id' element",
                        "rawBody.credential.credentialSubject = {\"id\": pm.variables.get(\"credential_subject\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "6bb99eef-d6a5-4703-81a9-5ba41a233891"
                    }
                  }
                ]
              },
              {
                "id": "a76a90e7-3dc6-4270-8e96-69c00e6527b9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae5069ed-ee33-472d-a1b1-853df2791105",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "04829ecd-f17e-405e-93e6-5531ddc81983"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "418c656e-e0a2-4642-bccd-44e440193d42",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.created can be an optional string value",
                        "rawBody.options.created = \"an arbitrary string\";",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "f8efcf74-d028-4682-88c7-fa7f2d690b3b"
                    }
                  }
                ]
              },
              {
                "id": "a56a8c39-1df3-4529-bbdb-24d8caf5d2ba",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "314761c7-8ac8-4e73-93c5-1d851fcbf421",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "533af361-2c09-4e36-af7b-1fb9d8390bcb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50d8d3ad-cfa0-4de0-9677-54ddfb05d750",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus can be an optional object",
                        "rawBody.options.credentialStatus = {};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "d4c90fa1-42d7-4466-a6c7-002f49240827"
                    }
                  }
                ]
              },
              {
                "id": "6ea2693b-ea6d-4d74-a5cc-88c022990c83",
                "name": "credentials_issue:options:opt.credentialStatus.type",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99a681e6-0a19-4596-b7cc-28413928e48b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e6b1d86-c4b9-4cf7-b62f-ec0cff2548a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c668da-b034-466d-ad0b-eefb98ee33dc",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus.type can specific string",
                        "rawBody.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "0ce77cee-677d-4604-a7ee-e548fb46ec3a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4f59228f-f27d-4ded-b1ec-f18330a5c659",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ffa84da-b8b1-406e-858f-f35cd9da0bbd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "163d2b99-5adf-4706-919d-158321c9018b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56e2d2a5-b8a0-45de-a0d5-241983e74481"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c39d7c9-f490-42c7-a9f9-b850826e9d64",
              "type": "text/javascript",
              "exec": [
                "// Raw body should exclude all optional items and should contain",
                "// first alternate version of any 'oneOf' elements defined in the",
                "// OpenAPI schema.",
                "",
                "pm.variables.set('issuance_date', '2006-01-02T15:04:05Z');",
                "",
                "pm.variables.set(\"rawBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": \"{{credential_issuer_id}}\",",
                "        \"issuanceDate\": \"{{issuance_date}}\",",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"created\": \"2020-04-02T18:48:36Z\"",
                "    }",
                "});",
                "",
                "// Obtain an access token with the required \"issue:credentials\" scope",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Obtain the credential issuer ID via did:web resolution",
                "utils(pm).getIssuerId();",
                "",
                "// Set the credential subject to use for testing",
                "if (!pm.variables.get('credential_subject')) {",
                "    pm.variables.set('credential_subject', 'did:example:123')",
                "}",
                "",
                "// Set the credential id to use for testing",
                "if (!pm.variables.get('credential_id')) {",
                "    pm.variables.set('credential_id', \"urn:uuid:{{$randomUUID}}\")",
                "}",
                ""
              ],
              "_lastExecutionId": "777d1d60-8905-4ae7-9e0f-b9d4f77dca8b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b4daac5-e996-40ff-ac98-713ef896594c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4dbebf70-3b9c-4a89-8f24-9b7ad9aee9f9"
            }
          }
        ]
      },
      {
        "id": "dbc6e026-e02a-4138-905a-174dc5224bc4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e1a75fe9-d2fd-4cc0-9edd-322df21be26d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8849bcf-7815-45c7-9d4a-b86c627d5656",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc797bbd-5d1b-4e59-bd94-7c16daff3cd0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b12a23-0bad-4ffd-b7b6-412afca95713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42b105c-879b-4b06-a858-8178c8706571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88529829-0757-4420-97db-2b6391e2b866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f4bafdd-e3bf-4266-9db9-b96befa528ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5aa0ef-b6b5-4486-9fb5-14baeb2fab0d",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3f452e-28ea-441d-80a9-836496405f6d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "70041cdb-58e3-4e1e-a8c3-e622a688718b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1883131-622b-4123-b88f-927350dca305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddae3520-5c81-49a9-b1d7-f5cb066af710"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab5a3623-02cd-45ac-a4ee-2ecb5fea4f5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1579e5d3-a278-4d6e-9eec-d01cb180ea0d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "270a8be0-cbf3-4aa4-92f8-8f3c4d47817b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94389f25-1b09-4123-89e3-cb398d0becbf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa0c7e34-2b63-4ebe-938d-8ed63210cd35",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"update:credentials\" scope",
                "utils(pm).getAccessToken('update:credentials');",
                ""
              ],
              "_lastExecutionId": "ba699fe0-2902-480a-adc4-677ac043ab8c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b3d9e21-6c3a-4ab2-aefc-88758bb8a22b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c324c8d9-3266-4bce-bd40-e07c6186e70c"
            }
          }
        ]
      },
      {
        "id": "5fbcabc4-43c3-4a62-8244-9b7c8332405c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e09f31e0-64ce-41e3-abcf-2b5c040dc08f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "17464436-97e9-4814-a1eb-0296c2975809",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b0a5f6d2-7ba3-433a-bb43-9c04207b6436",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a729ded-f0c6-4c71-b340-054e2ff28d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51363eb-0643-497d-82cc-9b8753c2683f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13914a5-2bc1-4584-a24d-7f654f7ae7e7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7061da62-31a7-41d0-a899-29e274269853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "307f351e-63ca-4bbd-8123-2f3b4e93ae0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f982b8b-29e3-4e0b-b658-8b299732f1de",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cb805f-f72e-46f3-be7e-4db9559e9fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb0e7836-101e-4a07-9014-0e548afc793d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255de748-0e96-4010-84a6-a5acf68082ec",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb076af1-a7ab-41d7-a31f-4fc774f64e15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1983bb94-02ce-42da-b773-206fa25375b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d93ca5-7b3d-4298-9b12-bb2eccbc2db8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4ac1b3-bade-4e47-9548-58c14fb20929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "221a7313-f0c2-4bcc-b749-24b4498ce085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f591c27-d78f-42ad-ac3e-5ffc7287e996",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d93483-d4f8-4a75-b25c-e8d39ced7625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9110ad-3f0e-4d20-8cea-685d4cdf6489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d9c43f-e8f3-4728-9145-3ea266e9f09a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5970f1d7-61b4-4a38-92fe-e2f4022e19fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd785595-4a6d-47d7-ab2c-8dfa2f443220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a00a51f-e669-4303-8800-3fb33d53b0b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e2db4c9-99b6-4415-a85f-8a8f9ceea5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099904d1-bbf8-43c3-ba3a-720405a86961",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a8f963-fc01-4694-892c-2ca19e8872fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "810eeceb-3d58-4dc8-8a59-1c34c2147b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4658b66-47a6-4548-adb5-929de4e3595e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37814bbd-6b4c-4a12-b550-c28b7113193f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27451fe-7060-4234-87d4-aca088502549",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90d351d-90db-4e61-9ff0-c180094019a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "247d15dc-020b-46ca-985e-a7089ddb4e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7bc961-f5e5-418c-929c-eff14b38cb18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6fdd633-a210-4e49-9419-0e57642d4c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff78d4d4-261f-489d-ab30-6737fb0b17d4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90117c74-0974-4744-806f-0bb50be1b386",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c11a1c7-eec1-418b-909b-a6b82ed87a1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e41f08-7a15-422d-bb17-ec33a2346e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd279b0-9715-48cc-883e-5dc6081f3682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b32494-b9cd-44ec-a1b4-2be37e70c2f6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..RJunbl8K6pk5JyKv0VkmdJT4I8sfatEPdbup0RAYKU6F1fDvEZ8j0xFlr1ocpNQGIi4H5cufTCRE3Fi45ZQ-CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2e3998-ebea-4738-af8e-c23e64a029f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bf52610-1dc9-4c8a-aa62-b5171b3cbd6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "846b80a6-811b-4dd3-a4e7-2ff38d33d95b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6689a56-533e-4378-a4e1-02719bcb45bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e60403-2d66-4452-8bb8-140dca4637c5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..33cnhPeRXCGz478h0OHf8saAVLVXrxpUI5wG_hdHUWjqKz-bnw2xRGx837FIMgC5jICPlDjEQl1c_durehmQBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4192593-2f41-47bc-b6a4-44b82fcad960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de90c713-7e19-497a-9200-c31c52d29182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff914d21-8895-4054-8349-bea8c2011182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7938de24-f3a3-49a2-85c5-7ca587ceadc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c6799d-8b0a-4cdc-bf88-310af1be0989",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e96847e-6a9d-4e1a-a6d9-8290b2e75aa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6775ba20-7382-417b-9d7a-9bd82493c213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3a1c4b-5a7e-4841-b3d4-db09cfa79965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f451ad-4e99-4958-8d54-78487a830af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e280ac-bbca-4abc-8471-aa8d3c752c7c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3771da6e-bd4c-44c1-a7a9-66d01343fd44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5e46e7b-da49-478f-adf8-e282a302559d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aeca8a5-56a6-49cf-8768-bd4eac163141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2504ae-7d48-41c8-802f-8f890e602ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330c173c-7caa-4263-b605-ec6beb758ade",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfcf03f-ae5e-4ebd-a916-43de5b002405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5979fb1-9c78-4455-95d8-0ce4eaa0f7e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "083874a6-c9c3-47f9-ad2e-40335e356748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3648938-3492-49d7-ad2e-1505cdb5d947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b6953d-606b-4bb8-956b-f19ddff780c5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4904f3bf-00d5-4388-a50a-99c01678019a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c036b0ad-2548-4f21-bd9f-76e001618b52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afe840e-447a-47b3-bd38-135c71fbf659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767721ab-8f2c-463c-94ff-269a091d6228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d13c15-3c3d-4e9c-9307-aa54719fad20",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..33cnhPeRXCGz478h0OHf8saAVLVXrxpUI5wG_hdHUWjqKz-bnw2xRGx837FIMgC5jICPlDjEQl1c_durehmQBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69d3354-863a-4312-96c2-44b51bb06726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4382d2b0-633a-4b2d-b08f-d58b353604d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3386eee8-4da7-4a18-99be-3d8a51eea3ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5bb8fee-1e9d-4488-a232-e8483f087d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93c8506-48fa-41e2-b990-9be7056469c9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..CaZ2UcTNDOTCXaDXAclLPy7_3rpuf2sbL5xwaMnN2abolieE_C7fB7RsmZ7i5_6CoKRhGnrM3_YkAms8IlObCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53914bdc-e2c7-4e7c-a06e-1255d85bd939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbfa6e10-8d45-47f0-a9fa-19ee88b6590a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6220494-6b10-41af-ae99-e85aed9a1d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9fa5230-55d1-4ae3-bf46-b6bac29b0310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20e372b-3386-433d-8de3-d89e62377fcc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..yonwdW7r7YFAAjZZxjVrYPkLVrbLR5TMZ3bkWN1uo2UbUi5tgtlikoyyHlj8QD0MPA7xd4Jv-1PlryIVOqtUCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690e5fa7-7ab1-41af-9bb5-6dc6d9aa3be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495b4e58-2755-4e56-a2e2-e4251ed1f709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe8a8d9-42fa-401a-906e-3a74aeebc012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "515e0a92-7697-4056-8f43-54419c65bbfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca11d3f-df48-43ec-8b25-82d93beeb4aa",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TRCl90uRMmkycDvfeHw1S7yxyAVl1-Vc2SfwwDzXkn1SqfCJxptwVsgJWwr3gQRAqveZR0xrxQczy4tWHq2FDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acabf7b8-2fc7-48e7-89ae-770a6831aefc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c10d10-5c86-48a0-8eda-73d82031519c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1f2076-9663-4b44-9851-7da00c8f6e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef97ad2-4977-4b61-9fb9-64d03e06e42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b1906b-0e78-4c7f-b29d-bee04dce7115",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..33cnhPeRXCGz478h0OHf8saAVLVXrxpUI5wG_hdHUWjqKz-bnw2xRGx837FIMgC5jICPlDjEQl1c_durehmQBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ecc96d-ba08-4ea1-a832-e793ae218baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d69da10-b9e2-491f-9de2-1136e0b33353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b00a48-25e0-42dd-b3b9-021999914b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a397fb2-f353-4623-9f17-a7819fee89e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94e4828-4bcb-40be-b05f-653ae1127896",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ymo0kNnQ9mVHr1RKpfCuR_ekUAXzNEM7stSEtbbFv4ZPZb6NK7kUBkckgwrZyBp8re9RQEedJ9yiyfzTL41dCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a8ffc1-ca2b-43b6-bd3f-59a0a714b0a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a81e2cb4-ceca-4c87-9935-159bca203805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79cd492-d603-41ee-baa6-74c50e21d3b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec5ff16-e6a8-40c6-9520-a0f635953dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38798f0-6295-47bc-8fb0-492d1de0211b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b36d9ca-1f6f-4d36-9dee-7e5fb620ea1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2d0bc2-4d0c-4258-870d-422de321e7f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f5180d-7f0e-446a-96b7-ba378e2645c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016a642b-c1ef-4697-a629-53e2f4b32785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6e20cf-1768-4ec6-b92a-89b6ec0cefe6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a86b2d7-29c7-40d0-8de3-0bc0cab8ee75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f0150da-6f74-4d3f-8559-0937ae5977c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06fb410a-d14a-44cd-a3ae-590862dfa28b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a339e416-08ee-4b50-9597-2e8bb3ed564a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62db866b-657b-48c2-bf03-091862c4ea12",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ce2b1e-87d9-4fc4-a1ef-84d8563c77bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d3409c5-36d0-4aa4-848e-34f452d2865e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83552da-7720-46ca-bb2f-8c189471dac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68515eba-70c0-4699-b250-ca8618f5af21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6678576-5100-40ed-b0b7-786f6fc3e998",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf26b66d-d2fc-479b-b8e4-a199fa10faed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a362af1e-de59-4fa3-8e9b-8c0e2a94e4bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9868abc7-8676-4a15-b96d-a0c9d8a101bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809ccbf2-220e-4405-94ee-23f3428e961c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a33c03-1189-44bb-9af0-f7591a1463a7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8604056c-681c-42eb-a8e9-16036b09d4b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3bed5c7-4894-4140-9769-f29dd1294d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db31a91f-03c6-46e9-ab67-0513ae76af97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06887d8a-d0d6-4f00-9098-310da4de1201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fe40f0-f616-4d9d-8160-a2ae8ac3946e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..J3mhnnbzRyvk8fyfh7fwzuuznEROTdVRM_MrdE-HV93WdGfTdgVhebmdmVZHmvmJiQaxYiIuD-natToEB7xvCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72a073d-bb2a-4d87-a85f-4728a127d781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fef95cb-2bf9-4b50-96cb-dda3b0ad0ee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96780f98-f770-49eb-98be-8bdb8f8d9d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac5325d6-0fec-40b6-a524-a8802c1f9496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167fa3c6-c4f4-4c3a-97e8-ab6a50a8328c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591932fc-f316-40bf-82fd-449208c4b73e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45bf5ef1-54f4-41a5-953e-8493cf514f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b900598-edcf-415a-a7fe-507c193d9827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c0710a-9761-45c8-935d-05bb834c39ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87210eeb-d92f-41d1-809b-cb6f13a85b31",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c983fa4-d113-4ed6-a3e0-758a1899b215",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdd43c8e-5c34-4396-8715-3c2c41c948af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "810a51e7-1d28-406c-b12e-588b36017320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98887ea8-5e4a-4c94-bc55-0d15c7875c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fb147c-a89f-4a94-9eab-b7e749cc8ba4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7281b3e8-2310-4df1-b5bc-8ba187d7ddb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afa872ea-aa8d-4a83-affb-02a931e765fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "196983c1-3e12-4aac-8316-55d477f8505e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5763b99-a57f-47d0-9680-0a30815f97d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f675037d-590e-4534-bd13-f5d9421444f9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f1f225-f013-4cdf-bb97-13d565e6c0f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dea3e25-07e7-45db-89d7-234bee9a1dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3dfea30-6369-4df5-862f-38a5d9faa604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65ac4da-d66d-4acc-a93d-35ae1b1c22fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35fa328-46f5-48dc-a39d-0995f839883f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f158ea69-8414-457b-8e3a-3bcd016f0c13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1b474fc-e1cf-4f1e-83d8-fa39ac1fb3b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad066fd-4d49-4a04-a74d-f024de35f839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec332dc0-cb41-479f-828f-6b0563735ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9b0aa0-2218-467c-a1a8-7d761cba0b0b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xkCnC0dheSr9rWQn6uxLta6CXejSLy7FIQkZT2rYiOV0jmWW8SWcCdLqHg2gJ3WyBBmxj_zRwNBpFIUvsLCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e1f0bf-4979-4325-8e80-a55c4af7a950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6b86c4-48bd-4973-b06a-8430f7a19f9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fe87ab-8d5a-45d9-83fd-52fd9a70059f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9c1044-6049-4748-bce8-70c88bff31d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff4e399-c4f4-47a2-966a-affacda3b141",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bgY03ZzK02APUHCDiqUVMYbbvu4mSPNC1sGY3lTC8ko7j5oZDB4rB8FRzsXCc9L0O4nHx4UNJURCsRZUErbRCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8591a90d-9e74-41e6-a4dd-edcf6806eee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e93a482a-7b17-4258-969a-0b2d86b0df5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e46fc12-6241-4c87-ba71-56f728d0e3b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73403d4e-700f-42fd-9277-0f04e59e3181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f858bb1-d7f8-48e3-9f3a-f50f43fdd9cc",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..2Mu6q2PaIBjmfXHqLuT7XIFthDHboV4bdlIdLFY9KxapUXic6uhoefYFrarss-AN_5dUHdjWnHEMCoWYjW4MAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135d7bd2-338d-499c-af83-46038b4a164c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57576f1-4d01-4cb1-a3a6-b91b6ee61047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f72d4f-6456-48d6-93cf-c0e365a19ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2fdcf29-df2e-49b1-af06-40682db69a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479b9d81-af7c-47f9-94b4-d1c0a5f6f474",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..L3RWLJfQzaffmRy3vXZF_7gfdlR-iQbA_8TjGFaBCmaOqm8R7Qi0B6JivEqshh8MZWufDitgO-r6ASk2iaGVDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce5355f-40c3-4fdb-9321-39ebbb340ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb031ff9-5fb4-497b-96dc-98d01282acf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8253e799-cbc0-4565-b065-2dcd409cdbb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53bc3f6d-d63b-4f83-942b-332f3793f0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a7725c-8d77-4e14-9cb0-6fae49627dfb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xkCnC0dheSr9rWQn6uxLta6CXejSLy7FIQkZT2rYiOV0jmWW8SWcCdLqHg2gJ3WyBBmxj_zRwNBpFIUvsLCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e08d352-a12f-41a7-9c1c-342e46b419b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "031e47bb-5034-44a6-bef3-cab488116a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6cb642-191c-4fc8-9628-b992ab69f47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb6154bf-d2be-40fa-a33a-b654d52ab6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1b4ce4-4f8d-4c08-8174-5da8d62eb273",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n0Ffdz9nyzKuJw3OlGpU5h8clE5I6MFEFEEobztPABGQn1hFRN7CBx_BmDMsT7KF3jSLl008sTJ3RllFql5QBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651cda58-c008-4add-af8f-3c13305738ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55210a3a-8594-448b-81a0-0af8cc3bf2e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e84382-d7e0-46dd-9f1a-bdcf3f976c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6f4a4e-8f2f-4a8b-a587-f11e3d4d8d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6acd725-c000-4871-b79e-0890b8b717dc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..E4WypAOLo4KNTnvHucei_9yLEMdlq_UwhS7mexlp5i3hF8SfBAlLv2scHANd3Ikhtqr9JIyaXuDnIN2LsaVFCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d792f57-65fd-49a0-953c-d6fc73e76888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf98175a-298e-47f5-af57-b8bda5a9a83d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64894901-2df9-4c6d-a02a-9affc015352a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4396e93f-a86e-4225-9158-9a52ba88b50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b37239-6cb5-4c4d-ae35-a06b2cb3995f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rnEgkKo3EQPiGixl67oPIFuZ7H9zueq0ELswP2p_FdahgJooIojScCnp-AcxeC_G6YDtLUbsNlVy0SkDvTnwBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ca29f9-bd4c-4ac9-8883-ea8173751f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39e323fc-fa86-4814-8134-a46a40178877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83efb4fb-e79b-4357-8572-18070af76d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef74694-03d0-4392-b300-3fe37d43f088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957661ff-09e3-4207-ba93-b4100f68a3c2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..nK8J_eHLw18__7Byp9ohgpDCHY1-Wfpw8vk-8k-nw4ezzjlwYoYjbo9x_xx3ES0WY0aCN2Xr9SbRoZHr78P0CQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d303a31b-197f-4be6-ad16-b3efd6f91b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d153457-3d0a-40de-80ea-ceb8e1a9b135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe7d13a-8455-46a1-850a-b8ec5eeddefe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf2fb3c-82e5-4fea-bfa4-907068a3a5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13934e2f-47a4-494f-abd5-96582d1fc558",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n0Ffdz9nyzKuJw3OlGpU5h8clE5I6MFEFEEobztPABGQn1hFRN7CBx_BmDMsT7KF3jSLl008sTJ3RllFql5QBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f397ea6-f531-4858-b123-d4fbc6e65e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8aa5a8b-62d4-46a5-8c4f-a3bfae02a2d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1791990c-9ac8-4ac4-aab3-eff41855e13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176609d2-595a-468d-9b66-923c7b65859d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b697dd1-ada1-4520-8152-1a42f10c3cb4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GEyy2tqmKf8AzHhXY06veUbSRVk9uoQIu21GZlYtcdMGh-VrTjvfVg2R8DAFtCBe6tEUL4dnsM87mT-20nG5Dg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee0f287-5362-421a-bfc2-ff343f09b8a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72d16f2-7e6d-4cd7-885f-021ac1932877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce23350-3713-4481-99f6-8ff151a52b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc57566-ee97-4a51-8d89-fa0a314f6a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e26f5b5-e95f-418a-8964-6d926fc32674",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..WtxX0aIcE2JJ6T-a5nqfvElr_E5NwRYeOJgRBqeAVVFNJJaQJh6rz1V6nZsDl2xsblGQxCAaWQq9V6SphImACA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f875fb16-bcd3-42fb-bde8-8dfe36a5ab9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9ee1b2-8da8-4d32-ad43-dbfb9af4fb4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7532150-3f8f-40b0-8406-8b69d9c0a311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef45ff81-431e-4756-b715-2913ff37c088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0156eb93-2012-49e3-9760-92751cf9a48d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vuVI_mdt7bpVwmKIsmIusWlCbj-wk33p6_FC2COcGBKzh9m5jxydHlDRIM6YoJQJWpS8_EavVFKwQvPuLuwNDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4183b776-9377-4eb5-b01d-4bf3bb690990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eeeaf77-63f0-4a22-ba5f-45a39bba6756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6027052-e6dd-4f56-a0ec-6388df45310e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef909ec9-9670-474e-90cd-632df5c15c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a9efbe-04cf-40ec-833f-69bd694c896b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jurLQ2KXgTdIxIAB1dwcysrBFVMT95g3Mn2SuyxAubRWS8Rbe-dFsoVG24kxo5wE6EZVYEuES8uHwNX_SSrvBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302c126a-2f44-4d24-97a3-c9878b801be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b2d9ed-aeb3-41de-bfff-917f74485909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec91c95-8f37-4f98-85d0-91cf94064ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060d364f-49d3-43cd-9a1a-e504c11e49f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955cf296-5137-4476-b9ce-cf781b87a99d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..HyTRfrVnRzNCXO3qmmbQnmtXYV_bAdmZg-27bnuBGqQScL87kkmPfY3CpSTLN_8aV72mVBkvy1-uvYhkQotmDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e668e72-6ae5-4613-9ab9-8b9ba256aa59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d9b4355-01e7-42f4-86de-25e3850a3a5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "651e82a5-0d6f-4e07-8fe8-519b30b61cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87e2802-2e4b-43b6-a435-c1cb5cd4751f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c0ac88-d64a-46b1-ba19-1aae15ccf0ee",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..WtxX0aIcE2JJ6T-a5nqfvElr_E5NwRYeOJgRBqeAVVFNJJaQJh6rz1V6nZsDl2xsblGQxCAaWQq9V6SphImACA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02bd8eae-f2bd-4b34-aa79-a3e00c88347c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57942315-747c-4c4b-b288-25a76077b17b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ce639d-da51-4e48-9fb2-c1d482c1b2ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60bc1a4-0900-45d3-901f-c4fb44e8d178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b63275-fae7-4f7a-b405-6e3f1cd86ed2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5NhiK8XqFDY7TB3l0Mli_VAhnflErggK8zlj71jNg6F5WD4eNAVufeVLhK8HtvGaC-7R7nQzQfzkCH9692DUAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25979282-137a-422f-a2da-567706ce1728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ccf295-7217-4e82-a050-293563c6f3d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2c6309-6f18-4596-8f5e-9427173aaaeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e03e6c5d-3e20-4003-a19d-beacb1aedd28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26891cc-851d-4e28-a157-68071f12199e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1phNak29yV9Dt7ljiilV_cD1b78U9dV8Zhwjgrocc4Nahxchof8QHmEAFjfupRQZ71WIBpW-VGUtW-OwUu6eDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0259fb-4459-4547-8ba0-7fb70b677811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7318b37-55d6-4c24-a4f1-53a6b58d2a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fdf18d-fa50-4b02-8e1d-7ab1703de1bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc4cec9c-44e9-423b-ae71-95ce0a089f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cbd89e-ffef-4d93-9fa5-521f9c543b68",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jbb-uyU5OrakaqoC-9v-KQVdCXvOfr4Vjxox8hwFNP6qggsTP9NhHuq-T2Vdyag8BweIFTykT0SR_jAgtOxKDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7878b70-c6ce-420d-a0aa-2054e03e4fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd74264-ab10-49ab-85aa-4d7c31309aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "319d0990-54bc-4947-89e1-47cb13ee764f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6863044a-048a-4d83-9412-b5849782ce24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c6457b-ddd6-4813-ac3e-51db5edf7dbf",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..J3mhnnbzRyvk8fyfh7fwzuuznEROTdVRM_MrdE-HV93WdGfTdgVhebmdmVZHmvmJiQaxYiIuD-natToEB7xvCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213ca8af-409b-40b0-9881-5a324335f8a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1b9f2d-1031-4323-8a6b-2929001711b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a983ad-ad40-4f35-b381-17b7e82432f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dfb75a9-d9a3-4847-91d7-cb35e455379e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0c0850-a5e1-4309-a7d5-1133a9000fe7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..j1W65DhMkwul7bodXfKrVNsT_27QIFO7rI-8TDk0-ef-wu4PU7OuA8MFAOXfx-HdVf5KdqVu0BB1ITE6WjIXCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4f92d8-07f7-4ea6-9d27-fe0cba972ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "017e6a09-7135-48c5-8ea2-7c265ca821f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d12834-3603-4b96-abf0-6665096fcade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49519f13-fd92-4d31-a420-362b1615d7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09670f4d-3e1d-4c8e-a912-8578da83c06c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Wm4yBzXF87zLmyA0LMEwHSWs-2EfPpdN2yJstmvPJkPVLFdXKUdjh7lZuHNVtTkAMGNT8Wi_RZ5Q1BWAY054Cw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a42a48-dfd2-47a5-9301-c2bc946adecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "014f4ef1-e164-4bad-a1bb-4852c4fcb925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28847403-b03f-45bf-9834-b9eddd9b3a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d68892f-6a26-4dcc-88c6-eaf4ce2c57df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c010291-3207-45ce-959c-79168b1761cf",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jbb-uyU5OrakaqoC-9v-KQVdCXvOfr4Vjxox8hwFNP6qggsTP9NhHuq-T2Vdyag8BweIFTykT0SR_jAgtOxKDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30159e2d-5ca2-4654-984a-d33f07751917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d31ac8-59cf-4b8b-b906-7fadf2ec3bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0129e67-6658-4699-88fd-e522e3ec02ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3462cb8c-0e83-4133-8446-b76f172db99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cccd8005-029c-49ed-970d-54d50b10bd77",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..J3mhnnbzRyvk8fyfh7fwzuuznEROTdVRM_MrdE-HV93WdGfTdgVhebmdmVZHmvmJiQaxYiIuD-natToEB7xvCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b20c80b-09e1-4deb-894e-bd7555dca8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6dfd60-af29-4b7b-b5ca-bf0186f5acaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b01d0b-3926-4b4a-b1aa-a55c2691e992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f19b11-72d1-4366-9d9c-62b21ff553a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d761886-1681-4d68-9d95-1aaccc1a6a16",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VDVadt3rnBQ7P8dSYyZU5RHdfxVBWz3liR1wKbXbfBuaNT-rJYOoUCLQj-7IQ2elQaB4Fhp2nsgul9ZQmZc1CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cae227-7ed7-4273-bf30-6a272b442c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1177462c-2cda-44cb-8e8e-e523e2ac0ffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1052a26f-f7d6-4899-9a2b-b03949ca07a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b55f807-13b2-4c9d-b600-90def718245e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33ff748-f516-43db-9ccd-3e6e9fa7ec5a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Kz272GRCnCfgHy4D8txIaM1bY5O5vW8iFfQrL2B8a7OnaVTcq6nF-dhqnoMLHPEbrUNzHK7spVAZG05Njl6CDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b00ba36-4191-425c-a666-a59838a57977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf90fdc-4d3a-4954-bd29-b41191052fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53b8214-8b01-48b2-b430-f87d07ccaaf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc2ec43-0bd8-4aec-b7cb-d7a09bc02a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e230e6d2-d641-4307-a422-a3a05fbb1e36",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..P9pVMuK8IN7B38_-uHlTyqAeQFcasIOW06wJWEZDZLPpaeLA4L-S6ee-tZsbGmM0QoSr8WTkbqkhiXpEhuIbAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b026c0f-425a-4edc-85af-345a15ed1138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033db6d1-22fa-43af-af26-ac248e96adaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e703c734-8339-4d6c-ab61-2ab28bd67f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207eeb52-e3d4-4646-8511-ff73229af8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ae3143-f392-4f86-a73d-737126d72401",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rdlyOsz8ZwKwD5_CacS7c9iPQnRUIywCc_sHdyJlADD9Cq4cRwRw0wwJ7OZtLDylbm512V0s3Cn69i1qMWc8Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0c22c9-9f13-49bc-bfdd-22f5bcb12a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee8727a-497c-47cf-9573-1827240cafc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa32649-bf5b-4f9a-afb0-ec283ec95724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6bae3b-5cb6-4805-af2e-e2136a385bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be1abeb-5d74-4149-b5aa-ee20642a5382",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YXI2e8nVY98qybXn64g4bOG063TH6yjKFmSF9gRq0MtX3q3cex1t5ayc38JjZSBEgoJTKQzUTbL71FOukoNrAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c72d07-8772-40f6-820f-28fd02da0f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a313747b-6151-4afc-935d-ffcb22829c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4fce75-dbe7-4f08-acf7-a2272705732b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed246a03-3999-4e33-9cad-99d4cfe426ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2606ab2a-5c46-4ee7-9447-61882a414713",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc534e6-f9aa-4f20-b611-fead4878242e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c35e79b-06d3-4386-9607-8c6d7f3709c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "921b1b6c-3f31-49cc-8a54-0f425111b460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ba66fb-f50f-4498-9208-ced8e4040408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57515a3a-25eb-4f04-a887-b9b852ae831d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b062160e-6df3-4097-9185-2b715a075f6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b452a397-e44b-434b-a85c-f6d92f552158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bed421-a52c-42ab-9251-8060826270be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637aca14-f6ad-4a82-8bcf-017bb8ad2595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377a69f4-ab92-4219-84af-38186fe3e883",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a984b47-32c0-4fc3-a8e9-373b7e06028e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7522cab-cfe4-41f3-85af-7af15e63bdeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be73896e-9c7f-4aa9-8edc-10874dce4cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e780fd-2b37-46ed-93af-0ea3fc827932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7028f7d3-bdb1-4f1c-b914-59d4cf7900ae",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3f47dd-3efd-4b50-9c61-04f749a3bcda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71c384f0-bcc1-4339-8c1a-c1ebfc70a236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f369fe6-9af4-478b-8627-d73d20d6f443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e17f2ae-cf6c-4e14-8d98-e841e26bece2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a407d7-82ad-4378-a205-48c55483150f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7fd970-f4f9-4144-a4a3-ded52966ac0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f523afb8-db08-4c23-9a96-c0cdadd5a101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95e1720-479d-40d3-886e-8cdbdea64cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55825d1d-5c7d-47d8-9607-19606d8efbea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6197155-cd4a-4f52-b60a-097c7827baaa",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1473f89-8827-4b73-b576-7c5b42c4607a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e02f1e4-cc45-40a8-990b-2793f84d027d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd53fae2-e0c1-4244-8a22-935b70d5be81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9617a2e-70d1-43d5-bbaf-0fe3a1079d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad98d32d-437c-4a98-9d03-2d50bb84ab22",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8765f40-b13a-4a7e-bf5a-e23d067f0ca4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a707745d-42d3-4635-babb-01e457ab94fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a84f20-e0ba-42b6-b715-e56b94fa8f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d58e2a-e832-4d9a-b392-f966b2ae8b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd699f1d-d855-4fe8-adba-6a087609b3ed",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29b3b9e-9227-4b17-a3f8-ae200bc66d1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f53ad5f-3446-4adc-98f5-d962d734eaab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4e50e8-9c7b-452d-b570-13bfda720450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a8cd918-a978-47c7-9621-a0fd1306517b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3dea3d1-50eb-4929-ae59-4e30de97e6db",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6eff1b-9be3-4c39-8084-578f69f873da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4b1bd89-327e-4af7-9e51-037f6fc6bdbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7824b2f-8825-454d-9280-626cf9af5c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef7171e-9d26-48ec-96c3-2ba5642a1789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac56cf5-0e9e-43df-a79c-69a32f0507bd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4703abd-fd16-453f-b10e-fb22c5103476",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2633e957-d516-4d20-8ef7-f7f93ada519d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "915cdc9f-c058-433a-9ee1-e69c8eedfa71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80184b19-c962-42c5-ac73-82b042adaf2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e41166c-6654-41c3-820a-ce3d578af171",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58eff21-90e7-4e49-a8e7-550014c94f1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db0d87e7-042d-41e9-b0ac-37eed2159ab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24de4543-75aa-49a6-a515-be6c39755d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13cf459c-db62-4002-91db-2c079aee4004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c228ae-bb1a-4448-916c-c58bad923658",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558e5782-90f6-48b5-acae-82b704ad1fa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c48b892c-33a2-4c13-8b9b-9d8d8fda0f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff8b33a-1fae-41a9-8aed-66ff7ffe9e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721fe7d9-db0b-41a1-b4f2-af3ffc6477f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d80b56a-1ab9-4b76-b9c3-68a7f16281de",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb49a74e-b3ca-4d84-9795-673bbb8fa3d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0c3a120-7dec-45da-9c6a-437dcbce7dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f1d926-1663-4284-8a89-c1cbc9be9ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1695934-5e24-46ab-a74d-c4f22b7ab89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca8cba0-65fd-4bd7-b3e9-17b0400c29a5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02735a3-c773-47ac-a565-9df56ccdadc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "266bdf28-3eb8-4b1f-9a94-4d1d31629df9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51280304-cd61-421c-91fe-5ff87b7457df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000617a6-cfa0-4921-b903-a24f8ba24b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c78ba53-fc86-4ec5-ac3b-5aff3fd1562b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974f8c24-80f5-4516-9d84-d6bd72dbd3be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95633079-de57-46cb-aa86-d76860e445e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d631b1fa-e2f8-4206-bc6e-f557539f181c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22a0c47-6cba-496d-bbea-f8b39dc8edf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e8c8ec-f744-4653-af5d-6cca1c1a7b65",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a5a585-6638-4e0f-b44e-d6f29d7afbe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78f84cdb-f2dc-4c2e-b8b0-df23175d51fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "979f1fcd-54cc-488f-b0d0-3497cd576afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7052841f-accb-491c-88e5-5e7de994f0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6144321f-c20e-4a36-bddf-cf345a0c224e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d32b4be-4045-4e26-8211-f8f9a85730db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf05a0cb-ad23-4843-a4c6-556e3767451b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "127221b6-1cb7-48c0-808b-1ad48c0455fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e9ff9d8-42d3-488c-bdab-1f2793d81092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15dd180b-9e6a-4e61-a9cf-f3121c8f5cd3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61660362-f593-4dcc-b902-90b3c6b89a3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "577bd203-3856-4e9e-8b09-e32dcdd26157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b2d95a-f9e2-4644-9bc9-53340948eb7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e2bd42-ea7f-4200-b3f7-953bcbea6c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200c1418-00d4-46f2-9619-ce545c5e11fb",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdfbc12-fe7b-4d6e-80fa-666d86fb4eea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ade801a-689b-4a91-9aae-3de48a4f3860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00721e8-4509-44ba-9418-0c4c97217b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7a8590-5a5e-4c74-8771-dd8de745ac78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e002f8-4869-40b7-9953-69caf9782c37",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a545616-4ecb-4e34-8d71-c3f3d4e448a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cfac40c-34a3-491e-b353-da30236fb105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77346cac-bc2b-402c-ac1b-ee259712f4c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5662bfad-e00a-46cc-9668-f77c4f9d8fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341eca96-1fe4-49e7-814b-3af3c399aedd",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1256d9-bab0-4b9b-8bc1-d68a500a42a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b65f60b2-8bd6-4fb2-8b42-9adf44433bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6865fc12-c74b-4197-addd-d9ef3235e6c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42400c9c-7935-441d-9956-8f7caeb54c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2567b12-2bf5-4539-bc7b-2fa5726b48c8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45655da3-e011-48dc-91bd-e4e030604418",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aba32b7-ea8a-42d9-a59c-fe9bc1d472f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b3ab4a-2276-4ba4-a27f-9e64bf21bb04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a1f541-bce8-46a6-9752-59975ef69ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f8c7e7-099a-4735-8372-e1073f6b7e0e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b618e40-fe36-435e-9eea-aac82d1fbeb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46ae1724-885a-44e6-937a-2e7b3e678da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85cff31-3ee4-464a-8ffb-af8e4ff5668a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986cf1b8-c6e5-445c-a5b1-76bb7c24206d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571c9c5f-e285-42c7-afcb-8c2ea828d55f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b5a4a7-200e-4200-b8db-5d29bac085bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d546e459-81b3-4d61-8447-71e6094ce745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acab2e39-3933-4306-a6c4-63bf52538cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c68ac9f7-cbd9-4116-a8d5-060771c43a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a179a3d-c5b0-4f0b-aa93-4b4d7f88f57d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca60b3b0-cddb-45ae-b02d-47de4d8fe350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbdb6026-0444-407a-b16c-707156dde506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfb35ce-5711-46da-bd67-a8948a1998a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c8c7068-25af-4de8-9d8d-de4a3d9afa7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207d8432-ebc9-48b4-9723-e9985ad8583a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4382ef-fc49-489c-9749-2d262073c55f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65b745a3-5102-43b0-9da6-270b973ed1ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "279587c6-58e4-4941-a9b2-f425f8fd8647",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c56f2d52-bd6c-45fb-aea5-96d9f3e9cd5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b996c25-5453-4522-b0e1-e677eaa58f60",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac85eb69-9fa5-4973-a90a-d39bb4aa01b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f25531dd-76f9-4a73-a67c-3d164219955e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f8587d-9048-4103-a99b-d8cf56acafe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34de5b91-a0b2-47c6-a23d-7821be6a816a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeba29fa-682c-4bc8-b81c-e201199fb3ac",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b7b261-d21e-471e-85df-2ca36f683bd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6256932-8354-406d-ae2a-d109cafdbd0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d62429-22e0-47c4-8589-b6b7f59cd9b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0c2a47-642c-48d9-a3b8-a9560bde6761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcedb0bc-587f-499f-a638-0d21107f2c70",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3192c4-b485-489f-83c2-bdda8ff3b702",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9baccf19-0905-4c16-a290-f1cc106fbe3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d470cb-12e9-4cd1-ab07-d1b9abca5f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf5fecf-401e-4e03-8378-aab9d64a2c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553923b5-0150-42bf-bcfe-7d99e1ab8910",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9b3810-743b-499e-a632-875f3a8ab213",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "059d3491-f05d-48f3-acdd-2b5d4c4254bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "640e3ecc-7520-448c-97f6-b1a2f4a88715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8bc3c82-8ad8-48c0-9ebb-5b3cf0025888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f329c2-32dc-430b-a180-67e797a69535",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd3b971-d8e0-43b8-b9b6-64ecd966aec2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c4c1208-3144-4d69-8223-da99bc489e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d78d60b-cdc2-4abe-8827-155d0dcee396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b60f8b-de3c-47a1-9097-f6c6863ddf14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d0cd70-a41a-4ee8-b226-cebea9451acc",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccc1876-71d2-494f-ad10-cbe438f5f5d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1adad82e-cc29-46a5-8e53-085f185c1a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb00a29-57f2-4e71-8be2-9e76cac153fb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92897c3b-6ca5-4875-b3ae-6a9fff40efe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf00e631-0bd4-482a-9b77-eb42037aad3b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9564907b-ded9-4c50-b4ff-1904ae5479a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3daf165-e939-4272-b96c-b45c71d4c086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "408eef30-2a6d-4399-96d6-10dde1e14f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6ef231-2734-4b81-8026-98e7db5cf5f2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8adb30f8-a624-4d80-b878-fbd19dd1150e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe184ef4-c1ff-4487-b0f6-f41c231b8428"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "879e74a3-18f3-472c-a088-ac02724e36b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1805f1eb-3c15-49b2-a91e-8bea2ba1a111"
                    }
                  }
                ]
              },
              {
                "id": "5ecbed95-51a3-414b-b30e-5290824cead6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "85d5518e-af64-4f26-8895-f2e052c1a07e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87609f0-536d-4aee-b126-12e312ab623b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "68f84439-ffa9-4bf5-b4ce-4ce296a3ab5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1812c675-68e8-4008-855b-80a5cd6509b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e7e9730-a358-4289-a9c3-8cc25dd7c819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcc7c78-cf7f-4fa4-87a1-222184f75f88",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219398f5-299a-44f2-b6e6-5c64a9434796",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "53446588-6ac8-4b18-a904-9b8b600b98c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebfc99a9-ae75-4466-baa5-85ff2f2ca4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02f652cb-d920-4580-b9be-38aabfab2b7d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c224c3d2-a565-4597-8ad9-ce8f09c6c9ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f21ade05-1a1d-49f6-9bda-a83b098d2658"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0889801a-776b-4e7b-9713-fc434a9bf4e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89b0ea99-450b-4b76-a299-199dcd21ee4c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac7daaf0-1e70-4942-bda5-8245940c8e2e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "47b39d34-92e8-4b90-82fb-06d057364adc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51163f07-429e-4284-ab1e-ddfc8c524f57",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb63714a-1d71-4e34-b1cc-deb5c82d4054"
            }
          }
        ]
      },
      {
        "id": "8bf1384b-7de8-4182-b5c4-295d830f77e6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1fdd0a5e-6a5c-4d55-ad79-097abb6a97b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cdf6ad7a-6d70-466c-a4e4-4647c7d24811",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "798ec99a-1890-4998-9b83-b97896b1f516",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b0a4c4-1933-4308-a8b5-e0a9116de6da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f330a2-633e-462c-928d-088e8ddf4edf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83db117e-578f-4f8a-a7d5-6f8e2d9fb085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5cf73ef-3eca-4317-977d-8b60077964e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef1eb55-0417-4c3e-b65f-340d58eb4e72",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d14330b-a45a-4c18-86f8-2449085b4cb8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "88c1d962-a300-4c78-a56c-1792cf55e565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be491ca-4631-4461-bbf6-d57cd22dd8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2a4bb72-aa77-409a-bf36-563ea13ad785"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0b5066c-b267-4cf4-8225-148c2786a56d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "056848f6-b468-4588-b341-8ae7df17c7f7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "68129969-4e0a-49a9-bd2d-e86b645ce947",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71cdad2f-9a6d-48e4-b772-473eb692886a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8721105e-c1c4-470a-be04-8df501c0d8b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope",
                "utils(pm).getAccessToken('submit:presentations');",
                ""
              ],
              "_lastExecutionId": "30ce5381-6cc2-45b2-9477-402a1d291452"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "946b987a-3756-40dc-ac90-9729919a6e4d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94fc8a07-92b8-4692-84b9-9700101e803d"
            }
          }
        ]
      },
      {
        "id": "3d3dedad-0819-4d34-a4c2-e6a65db6e1b5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6d4a77a9-2e33-4b27-946d-10b49187e510",
            "name": "Negative Testing",
            "item": [
              {
                "id": "45b9d895-d870-4a79-aee2-22d38bdb88cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "535dab18-1ed4-424e-b925-f3d6e7086339",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbef72ed-eb3d-464f-9393-c0761869d431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c19709d-a1ae-4e60-9c90-7564c6a28f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e373e33-238e-47b3-9416-dabe6cf89542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1dc917d-9016-4b03-aecb-f0d65f125b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3311a9-7d51-4cb4-936e-ea199c6def41",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45decf56-8388-412d-aa15-73cb983faa27",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "532ad89e-1ca8-4cc1-a790-e519e256d040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce77e12-92df-416e-b95e-4f27bb7ce8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1abd5382-d946-48a1-ba08-d33a9ac11876"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bcd8e9c4-6a6e-4fdf-b3ad-1f29423d1fd6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0beb24a6-63ba-4894-b32a-02b59c267d2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8bc458f-d8e9-4379-8fee-2104386b652e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68aaa5e2-5691-45ae-b55b-6257cbb54bab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "109f22bf-33bb-4e36-bf9b-25ceffef081a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope",
                "utils(pm).getAccessToken('prove:presentations');"
              ],
              "_lastExecutionId": "3efc1cbd-db01-49af-b80c-e3687bf8fb7a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d516ce63-94b1-4a4b-9aab-0fb997f617be",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d249d57-6780-4d4f-879b-2420f948b1b8"
            }
          }
        ]
      },
      {
        "id": "7b870421-5d81-491e-8d17-d5913c1b899e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e329cb4c-13a4-4c0b-8435-3904df164a0f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cd2e4c0e-138c-48f2-9ef2-ab00dc7c6d41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d2d3412b-12e4-4e66-a4b4-3721d365ba42",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc6868a-1532-49c8-ae33-edad2f2a3450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69653b14-07f9-4f58-b8d9-dbc9fe57860a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "439ba05b-8f94-486c-b0fa-c71b02f40adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "052281a4-4ed1-425f-b170-14c4a7b89f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb618f5-fb3d-4f67-8d23-6de84f0f5ec5",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbfac5a-e3a0-492a-af2e-6545f72892d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "759f2105-98df-4496-a174-2c67f64184c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31cce83-22f3-488d-a93d-2e06be52f744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dbbe2e36-5718-4ec1-81f1-772253933af8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "137b347d-090f-46aa-a806-cade409610fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59b36951-fc78-4c80-9eee-a616cb70a84a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c0e6f20-ba91-4ee0-bcd5-2b898b6b3394",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb6606c5-2463-4e6f-8823-0b383d424377"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "595b5dc2-b4b4-403e-bfc2-7196acc70992",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope",
                "utils(pm).getAccessToken('verify:presentations');"
              ],
              "_lastExecutionId": "1153de97-f641-42fd-9f84-366e6dc8a53c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae068370-e181-4bc1-987d-72129010e14e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df3f13d6-ed99-49d3-8b3a-c106e08f1e64"
            }
          }
        ]
      },
      {
        "id": "c76e6bcc-8a90-41f1-aa41-e5bb6c169f2b",
        "name": "Presentations - Notify",
        "item": [],
        "event": []
      },
      {
        "id": "b8c29459-3f4b-48d8-ae5b-0490a9b90035",
        "name": "Presentations - Submit",
        "item": [],
        "event": []
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 152,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1193,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 152,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 200,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 152,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 309,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 602,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 591,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 63.63500000000002,
      "responseMin": 9,
      "responseMax": 1075,
      "responseSd": 118.74439681517609,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1664067101858,
      "completed": 1664067121357
    },
    "executions": [
      {
        "id": "bb17734b-2b19-45a8-b661-7d769e6e449c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 152,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bf9746d3-336b-4ba7-bd9b-8329d71641c8",
          "httpRequestId": "ebdfb914-5084-4102-b996-5c7221b84448"
        },
        "item": {
          "id": "bb17734b-2b19-45a8-b661-7d769e6e449c",
          "name": "did_json"
        },
        "response": {
          "id": "7483faca-68e7-4a22-a178-e84870e308c1",
          "status": "OK",
          "code": 200,
          "responseTime": 332,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.service[0].type should be array",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.service[0].type should be array\n   at Object.eval sandbox-script.js:2:1)"
            }
          }
        ]
      },
      {
        "id": "3694440f-3d16-48b2-8ff4-b6fef2171090",
        "cursor": {
          "ref": "bc8d9cbf-caa0-41b6-8d3b-efa233ace73b",
          "length": 152,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "54f00c92-3ab9-4323-b92f-621762079040"
        },
        "item": {
          "id": "3694440f-3d16-48b2-8ff4-b6fef2171090",
          "name": "did:invalid"
        },
        "response": {
          "id": "4a7709d1-6269-452b-b2f0-154bdd68c58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3694440f-3d16-48b2-8ff4-b6fef2171090",
        "cursor": {
          "ref": "bc8d9cbf-caa0-41b6-8d3b-efa233ace73b",
          "length": 152,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "54f00c92-3ab9-4323-b92f-621762079040"
        },
        "item": {
          "id": "3694440f-3d16-48b2-8ff4-b6fef2171090",
          "name": "did:invalid"
        },
        "response": {
          "id": "4a7709d1-6269-452b-b2f0-154bdd68c58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa83db6-38e5-4fa0-a771-f80684920a29",
        "cursor": {
          "ref": "b5ea128d-358e-4cb5-9d5c-55106589ed6a",
          "length": 152,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ded6c187-be28-4305-9207-a147eae3af9a"
        },
        "item": {
          "id": "ffa83db6-38e5-4fa0-a771-f80684920a29",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "27fcf576-f173-4aef-a05c-7811dc747f8e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 84,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a69b40-a325-4766-9e3e-1ba2babafa52",
        "cursor": {
          "ref": "07b06d0e-889a-4e8b-a664-a5ef2b72fbcd",
          "length": 152,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f5906e4e-2bdf-4d80-bc70-53d96b272926"
        },
        "item": {
          "id": "35a69b40-a325-4766-9e3e-1ba2babafa52",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f00b0108-3a30-4c63-88e6-14cafb1feee4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 13,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a86569-13b6-4f3a-8398-884bd9be3389",
        "cursor": {
          "ref": "816f032c-d3bb-441f-a998-37676f6cfc74",
          "length": 152,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e0f2e32d-eba5-492d-9db6-8e032359a03e"
        },
        "item": {
          "id": "e9a86569-13b6-4f3a-8398-884bd9be3389",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "154da6ff-a108-46ae-9a4a-825ff0b01dc0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6938a4ec-5e8b-4813-afda-29fcb66aa437",
        "cursor": {
          "ref": "00e8760f-36aa-43e9-aee2-fa7979eceb00",
          "length": 152,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d02c7186-3bc4-4e4b-82ca-d9c42b0953a2"
        },
        "item": {
          "id": "6938a4ec-5e8b-4813-afda-29fcb66aa437",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "6d636ee2-fd79-4aa8-b306-0c9ad63345b2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 13,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6938a4ec-5e8b-4813-afda-29fcb66aa437",
        "cursor": {
          "ref": "00e8760f-36aa-43e9-aee2-fa7979eceb00",
          "length": 152,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d02c7186-3bc4-4e4b-82ca-d9c42b0953a2"
        },
        "item": {
          "id": "6938a4ec-5e8b-4813-afda-29fcb66aa437",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "6d636ee2-fd79-4aa8-b306-0c9ad63345b2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 13,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5995c76d-4c24-49d6-8d2e-34ccead9d6a5",
        "cursor": {
          "ref": "471512c8-ac41-4230-9e25-bd10f654952e",
          "length": 152,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4ac762eb-a1b5-4afa-b2ce-028de9bf91ee"
        },
        "item": {
          "id": "5995c76d-4c24-49d6-8d2e-34ccead9d6a5",
          "name": "identifiers"
        },
        "response": {
          "id": "93065918-60e6-4d22-9bf5-1772ab442cc5",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 1396
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "Error",
              "index": 1,
              "test": "response validates against schema",
              "message": "schema is invalid: data.properties['didDocument'].properties['service'].items.properties['oneOf'] should be object,boolean, data.properties['didDocument'].properties['service'].items should be array, data.properties['didDocument'].properties['service'].items should match some schema in anyOf",
              "stack": "Error: schema is invalid: data.properties['didDocument'].properties['service'].items.properties['oneOf'] should be object,boolean, data.properties['didDocument'].properties['service'].items should be array, data.properties['didDocument'].properties['service'].items should match some schema in anyOf\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "id": "4fcc30ab-90a1-4d14-b237-1883d22be7a1",
        "cursor": {
          "ref": "5075c0ff-e5d5-44b4-9ba2-3e7bfacd7c78",
          "length": 152,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "531d1c46-697b-42f8-a332-1f5b56c8fd9a"
        },
        "item": {
          "id": "4fcc30ab-90a1-4d14-b237-1883d22be7a1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "000b7708-a0e8-4398-9061-36c7b0512e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcc30ab-90a1-4d14-b237-1883d22be7a1",
        "cursor": {
          "ref": "5075c0ff-e5d5-44b4-9ba2-3e7bfacd7c78",
          "length": 152,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "531d1c46-697b-42f8-a332-1f5b56c8fd9a"
        },
        "item": {
          "id": "4fcc30ab-90a1-4d14-b237-1883d22be7a1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "000b7708-a0e8-4398-9061-36c7b0512e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcc30ab-90a1-4d14-b237-1883d22be7a1",
        "cursor": {
          "ref": "5075c0ff-e5d5-44b4-9ba2-3e7bfacd7c78",
          "length": 152,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "531d1c46-697b-42f8-a332-1f5b56c8fd9a"
        },
        "item": {
          "id": "4fcc30ab-90a1-4d14-b237-1883d22be7a1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "000b7708-a0e8-4398-9061-36c7b0512e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca601015-c4e8-458d-89d7-c85d00d0552b",
        "cursor": {
          "ref": "8a0d8054-1ab3-4776-a9a8-05baf284107e",
          "length": 152,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "781b3318-c3e8-4362-9689-7d64b46e062b"
        },
        "item": {
          "id": "ca601015-c4e8-458d-89d7-c85d00d0552b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "cb2029d9-793c-44a4-866e-0f3b7d1dc967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca601015-c4e8-458d-89d7-c85d00d0552b",
        "cursor": {
          "ref": "8a0d8054-1ab3-4776-a9a8-05baf284107e",
          "length": 152,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "781b3318-c3e8-4362-9689-7d64b46e062b"
        },
        "item": {
          "id": "ca601015-c4e8-458d-89d7-c85d00d0552b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "cb2029d9-793c-44a4-866e-0f3b7d1dc967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61854935-cba8-44a0-be20-8cdca44edb2b",
        "cursor": {
          "ref": "86420656-62e2-4aeb-83b3-8788516556b8",
          "length": 152,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7eebf381-a426-4f33-b5d2-22d213d62665"
        },
        "item": {
          "id": "61854935-cba8-44a0-be20-8cdca44edb2b",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "24ea2289-0dd6-4b7b-a2eb-ff3112a86adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61854935-cba8-44a0-be20-8cdca44edb2b",
        "cursor": {
          "ref": "86420656-62e2-4aeb-83b3-8788516556b8",
          "length": 152,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7eebf381-a426-4f33-b5d2-22d213d62665"
        },
        "item": {
          "id": "61854935-cba8-44a0-be20-8cdca44edb2b",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "24ea2289-0dd6-4b7b-a2eb-ff3112a86adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0006db7f-30e7-411a-b0e8-ff010e015a59",
        "cursor": {
          "ref": "aa97012b-068a-4815-a0fe-33f3eba66e1f",
          "length": 152,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "58e66e0d-17ff-4d19-ac16-e161aa3fe229"
        },
        "item": {
          "id": "0006db7f-30e7-411a-b0e8-ff010e015a59",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "421527be-3a1a-4071-a544-a0472ef54c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0006db7f-30e7-411a-b0e8-ff010e015a59",
        "cursor": {
          "ref": "aa97012b-068a-4815-a0fe-33f3eba66e1f",
          "length": 152,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "58e66e0d-17ff-4d19-ac16-e161aa3fe229"
        },
        "item": {
          "id": "0006db7f-30e7-411a-b0e8-ff010e015a59",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "421527be-3a1a-4071-a544-a0472ef54c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ef7a25-cb4c-495d-9edf-3c2744160116",
        "cursor": {
          "ref": "9169a38d-6c4e-4bc5-b824-93b840ca2993",
          "length": 152,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "205db6c3-7bb5-43e9-9b82-d5c6db647a66"
        },
        "item": {
          "id": "62ef7a25-cb4c-495d-9edf-3c2744160116",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "acb180ab-4d89-41b2-90bd-42e5f165b2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ef7a25-cb4c-495d-9edf-3c2744160116",
        "cursor": {
          "ref": "9169a38d-6c4e-4bc5-b824-93b840ca2993",
          "length": 152,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "205db6c3-7bb5-43e9-9b82-d5c6db647a66"
        },
        "item": {
          "id": "62ef7a25-cb4c-495d-9edf-3c2744160116",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "acb180ab-4d89-41b2-90bd-42e5f165b2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7d3d27-749d-411a-b9a0-e41ddce3d7e0",
        "cursor": {
          "ref": "2984174a-3114-410b-ad9a-0d977c3794d6",
          "length": 152,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "183fde0c-1b47-4ea1-a47c-de8d2f250367"
        },
        "item": {
          "id": "ee7d3d27-749d-411a-b9a0-e41ddce3d7e0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d0504e65-f452-479a-ae25-04f1813715c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7d3d27-749d-411a-b9a0-e41ddce3d7e0",
        "cursor": {
          "ref": "2984174a-3114-410b-ad9a-0d977c3794d6",
          "length": 152,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "183fde0c-1b47-4ea1-a47c-de8d2f250367"
        },
        "item": {
          "id": "ee7d3d27-749d-411a-b9a0-e41ddce3d7e0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d0504e65-f452-479a-ae25-04f1813715c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe16674-c514-4032-ae56-2ff202d00d76",
        "cursor": {
          "ref": "f2305487-a833-4702-b003-b8a0709e47f0",
          "length": 152,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "82e2db3c-f4cf-4c40-9679-107fcf45c860"
        },
        "item": {
          "id": "abe16674-c514-4032-ae56-2ff202d00d76",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "adc0ef04-c356-4422-b0a1-71a486784c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe16674-c514-4032-ae56-2ff202d00d76",
        "cursor": {
          "ref": "f2305487-a833-4702-b003-b8a0709e47f0",
          "length": 152,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "82e2db3c-f4cf-4c40-9679-107fcf45c860"
        },
        "item": {
          "id": "abe16674-c514-4032-ae56-2ff202d00d76",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "adc0ef04-c356-4422-b0a1-71a486784c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa370db-1e15-40af-8f14-a916cc39079c",
        "cursor": {
          "ref": "c1cd22df-d243-4e2d-9ec5-20fe4614d855",
          "length": 152,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1b181b0a-a350-4887-bd65-fc7f54a41f14"
        },
        "item": {
          "id": "cfa370db-1e15-40af-8f14-a916cc39079c",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "26370f2d-e22f-4d4a-8cce-b7971061e548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa370db-1e15-40af-8f14-a916cc39079c",
        "cursor": {
          "ref": "c1cd22df-d243-4e2d-9ec5-20fe4614d855",
          "length": 152,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1b181b0a-a350-4887-bd65-fc7f54a41f14"
        },
        "item": {
          "id": "cfa370db-1e15-40af-8f14-a916cc39079c",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "26370f2d-e22f-4d4a-8cce-b7971061e548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a1173a-24ac-428c-a9f0-6c12defbc718",
        "cursor": {
          "ref": "250a5022-e5e3-4fe5-ae2c-f2436564bde5",
          "length": 152,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "96f26959-7229-46d0-9af7-f5fa861f92c6"
        },
        "item": {
          "id": "41a1173a-24ac-428c-a9f0-6c12defbc718",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a8b6c0a4-d44b-40fa-9abf-1a5d6c246978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a1173a-24ac-428c-a9f0-6c12defbc718",
        "cursor": {
          "ref": "250a5022-e5e3-4fe5-ae2c-f2436564bde5",
          "length": 152,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "96f26959-7229-46d0-9af7-f5fa861f92c6"
        },
        "item": {
          "id": "41a1173a-24ac-428c-a9f0-6c12defbc718",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a8b6c0a4-d44b-40fa-9abf-1a5d6c246978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8411f1-4fc8-4199-a905-d1d1636d9fb0",
        "cursor": {
          "ref": "db00b335-936e-442b-a644-09139f1106c1",
          "length": 152,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "19cdb54c-448e-4406-83e0-6f7d1c90ccf0"
        },
        "item": {
          "id": "7b8411f1-4fc8-4199-a905-d1d1636d9fb0",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "66be3ed8-8810-4794-80b4-f4843e8d2bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8411f1-4fc8-4199-a905-d1d1636d9fb0",
        "cursor": {
          "ref": "db00b335-936e-442b-a644-09139f1106c1",
          "length": 152,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "19cdb54c-448e-4406-83e0-6f7d1c90ccf0"
        },
        "item": {
          "id": "7b8411f1-4fc8-4199-a905-d1d1636d9fb0",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "66be3ed8-8810-4794-80b4-f4843e8d2bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4866b4f-ca57-4521-b3c2-02164fe7ee96",
        "cursor": {
          "ref": "391ffb4e-633b-4307-9e23-0d23ca35047d",
          "length": 152,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b137acc2-295f-4ab6-9f58-29cd1c7e2ba6"
        },
        "item": {
          "id": "d4866b4f-ca57-4521-b3c2-02164fe7ee96",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "677c2897-7ca5-4888-8dee-d3c3fd40a0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4866b4f-ca57-4521-b3c2-02164fe7ee96",
        "cursor": {
          "ref": "391ffb4e-633b-4307-9e23-0d23ca35047d",
          "length": 152,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b137acc2-295f-4ab6-9f58-29cd1c7e2ba6"
        },
        "item": {
          "id": "d4866b4f-ca57-4521-b3c2-02164fe7ee96",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "677c2897-7ca5-4888-8dee-d3c3fd40a0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec8b226-6b4d-4b44-beb0-33a7bd02b71a",
        "cursor": {
          "ref": "82448c6c-e10b-4437-aebc-5f75d02ecc01",
          "length": 152,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0ea7cafb-44bb-44a7-a103-5c62a18a2cf5"
        },
        "item": {
          "id": "aec8b226-6b4d-4b44-beb0-33a7bd02b71a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fde557db-e62d-432e-a419-6c50244b01e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1075,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec8b226-6b4d-4b44-beb0-33a7bd02b71a",
        "cursor": {
          "ref": "82448c6c-e10b-4437-aebc-5f75d02ecc01",
          "length": 152,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0ea7cafb-44bb-44a7-a103-5c62a18a2cf5"
        },
        "item": {
          "id": "aec8b226-6b4d-4b44-beb0-33a7bd02b71a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fde557db-e62d-432e-a419-6c50244b01e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1075,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece7d655-9fbb-41ed-a9d6-ee386f73d908",
        "cursor": {
          "ref": "44925c7c-51f3-477b-ad21-419def56e470",
          "length": 152,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "00c5d4a9-e244-4800-a6a2-ff21f1aa547f"
        },
        "item": {
          "id": "ece7d655-9fbb-41ed-a9d6-ee386f73d908",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "424f7f17-8602-4a54-8a3d-de1b9c137066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece7d655-9fbb-41ed-a9d6-ee386f73d908",
        "cursor": {
          "ref": "44925c7c-51f3-477b-ad21-419def56e470",
          "length": 152,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "00c5d4a9-e244-4800-a6a2-ff21f1aa547f"
        },
        "item": {
          "id": "ece7d655-9fbb-41ed-a9d6-ee386f73d908",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "424f7f17-8602-4a54-8a3d-de1b9c137066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783e2090-f190-43cd-a53f-50897c100602",
        "cursor": {
          "ref": "e6492eed-ea6f-441d-8e84-1c7478539e30",
          "length": 152,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0705d990-bf85-4ee4-bf94-b72426c6a8cb"
        },
        "item": {
          "id": "783e2090-f190-43cd-a53f-50897c100602",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "37d01c87-77ea-4ebf-ba83-448428b7952b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783e2090-f190-43cd-a53f-50897c100602",
        "cursor": {
          "ref": "e6492eed-ea6f-441d-8e84-1c7478539e30",
          "length": 152,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0705d990-bf85-4ee4-bf94-b72426c6a8cb"
        },
        "item": {
          "id": "783e2090-f190-43cd-a53f-50897c100602",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "37d01c87-77ea-4ebf-ba83-448428b7952b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822be409-e1b8-4d77-a37a-58cc91b764e8",
        "cursor": {
          "ref": "fd196b7f-389b-4ea5-94b5-456a34d181c2",
          "length": 152,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "063b432b-7d04-4981-ba07-e3d3180765b9"
        },
        "item": {
          "id": "822be409-e1b8-4d77-a37a-58cc91b764e8",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "aea7939c-2db4-42ac-a2fa-bfd172fad52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822be409-e1b8-4d77-a37a-58cc91b764e8",
        "cursor": {
          "ref": "fd196b7f-389b-4ea5-94b5-456a34d181c2",
          "length": 152,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "063b432b-7d04-4981-ba07-e3d3180765b9"
        },
        "item": {
          "id": "822be409-e1b8-4d77-a37a-58cc91b764e8",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "aea7939c-2db4-42ac-a2fa-bfd172fad52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fac2c3-9ad9-47ad-9ad4-b3b64554f85a",
        "cursor": {
          "ref": "9d448bd3-6032-46db-9889-6dfb66de9902",
          "length": 152,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0f08ea60-ac69-467f-9f32-c1f3a213a88b"
        },
        "item": {
          "id": "34fac2c3-9ad9-47ad-9ad4-b3b64554f85a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ce91925e-d1e7-4184-9a67-7cd4f03f48a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fac2c3-9ad9-47ad-9ad4-b3b64554f85a",
        "cursor": {
          "ref": "9d448bd3-6032-46db-9889-6dfb66de9902",
          "length": 152,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0f08ea60-ac69-467f-9f32-c1f3a213a88b"
        },
        "item": {
          "id": "34fac2c3-9ad9-47ad-9ad4-b3b64554f85a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ce91925e-d1e7-4184-9a67-7cd4f03f48a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d463dc65-9f3e-4cc8-85ff-8adc60ba3260",
        "cursor": {
          "ref": "02e8e548-a6d0-4a91-bbbd-c8ca0c9e075e",
          "length": 152,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6b07cf89-8b3b-4f57-83d9-eb99d3bdafb3"
        },
        "item": {
          "id": "d463dc65-9f3e-4cc8-85ff-8adc60ba3260",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a23b5a84-d2ab-4054-a81e-400ffabe9ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d463dc65-9f3e-4cc8-85ff-8adc60ba3260",
        "cursor": {
          "ref": "02e8e548-a6d0-4a91-bbbd-c8ca0c9e075e",
          "length": 152,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6b07cf89-8b3b-4f57-83d9-eb99d3bdafb3"
        },
        "item": {
          "id": "d463dc65-9f3e-4cc8-85ff-8adc60ba3260",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a23b5a84-d2ab-4054-a81e-400ffabe9ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9149c52f-213c-4994-8f12-fbded39297d1",
        "cursor": {
          "ref": "4170a4de-7f6f-4f21-ba4d-df14b9af50f2",
          "length": 152,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6139dc1e-e32f-4471-8ee2-7ae2d4cb9471"
        },
        "item": {
          "id": "9149c52f-213c-4994-8f12-fbded39297d1",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "a59a9bc7-030d-48ce-b809-ac4ff5607a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9149c52f-213c-4994-8f12-fbded39297d1",
        "cursor": {
          "ref": "4170a4de-7f6f-4f21-ba4d-df14b9af50f2",
          "length": 152,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6139dc1e-e32f-4471-8ee2-7ae2d4cb9471"
        },
        "item": {
          "id": "9149c52f-213c-4994-8f12-fbded39297d1",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "a59a9bc7-030d-48ce-b809-ac4ff5607a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7154dfd1-0a68-4be7-ba43-f57b83686e04",
        "cursor": {
          "ref": "c318e12d-6253-4d15-82ec-b5ec0cd448ad",
          "length": 152,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "036294d1-225b-458b-80f3-69a9daf0c845"
        },
        "item": {
          "id": "7154dfd1-0a68-4be7-ba43-f57b83686e04",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "cc7fd096-7b73-4f4a-8948-2e67891b445d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7154dfd1-0a68-4be7-ba43-f57b83686e04",
        "cursor": {
          "ref": "c318e12d-6253-4d15-82ec-b5ec0cd448ad",
          "length": 152,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "036294d1-225b-458b-80f3-69a9daf0c845"
        },
        "item": {
          "id": "7154dfd1-0a68-4be7-ba43-f57b83686e04",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "cc7fd096-7b73-4f4a-8948-2e67891b445d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd62e907-5e21-4cfe-8a77-7fcbae4d612a",
        "cursor": {
          "ref": "b33ccf5e-19ca-46ad-be12-7c6d4af693c4",
          "length": 152,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fb5b6566-ce80-4d0b-9eda-af17b33cd471"
        },
        "item": {
          "id": "fd62e907-5e21-4cfe-8a77-7fcbae4d612a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b33f6444-0ceb-4950-993e-9ca6af7a0156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd62e907-5e21-4cfe-8a77-7fcbae4d612a",
        "cursor": {
          "ref": "b33ccf5e-19ca-46ad-be12-7c6d4af693c4",
          "length": 152,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fb5b6566-ce80-4d0b-9eda-af17b33cd471"
        },
        "item": {
          "id": "fd62e907-5e21-4cfe-8a77-7fcbae4d612a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b33f6444-0ceb-4950-993e-9ca6af7a0156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fbd8d7-aceb-4c25-9d7c-12d0eb87658e",
        "cursor": {
          "ref": "324c6867-9b06-41d1-8e65-f11f8ea34bed",
          "length": 152,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d92b2d92-e82f-4a0f-912b-efcbfd6817ca"
        },
        "item": {
          "id": "e7fbd8d7-aceb-4c25-9d7c-12d0eb87658e",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "62ab8004-19ec-4edd-a6b2-ea7a2abcaea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fbd8d7-aceb-4c25-9d7c-12d0eb87658e",
        "cursor": {
          "ref": "324c6867-9b06-41d1-8e65-f11f8ea34bed",
          "length": 152,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d92b2d92-e82f-4a0f-912b-efcbfd6817ca"
        },
        "item": {
          "id": "e7fbd8d7-aceb-4c25-9d7c-12d0eb87658e",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "62ab8004-19ec-4edd-a6b2-ea7a2abcaea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23138497-bc58-48f7-9909-435772cbe08c",
        "cursor": {
          "ref": "0b84c698-3bdf-42b3-a9d0-365035603526",
          "length": 152,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ae896ef0-d848-4479-8b45-26b328b2c1b3"
        },
        "item": {
          "id": "23138497-bc58-48f7-9909-435772cbe08c",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "502866ac-a909-4674-aa5b-3140a6ad7d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23138497-bc58-48f7-9909-435772cbe08c",
        "cursor": {
          "ref": "0b84c698-3bdf-42b3-a9d0-365035603526",
          "length": 152,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ae896ef0-d848-4479-8b45-26b328b2c1b3"
        },
        "item": {
          "id": "23138497-bc58-48f7-9909-435772cbe08c",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "502866ac-a909-4674-aa5b-3140a6ad7d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92304df-9d52-4417-9ec6-74844d18f687",
        "cursor": {
          "ref": "ea868720-d5ff-4601-8a1b-7afb9fb09899",
          "length": 152,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "19f04b46-ed12-4e28-922d-5efa28214850"
        },
        "item": {
          "id": "b92304df-9d52-4417-9ec6-74844d18f687",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3160b037-4286-46b7-92c2-705a1bdefc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92304df-9d52-4417-9ec6-74844d18f687",
        "cursor": {
          "ref": "ea868720-d5ff-4601-8a1b-7afb9fb09899",
          "length": 152,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "19f04b46-ed12-4e28-922d-5efa28214850"
        },
        "item": {
          "id": "b92304df-9d52-4417-9ec6-74844d18f687",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3160b037-4286-46b7-92c2-705a1bdefc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73ec418-3a79-4d2e-a718-4b676e6f81ed",
        "cursor": {
          "ref": "5b6bec74-53f2-44b0-9f7e-7abad52b7c97",
          "length": 152,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a7141d6a-6a1b-47f1-ab36-04df4c364c18"
        },
        "item": {
          "id": "d73ec418-3a79-4d2e-a718-4b676e6f81ed",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "13aa1f18-3053-4ae6-bfe4-bfde933e56e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73ec418-3a79-4d2e-a718-4b676e6f81ed",
        "cursor": {
          "ref": "5b6bec74-53f2-44b0-9f7e-7abad52b7c97",
          "length": 152,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a7141d6a-6a1b-47f1-ab36-04df4c364c18"
        },
        "item": {
          "id": "d73ec418-3a79-4d2e-a718-4b676e6f81ed",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "13aa1f18-3053-4ae6-bfe4-bfde933e56e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ecfc58e-ce0d-4ac0-b89b-4bdad9a73ff5",
        "cursor": {
          "ref": "8839ad14-5c31-4e41-8567-4853d9e819c0",
          "length": 152,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "769742bc-b97f-43d0-a54e-558a0bbbc6d9"
        },
        "item": {
          "id": "6ecfc58e-ce0d-4ac0-b89b-4bdad9a73ff5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "be6d32ae-d436-4177-9ad1-1c66fb01bc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ecfc58e-ce0d-4ac0-b89b-4bdad9a73ff5",
        "cursor": {
          "ref": "8839ad14-5c31-4e41-8567-4853d9e819c0",
          "length": 152,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "769742bc-b97f-43d0-a54e-558a0bbbc6d9"
        },
        "item": {
          "id": "6ecfc58e-ce0d-4ac0-b89b-4bdad9a73ff5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "be6d32ae-d436-4177-9ad1-1c66fb01bc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6b8455-8340-49b2-a6fa-854a1006c766",
        "cursor": {
          "ref": "0d5f20eb-b399-48c1-ab3a-07c91986293d",
          "length": 152,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a6e13a77-4c67-4c1d-a584-61d66a46fb04"
        },
        "item": {
          "id": "3f6b8455-8340-49b2-a6fa-854a1006c766",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "cee2dd59-9fb5-4951-afab-6e8c14af8bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6b8455-8340-49b2-a6fa-854a1006c766",
        "cursor": {
          "ref": "0d5f20eb-b399-48c1-ab3a-07c91986293d",
          "length": 152,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a6e13a77-4c67-4c1d-a584-61d66a46fb04"
        },
        "item": {
          "id": "3f6b8455-8340-49b2-a6fa-854a1006c766",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "cee2dd59-9fb5-4951-afab-6e8c14af8bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28bfa1a-cbca-4b44-9465-32c289bf6970",
        "cursor": {
          "ref": "67447a46-d875-4109-a6f4-f26fc0dc4473",
          "length": 152,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "16590b39-ddb3-4614-b5b5-86aae14e1b92"
        },
        "item": {
          "id": "a28bfa1a-cbca-4b44-9465-32c289bf6970",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "35f89f96-da3f-4f7d-83d0-b36d916195ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28bfa1a-cbca-4b44-9465-32c289bf6970",
        "cursor": {
          "ref": "67447a46-d875-4109-a6f4-f26fc0dc4473",
          "length": 152,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "16590b39-ddb3-4614-b5b5-86aae14e1b92"
        },
        "item": {
          "id": "a28bfa1a-cbca-4b44-9465-32c289bf6970",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "35f89f96-da3f-4f7d-83d0-b36d916195ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25df6a50-d799-4000-b149-6a61d2087673",
        "cursor": {
          "ref": "d61d00be-b30d-472c-a177-8129aeada270",
          "length": 152,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5f48bbf4-3c71-4430-8990-2797dd477b2a"
        },
        "item": {
          "id": "25df6a50-d799-4000-b149-6a61d2087673",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "ef51a069-e251-4351-b3d8-80df2406a995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25df6a50-d799-4000-b149-6a61d2087673",
        "cursor": {
          "ref": "d61d00be-b30d-472c-a177-8129aeada270",
          "length": 152,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5f48bbf4-3c71-4430-8990-2797dd477b2a"
        },
        "item": {
          "id": "25df6a50-d799-4000-b149-6a61d2087673",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "ef51a069-e251-4351-b3d8-80df2406a995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97609b3d-6a82-4009-bfc0-c389f886da57",
        "cursor": {
          "ref": "78269511-c7e4-4ed8-9e14-eef6e0d343c8",
          "length": 152,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1ab94c68-d626-4a40-80b3-00c9055c241c"
        },
        "item": {
          "id": "97609b3d-6a82-4009-bfc0-c389f886da57",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "246fdeb4-a1db-48c6-b21e-bb92118496ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97609b3d-6a82-4009-bfc0-c389f886da57",
        "cursor": {
          "ref": "78269511-c7e4-4ed8-9e14-eef6e0d343c8",
          "length": 152,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1ab94c68-d626-4a40-80b3-00c9055c241c"
        },
        "item": {
          "id": "97609b3d-6a82-4009-bfc0-c389f886da57",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "246fdeb4-a1db-48c6-b21e-bb92118496ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1aaeeff-cd80-4213-bbeb-8d3550ccd3f1",
        "cursor": {
          "ref": "26b091e6-0d0b-4b98-a127-1ee00c942c4a",
          "length": 152,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e47c527c-b3e1-4715-a9cb-42a126202592"
        },
        "item": {
          "id": "a1aaeeff-cd80-4213-bbeb-8d3550ccd3f1",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "d1fc448f-d993-4a6f-8296-f3bc27359293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1aaeeff-cd80-4213-bbeb-8d3550ccd3f1",
        "cursor": {
          "ref": "26b091e6-0d0b-4b98-a127-1ee00c942c4a",
          "length": 152,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e47c527c-b3e1-4715-a9cb-42a126202592"
        },
        "item": {
          "id": "a1aaeeff-cd80-4213-bbeb-8d3550ccd3f1",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "d1fc448f-d993-4a6f-8296-f3bc27359293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399173ff-7f48-457b-af05-518ee27e7aed",
        "cursor": {
          "ref": "ecbf7cb6-b6cc-4563-9384-897fc5356dac",
          "length": 152,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6d6561e1-a4ef-4f51-9e96-f4635125f5ee"
        },
        "item": {
          "id": "399173ff-7f48-457b-af05-518ee27e7aed",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "4c7f8fad-8849-491a-ab2e-766ead8ba1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399173ff-7f48-457b-af05-518ee27e7aed",
        "cursor": {
          "ref": "ecbf7cb6-b6cc-4563-9384-897fc5356dac",
          "length": 152,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6d6561e1-a4ef-4f51-9e96-f4635125f5ee"
        },
        "item": {
          "id": "399173ff-7f48-457b-af05-518ee27e7aed",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "4c7f8fad-8849-491a-ab2e-766ead8ba1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47aac7f3-7f24-4deb-a732-1e1a8e65be53",
        "cursor": {
          "ref": "de0daa18-1af0-45a7-86ff-ff0cdac5d41d",
          "length": 152,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "41c2cdb2-ede2-4962-ba4f-85ee50483418"
        },
        "item": {
          "id": "47aac7f3-7f24-4deb-a732-1e1a8e65be53",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b474422b-eac0-4c55-a486-b4375d9846e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47aac7f3-7f24-4deb-a732-1e1a8e65be53",
        "cursor": {
          "ref": "de0daa18-1af0-45a7-86ff-ff0cdac5d41d",
          "length": 152,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "41c2cdb2-ede2-4962-ba4f-85ee50483418"
        },
        "item": {
          "id": "47aac7f3-7f24-4deb-a732-1e1a8e65be53",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b474422b-eac0-4c55-a486-b4375d9846e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bee2e6-900a-44f7-8d95-2b7b204c9c01",
        "cursor": {
          "ref": "70ab950b-51a0-45f2-ae37-41854c87bf9b",
          "length": 152,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b5413960-6250-463d-a373-0bbae5f2a71d"
        },
        "item": {
          "id": "34bee2e6-900a-44f7-8d95-2b7b204c9c01",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "93950451-109d-4751-ba6b-9ea04a37fe62",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bee2e6-900a-44f7-8d95-2b7b204c9c01",
        "cursor": {
          "ref": "70ab950b-51a0-45f2-ae37-41854c87bf9b",
          "length": 152,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b5413960-6250-463d-a373-0bbae5f2a71d"
        },
        "item": {
          "id": "34bee2e6-900a-44f7-8d95-2b7b204c9c01",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "93950451-109d-4751-ba6b-9ea04a37fe62",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c6782a-d705-4b98-b50a-91bc238417ac",
        "cursor": {
          "ref": "bb11a34a-5ed6-4ab3-b53a-ead599599204",
          "length": 152,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4ff74499-d934-418b-9de3-6cafb419ff41"
        },
        "item": {
          "id": "38c6782a-d705-4b98-b50a-91bc238417ac",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b76965fb-aabd-415c-9b52-939f4ffdd2d8",
          "status": "Created",
          "code": 201,
          "responseTime": 288,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c6782a-d705-4b98-b50a-91bc238417ac",
        "cursor": {
          "ref": "bb11a34a-5ed6-4ab3-b53a-ead599599204",
          "length": 152,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4ff74499-d934-418b-9de3-6cafb419ff41"
        },
        "item": {
          "id": "38c6782a-d705-4b98-b50a-91bc238417ac",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b76965fb-aabd-415c-9b52-939f4ffdd2d8",
          "status": "Created",
          "code": 201,
          "responseTime": 288,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb9228b-1516-4244-9d19-84617118f7b7",
        "cursor": {
          "ref": "9bb7d068-2e15-47e3-90ee-493abe5f2878",
          "length": 152,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4446a689-25af-49ff-a23a-fa0216996e26"
        },
        "item": {
          "id": "bfb9228b-1516-4244-9d19-84617118f7b7",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "8a6ac4d4-e4d9-4d1e-9689-ff3fdac787ca",
          "status": "Created",
          "code": 201,
          "responseTime": 277,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb9228b-1516-4244-9d19-84617118f7b7",
        "cursor": {
          "ref": "9bb7d068-2e15-47e3-90ee-493abe5f2878",
          "length": 152,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4446a689-25af-49ff-a23a-fa0216996e26"
        },
        "item": {
          "id": "bfb9228b-1516-4244-9d19-84617118f7b7",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "8a6ac4d4-e4d9-4d1e-9689-ff3fdac787ca",
          "status": "Created",
          "code": 201,
          "responseTime": 277,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7609f5-bd7e-4b7c-93d1-e1f667f07ab3",
        "cursor": {
          "ref": "4ab7d250-1247-4c0a-a5bd-834818a81e92",
          "length": 152,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e80063e8-e611-4c79-aa80-5da1623875e5"
        },
        "item": {
          "id": "bd7609f5-bd7e-4b7c-93d1-e1f667f07ab3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b58c9c39-699a-424d-999c-ae8f93979844",
          "status": "Created",
          "code": 201,
          "responseTime": 283,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7609f5-bd7e-4b7c-93d1-e1f667f07ab3",
        "cursor": {
          "ref": "4ab7d250-1247-4c0a-a5bd-834818a81e92",
          "length": 152,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e80063e8-e611-4c79-aa80-5da1623875e5"
        },
        "item": {
          "id": "bd7609f5-bd7e-4b7c-93d1-e1f667f07ab3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b58c9c39-699a-424d-999c-ae8f93979844",
          "status": "Created",
          "code": 201,
          "responseTime": 283,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1c7a74-7756-4563-8627-b8e2ee9e5c4d",
        "cursor": {
          "ref": "5b794848-ca26-4abe-ba57-589e1d6e4ffb",
          "length": 152,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c0fa1e0d-93fd-46e8-b9b1-e9189f779f8b"
        },
        "item": {
          "id": "7c1c7a74-7756-4563-8627-b8e2ee9e5c4d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9ce7d5ec-91f0-4199-a363-e65eb9d0bc47",
          "status": "Created",
          "code": 201,
          "responseTime": 263,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1c7a74-7756-4563-8627-b8e2ee9e5c4d",
        "cursor": {
          "ref": "5b794848-ca26-4abe-ba57-589e1d6e4ffb",
          "length": 152,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c0fa1e0d-93fd-46e8-b9b1-e9189f779f8b"
        },
        "item": {
          "id": "7c1c7a74-7756-4563-8627-b8e2ee9e5c4d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9ce7d5ec-91f0-4199-a363-e65eb9d0bc47",
          "status": "Created",
          "code": 201,
          "responseTime": 263,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76a90e7-3dc6-4270-8e96-69c00e6527b9",
        "cursor": {
          "ref": "2ee81560-c396-4d67-97e8-73345d06f96d",
          "length": 152,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d154bb32-8f34-46f4-ab5f-6835c4de8a92"
        },
        "item": {
          "id": "a76a90e7-3dc6-4270-8e96-69c00e6527b9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a5e8be30-2b67-4513-b5ae-709384e2db53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "a76a90e7-3dc6-4270-8e96-69c00e6527b9",
        "cursor": {
          "ref": "2ee81560-c396-4d67-97e8-73345d06f96d",
          "length": 152,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d154bb32-8f34-46f4-ab5f-6835c4de8a92"
        },
        "item": {
          "id": "a76a90e7-3dc6-4270-8e96-69c00e6527b9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a5e8be30-2b67-4513-b5ae-709384e2db53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "a56a8c39-1df3-4529-bbdb-24d8caf5d2ba",
        "cursor": {
          "ref": "1f65408c-d40d-44ef-9553-403c36a912c5",
          "length": 152,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ce75ab1a-5b83-40b8-a474-69eaf32ca640"
        },
        "item": {
          "id": "a56a8c39-1df3-4529-bbdb-24d8caf5d2ba",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2b7f6b7e-cb2e-4813-a6f4-f4f7bf69932c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "a56a8c39-1df3-4529-bbdb-24d8caf5d2ba",
        "cursor": {
          "ref": "1f65408c-d40d-44ef-9553-403c36a912c5",
          "length": 152,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ce75ab1a-5b83-40b8-a474-69eaf32ca640"
        },
        "item": {
          "id": "a56a8c39-1df3-4529-bbdb-24d8caf5d2ba",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2b7f6b7e-cb2e-4813-a6f4-f4f7bf69932c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "6ea2693b-ea6d-4d74-a5cc-88c022990c83",
        "cursor": {
          "ref": "da823b4f-c238-47f8-9178-aef929363153",
          "length": 152,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "305df4c2-ed81-4ceb-b7e3-644f9d45da8f"
        },
        "item": {
          "id": "6ea2693b-ea6d-4d74-a5cc-88c022990c83",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "4728756b-5b97-47ec-b7af-e29c12e06dc3",
          "status": "Created",
          "code": 201,
          "responseTime": 295,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea2693b-ea6d-4d74-a5cc-88c022990c83",
        "cursor": {
          "ref": "da823b4f-c238-47f8-9178-aef929363153",
          "length": 152,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "305df4c2-ed81-4ceb-b7e3-644f9d45da8f"
        },
        "item": {
          "id": "6ea2693b-ea6d-4d74-a5cc-88c022990c83",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "4728756b-5b97-47ec-b7af-e29c12e06dc3",
          "status": "Created",
          "code": 201,
          "responseTime": 295,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc797bbd-5d1b-4e59-bd94-7c16daff3cd0",
        "cursor": {
          "ref": "db5250c6-db4d-4572-b313-dd5e6aafad04",
          "length": 152,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "792b4a5f-e863-455c-87db-bddb1ae9a256"
        },
        "item": {
          "id": "fc797bbd-5d1b-4e59-bd94-7c16daff3cd0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "00bd8e89-77d3-43d8-9d64-398e84ec0c92",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc797bbd-5d1b-4e59-bd94-7c16daff3cd0",
        "cursor": {
          "ref": "db5250c6-db4d-4572-b313-dd5e6aafad04",
          "length": 152,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "792b4a5f-e863-455c-87db-bddb1ae9a256"
        },
        "item": {
          "id": "fc797bbd-5d1b-4e59-bd94-7c16daff3cd0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "00bd8e89-77d3-43d8-9d64-398e84ec0c92",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5aa0ef-b6b5-4486-9fb5-14baeb2fab0d",
        "cursor": {
          "ref": "aab8ea5b-8b60-4091-9b12-04cc0fca44ae",
          "length": 152,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "10997d5a-0c92-475b-8110-9053764457a0"
        },
        "item": {
          "id": "5a5aa0ef-b6b5-4486-9fb5-14baeb2fab0d",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "b57a9f9c-6c83-4dd6-8474-b9e63b78b7f5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a5f6d2-7ba3-433a-bb43-9c04207b6436",
        "cursor": {
          "ref": "467cf868-3d6d-4103-8c30-e4d56d80123c",
          "length": 152,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6637ae72-f10d-4c88-9df4-33879a5d4192"
        },
        "item": {
          "id": "b0a5f6d2-7ba3-433a-bb43-9c04207b6436",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a3daf074-a69e-419a-be88-4551a1f11e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a5f6d2-7ba3-433a-bb43-9c04207b6436",
        "cursor": {
          "ref": "467cf868-3d6d-4103-8c30-e4d56d80123c",
          "length": 152,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6637ae72-f10d-4c88-9df4-33879a5d4192"
        },
        "item": {
          "id": "b0a5f6d2-7ba3-433a-bb43-9c04207b6436",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a3daf074-a69e-419a-be88-4551a1f11e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13914a5-2bc1-4584-a24d-7f654f7ae7e7",
        "cursor": {
          "ref": "7b8d7d98-aa84-4697-9019-43876407e3ea",
          "length": 152,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "89b4e6d9-5bb3-49bf-ac55-462251725e7a"
        },
        "item": {
          "id": "a13914a5-2bc1-4584-a24d-7f654f7ae7e7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "123849f0-af1c-4ee3-ba4e-a05b3f05629d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f982b8b-29e3-4e0b-b658-8b299732f1de",
        "cursor": {
          "ref": "f2dbec80-1a7d-4ea8-b508-fc7c0f7d476b",
          "length": 152,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "966601fb-5531-44a4-9cf2-6cd717eed9bf"
        },
        "item": {
          "id": "5f982b8b-29e3-4e0b-b658-8b299732f1de",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "38f7a06c-b946-4260-b938-7d8cbade8cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255de748-0e96-4010-84a6-a5acf68082ec",
        "cursor": {
          "ref": "3cfd28c9-76d2-4323-88f8-067b76585cd0",
          "length": 152,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9b3aed58-42dc-4ea5-9734-990a10bdebd6"
        },
        "item": {
          "id": "255de748-0e96-4010-84a6-a5acf68082ec",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "526fe5a3-9a4e-443b-8522-86480d18ce6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d93ca5-7b3d-4298-9b12-bb2eccbc2db8",
        "cursor": {
          "ref": "eaefa8cd-5a93-4522-8ea1-f4579faba707",
          "length": 152,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e481ddf2-5ce4-4d6b-9ae0-d1e21c6361dc"
        },
        "item": {
          "id": "29d93ca5-7b3d-4298-9b12-bb2eccbc2db8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "353e405d-eb1d-4a47-8441-07fbc7154da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f591c27-d78f-42ad-ac3e-5ffc7287e996",
        "cursor": {
          "ref": "42afc541-35cd-4efa-91a8-85befb397790",
          "length": 152,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d6e9d86c-d80c-4a20-ab4b-0adf15a713ec"
        },
        "item": {
          "id": "7f591c27-d78f-42ad-ac3e-5ffc7287e996",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d9ddfc77-e48e-4db3-8f04-27c4ca503b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d9c43f-e8f3-4728-9145-3ea266e9f09a",
        "cursor": {
          "ref": "71d1864b-6cc8-4950-98eb-4b81304f8d22",
          "length": 152,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4d0d6abe-8283-45bf-9472-85c5d9fd7754"
        },
        "item": {
          "id": "d0d9c43f-e8f3-4728-9145-3ea266e9f09a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4a4329f4-b3ff-4da1-a9f8-2b3e6d4ef536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099904d1-bbf8-43c3-ba3a-720405a86961",
        "cursor": {
          "ref": "03474565-3c3f-427d-a4a9-3ed976b7591b",
          "length": 152,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f003f1b5-e432-4cfd-8156-dfc9374db3a5"
        },
        "item": {
          "id": "099904d1-bbf8-43c3-ba3a-720405a86961",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "fdca46c4-4add-4721-a6e2-d0e1fb00d2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27451fe-7060-4234-87d4-aca088502549",
        "cursor": {
          "ref": "ff6c8a13-86df-40d3-808d-cf6ae8e55778",
          "length": 152,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9eeb8f65-b11e-4ae8-8ff9-71cf91a57c31"
        },
        "item": {
          "id": "e27451fe-7060-4234-87d4-aca088502549",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2706a206-6636-44f6-872b-f016cc177892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff78d4d4-261f-489d-ab30-6737fb0b17d4",
        "cursor": {
          "ref": "64dad917-79c1-4c0b-9354-272f8888dd57",
          "length": 152,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3f640e81-249d-4bd8-a97a-8970afdbdfa8"
        },
        "item": {
          "id": "ff78d4d4-261f-489d-ab30-6737fb0b17d4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "daa94dc9-cac3-4daf-8007-4ec0427514b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b32494-b9cd-44ec-a1b4-2be37e70c2f6",
        "cursor": {
          "ref": "d5f6a351-afd7-463a-8d66-d80fc960f030",
          "length": 152,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9956f0da-f8e7-45e3-bd87-fb345d1aaf44"
        },
        "item": {
          "id": "80b32494-b9cd-44ec-a1b4-2be37e70c2f6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "76add86e-6223-4b84-8f60-e25ee60918a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e60403-2d66-4452-8bb8-140dca4637c5",
        "cursor": {
          "ref": "5bb683b3-a62b-4a87-9c63-824866f2170b",
          "length": 152,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "863fa57a-90e5-43bc-8aa3-85629e7856d4"
        },
        "item": {
          "id": "c9e60403-2d66-4452-8bb8-140dca4637c5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0ebb8bbc-8d1c-4134-bc5b-a9fc21a3872e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c6799d-8b0a-4cdc-bf88-310af1be0989",
        "cursor": {
          "ref": "6fdc89a5-5da3-434b-afa8-808fa54dba2f",
          "length": 152,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0fd57824-2205-4e49-90c2-e41019a397e1"
        },
        "item": {
          "id": "c0c6799d-8b0a-4cdc-bf88-310af1be0989",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7aba68b7-b4db-4d5d-8c41-4487527cc914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e280ac-bbca-4abc-8471-aa8d3c752c7c",
        "cursor": {
          "ref": "424913f8-0e19-46cf-a9d5-692319bb7820",
          "length": 152,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f73a6eb9-466a-4475-870b-a4635e196433"
        },
        "item": {
          "id": "40e280ac-bbca-4abc-8471-aa8d3c752c7c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "baf0a8db-b335-46e7-bd58-8875ef423499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330c173c-7caa-4263-b605-ec6beb758ade",
        "cursor": {
          "ref": "60db4bc4-c323-460d-907e-d08c6d50d169",
          "length": 152,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "085b1a96-c990-4ceb-bbff-3972960d4bad"
        },
        "item": {
          "id": "330c173c-7caa-4263-b605-ec6beb758ade",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5da9f0d0-09e3-44e1-9be4-d28f6399517c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b6953d-606b-4bb8-956b-f19ddff780c5",
        "cursor": {
          "ref": "af2ac97d-756d-4db8-ba2f-3358a42b093e",
          "length": 152,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9751cc82-9a80-4fd5-a8ac-2f6f279bf1f3"
        },
        "item": {
          "id": "31b6953d-606b-4bb8-956b-f19ddff780c5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "25e52b70-8e86-4b00-aa6e-65df02d0c272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d13c15-3c3d-4e9c-9307-aa54719fad20",
        "cursor": {
          "ref": "be81e3a2-dd46-4722-b1b2-89c9c427be7b",
          "length": 152,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9100a929-f53e-4ba0-9239-6d7ead9eabb9"
        },
        "item": {
          "id": "f6d13c15-3c3d-4e9c-9307-aa54719fad20",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "58f61b19-bb8c-4812-b704-76d2bf001a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93c8506-48fa-41e2-b990-9be7056469c9",
        "cursor": {
          "ref": "c67a489b-cbc8-43ef-a44e-e324a20466ef",
          "length": 152,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "293f175f-0ccc-4093-a1e6-eab1bffda8e8"
        },
        "item": {
          "id": "d93c8506-48fa-41e2-b990-9be7056469c9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "80dab70f-facc-43e8-8d11-5682eb07cc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20e372b-3386-433d-8de3-d89e62377fcc",
        "cursor": {
          "ref": "4fdc8129-15e5-4a2d-ad10-64eadc9b18ef",
          "length": 152,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "af11eb1e-3bf1-4716-90d3-16b06dcf078c"
        },
        "item": {
          "id": "b20e372b-3386-433d-8de3-d89e62377fcc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4000f184-42b8-4bef-ad2a-c289c143bba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca11d3f-df48-43ec-8b25-82d93beeb4aa",
        "cursor": {
          "ref": "b935669a-cf50-49a5-a2ac-0aca291e38cf",
          "length": 152,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "586f2186-e144-4ef3-82fa-a373ccffef3b"
        },
        "item": {
          "id": "1ca11d3f-df48-43ec-8b25-82d93beeb4aa",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0ac0ad36-2811-4f03-9273-bde5a92010e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 179,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b1906b-0e78-4c7f-b29d-bee04dce7115",
        "cursor": {
          "ref": "6f369a16-80cd-46a1-94ef-d1efe5fc7e6f",
          "length": 152,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b6df1428-deee-46a9-8454-17b6e9151abb"
        },
        "item": {
          "id": "21b1906b-0e78-4c7f-b29d-bee04dce7115",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "10bb2b79-c76b-42a2-84ec-d68c68c9ebb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94e4828-4bcb-40be-b05f-653ae1127896",
        "cursor": {
          "ref": "c3042ecd-5d83-4d69-aa52-ca1724aa8196",
          "length": 152,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "33198a8e-6cdd-4801-acaf-ef3a12fd221d"
        },
        "item": {
          "id": "c94e4828-4bcb-40be-b05f-653ae1127896",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1a2bb58b-84a8-4f12-8ec5-056264452210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38798f0-6295-47bc-8fb0-492d1de0211b",
        "cursor": {
          "ref": "37d9febf-3e36-4480-84af-aac12893f12d",
          "length": 152,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cc8c0026-ab76-4e60-a01b-362a8d573b61"
        },
        "item": {
          "id": "d38798f0-6295-47bc-8fb0-492d1de0211b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1eec6e1e-b400-48f8-aa2a-8d187a013e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 185,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6e20cf-1768-4ec6-b92a-89b6ec0cefe6",
        "cursor": {
          "ref": "c938a551-2d89-49df-9a75-dacb2547af9c",
          "length": 152,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "88d55acf-bbd8-42cd-bb6a-49f1929fe10d"
        },
        "item": {
          "id": "3b6e20cf-1768-4ec6-b92a-89b6ec0cefe6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f0237024-2b2c-453d-b64a-6df81c32d857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62db866b-657b-48c2-bf03-091862c4ea12",
        "cursor": {
          "ref": "b0cd3ca7-65b4-4fe9-ab0e-0a91e5f37dc2",
          "length": 152,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0555fc8f-214a-4ee8-8564-71122c75e32e"
        },
        "item": {
          "id": "62db866b-657b-48c2-bf03-091862c4ea12",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "408fb53e-920e-4f08-af21-6828b32d093c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6678576-5100-40ed-b0b7-786f6fc3e998",
        "cursor": {
          "ref": "d8243dd3-5a6d-4992-bb70-e2c3ca141e58",
          "length": 152,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "845d7430-5f57-403c-8d9f-635d136d25a9"
        },
        "item": {
          "id": "b6678576-5100-40ed-b0b7-786f6fc3e998",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fdbf96cd-3c8a-4ae8-b00b-331ba661f3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 181,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a33c03-1189-44bb-9af0-f7591a1463a7",
        "cursor": {
          "ref": "eddd13b9-fd39-4d9e-9088-32af218e6398",
          "length": 152,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cc065e6a-2ede-4a61-8ec0-fcde928e39a8"
        },
        "item": {
          "id": "86a33c03-1189-44bb-9af0-f7591a1463a7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "66dbef26-01a6-40d4-8b4d-554d765f3379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fe40f0-f616-4d9d-8160-a2ae8ac3946e",
        "cursor": {
          "ref": "acbe8c5e-9286-4f35-b8cd-93164ec77282",
          "length": 152,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7602d22e-2e9c-44d7-bf50-bca2d0b21b9f"
        },
        "item": {
          "id": "74fe40f0-f616-4d9d-8160-a2ae8ac3946e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "52dd25f1-b0b6-40d2-abf4-dc0ec9f36bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167fa3c6-c4f4-4c3a-97e8-ab6a50a8328c",
        "cursor": {
          "ref": "29ec3019-a6a5-4008-96df-0a86897489ee",
          "length": 152,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "19a18596-4aad-4ef7-b0d0-4b67258a2aa1"
        },
        "item": {
          "id": "167fa3c6-c4f4-4c3a-97e8-ab6a50a8328c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8ad09f47-bc01-438c-b6e9-249dfc18048c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87210eeb-d92f-41d1-809b-cb6f13a85b31",
        "cursor": {
          "ref": "1b920a6e-4ccb-45ec-bd3b-7a8bb0cabf1c",
          "length": 152,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "43f3d2b7-6d56-430a-aecb-56246accd575"
        },
        "item": {
          "id": "87210eeb-d92f-41d1-809b-cb6f13a85b31",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "441277d8-1b06-4079-bcf8-4b31930b79bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fb147c-a89f-4a94-9eab-b7e749cc8ba4",
        "cursor": {
          "ref": "e237847a-87f1-4ff5-89d9-62cc492024c9",
          "length": 152,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "89729783-c399-47b5-b190-124cff17bb4f"
        },
        "item": {
          "id": "84fb147c-a89f-4a94-9eab-b7e749cc8ba4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "37303a07-e784-4cae-8aa3-413f375f21ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f675037d-590e-4534-bd13-f5d9421444f9",
        "cursor": {
          "ref": "ee3dacb7-134b-46e2-bd7b-c0618f3df288",
          "length": 152,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a4613523-44e9-4f1f-b807-86616b0ed673"
        },
        "item": {
          "id": "f675037d-590e-4534-bd13-f5d9421444f9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "85afc138-a41e-4be4-9eda-f8b6e7d44ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 195,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35fa328-46f5-48dc-a39d-0995f839883f",
        "cursor": {
          "ref": "e5789822-f32c-44fb-807b-fa2def46ee16",
          "length": 152,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "789b4dd6-e7bb-4576-adc9-d1784622f072"
        },
        "item": {
          "id": "d35fa328-46f5-48dc-a39d-0995f839883f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9d456d27-ec93-40f5-87ef-ebf9de48146b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9b0aa0-2218-467c-a1a8-7d761cba0b0b",
        "cursor": {
          "ref": "c0ec44c7-05af-490d-9496-75ba7ef15882",
          "length": 152,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "561a2ca0-5be5-48e4-9475-cf4989e7854f"
        },
        "item": {
          "id": "2f9b0aa0-2218-467c-a1a8-7d761cba0b0b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c421a5f2-db9d-4946-904d-51d63ce2de76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 176,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff4e399-c4f4-47a2-966a-affacda3b141",
        "cursor": {
          "ref": "75275b8a-f26a-4a0d-bac1-c8898aa92216",
          "length": 152,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8b0a003e-a945-4928-896b-03ed4c230027"
        },
        "item": {
          "id": "eff4e399-c4f4-47a2-966a-affacda3b141",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6f9ff80d-643f-4b1c-aee0-5a30af0e3463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f858bb1-d7f8-48e3-9f3a-f50f43fdd9cc",
        "cursor": {
          "ref": "5702d06f-3f08-4c02-9c0b-f23890a2d85d",
          "length": 152,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8f2df172-7687-40c2-9081-55b606648b52"
        },
        "item": {
          "id": "5f858bb1-d7f8-48e3-9f3a-f50f43fdd9cc",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "42b8a958-86c0-4964-8962-4431823d0857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 170,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479b9d81-af7c-47f9-94b4-d1c0a5f6f474",
        "cursor": {
          "ref": "efc659e6-c100-444d-a35d-509f8cb44165",
          "length": 152,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "dfd481d8-ce90-43f3-b702-c779135cf686"
        },
        "item": {
          "id": "479b9d81-af7c-47f9-94b4-d1c0a5f6f474",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5df4812e-82cd-43e6-990a-4ade698e6c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a7725c-8d77-4e14-9cb0-6fae49627dfb",
        "cursor": {
          "ref": "0dd0ba33-a65d-45d3-88eb-2fb872441ddb",
          "length": 152,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ab8c4256-b3f0-40c4-93df-af37a73f820a"
        },
        "item": {
          "id": "b9a7725c-8d77-4e14-9cb0-6fae49627dfb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4bc4094c-6090-4b52-aee4-048992e8428d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1b4ce4-4f8d-4c08-8174-5da8d62eb273",
        "cursor": {
          "ref": "0ff3a079-cf46-421a-9f31-cd0c58237085",
          "length": 152,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8f39e5e9-fee2-404c-825d-c1320e522296"
        },
        "item": {
          "id": "0e1b4ce4-4f8d-4c08-8174-5da8d62eb273",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "778a867c-5d6f-4ab5-9035-350c63723c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6acd725-c000-4871-b79e-0890b8b717dc",
        "cursor": {
          "ref": "2ace7465-f295-42d5-82e4-ccf05a0de246",
          "length": 152,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "381b9c55-7c3e-44ae-bca0-1a1094d8f2a3"
        },
        "item": {
          "id": "d6acd725-c000-4871-b79e-0890b8b717dc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d7466bd2-6a65-49fe-902b-3b2f2b119b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b37239-6cb5-4c4d-ae35-a06b2cb3995f",
        "cursor": {
          "ref": "bbd52740-df6f-4b95-8e60-faf8b4b78781",
          "length": 152,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5db188d9-f7ce-4426-b27b-668fc761123a"
        },
        "item": {
          "id": "c9b37239-6cb5-4c4d-ae35-a06b2cb3995f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7d8dcb97-ae33-4e9f-837b-243024d258cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 179,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957661ff-09e3-4207-ba93-b4100f68a3c2",
        "cursor": {
          "ref": "da5ea4ce-1c1a-47b9-89a0-766131370751",
          "length": 152,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "58e05325-d449-4967-bb31-ea42ca873677"
        },
        "item": {
          "id": "957661ff-09e3-4207-ba93-b4100f68a3c2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bb5ae13d-f153-461f-b7c8-927aae07cfab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 176,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13934e2f-47a4-494f-abd5-96582d1fc558",
        "cursor": {
          "ref": "f993d4bf-f484-4fe8-b78d-c362c013ddc5",
          "length": 152,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "282157e9-33a7-466f-903a-ac31e5e97b2b"
        },
        "item": {
          "id": "13934e2f-47a4-494f-abd5-96582d1fc558",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5038b264-7e29-43ea-bed8-c2d0bbb0b950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b697dd1-ada1-4520-8152-1a42f10c3cb4",
        "cursor": {
          "ref": "fecdae42-11c4-433a-a6f1-0596ebf1678e",
          "length": 152,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "df78be10-3b2b-4348-a12f-5112c4c243a4"
        },
        "item": {
          "id": "5b697dd1-ada1-4520-8152-1a42f10c3cb4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "84cfec5f-6415-46cc-ad27-74bd9eec9615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 182,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e26f5b5-e95f-418a-8964-6d926fc32674",
        "cursor": {
          "ref": "b8cffa85-436c-4956-8cc6-5ab781da84b5",
          "length": 152,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2c4ccc37-44ca-43e7-b4f7-7169ebfe2318"
        },
        "item": {
          "id": "4e26f5b5-e95f-418a-8964-6d926fc32674",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "92b45832-305e-417c-a549-11ae55b348c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 184,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0156eb93-2012-49e3-9760-92751cf9a48d",
        "cursor": {
          "ref": "1b01d1bd-150c-4707-941c-a53dc216b33e",
          "length": 152,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "aa54eafc-1d55-498b-9266-2fcee7ddb531"
        },
        "item": {
          "id": "0156eb93-2012-49e3-9760-92751cf9a48d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "28dd1272-1a1a-4544-921c-10aaaddebdff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a9efbe-04cf-40ec-833f-69bd694c896b",
        "cursor": {
          "ref": "6341506a-6c55-4d0b-9bba-0ad85706642b",
          "length": 152,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c77383f2-db34-415f-a4ca-bd2fb541db35"
        },
        "item": {
          "id": "b9a9efbe-04cf-40ec-833f-69bd694c896b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8ba780e1-e76c-47c1-88e6-e18a982b8690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 177,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955cf296-5137-4476-b9ce-cf781b87a99d",
        "cursor": {
          "ref": "c27bb03c-8b89-4d63-9c48-13dde1d90643",
          "length": 152,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3241cca3-da6c-4c2c-af2c-5924cdc7c0dc"
        },
        "item": {
          "id": "955cf296-5137-4476-b9ce-cf781b87a99d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "07f3c3f3-0ef5-45a2-91c5-1502d62ca38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 171,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c0ac88-d64a-46b1-ba19-1aae15ccf0ee",
        "cursor": {
          "ref": "7da742db-308a-496f-ad87-4f6471b04ef0",
          "length": 152,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "68fbdbe2-a292-48e1-b917-5d8271c6842c"
        },
        "item": {
          "id": "82c0ac88-d64a-46b1-ba19-1aae15ccf0ee",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b89e1db1-8823-40df-902b-69980dd980de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 168,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b63275-fae7-4f7a-b405-6e3f1cd86ed2",
        "cursor": {
          "ref": "1a116aef-fee8-4844-9502-89e0bf0b13cf",
          "length": 152,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ad98b8dd-e868-4ba0-adce-ac25eb617bf2"
        },
        "item": {
          "id": "54b63275-fae7-4f7a-b405-6e3f1cd86ed2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a33ec53b-6bc5-40fd-8853-620ad47f4d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26891cc-851d-4e28-a157-68071f12199e",
        "cursor": {
          "ref": "ad9f3204-b0eb-4521-bfdc-593f7c2946b4",
          "length": 152,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f37833d9-16ee-4809-82dc-ce01877f9bf1"
        },
        "item": {
          "id": "f26891cc-851d-4e28-a157-68071f12199e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "cf3d253d-e01d-4971-8788-2fbd8e28cc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 182,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cbd89e-ffef-4d93-9fa5-521f9c543b68",
        "cursor": {
          "ref": "30c81e99-2496-4bde-9c81-44b47ed1cad8",
          "length": 152,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5f35d1aa-02ff-42ac-99e1-9e53c1479e7f"
        },
        "item": {
          "id": "b8cbd89e-ffef-4d93-9fa5-521f9c543b68",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e129e3b3-fba4-485d-8717-061f6f06791b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c6457b-ddd6-4813-ac3e-51db5edf7dbf",
        "cursor": {
          "ref": "f80c3c55-53cb-4f6b-8957-0267064f0482",
          "length": 152,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "968b3c16-a1ef-4ce1-b602-40fd88ba3394"
        },
        "item": {
          "id": "b4c6457b-ddd6-4813-ac3e-51db5edf7dbf",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0764a1e6-0df4-4446-8d85-e0ab8dd837d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0c0850-a5e1-4309-a7d5-1133a9000fe7",
        "cursor": {
          "ref": "1fa677e1-2968-4a02-ac5e-494f6f6695c4",
          "length": 152,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5e5ef89a-04ce-410c-8732-2d584539f658"
        },
        "item": {
          "id": "fe0c0850-a5e1-4309-a7d5-1133a9000fe7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "15ac15bd-6c55-48b7-8609-bcad8bcef407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09670f4d-3e1d-4c8e-a912-8578da83c06c",
        "cursor": {
          "ref": "3d47e786-9c8e-4d06-aca0-81255792de78",
          "length": 152,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "25a59ddd-35ca-4570-98ac-b00ec131900c"
        },
        "item": {
          "id": "09670f4d-3e1d-4c8e-a912-8578da83c06c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ce2f5abd-2d84-4add-b527-bd205270f1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c010291-3207-45ce-959c-79168b1761cf",
        "cursor": {
          "ref": "76f10afe-6e26-44fa-8372-fd00ff8e0707",
          "length": 152,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2496080d-d519-4a42-8d4a-c950b68d11f1"
        },
        "item": {
          "id": "1c010291-3207-45ce-959c-79168b1761cf",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5ab39030-eb1d-4b36-91e1-6e9ae936897b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cccd8005-029c-49ed-970d-54d50b10bd77",
        "cursor": {
          "ref": "156106af-7661-4dc6-97d8-e042813a6c7a",
          "length": 152,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1fc375fd-1c00-444e-8be3-f937edd0a83b"
        },
        "item": {
          "id": "cccd8005-029c-49ed-970d-54d50b10bd77",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ff2a9013-3041-41c4-be9e-41f1ba6133fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d761886-1681-4d68-9d95-1aaccc1a6a16",
        "cursor": {
          "ref": "f05c0bea-4bf3-4aee-8a29-d310be503fc8",
          "length": 152,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "67e778b9-d2fe-4452-98fb-64cf3dc17ece"
        },
        "item": {
          "id": "2d761886-1681-4d68-9d95-1aaccc1a6a16",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "211e14fd-9757-40bd-be71-329d515326aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33ff748-f516-43db-9ccd-3e6e9fa7ec5a",
        "cursor": {
          "ref": "0e925a61-2159-45b0-8d09-008f0dec77b5",
          "length": 152,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d972971a-6cd0-4938-a806-23ca78eb4d3f"
        },
        "item": {
          "id": "e33ff748-f516-43db-9ccd-3e6e9fa7ec5a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1a994d87-3f84-4717-9938-516a77786943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e230e6d2-d641-4307-a422-a3a05fbb1e36",
        "cursor": {
          "ref": "b4d86d7b-4a2f-4c3b-8d1e-a30b8d3c64cc",
          "length": 152,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "43cd111b-a297-4f72-9265-05a286cf5168"
        },
        "item": {
          "id": "e230e6d2-d641-4307-a422-a3a05fbb1e36",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7ad0fe52-c8ad-48d8-a3b0-8d627997fe80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ae3143-f392-4f86-a73d-737126d72401",
        "cursor": {
          "ref": "31529e92-c1cd-45b1-bdca-1d592d993fcb",
          "length": 152,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9acfe0fe-52e0-454f-9fb3-f583859f5954"
        },
        "item": {
          "id": "74ae3143-f392-4f86-a73d-737126d72401",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e4ff117d-1216-448c-a742-0488050a891e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 182,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be1abeb-5d74-4149-b5aa-ee20642a5382",
        "cursor": {
          "ref": "1fd139f4-0384-4870-85a1-cf4e2ce847dd",
          "length": 152,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3bf8aa9f-65af-449a-bfd4-bdee0c5f0972"
        },
        "item": {
          "id": "9be1abeb-5d74-4149-b5aa-ee20642a5382",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ddfb2a9b-2b26-42f6-8652-fc7cca6873b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2606ab2a-5c46-4ee7-9447-61882a414713",
        "cursor": {
          "ref": "c8a15e3d-331e-44a4-b171-2b345c580143",
          "length": 152,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fa6ecebe-3d9e-4675-b576-e95402c571c2"
        },
        "item": {
          "id": "2606ab2a-5c46-4ee7-9447-61882a414713",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "fb692ef7-9868-4346-a494-2e3802636750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57515a3a-25eb-4f04-a887-b9b852ae831d",
        "cursor": {
          "ref": "a43ab7f7-7d6e-4739-b622-3f03aec6218b",
          "length": 152,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6d9100a2-7a56-4f2d-b3e2-1dca56c39f47"
        },
        "item": {
          "id": "57515a3a-25eb-4f04-a887-b9b852ae831d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c54f6c89-a256-4156-9270-573dfa5b36dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377a69f4-ab92-4219-84af-38186fe3e883",
        "cursor": {
          "ref": "87f7fee8-beb2-4ba7-8678-9a98bde77879",
          "length": 152,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "87f36b4c-f08b-4e47-8a03-d148be6bd1a2"
        },
        "item": {
          "id": "377a69f4-ab92-4219-84af-38186fe3e883",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "68dca8dd-50c5-4b03-b50f-c867312e1f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7028f7d3-bdb1-4f1c-b914-59d4cf7900ae",
        "cursor": {
          "ref": "e254c664-7743-4f59-906c-3adf89e3f470",
          "length": 152,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3e957ed9-3e9b-43f8-9cff-d99edb3d9a07"
        },
        "item": {
          "id": "7028f7d3-bdb1-4f1c-b914-59d4cf7900ae",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "96ee00b8-5aff-40b5-a512-921e1febe8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a407d7-82ad-4378-a205-48c55483150f",
        "cursor": {
          "ref": "cce3994a-aef8-4228-ac17-160ce0fa3a14",
          "length": 152,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e991e0e9-c926-420b-92ac-352e5a5aa19b"
        },
        "item": {
          "id": "f3a407d7-82ad-4378-a205-48c55483150f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e9ec136b-892c-49ad-ac83-f6fe2d49e12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6197155-cd4a-4f52-b60a-097c7827baaa",
        "cursor": {
          "ref": "1cf88b67-f1cd-4f63-85d0-41eee58462ca",
          "length": 152,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c37ee082-cb6b-4e4a-a09d-1e17f83cae9a"
        },
        "item": {
          "id": "a6197155-cd4a-4f52-b60a-097c7827baaa",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6ab7a994-4ed0-43ed-8ab4-86337725facd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad98d32d-437c-4a98-9d03-2d50bb84ab22",
        "cursor": {
          "ref": "a02069fc-64bb-4492-af2b-afd011ffaa91",
          "length": 152,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3797ebcf-3777-4d8d-907e-1fec6f458625"
        },
        "item": {
          "id": "ad98d32d-437c-4a98-9d03-2d50bb84ab22",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "fe34d2f6-877a-44d6-84d8-78e17707e380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd699f1d-d855-4fe8-adba-6a087609b3ed",
        "cursor": {
          "ref": "44e2d154-7398-4e25-b042-38630169ebdf",
          "length": 152,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c3ee8844-ab07-488d-ae56-ce6bd45ce9a9"
        },
        "item": {
          "id": "fd699f1d-d855-4fe8-adba-6a087609b3ed",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1447b6cc-2a41-4784-832a-2ac48fac1d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3dea3d1-50eb-4929-ae59-4e30de97e6db",
        "cursor": {
          "ref": "0eeeb56f-1237-4185-8478-50e0a3e6e78f",
          "length": 152,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b2c1aa71-4bc4-4aa6-90aa-ed5071f4f273"
        },
        "item": {
          "id": "a3dea3d1-50eb-4929-ae59-4e30de97e6db",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d84ff621-2ddb-4603-88c2-733575276976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac56cf5-0e9e-43df-a79c-69a32f0507bd",
        "cursor": {
          "ref": "fc839598-0922-4954-95e0-19765ea9900a",
          "length": 152,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0bfa56dc-a73a-4a8f-8249-50eac52fa11a"
        },
        "item": {
          "id": "cac56cf5-0e9e-43df-a79c-69a32f0507bd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2f021194-7067-4d32-a741-22970c08b548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e41166c-6654-41c3-820a-ce3d578af171",
        "cursor": {
          "ref": "e6fe9187-bbc0-472c-ae06-ddb59d7e52d9",
          "length": 152,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9e19aa2b-b046-4ab5-8b84-97c92ac6aa8f"
        },
        "item": {
          "id": "1e41166c-6654-41c3-820a-ce3d578af171",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f7128737-a912-4780-88ea-36c95509ac56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c228ae-bb1a-4448-916c-c58bad923658",
        "cursor": {
          "ref": "47c21c81-34f0-4aac-b45d-bb7e922bdd60",
          "length": 152,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a8e42918-e413-495b-ba4a-f4ccc12af68b"
        },
        "item": {
          "id": "83c228ae-bb1a-4448-916c-c58bad923658",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8ec2521d-a223-4424-afcd-d58fd5312abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d80b56a-1ab9-4b76-b9c3-68a7f16281de",
        "cursor": {
          "ref": "d65d60cb-8227-421f-b3e9-97e10fcb5968",
          "length": 152,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9a46dc55-e20f-40e8-903d-a8524f2347ce"
        },
        "item": {
          "id": "2d80b56a-1ab9-4b76-b9c3-68a7f16281de",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4ed1e5c9-a77d-4bbd-b5af-54666029ef26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca8cba0-65fd-4bd7-b3e9-17b0400c29a5",
        "cursor": {
          "ref": "d5d1cabc-96b7-410a-a513-0f6cd457093c",
          "length": 152,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "62a32052-83c9-4a50-a224-52039487b7ac"
        },
        "item": {
          "id": "5ca8cba0-65fd-4bd7-b3e9-17b0400c29a5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "920253f3-34d3-4ca8-a8ec-7c5776c964ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c78ba53-fc86-4ec5-ac3b-5aff3fd1562b",
        "cursor": {
          "ref": "df660423-f142-40ca-ae2b-20d54c0be95f",
          "length": 152,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "366c8c17-baf4-4107-ab1d-7b45fb58821b"
        },
        "item": {
          "id": "8c78ba53-fc86-4ec5-ac3b-5aff3fd1562b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1c0eb8b8-7f14-45d4-9e39-3affdb11f527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e8c8ec-f744-4653-af5d-6cca1c1a7b65",
        "cursor": {
          "ref": "2be87c5e-2857-47e1-aa11-fccb9b18e087",
          "length": 152,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f836ce24-ffcd-4317-8eb7-6018adb55a3b"
        },
        "item": {
          "id": "66e8c8ec-f744-4653-af5d-6cca1c1a7b65",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "beadb87e-1e61-40bf-90f9-f4e429304742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6144321f-c20e-4a36-bddf-cf345a0c224e",
        "cursor": {
          "ref": "e89e8490-d376-4efe-bebb-8a4465de45f1",
          "length": 152,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ef46879b-f04b-4426-9236-3537ed1d26fa"
        },
        "item": {
          "id": "6144321f-c20e-4a36-bddf-cf345a0c224e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "21406252-23b7-49e0-8400-a8353cbdef6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15dd180b-9e6a-4e61-a9cf-f3121c8f5cd3",
        "cursor": {
          "ref": "0bb8ad31-b7ce-4642-be11-a9e6f0608650",
          "length": 152,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "cdd036c1-3e09-449d-afb5-b7cc9d9490d2"
        },
        "item": {
          "id": "15dd180b-9e6a-4e61-a9cf-f3121c8f5cd3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e0a1f924-3fd3-404f-83f6-fb909aa7042b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200c1418-00d4-46f2-9619-ce545c5e11fb",
        "cursor": {
          "ref": "79d1ffe5-6356-441e-afbf-c75c949344ee",
          "length": 152,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "302e648b-1f78-41de-a2cd-06c915575c5d"
        },
        "item": {
          "id": "200c1418-00d4-46f2-9619-ce545c5e11fb",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c1f3f53b-a5c2-482e-b8a5-b89f0edf7ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e002f8-4869-40b7-9953-69caf9782c37",
        "cursor": {
          "ref": "c3f88f8c-e917-4749-87cd-ad12d5d6c866",
          "length": 152,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "41e98f3e-1326-4265-bd18-0f91887beb03"
        },
        "item": {
          "id": "51e002f8-4869-40b7-9953-69caf9782c37",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0bcb7410-0c00-481f-8c01-89171c778311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341eca96-1fe4-49e7-814b-3af3c399aedd",
        "cursor": {
          "ref": "f8867660-5b03-4b04-9055-17bc3a4f69d1",
          "length": 152,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "da5ad9a4-9da8-46ed-a8aa-34fd72071b31"
        },
        "item": {
          "id": "341eca96-1fe4-49e7-814b-3af3c399aedd",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "701d3145-95bd-4014-a567-044f1f66a575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2567b12-2bf5-4539-bc7b-2fa5726b48c8",
        "cursor": {
          "ref": "862c6796-3e76-4875-810c-dcc26efedd65",
          "length": 152,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "30d29b87-41d6-4f39-91bb-98e3ba5697bf"
        },
        "item": {
          "id": "d2567b12-2bf5-4539-bc7b-2fa5726b48c8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a56f26aa-2a94-4844-84cb-b59325036fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f8c7e7-099a-4735-8372-e1073f6b7e0e",
        "cursor": {
          "ref": "9e2b24b4-1021-4465-bd15-58594255da32",
          "length": 152,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f5d95468-506f-4dde-9237-a1f08160904f"
        },
        "item": {
          "id": "22f8c7e7-099a-4735-8372-e1073f6b7e0e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5e6e4973-6898-48b8-a78a-8bd3eb1318ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571c9c5f-e285-42c7-afcb-8c2ea828d55f",
        "cursor": {
          "ref": "799e0aed-0571-44b8-bc4e-8b8edc32f6d2",
          "length": 152,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "50ea0689-79d7-47ae-b546-dabec188a5e5"
        },
        "item": {
          "id": "571c9c5f-e285-42c7-afcb-8c2ea828d55f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6be719de-5274-418f-9eec-a9f86e241009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a179a3d-c5b0-4f0b-aa93-4b4d7f88f57d",
        "cursor": {
          "ref": "64d9517c-72a9-4e11-8443-809861894176",
          "length": 152,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8fe2db02-0f22-4759-a04b-dd6f35fd19ae"
        },
        "item": {
          "id": "8a179a3d-c5b0-4f0b-aa93-4b4d7f88f57d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "935fff84-1c00-4241-9803-9d302817505c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207d8432-ebc9-48b4-9723-e9985ad8583a",
        "cursor": {
          "ref": "8a7dbb24-718f-4159-90db-b1cad30d662a",
          "length": 152,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2b15cce1-a107-4533-a051-e4c93aef4044"
        },
        "item": {
          "id": "207d8432-ebc9-48b4-9723-e9985ad8583a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "847148b0-3e6f-4b91-a0e7-5836b284fa3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b996c25-5453-4522-b0e1-e677eaa58f60",
        "cursor": {
          "ref": "720c9635-d8c4-4ea9-a16d-58c95843f6e5",
          "length": 152,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2461bef8-7d9a-4772-89de-8aafa45d08e9"
        },
        "item": {
          "id": "6b996c25-5453-4522-b0e1-e677eaa58f60",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "bc68777f-7014-4485-a2b9-476acbbff06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeba29fa-682c-4bc8-b81c-e201199fb3ac",
        "cursor": {
          "ref": "b29da264-679c-4ede-a5a1-62d4aa94deb4",
          "length": 152,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7d18cbef-cd3e-4e48-952b-1493e80272c9"
        },
        "item": {
          "id": "aeba29fa-682c-4bc8-b81c-e201199fb3ac",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d36e2a94-e39b-4784-b743-e9a2779e1d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcedb0bc-587f-499f-a638-0d21107f2c70",
        "cursor": {
          "ref": "c55af1b0-2ecb-4aa6-81c0-957609babfe2",
          "length": 152,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "cd496883-be28-4d35-be53-bfb44166393f"
        },
        "item": {
          "id": "bcedb0bc-587f-499f-a638-0d21107f2c70",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "edf96bcd-76f4-4418-a9ee-e6246ade5990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553923b5-0150-42bf-bcfe-7d99e1ab8910",
        "cursor": {
          "ref": "c58a859a-8a79-46e0-8b05-ec922a4c1971",
          "length": 152,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "13b7d98b-7d41-4e4d-b052-7eb09b4603e2"
        },
        "item": {
          "id": "553923b5-0150-42bf-bcfe-7d99e1ab8910",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "cf776375-47fc-4166-a871-52d86d2cfd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f329c2-32dc-430b-a180-67e797a69535",
        "cursor": {
          "ref": "111b1493-b4a7-476c-9689-8d3e386f48e2",
          "length": 152,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4ca8fceb-c725-4808-b34c-e023555b0c7f"
        },
        "item": {
          "id": "f5f329c2-32dc-430b-a180-67e797a69535",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0237eb0f-a1e7-4bf8-8524-fb441225607f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d0cd70-a41a-4ee8-b226-cebea9451acc",
        "cursor": {
          "ref": "bf92c5f0-dfd8-441c-a4bb-58fd99aa4d06",
          "length": 152,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6522dab4-8e65-4c44-9c1c-35c5727c157c"
        },
        "item": {
          "id": "56d0cd70-a41a-4ee8-b226-cebea9451acc",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a437652d-deea-41e2-815a-f3eeafd6f09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf00e631-0bd4-482a-9b77-eb42037aad3b",
        "cursor": {
          "ref": "0d0a2c79-4e81-421e-945b-4c6d212ef2c8",
          "length": 152,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e98dbfb6-638b-4c37-9add-3d8f7a3dcaac"
        },
        "item": {
          "id": "bf00e631-0bd4-482a-9b77-eb42037aad3b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2a2c6ca2-b3c2-42b9-ad03-8f91059fcb3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d5518e-af64-4f26-8895-f2e052c1a07e",
        "cursor": {
          "ref": "9f06f14e-3bea-43ad-8206-e08fa3c5fa79",
          "length": 152,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "edbec94b-b7ad-4f26-a61c-a1024e4a5ee7"
        },
        "item": {
          "id": "85d5518e-af64-4f26-8895-f2e052c1a07e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1f634a85-40eb-4038-8f8f-ef2824f1524c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcc7c78-cf7f-4fa4-87a1-222184f75f88",
        "cursor": {
          "ref": "31b66032-21cb-4b4e-8e6e-08b30c0e026a",
          "length": 152,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "973cde90-36af-4887-be85-07a2bf814985"
        },
        "item": {
          "id": "5fcc7c78-cf7f-4fa4-87a1-222184f75f88",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "4649ded9-e626-4baf-bc5d-66240dd8b17c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 12,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798ec99a-1890-4998-9b83-b97896b1f516",
        "cursor": {
          "ref": "f7ec30ca-d973-468a-8fea-e952b31ef52a",
          "length": 152,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c8089c9b-c425-47a9-aa58-73cec6934b53"
        },
        "item": {
          "id": "798ec99a-1890-4998-9b83-b97896b1f516",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7aa0d37e-cc59-4633-b795-e77d6892cb76",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798ec99a-1890-4998-9b83-b97896b1f516",
        "cursor": {
          "ref": "f7ec30ca-d973-468a-8fea-e952b31ef52a",
          "length": 152,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c8089c9b-c425-47a9-aa58-73cec6934b53"
        },
        "item": {
          "id": "798ec99a-1890-4998-9b83-b97896b1f516",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7aa0d37e-cc59-4633-b795-e77d6892cb76",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef1eb55-0417-4c3e-b65f-340d58eb4e72",
        "cursor": {
          "ref": "0b067fc1-0195-4795-bcd6-91c30fbb5f59",
          "length": 152,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "269265d0-915b-4504-949c-fd9b267ace43"
        },
        "item": {
          "id": "8ef1eb55-0417-4c3e-b65f-340d58eb4e72",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "6aeded37-a4ce-40da-828d-b389f10e93e9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 11,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535dab18-1ed4-424e-b925-f3d6e7086339",
        "cursor": {
          "ref": "94444176-25e9-48d5-9c23-a3f5d3c89f28",
          "length": 152,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b99a702c-8bf3-4511-9460-831d20e5d6ea"
        },
        "item": {
          "id": "535dab18-1ed4-424e-b925-f3d6e7086339",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7f16cab7-9674-4dc1-9628-3e778f9e8248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:149)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:149)"
            }
          }
        ]
      },
      {
        "id": "535dab18-1ed4-424e-b925-f3d6e7086339",
        "cursor": {
          "ref": "94444176-25e9-48d5-9c23-a3f5d3c89f28",
          "length": 152,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b99a702c-8bf3-4511-9460-831d20e5d6ea"
        },
        "item": {
          "id": "535dab18-1ed4-424e-b925-f3d6e7086339",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7f16cab7-9674-4dc1-9628-3e778f9e8248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:149)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:149)"
            }
          }
        ]
      },
      {
        "id": "ba3311a9-7d51-4cb4-936e-ea199c6def41",
        "cursor": {
          "ref": "13f779ca-8af1-4034-a196-b3368a073e17",
          "length": 152,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e7d0e80a-2de4-4b4f-bc14-70d72c05df0a"
        },
        "item": {
          "id": "ba3311a9-7d51-4cb4-936e-ea199c6def41",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "29462b67-f7c5-46a3-a5de-b22e418a0c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:150)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:150)"
            }
          }
        ]
      },
      {
        "id": "d2d3412b-12e4-4e66-a4b4-3721d365ba42",
        "cursor": {
          "ref": "f761a358-ae9d-45ae-8006-765e4923ccc7",
          "length": 152,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ffb68674-26e7-4859-9d0e-e994acefddf8"
        },
        "item": {
          "id": "d2d3412b-12e4-4e66-a4b4-3721d365ba42",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "910fbbda-085d-4428-9411-028b2fe72dab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d3412b-12e4-4e66-a4b4-3721d365ba42",
        "cursor": {
          "ref": "f761a358-ae9d-45ae-8006-765e4923ccc7",
          "length": 152,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ffb68674-26e7-4859-9d0e-e994acefddf8"
        },
        "item": {
          "id": "d2d3412b-12e4-4e66-a4b4-3721d365ba42",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "910fbbda-085d-4428-9411-028b2fe72dab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb618f5-fb3d-4f67-8d23-6de84f0f5ec5",
        "cursor": {
          "ref": "8ccc6652-65eb-4709-96cb-a192c8e95e85",
          "length": 152,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "26edbdb7-4705-4770-abb6-dddd4a984b83"
        },
        "item": {
          "id": "0bb618f5-fb3d-4f67-8d23-6de84f0f5ec5",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "d70db41e-d6a2-464e-b53e-8df00969656f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 11,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}