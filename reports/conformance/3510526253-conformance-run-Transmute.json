{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5a1c01f1-f3d5-471a-b4a7-0a4e2f873f67",
        "name": "Clear Cache",
        "item": [
          {
            "id": "77b0f084-651e-45e7-bff2-445a57fb1b87",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "33c26aaf-c861-4abd-9dca-45ceebb38d40",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0a28cae5-c5c6-410e-a501-3faa81d9aa92"
                }
              }
            ]
          },
          {
            "id": "19447d06-b0fd-401a-aaa1-13fdddf4dc8e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "048fb151-f0bd-4a0e-9067-344a3d81b75e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "67c3c91a-45aa-4912-aa03-c0202754575d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "25637ea5-8e69-47b1-ac30-6cd24122cbe1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2a21d489-a4cd-49db-a39a-a48b48eb2e0c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "661f1268-c88c-4b2d-9d85-32212efdfecf",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1373a8de-19fb-4eb4-8469-92cfdcd046f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b26f92a9-8dd5-499d-930c-6dc162563f9a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "88ced308-8fe5-46a3-a791-68eebd91b539",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "129ee9a9-0936-403e-8ac4-94964f105166"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3cdaf6d3-30f7-417c-a905-55964bd1bec5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee318938-5613-4cf7-a302-96cbab2e122a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "beaeda7c-743d-47dc-bef4-81f616eb895e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "74f74f75-f3d5-44f5-b18a-e393843fae14"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31cd0b60-77d8-471d-b6a7-bd4819f3f52a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30a18dc5-668c-48e8-aba5-c22b76d55d01"
            }
          }
        ]
      },
      {
        "id": "081a6e19-1cc5-43b7-88de-ad70b388a289",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ee61d3b8-b955-45c9-80f4-aa9735bc3e7c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "02807ad8-0eac-4e8f-9b26-280a64d65592",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b173b473-111b-4088-9bdf-90bbd4379fd0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d18923-db0d-4dcd-9419-d31d5a4dd572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "373bfae1-8a96-4140-9377-0efd0b74f559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89d7c20-e717-40c4-9b37-ec37acc0b0a9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3be73b0-08aa-4ce7-b477-a9a562695b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b947b363-b505-4c3b-9394-5dbb1d9136a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28779d43-9dbe-478c-acda-55f7e6e7d5af",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940a18d2-c399-4b4e-aa83-6a98a8d2056e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56e4cdc9-f8a8-408d-98cd-7757b1eb1233"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "264458d1-97a9-4da9-86c7-8ebac5cff977",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52280069-8a46-4723-9cfa-17b7fd4ede5b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b018af8e-0758-4d8a-b2cc-8366b1b8618a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "652b141d-5c89-4309-9077-ecc6bf2e791e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea5f753-ded3-44e6-8ed4-3c7d5b080f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b304ca6f-db3f-4666-bcdf-4a07d038e454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37758ef7-f4c5-4b16-a893-9abc75756de6",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a7a470-0dad-4dee-aac7-d7b846eb30fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41a94491-f03c-4869-986e-54fc84cca280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fb1b9b-2dac-4f7e-a22a-ba86bba4c501",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "30415dfa-8e28-48bd-9f24-cc09e98f343b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "894d7525-c8d6-404b-ba30-62400f558dc1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "61678eb3-5758-4cd3-9382-2d2eb5923dcb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5eb20817-fb69-453c-9860-bbfab2dbd6ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b31b839c-0025-4128-a6a9-2373882e816d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94ba6a40-0369-413d-b00a-a8c035e11039",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "8ac36eec-d771-4a36-8695-91a337b55073"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55462be4-3d8b-4465-a28b-4ac7c0ba3090",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89a77d7d-8d1b-43e8-b631-a9a236b8e7f6"
            }
          }
        ]
      },
      {
        "id": "353f3393-2f3f-4788-b980-47c6b3b10167",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d1f6bdb9-e578-4f28-9aee-22e877c3a6d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5387abfc-a4b8-4a12-be49-5963ca5969c4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8ff030f1-7462-49bb-b14e-a38ce82424d4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4100c08e-ca0d-43ff-b9df-714aa7b701b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af2d2cc-1913-4d6d-94a3-af5b4c8cf48b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a8bfe1-a8b5-45b6-8b62-e036f32f1e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1409cc7-6740-4aa8-a875-d478f2cba090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbed8e2e-51be-4a79-9696-14ee9d045b62",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e194fb-7b5f-4e1e-9007-324de7d00352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e0fb4a6-0c2a-4c88-86b0-e1b5605300f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8949edd1-2032-4cfe-88e3-d0860eae389b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59d8de36-391e-434f-bef4-7fa5d276a638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2bdaae-bd79-4320-9869-0dc452fd3ec4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c563493-4fed-494e-a685-6a7464921bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89da014b-f7ca-4f3e-9dc0-9767accb5e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684b4acc-4ed9-4bf5-a977-6242f25fc526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d244d295-968f-4fe6-a57f-be5f2d91db3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fabf23-ac32-4390-a00d-8fb821e98a76",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7f362e-1f5d-4f57-93b5-056c1d6dd27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e18fee02-a228-4148-aa12-a303630591f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77509802-cb4e-4fa9-8569-5329edc00c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1081a1b7-9e52-4c67-9e3e-17309fcd49ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02edeed4-a2bd-4d20-b5de-53a1c165aa08",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbcf721-da58-409e-8643-b6176e006d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a7c9c9-088b-4a5a-9df6-777ea2590ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137a4543-19ed-4cce-ad72-7e9a1b89d853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3967f254-4acb-4c84-8dfa-0d9f50eef841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40fb046-5b35-43e0-b58a-013731825c59",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854471aa-1cd1-432f-a160-02fcd97c3822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3665143-126e-4ad0-a181-0132323e77de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772dc122-1f7c-448f-9bb5-477ea846102d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56912792-4041-4c25-a0b0-1d4dae335827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efcd431-66b3-4e39-969f-392565b0c4a8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21f0843-f0f3-4106-ba38-d0bc352f5163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2cdb1f-bd22-49bc-a822-45b2f908f555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886d1fa8-b839-487b-a7df-320f292d9a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0dd38441-f8d2-45e8-9650-fb2897e3c534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff87ae2-51e0-4954-8575-6839897dc324",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "204968b2-e4ee-4d97-9be0-a417213b2a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c0710a-9afb-45a3-a53d-adb2ba0e928f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9803b9-18c7-4ca0-9dd4-9103e8c8069c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "982b9601-ce88-493a-8f6c-43e2235b267d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c4a0a4-fa48-485e-a431-2b6ca6614ba7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a88851-5b0d-46ce-a84f-6702c7f63942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "691c704e-371c-47a2-ada8-9e9229df709a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6070960c-eb1e-4106-8867-93de488703e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbf5bf9a-4feb-4cec-95f8-8a4126a6445c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea32e96b-3b51-4c88-8b82-c038e581e132",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1dfb86-5f2f-46e1-9df2-1f7046e6b01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e72e3dd-d47a-4b24-8479-e3e02fb17b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d881cd14-ef0b-45e4-8292-aea7b4e85954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "362569a9-8dc0-4ab7-aa01-221d57ed43f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e051933-9e59-40ee-9f42-90bac34ff941",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a72c675-52ac-4685-9da3-a239191d065d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "954e85d8-caff-4c9c-9bc9-a7ef3423f3c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e454b028-b290-40c7-a8b3-5e6b22725f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b98a818-29bb-487f-86eb-d08fc9d4ec02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b756f0-6f74-44b9-acd7-f15d026c0a0a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e641db5-3628-43d3-8344-5cf1d272613b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4b477a-d3fb-4a92-9391-28eb856e1233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff29462-e037-46b5-8f91-171c36873b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "920766e2-13b9-45fa-a64d-0749670d9614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea866cc-7f1c-44e9-a2d8-9cdcf8e12e55",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11dd1935-c5e0-4f9b-bcc5-720de87547dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bccddc24-7d2f-4964-96a1-ec6f58f939d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0cdbf1-8e47-45b3-aa72-6856ac83a81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5be7b3a-33c4-4122-9d41-829e3c099342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30bad4b0-419e-48ea-a48d-8c0f3dd57f7c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7378db50-2911-4584-946a-ae2b1d241b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eee873c-1f6f-4df0-9f94-38f4b2f1fcf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5051246-dba9-417f-8902-f5bc5c1d4812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "962d3b03-9075-45ca-bc1a-efa5b1c644a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a93bdc-57b7-45ab-8cfe-53ec5c56e9a7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0d1cd4-11b2-4cff-b348-8824ed73cb89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff1dcee9-2a7c-4e98-b5b4-36005602e3fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23418fd6-5ed4-476d-b245-01819a092357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d666244-5341-4906-ada3-13394d1c053e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5690710-d050-447e-b265-18ad155e385e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff4f02f-5818-41c1-ae13-a4a4d0e3cd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d15a0b-d541-4193-a65e-6db5c1046781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e825b7f-e24d-46ca-a2ab-021c07bf972a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "506de638-48dd-480d-b948-488c75ab5165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d220191-94b6-472a-a866-0c8032698f30",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c913ecb-ab81-4f39-95a8-4369df8a4d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ef9d6f-1881-4197-9d1a-eb0b4e3f2ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dce455c-a470-4647-aea9-ced0af601259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "784d349a-a342-4630-8e45-ac12beecaf2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be41ed75-bf6e-4aa3-9968-1a54717968a2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe112bd-238e-40cf-8518-51ce1cfeb2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b00ed8-ee86-424e-abe5-885ca82bca55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e1038c-17ad-41b7-89ef-65cef444bded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa813eea-0baa-46d6-acf4-623d8801c09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2a3c0d-5680-48ed-967d-db843af8149f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f02fc9d-40c4-4a48-a992-6cefd79ea79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b87ee39-c54f-427e-9388-b9aba1633642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d047a7-4f01-4ebe-8c1f-2328244eff29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "407dfc0f-e12a-42c6-85ce-74c179bd9301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848f6cfb-573e-46ee-98fa-aed38eea5b47",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfd797a-9478-43bb-b26b-fab80c9d211a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd2bf1b-692b-4817-9d09-31cad6944141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f106ab-1f10-41e6-9ab7-fd6d1c14244d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "040e91f0-2c00-4575-9be8-1c3572e14169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f1b98e-158f-4768-bc69-c2140468b838",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abbfb2e-e981-49db-87f7-c8cbc198f3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aeb50e0-f947-4a9a-9695-a2446208054f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d6b002-be23-4dfb-8343-d7b3389a2282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce24a5c-97ec-422c-bdb4-f7d6415dd177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32344e37-d49e-42fd-b7f6-31d6afc53343",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5709a0ad-0fce-43c5-a8ee-2aae04a5daa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca394fd-1b89-4442-8ca2-b90b704edf71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54f8fdb-1351-4e75-8575-15a9e8561d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f85ab2e9-bf11-4fce-bd36-dd590775d946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9cfed03-7b43-4ff8-b37f-984126fbe0a4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe98bf2-8ca2-4f02-98a7-98c292b049fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40282f22-9695-404c-923b-a5f0b2b62ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3f978d-6f96-4354-98b0-020cd3cecd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd391a9-b1d3-4438-a221-8d78ee0a680c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e37ed2-20cb-428a-8bc9-719fe00126ab",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb72a540-ba85-4dc4-81b1-c94f33adc245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a66b8b-efa2-43f0-bc30-a145d3d9ddf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819bd54b-4eb0-4bbb-8aeb-3f9b113e4ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "efd92380-23c5-482e-bc37-47e27d538c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3220835f-7ab9-4597-9257-1f048bcd0655",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09027f38-0d1d-460f-baf9-e66141d65f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf3a7c9-8ced-4388-9be5-d387bc9d39c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25dc0b80-8f79-437b-af47-503c28c066f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab44e06a-c8d7-4131-85e7-edc7ac7d4a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e677aa-092c-4bf3-9a1c-3fe5ab57a713",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd60f26-76ea-4242-a32b-0f5e452e59d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c18758b2-cb9e-4eb0-b157-b4afdd87310a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ead020-5e7f-45da-8c43-e08eea70d347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c15a8aa-66a7-4958-9ee0-6a43586e1cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c85ccc-9e46-4277-85dd-3d02e64b45f7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d551204b-fbe5-4c02-98d8-6dd4db91bbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d60972-5099-4e72-8200-619c0ae31296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7f853f-31ca-47d1-85a1-6a55d2669bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b32518f2-ae87-4fdb-9d1e-679b47f2d34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ee463c-ee4a-4a0f-af1c-f6a363151ac1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f08f03-23a3-4510-a4a0-27014c34bb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c3b428-dba5-4a69-8af4-20eedf38f9d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba370b9f-72a1-4644-a95a-1a5b0f88ff69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d825b79a-e068-4b68-bb16-8ad307cdcfb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c11d97e-127e-4d5d-ba1e-0ccab367d7b8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e6819b-91f4-43b0-81ff-4525f98f92f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2149876e-d1ad-417a-ae3e-ad5cc072b004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bc1ce0-abf4-45d4-9ddf-d78fb7436b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c73625c-a012-43d5-a86a-ed4ae2b5361c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d9f9db-7257-41d1-95f4-1fef39571e0f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eddd274-1b60-46a4-8c42-31d52cef4b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75194e84-7aba-4461-ad42-14c993a78111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e53bbc6-53b9-4ed0-a4a9-024c8f9ed713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "41d15b9e-11c4-444e-b6ed-67b983dea116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3c06bb-aaa4-439a-b094-f070058066c5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b596901-f586-4378-840c-c597c251d311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c2d984d-d61f-4c15-83e2-93ee60712a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2b7980-bae0-47eb-8a3c-32969d7d2c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc4eeaf-f9af-46c3-a37b-ea4f65d1bd30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471294c5-5ec4-4754-a1a0-dd9bedabab90",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4eb9ee3-56af-4ca8-9753-cbe27c17a8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47951e1-d624-4410-be3d-facf27b66eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ba79eb-0f53-4738-89ff-14428102f944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "abfb8685-720a-4c7e-9bf9-e4f3e7af96bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34566b13-6097-4f50-93ce-443534dc83dd",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70e8163-15e7-428f-83ae-dd7643d3ffd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "530cc8cb-96d0-4f49-9464-431ac3167e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c1c2fc-da69-411d-8dd2-89a20912208e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b28733d8-21cf-40c8-8655-3b13bdea9887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bcc3741-5c61-48ad-949b-daa6e74f0127",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b511855d-7fb8-446f-8f1e-414eceeb9f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe548498-1d58-4bee-bd13-ec4775174e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7db338-3ae7-48b5-8082-4b4c4322b739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d44376e1-2fbc-4573-8dc7-230e7a35207e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1424cc4-a335-4305-b0c5-3126f28ac4ff",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37150e1a-8247-4c44-9862-eef69bcef1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc735f0c-3a64-463c-ba40-02d7ecb930ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964d94bf-4100-426b-85c4-0adc6965b2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "22f45232-39fd-4bcd-b50a-385b5922c569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d030f69-2424-459b-bf9e-ba0cb67c19fa",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230caaf9-b231-47db-98ba-7d9cf4c305c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "323e0eb6-12d5-49c9-b7eb-9d8e9284ee57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59e3b4e-fe25-49b6-ab8b-4864bdbaeab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce0e8f17-d262-4f08-9465-51df28e0a42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ceb0540-b32d-417b-a329-2f83054b9d24",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3e91f5-ab76-48fc-a0c0-7fa7bba27403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe817f63-ba23-40f2-962c-1ef4a91efaae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264e818c-3b09-42d8-9848-7d5fa864d16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cbd60aa-2dff-48f0-96be-3cf03bb833c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b29d52-8ef9-4750-ae4f-4d2c95fc3488",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bcd43e0-d64a-45d1-90a4-787ea57eccb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3731a7cb-4f45-40c2-b3e8-6cf7ca183d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ae7fd4-ca31-4e51-811d-490ed84afcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "18db628e-6e35-4036-92e4-2ca8aad009b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8033941-196a-489e-ada5-f7582b324ab1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d21add-1551-4ed2-a0a9-4dca3748ad2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17876570-2487-4ea5-949a-cc2a8b81991a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab8ff50-99e7-442d-95ff-3e802d7cf242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "543f6fde-9128-4301-a8d7-9b7f514be499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c45075-bd50-4b4d-9be2-c9c6520bf668",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02885b8e-d484-465b-ad36-cf6455d39119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ecea15c-082b-4f50-9181-8387aaba056b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7001fb4-1d20-4192-a52a-6d437ec67541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5be3cdcb-cc63-4918-9bfc-a995663adaca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891a7ebc-2ec8-4516-8abe-1c3546707189",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a7cfe7-9398-4300-b113-b3bf0398e50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae82488-d935-47b4-9a9d-05fc43b39546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8bcfee5-8f7b-4742-925c-7cdd4330ad25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c5a239f-ea3f-438c-85b8-d57a2e13d9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3592e89a-0670-4f83-ae46-d8ce9e98f758",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3977887e-dc29-4baa-8956-b32201fbb42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3ac2e4-62a4-4591-82a4-fac97ca2a99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a896e2e-f1e0-48f6-a0c5-9e64e62aaca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca0480f-3bb8-4d6a-b7b2-dcb6c3fb851c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17164082-3b2c-41cf-8bf7-37d0602c3ae8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce97bc06-7a74-4d0b-a997-0b86df77e042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce87c9d-5649-41f6-a109-31f4338e26b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee99a467-5782-451f-a8aa-b92a0ef7f2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "61ae5927-5cd1-4e7f-aa31-44dc8ffe2613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1827c75c-1cef-4898-bb69-bd33ecc69551",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b230cb8-73cf-4e17-b6ec-f7c974a5aed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "295e833a-679b-451d-9a52-1623acee60ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed950a8-e1a6-4aaa-944c-3e582c2c2cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc6efd65-ada1-4b08-8d6d-f195abae3f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f743dab-958d-4079-9c8b-062769e71dbb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f753afb-36fa-41eb-ad42-e56c1b8fc08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9937ff1-c18b-4a53-9143-e59131a08749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9076a9-de49-4e8c-997a-0a7be0edbc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "783d0d3e-bb4d-49be-8ba4-5a5ec4b9a1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbde8b44-98de-4573-a50d-cc9752e7aea0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34952b67-bab2-4e6c-b4ff-1c8569b4193b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01533916-6a39-4d0b-84be-c3006da32e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131fad9e-6bec-428b-950b-7bdbfd8fd107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "abf2d75e-514d-4b21-b605-50ec5bfba97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608d2d7a-8dc0-4fca-bc2e-5590bb9537d2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d68dce2-cdec-4d3a-8bda-abd5789595fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b97620-500e-4cd3-ae5f-16d32afa694f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc27f32d-89b6-415c-9662-b26dd9346a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea15ee2-6b3a-428d-873e-19c3f7e717f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bcce5fe-c8ee-4449-8e0f-13dd39e55178",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9df6745-36e4-431c-9fc6-3ded419e00b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21238e9c-4847-49aa-a33d-a071ab6a892d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ca5fde-de87-41b7-ac61-8ad83d301c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38e9be98-bd38-4b34-80fd-d1e406d65d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef547505-eb97-4d4c-94be-c2ce37b2d3da",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989bf3b7-8a86-4f9d-a687-a870d2328b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aea85f2-361f-4f31-bd65-5853f6ee38ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43924faf-2091-4ad2-8668-8737f923e0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2387c342-6205-498d-8bc7-b506ad9dc5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198f9520-8f60-4119-8be9-f53c9220480a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffce5d1-c7ba-4ba5-a7c3-2a6c0ef29ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd40163d-697c-4834-9a21-4cbd122fb87d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed71b698-9998-435a-a6e3-68b24e52392d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b746fce8-f2ce-4597-b596-8e74a1e2cc54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c4fb34-c86a-4329-9d7e-a54d19743674",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbcf397b-bf8e-4e28-9724-d97ea7a314de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "781368d3-5023-4949-9fcf-76b199b61075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c510069-94a7-4604-9d96-dc6cbc93798e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e003570-f157-4ad7-ab0d-606059c6a2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24ad2d4-eb7a-46bb-842c-438d2f50c11d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388a7f0b-fe7d-44af-910a-c201f9ff3abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f50130-fd68-4472-9cf0-91f920c49428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01be1c50-a852-4a02-9b40-ccdaff9096c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dfa5253-059a-4d43-a2e0-1c9d36e2332a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50eeb580-fdb1-4a4e-967b-cc960da31aef",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd8e4a4-7532-4f00-b2bd-4153e05c82d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e395ec9-88a7-4e03-89c6-fb2b7684696a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ccb59f-e12c-4d9b-b2e9-6efa1e9780ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d685b8-7fd2-4556-8050-aae4abf79cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b71ea1-6236-4bf8-92ec-585bfe9faf7d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af96253-5ea2-41e3-b520-77d9c1b6006b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ce657b-7312-4b85-bb1e-e1230a020bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448a7c2c-4151-4da4-b1de-e26f05a29afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c569fdc6-d385-407c-b61a-2ca1e34fe837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb43090-bfe7-477f-a824-37cfb64cdfe9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c579abfc-9c22-42e2-b449-bd240552aae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d88c6c-b5fb-49ba-ad2a-368d0b166c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdfe12d1-cf3f-42dc-9510-dbd7d033807b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a2649cc-cce1-4115-bc89-8ddf935771e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71769811-d000-402b-ba05-98e0069aa9e5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6600ee-3c55-4e97-990c-26c8bbcc925b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ea5968-2f80-4585-b23d-e7ac415dba5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3a0a55-1d9e-4f96-a8c5-106268028cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d45d0935-ee7b-4fdb-ba8c-c98047aabbb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48519adc-9a48-42d0-acb8-ef789b76df56",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc433179-3402-41e3-b4d8-17379aa5a7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24d515e-a407-450b-9208-c514105c92f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8918f1b-bb0f-4794-ad6c-2d507251b9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad98cd12-d02a-4553-a92d-a3acdb92b203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677047de-662b-4de3-97f8-1a4d54367f42",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5353281c-1eb4-4b93-a99d-3af7bc174aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31851ef8-ae2e-415d-a656-ac4bdb9af7c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a916df-b5cf-4a1e-ba80-ea882dbba2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f510e7-f7fa-4bd6-bdca-190e625fad26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67300ed0-cba8-4f65-b0c4-23cfb811b631",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d6b26d-f965-4f73-9af3-ed9bd686199e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b95d441-21f4-4ee9-b66d-8881759586b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0a04ea-17f5-4a0e-9cf3-88ccae6aab46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea2f77a-ef4c-48e5-966a-b0b9db710b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d407e8fd-866f-4da0-ae40-0b9db2ca682c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d63887-b366-41c1-a284-afcf41fe6e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea402bb-48cf-424e-a5dc-e39586ca32bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0deaed9c-a85f-41f3-a7a7-54f43e402bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7387004-8155-49ee-9f37-69b1cb83b8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fb203c-addf-45b9-b825-47d8d66e4a0c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef6cc56-7b09-45e5-83a2-0107f9bfaf9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57237306-b5da-4f75-b323-ec5a9ef9a71c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1427775-611b-4f3c-bfb2-4e14cd94a5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ead354f-c729-4220-aeb6-647e4d3a1f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be21825-4946-4353-aa0d-30c1601134fb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0328c40-75b8-4d66-84e0-42a7024422b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "670db11b-6cc7-4f08-b96b-df5ad166567b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9f21db-d5eb-4c42-9e60-537400508871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf3db91a-e44f-4875-93f4-5efa37460632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98b7a08-d246-40f8-8f14-9cb3f17a69c4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fff1742-7f43-48e8-babc-ef3012d3cde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daee657e-889b-440d-9902-46d84314209f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f78aade-95ac-417a-8ed1-734acda38ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "03542dee-ec34-4263-89c7-d9b03ea5c3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b077260a-f42d-46c6-9f6a-756365afe215",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9cbbe3-1355-4e17-88ae-b0d72808d516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0850e0-25f4-406e-864c-084c59ef1321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03b2662-4062-46d2-864a-d18638390037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef71a47f-01f4-4839-b111-d45dfd8110da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f480f466-f08a-4ffd-b8d3-b7dddf3e84db",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb7b341-b448-4704-b839-8f66dcae4110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6418d7d-c26d-4c4f-a44e-52bd7d37fe3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4fd43c2-1152-4152-a8d5-238b82b05e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f051ebef-0823-4669-9a20-c5cf13f8cd0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30c2eaa-4287-4c2a-8053-8f6424de5f0a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b62f0d-7689-41a1-a909-92ad28f8db0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff0722e-7723-4ac5-a192-61adbb542b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c193c3-486a-4130-9340-7f21c4aaf204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e7311ea-26e4-42cc-a3cc-55da6fcc9061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1613ca2d-09d9-4d25-898c-68a7651f3033",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b1e9a9-9534-4fb3-8019-dcbfc0a80234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e755eff-b489-40ee-b15c-038bec394c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27313f8-8b3e-4cd0-a4b9-5ec7d9f98d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "abbeddee-1961-44fa-925e-d0e3f30a6ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb9cf69-0c6f-445d-85dd-3b8269e395fb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f730de-c970-4362-aeef-836bbac45773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90eeb91-a0e7-4add-8481-17067ab167c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2637309-ecbc-4126-8b61-c12d6ee88667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "468b32bb-437e-40ca-afa0-05cb44e02143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2735f85-85c3-47e9-a835-9456d80eaae6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767bf3b1-2ec5-4a50-a791-17b196544750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faca7300-2e11-48fa-a8c7-9afd462a7238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0bc26a4-f27f-4fd8-b35e-13ff4aa92aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "725d1501-5dd7-44d5-a124-b76b1844d4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd47fbf5-e478-4a12-80a2-50d5e8495eb6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f09bd9-b4f4-456b-a4f1-8e2c75ddd0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ddbf8fc-220e-401c-81f5-ffab791cbeb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bcdf36-4a0d-4415-8a94-f01d9de5f8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48479a95-9f3e-4bbe-9c50-c5158464b26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b250cc7a-a378-4665-a381-1173205e3a2a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae55432-e2ce-4d52-98e9-53106179bf25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7032c1-c054-43de-845f-ab3832aaf451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd41a1cb-cd44-4bb9-9fca-14138cc01d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6387a7ce-d7a4-47f3-a4f4-8c56656f33c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe83e4e9-3deb-483c-bffd-80a4af6a9bc3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17aef1c1-4ce1-42b9-9be7-f1d397dd224b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df37266c-e930-4100-ab81-af27bf354473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cc7132-bd71-4cd2-b6f4-669bbafbb4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af975c96-f8d2-453d-ad76-2338de519aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f4d9aa-a72b-4375-9722-88fdc45b0acc",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9b60f2-62c8-4b31-adcf-eba56a85388f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd568a5-34b0-4252-b8ae-7375e6ea27fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc991c3e-4945-484a-85ea-a15d375c6601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09e79329-bf48-44ff-b200-9b523dd32413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c3f568-f0f8-47ff-be0f-1582482943cb",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f97f7e5-cc2a-4299-afc4-4ea01158258c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e342301-4abf-4171-b1de-ebc2cb9dd265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b373ec-ff42-4ed1-8821-a6ec766e61f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "869bf629-b907-44dd-b4f3-b1c28159049f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f368bb0-9b8f-4c5a-9ebc-48ec49bef068",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73dcdbca-3845-4881-8ac9-3c996b3ad93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09697619-3ac4-498e-818e-0d31bdf55e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a200c95a-dad0-404f-9091-ab4207115817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d033e685-6006-4f10-8bb3-9fb92ca68ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e900c94-f9a1-4c78-aaab-aa32450e662d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e90818c-7465-4941-8b9e-a6df0501e871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5415123b-b0b3-4121-96a9-c1286d9f118e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c464466e-c84f-4bc5-bfbb-22156c26ffcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b31d03-1c57-4f1a-806f-81898b685904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2c40f1-c262-4357-8138-edf4fb907a78",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59f67b0-bee2-4e84-80a5-13913171edcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3507a5ff-4460-4132-88eb-d7b896db5710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258aa021-8fb6-4b57-8ee9-7a56e46965dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b31aa4-3471-46dc-9a6d-ec8a1f4a9140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a538fe88-139d-4c0a-922b-4d10c13aa428",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc542018-5b39-45d4-9e91-5e57c6d062b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2f1b55-1bea-417d-891d-02538feed900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36203795-3d87-47e3-a988-acb9887bbb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a1fa116-70b0-47ac-b5f4-89a2c06a0d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a54b24d-2bc1-456a-9358-d38e1ee32e66",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbe0ee3-5b0e-4340-9461-9745cface8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d43ba84-f736-4cf9-bb7f-8ec614cdae41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be374186-7a10-49f9-9674-1106328f0b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "74d2cb59-1a97-401c-a21d-ecff44b497ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32233a5-2f20-4691-b041-404c13d2f5d9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5365082d-b14e-4367-9bce-8a3f8de70c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3744b5-6b6c-490e-a4e6-505729cceddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6bb3eb-3eb0-469d-8378-d1d1aab50764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84d9339d-f887-42e7-b04e-89062ecf32f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d85d1c-5572-451e-9726-cdbb7df1d709",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ae9e24-a9c0-4c31-b2e4-871a888314c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "878b13ee-78b6-426a-a23b-4abfa33e1a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd263b3-6abc-4ff2-a033-83108e00f530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d0892b-b892-4185-92d8-97070fc9f48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd1fbf9-9361-4795-956a-dabf46e0d2f0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b867be5-32b8-4197-802b-07a0b55cba6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e378d1-b561-4bb7-a002-b50c3def7a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884d0ab8-078a-432a-adde-b55aa329bf4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "adf56123-2574-42bc-a27a-bce0bf50fc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80fe81b-3fd9-4235-b2cf-c461691b5dc4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ddc5be-d817-4c69-9df6-c59af3b23c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade9deec-3917-46e7-ad79-d3df87f279e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb16b32f-533c-46f1-8312-8819b86b7640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e06dffce-4dc2-4a2c-bb0d-b394dec09dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eee1ac9-bc0d-444b-8eb2-3d1f0167ddcd",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5371d20b-8853-485d-98b8-de114c9667d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a374c041-3465-4105-a655-85eaff7a72ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f280b911-1a5d-4700-8efd-87f2fb790539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afb2d6b1-fc04-423c-b1d4-c8d38f064a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8bfabaf-2abb-45e2-aee1-0fb0d786c62d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9586afd6-83b7-4c83-9554-feb187a59bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d58d0f-e5f4-4d60-94d9-4848476dff66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82345836-0cbb-483e-879f-9f427fb4bcda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea833bc-e21f-40d6-b5b0-a951028da57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880df1ec-c661-49a7-9b19-f97030bc04ac",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77ce3ce-d00c-4760-b706-037b3e010fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e080f2-d307-4a2c-b7cf-5379981ee163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674fae41-6a50-4a41-af5c-29e79401e2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b606885d-cc71-48df-bfca-cfaa5c854540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb86aab-e5b7-4828-bcd7-f1b2cf3e6367",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ab2b34-fed0-455c-b768-8081040e9145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78be396c-43c1-4262-b9ca-2ef6dcbeb883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925a3115-9b1c-4ed3-9c39-6a9c9ec5d5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eddf645a-28b8-4ebc-8592-46c36b9b6e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0ff25d-e96f-4844-a72b-89ca019d2f3f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1faefa7b-9b58-42e1-8fe5-feee80d5b8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c6d1fdf-1d2e-4eff-b7de-4e947c19eaa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9235292a-a468-485f-97e6-d5d80022d01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f768f50-ec5e-4856-8171-ed0a23250ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fdae55-9d47-46c0-a9ea-d806b5da303f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb66055f-3a03-4c55-a3a1-b22a1a0f167b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca6e17e-3145-44b3-bc0b-b524083b9631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b04837e-0ca7-433d-95c2-c704fd0df549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f82b4822-abc7-45c3-9265-76ac575af49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9624bb6d-31fd-44bf-9cc1-f05d37bdfe26",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0582d02f-6fc9-4289-93a4-0937abb0f8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53afdc17-e99b-46c5-ba6b-1e101385cec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889c4d92-f22d-4570-9628-ebe012cd06ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed1ca45-408f-4fe4-95a0-8b11d01c6e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509d9e68-d41c-4520-b7b0-559ce56ea335",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f926573f-417e-4e65-bfb8-4df00b181031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd14ca8-f0fc-4464-a552-0c92ba96800b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca105763-ff1f-434b-9372-e4f433e90445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d42f07c3-041a-43ce-b6cc-f854c1e309d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3de3960-3072-4748-9e78-e159ae845d4c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0259ab-30fe-4c68-aee1-4ce95a5a07c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ce01d179-e0ed-46fb-ab40-f58d59aedc03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86525d91-1eef-47f9-a11a-e60c5864243d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2673a20d-5add-4cc9-8d39-a8f99dfd8699"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7f6b3819-ba83-4a06-befe-f952346bf124",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dce022de-4fd1-45dd-8521-069a717bab1b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13303496-bb90-43a1-99bb-890a05ec88d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5bcf9ec1-c8bf-4475-9f10-d8f12b2b0121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c860d4-4589-4277-8be1-7cc024510b18",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "77456b26-ed14-49ce-8c5b-66c1877e5fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb51b0b-1924-4b7d-a9c9-938e363b51db",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c9abdd-6b53-46cf-8d90-901ac2b7eebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee684a1f-393d-46d4-b2c0-99fe71174549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab6c9cc-36fa-41b1-a1fc-d5799f409037",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "25defd7b-a78a-4a7b-9d0f-0db78ea2f575"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa031ac7-11b2-4361-9986-8e9348be10ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f0b9d03-53cb-4f92-848d-b8fd3d3580dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f01995f-f54e-40e0-83cc-650b4469e567",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8d0843a-a6e5-42c1-b312-0c73564f6fb1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0bd3e7a8-d542-4d39-9994-8997ae52bae4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3b7bb93c-edab-4005-be27-5c09d92ffa13"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "51f1c105-21a7-4d2c-b72d-47c2f4f3d193",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1eef5126-4dbb-43fd-9497-5727f5f76942"
                }
              }
            ]
          },
          {
            "id": "6734129a-ed5c-4410-8993-95baf42b29f5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "06121fbb-3bae-42f6-9e77-e092210b2fe6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d0452ca-dfd6-4773-8e58-86976b7418f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8dd3a35a-b268-4a53-b09f-ef7e91ea90de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f762904-0ae1-487b-af9c-3322f281d03f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9cfd8365-6211-4a11-a17c-de75d8dfb047"
                    }
                  }
                ]
              },
              {
                "id": "c27d1079-5d12-4f48-adca-0490ef3ed7f5",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ad87808-688b-4db6-8aa8-44c29a9e954c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d72d3602-6b31-417a-b483-2d14e34a49c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a421452-e1d2-45dd-9d84-6def01d40b97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d291493f-6a8b-4665-bc9a-0ae1cc41388d"
                    }
                  }
                ]
              },
              {
                "id": "907b470d-b7b6-4c74-913b-bbb25855ee53",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74821f01-142c-4dcf-b00e-980339b23981",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e1ae4ce-2254-4e62-b82b-7c4fc8830969"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eebf5567-9ffb-4c73-b4d1-a4256885761e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "77efdeff-9703-4179-a5e6-28adc0eb245e"
                    }
                  }
                ]
              },
              {
                "id": "7f0acb65-7f35-4cc6-afc5-d4dc54f4d0bf",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a75a477b-d763-4ef9-8e19-a15a8d0891c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d8374eb-9398-4b94-b22c-32bac31961a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1161c37-3a1f-428c-803c-5ecb7ce40275",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "65be8710-5fe8-48a8-85bf-259869be589f"
                    }
                  }
                ]
              },
              {
                "id": "4060ae82-47a1-48fc-abf9-621c2772b5ea",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3f76c31-1e06-4d6f-8072-315448e88b49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb391651-5673-4c8b-bb15-0e15096bb7c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da5903d3-c36b-4d93-b855-373de2e60d81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3cfc6e1b-6771-4635-8bc7-a58fa632e1e6"
                    }
                  }
                ]
              },
              {
                "id": "72fd57c8-bd33-46f1-90ca-a35a1cdab138",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c45131d1-1e61-4c56-968a-7a55d82e795a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e10a5f7-2e69-4b1e-a208-2185d14eaa8e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98adfc5c-79e8-490e-ae30-f68986c01956",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "04938b53-ed34-4605-8b18-747b21c1cc2e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "992d285b-5283-41e9-a3a6-453da26c77ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce453f44-55ec-42f8-9129-955eee99fbc4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b5b0887c-9689-44e8-b6d6-572a34b7c218",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "62922dca-7037-4def-960a-066a1204ffcd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7dcbd341-f75c-4203-bf91-af5690da9c25",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "efbdca8f-1d8c-4ed9-be92-6cbb6f73dbe9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f81327a-c8d8-49cf-a32b-6a75dca03167",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22fbd57b-8cce-4bb1-82de-f3e750cfddab"
            }
          }
        ]
      },
      {
        "id": "2305a777-cd4a-4f1c-a287-d52a8dd6f7fa",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a297ffc5-9822-479f-bca8-95cacd5ca296",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1926a74e-8206-4c73-b7bf-817b9788d7e9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4e973829-6ccd-44c0-928b-59c0e1d102d1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3a190d-7b9d-40ba-838b-61f31966766e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd5f259-954e-454c-9b7f-39d87f605fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64be4d6a-fa7b-4228-875d-dbeb3f7cf36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0eca363-75b9-486d-98f4-72ab8dc13d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22751505-f9fb-46a9-9531-0d474ec76e08",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470b2837-d1b4-4187-bb2b-4c3aeeeef1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ec75cb-ab37-4900-91d4-a1cd6ed066da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae4671d-9720-47db-b7f8-d8d0b8c61d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e1684ba-e8b2-4b1c-bc28-4a0dea682dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52a1610-9cc3-413f-80dc-147009b93bad",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4590cc10-8cb2-4661-b238-a08415980046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7611ead-823d-4872-a4ea-ac2bf3e578d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0236888-4162-4216-b17a-50c84dce3ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "043a1716-aabc-460a-885e-e4f854574255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665ddfb1-f372-4273-b538-9531c96d6cc7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5911ae8a-7772-4597-89d3-e9e95dd07783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b1001e3-d435-4669-9b6f-05528c43559f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e788c53-b060-44d7-996d-4f4d00b3fe77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f46343c4-ea9f-4d3f-ac6d-410aa9e38683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865b7749-1023-451c-b98a-5983784a54a5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86d92ac-e3e1-49da-afaf-49808f375ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30662acf-1a4f-4708-8518-84f820c23d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868fa7bf-0c3a-49de-88a1-1091b2be491b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd8e0fb4-ae22-438a-9e5c-46e7aea1d39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c44e377-0aec-49f6-8f75-18e6838392c3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11af71ce-138a-4dcf-a876-af466c389111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c163380-f6b3-40c5-9ba5-86594e8b26f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fa1c87-a10d-415f-a866-54d2e27e9aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e6df804-f590-4cf2-a29e-a8697e39746b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03824101-6e6d-4a36-b922-efbf5539d191",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d4c00a-124f-4add-bbe4-229dc0846f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eeaa329-09aa-462a-809f-5a10322489e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75b4f99-0149-41b2-bf24-83eb4558634a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b62772aa-78d5-411b-b25c-7f93044dc74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980bfba8-0940-46d1-9033-19135fc3feb7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa04f367-b520-4efe-b610-9e268552025f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6b30bc-73a9-46fc-a6b6-58cfc12600d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ed702f-b374-4aa2-8421-398241b67281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7527fa2c-f20a-4ad0-88b8-783edd72cba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5228ed9c-e29d-4541-9ff8-95be545311bd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e77386-cc0e-414c-a981-8677ed406d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "959b5bfa-9106-420c-9944-d6b5064b4908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144dfdba-5df9-4d6e-808c-4f0d6aaf598e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d15bce3-a640-4a16-b9ac-080a82cdd60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452560ca-453c-4b18-b595-f8f89b066d0a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29a5928-1388-4cd9-b96d-2a7888dcde9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f63a30da-c4cc-45fe-8c3b-bd4be15c078a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fa5445-e724-43cd-b09a-402080b72bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab547d31-26f9-4ff5-b8ce-c1f29484795e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059499fb-427d-4af4-869b-3242ea908f05",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3e6fbc-eaef-47bf-9532-156fb227e1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd38232-b868-49db-aee1-027ce5e143bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e27592b-b998-443c-bf0f-6eae26942bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f68fd3-953c-4a4f-95a3-6281f4701d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2759d3b9-d980-48c1-9b59-6543a271984c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "336e8dfb-60de-4525-bf3c-d0cb23efe5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7bba693-5bcc-497b-82a4-ceb317df2db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d120dbc3-521d-4a54-acec-d19f1d767de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c17667-9bd2-4225-9de8-c2856f4efaf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1190e72f-9772-4c07-93ad-a8dc47b856d2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87d7269-534b-47c0-b509-54c925d57a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b39da8-420a-4eba-af2c-8dcab1f9fa6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe9cea8-c3c1-4c18-929e-810ebd078021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f26cbc-77bf-4ba3-b74f-a53f3ca37c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5fef29-2747-4df4-8d2e-ee43ef769bbe",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434f4017-4a64-4d57-900d-d07bfbaafa6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc083634-6b36-466f-8faa-1b9fb5cee850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48735842-21e1-4db3-ae6f-10060e0924d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "de07c765-6a32-44d4-a05a-d0bce533ed17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb11837-3f20-4d1e-a950-dad294bd702c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9628f3-8808-404c-87d2-9e1b315283d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b79312-e9bc-42a5-b111-823ceac49e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8089346a-c923-4b48-8c90-1557078cbc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddbd6bd4-0ebd-496f-9746-e4e703dc54ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0193e225-5684-416e-84b6-6aa376724f6b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05cbd9a-e916-498e-9f1e-ffa6f0c15c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf02782-db9a-4437-a8a0-a3239a67a262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5cc2a0e-fd2c-47d6-aff6-c18406df27e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "edf3b6b0-77e9-4105-8087-50df6cacf84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bf596f-0ea9-40ad-9278-adce59e2efdf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c617fb7b-46a5-479e-8700-8f8858d618bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7125df66-387f-4529-a2e6-c67356911cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920845cf-9015-44d7-afb5-53f16f785406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf95fff-6cef-471c-9b1c-358d6575d7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61802fa9-66a4-4a49-9ad9-2104dafb5742",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52bc2df4-2414-4799-9fcf-c6e678414cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbfd9608-74ba-4e34-ba9c-65e3181b4d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d28f46-3000-4de7-b184-9f77b39263ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd27d52-d228-4cf4-89df-b0d5042bd342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f355c8-6e3e-465b-9bb8-bbde3b7cd5f2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c18bb3-d3d8-49f0-a932-9a41c0094e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "766c7d19-f9ef-4662-9896-1eed73292abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368c62d8-0a43-484f-ae83-e7743bc31bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1fcc882-be58-44eb-a6c1-98c9fe1a8303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2b6a30-3d39-45f9-b542-0cbe4ba75669",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eeffdaf-9397-4f09-ad0f-c3e9d182512d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3835ab-6dfd-4138-929e-5cba1db38123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90809134-f3ba-4560-8246-453880c63dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "526c9c78-2824-425b-9d7b-f215cc053415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08fd9b43-ad5f-4038-afb3-d41f50aadef0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2c2217-0d0c-42d2-80b4-cf8746a8e8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4564216e-d832-4cf4-94ae-365d6c24c43b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5075030b-a877-446b-b0ef-1454e40609a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8d464b-d43f-4b9b-9e6a-16e755b07300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7eb8310-cb71-4290-abb3-98b56feeccc3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40bee3d-98f3-4926-9cbf-216583b5dcee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e845552-3b29-4628-a02d-2b5efb97fdd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326364a1-7012-4d4f-9ff9-4111e4ae761a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd7534b2-2170-4283-a56b-bea8323c2e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f981fba-ef61-480d-a104-43488f8a5ea6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6def9d62-160d-419d-a9df-ef175ed83fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85d01de9-5550-46c6-aa53-942ede48f457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa7bd3f-c29c-4773-af53-a52a589ad0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6708f49-2768-4b8d-bff9-7142a7eaece0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625deacb-eee0-40d4-9651-b9c91255dcc4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b4d9ec-5ec2-4fc1-9c45-3918b9617356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afcf7fb3-6005-4bef-a85b-fd831ff40d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f79b675-9101-4ad4-914a-252e0723f087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe4f8dd3-bc2f-45f7-9dd6-e3f4bbb3be34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3266227a-dbd6-495c-a44f-3302b2adb701",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "017d4987-6d86-44a2-9051-9e6eb86d898f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72d9217-20c1-4d12-b5f7-e16a309536c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95cf5c4b-8297-4f97-9822-1711e74fcb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d968fbc6-2361-4ef5-a97d-98df1bcaba0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e5c806-1467-4725-a589-77eab27ffb1b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371b4db5-12ea-4c4a-a668-2e7c96e55f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2c05d4-15f8-4192-9397-26cfa8be4dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f106da6a-79da-4421-83a9-0d2dc5523236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68e94111-fcda-4f82-8730-7a5353badbe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680b159c-4c98-4300-8233-c4649e9e3369",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06938cae-2e37-4225-8cef-786728fc67ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c062e3a-449e-4d64-a260-978895b85ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a002ac5b-2c4b-42eb-bfb9-5ed0d5fa3c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5035671-f962-41c3-910e-6a3e205c895e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5156c216-9a5b-4fcc-850f-393324c61d00",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97be2522-627b-4d9b-bf14-70c5b291ac94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c891e5-7e66-4134-975d-2cd013047c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2943265-148a-4020-adf9-9b5ddc7a97ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c088c489-7f09-406c-b581-cb9829af8287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7baee0df-1f59-46fe-8b0f-45f33471787b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c316de6e-d4e3-410f-9f6a-92fb09c00036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1148d6e3-cf10-459e-8468-b7e54d70e9d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8a9bdd-fab1-4faa-8467-c5a0b88ed723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93b99083-22cf-4feb-8476-c48a93754292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a600f0-2cc7-4ab0-a697-43e3f49dbffd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbfb8b4-6084-4672-993c-d35c3531064a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2df4342-81e7-4c6c-93da-18fda1721d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29f821d-0fca-4a69-96db-0d4efd8f446a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "388ff084-833e-4cdd-a92c-026c70a39035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862bd6ae-8444-4590-ba4e-fed6d4ef361e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8ef26c-8248-4ca2-aea2-0cb1ca923d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7a2601-a560-42c8-a528-2def1cf3a4be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146ca834-ffe2-4249-95b7-71f25c0ccf49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "576a694c-c7af-48f4-8d68-731f35a6f178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e88010-6fd5-4619-9a4e-8f98ef429ebd",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f506d7e-4b04-41c4-bb5a-a54d0b21cbe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b770528-1f36-4ae1-aad9-5e07cd303767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd12a610-8829-4142-9096-d889560a7ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd57742-2b46-4a25-9472-984a23b7e0dd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e6f20618-e945-4380-9295-df3c36f3bd3b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7836b0d5-f444-442d-96fb-900efe639325",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ea943b-7ede-4a29-ad81-bfd117ee9dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0714ff-cbb7-4555-9f7c-0417a900863a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e20391a-7a4b-4d9c-81e1-0cbcc42444b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80771e2e-25de-43b4-88ec-d42a9337a05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16b57c9-5d15-4e89-a03f-b08f2fc9c1a7",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbd2ceb-6074-4afa-b874-c1f0067b2c65",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "1d3f38cd-6834-46c8-9317-d3bd54c7d735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cf63f1-1400-4223-830f-4ddd1cf50185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "454e4248-4f31-45ce-ae0c-c1a5e830a683"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c87bf3bb-4e78-42ba-a967-ba7cc38f6bd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a4b2242-d5cb-445d-8a0f-8bdaeaf8923f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a638ea3-57c1-430a-bc66-e34874365eff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b460dc2-6cc6-469f-b2f7-39f5f39c62c1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73b80544-2cdb-40a7-8e60-89a17d72af26",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "800fc92d-d7a7-4610-8f2b-b24e21a747fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ec390f9-594a-4394-9479-489453a81aed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68c3154a-9445-484e-b69d-b2f4d6a6cf90"
            }
          }
        ]
      },
      {
        "id": "b719b41b-cb86-4789-96e4-2d4f206c6791",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d3d0884d-af41-483a-abd3-a4b96f2e2850",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b329daca-e037-4be5-b76f-eb5e85d6033d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b41b926b-26ab-432c-9703-d9d4d4adf968",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd310ac-9d1e-4303-b463-0737c016fce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c384a2a-bbc8-4aee-baf0-a2340ac6c6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963ab175-d7cf-485b-9b75-d51a888abf7e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afe59ad-a535-425a-a553-330777d61854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b290bd-e525-41c2-8f90-a63f2befb29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b35275-ba27-44f2-a495-3a6201dc7860",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "166e7da1-80a1-4339-a423-04318c5570ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd04c1e-d11d-4f73-bbfb-f1bc24af18cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ea3b7c-74ba-4e42-8f11-5cab543cfd16",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a483b2f0-f600-493a-bc9d-9e17e904a8cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9745f8-16a3-4830-bf29-a9cda1e4e73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57438512-301c-49e5-9a1e-9297bc7f37df",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08a43a6-24b8-400e-a65a-3e27badcf639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "320d915f-9c93-4231-8ba7-a50a9f038036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e84eda-d3a2-4ccd-b7b2-7ebc23ba48ac",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e353437f-3285-4c49-9cd0-cb5c2b9cdd82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "622adbc7-e9c9-4e02-9815-5f38566044a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ea8416-9ff0-48c2-a065-95fbd68f5e1b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eff30fb-0fc7-4c1a-bfa0-47a1406c9fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0496f4e-905e-451b-925a-ad51e2a0e7e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d510065-cd1e-4447-bad9-224c4850b3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2158fb5d-f1eb-486a-b21c-2b3fca252453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c462ad-fbe1-47f2-98fb-6a6a34752660",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6beb16-2372-46b5-9921-1ee54de825b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e32f1b58-46b0-47e0-8d82-1093472abec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a1cee4-21e8-4844-8e29-cd64110f9dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b4d9d05-1df1-403d-a8b2-451b2213f0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb443a6-9dad-4627-891c-c9ee13c1b273",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a656354f-7fac-4ed2-bf93-9323d748c055",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dffb184e-1f69-44be-9746-3d6b26d770bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d546f39-9812-4141-9380-1a7d59f6b691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ef4c0a-67b9-4ac9-9129-64b0c0376263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481dde16-dd97-49aa-acef-6733b7c7fd33",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7692529-121c-4f78-a7a2-9532fcbd248f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c902b98-04d4-449e-885e-9b2e7ded54b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5f7807-d92c-4f23-b4ad-f4bbb97d028f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71d2c5ca-3c0f-471b-b4e0-c48f2f8ef4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1b5707-bbc3-4da8-9438-27f4980f995d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae2fbb4-3ae4-4a25-92cd-d7da9145982b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3484ecf-693b-4223-a8d0-4543e688b264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33dfad7-f357-4179-a4c5-74e05021321d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9679c2-32e5-4a01-a4cb-b8f238fb5dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8c193a-72de-4223-aef9-594f21ea7475",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac24e801-d668-4e4b-a5e7-4862dc2212a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac60179-c9ae-4675-aca1-35751ca88a79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35051199-f0a2-47d2-ab77-b850fff1d03a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97fd4d1-c811-4f4e-9d54-49210f75dd6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91337a32-0b79-4ecd-934e-5923c02fe42e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1d18ed-b64c-4744-882f-fbfa3a236eea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65eb3498-8501-4402-ac5a-633f3d864efb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02db6293-8149-4ed7-a4da-916ab3842310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "525ad470-bc64-4b73-a5ec-41ef5af96266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5711b0-436e-4c49-8415-ae663ad90173",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e358517b-634f-4451-8152-0fbc11c62e76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91ecf0c1-2ffc-4dd5-964b-43d84075c7bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7cda04-6056-4351-a17e-37ff968eb3c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b2d7ff-cdab-41f5-bc18-19a7465e5e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c580452-f31d-4d56-8b98-b4b9cc29984d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04d955f-c597-4b13-a792-146041f5c18e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77fd5d36-3538-46d0-b0b6-673ce2e84ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af028e0-3967-40e1-a35d-3b4bacdf1c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c465b2-8438-4b5f-af2c-4dd3aba65817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71eb0fee-7dbf-48dc-8618-065392399c14",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fcc859a-864c-4fce-b821-d0b1de16f40b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db0676b7-edb0-4b07-91cf-a822fa4ca192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55b24fd-92df-4053-9ee0-19045a611732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c71e9cfb-564b-48b7-939c-6bb1eb7ccf00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af41865e-3a29-405f-acd9-a9df5fa5db39",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfad3c79-517b-437d-8d77-34ab606935de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8693923-a605-4ca7-8ebb-38e8db13ace1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2534b13b-1e0b-4f72-b7e5-807e5a5860cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4ad239-f012-4db0-b086-05e7fcdefe0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9b5b1c-3ed0-4470-8385-c5a783062f62",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3c2cc8-b85d-4a81-88bc-8610eb843f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f3e826-a617-4fd9-8eab-0ee564e19ab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26dac5c-5f20-4fca-8d49-b844af560f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aceb849f-ccf7-4b2b-9436-aa9058b2d58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970f58da-8ae0-44f7-95ea-a9e644f0a59c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e84b01-2d25-4ad3-8bd1-b0ebc4c48413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c318e26-cab1-4e94-9330-342d861f950d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c35b64-ea18-4509-8e2a-3be4b94011b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20608b74-7f24-407a-b255-c9a9d551de6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa97d756-6908-4849-bfce-6248f77cd3fb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cde26a5-3429-47c2-a3b5-7991dc362baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f58bb5-3313-468a-8358-0490dc847cba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0628a1-7232-47bd-865a-c880360558d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69a91462-04d8-4060-aa70-4723dc6bc9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ae3840-9195-4f83-aa9d-b14e0158290e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf7f807-61b3-427b-a5ac-15e6c18af328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa8477d-db99-4bf4-9c89-ab2506e3ea8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8d0b2c-18e7-4f2b-bdd2-555782bbe280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587cd449-f123-4453-9bd8-b3c5d5f70cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91048603-bb33-4ba7-b3cc-9b072e6745d6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905b5fec-a398-47ba-abc8-d531d0f2d81e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a4472cf-5178-4c52-81d0-5f9ea40236bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "211c71b2-d277-4cb3-b8af-ac21c5cfc552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02364b51-dff9-45e7-822a-c623303aaaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182ed587-c25a-46b8-84bc-db82de7ebeee",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00952cc-6d85-4a9f-b6f6-44ac72c731ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d9cbd3-8fbf-497e-993a-93e44e0d7a94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4433e9-fdfb-4484-aebc-1e566757ce6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ff0a25-d0e9-4156-8094-7556094b178d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e99f820-02e3-4c7e-bc35-65c3176443b5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e09291-a4a3-473e-91bf-8788222888ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7a9edc3-897e-4086-92e0-11cb1b4493cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2cb5fd5-8f62-4238-aca2-38ab0ab5c10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f69e6a06-2974-43ca-b964-1fd3d638251c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2dd1de-da79-4ce5-94ef-0476fb1d7a5b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704e31b9-bd15-4662-a0e4-81ff51cfcd87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25534a2d-0884-423d-915d-4a4af8f283f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44134df0-2ced-49c8-a847-19e9fdaba706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff4f8db-b2e9-46e9-ab51-6677983eec39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09c521d-7ed0-4ef2-bd52-6bda9f8df095",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf889ee-6143-4274-a051-b145ff562932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62705720-610b-43ac-85fa-6d828b559b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbb53cb-19b7-4526-a0d5-5a505328e133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac4cf66f-9dd3-44c4-b0a9-a1140f45b18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2c49d6-0a72-4958-801a-a91438e3cbf5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b196889-cda7-44ad-9aaa-b8bc94327530",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d5b2496-97ff-4360-bba9-95f286131920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e94d485-3bbe-4684-a62e-412a34906c96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa6ac967-2d7a-408e-a96f-af927657c95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebb3c09-7576-48ea-88cc-8076f46c1610",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfc4fb0-41ca-4ffe-a632-12c7daaba457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a9a78e0-9b69-4303-ab64-0a615a5168da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9378d676-ee86-415e-ae12-eaf09c22c400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a8198bb-733d-497f-9d4c-b5fc75b97c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa76777-646c-46ca-94c4-5ec935229886",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a696d4-e7e1-49cd-b734-6fc6abf483c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bb499f9-d51d-4940-af3b-61dd5a200f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b258609-0060-4e22-8357-a32271043780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5454328d-d7aa-4f49-97f5-93534c1d8304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa3e4fd-5817-42f5-bb31-06084174dd20",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d28cb40-92b3-4310-8fc2-1db095bac88e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0758948-d443-4803-92c1-6a22eb8abd16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1f870d-4304-4b8d-bb03-e3d9f1c27ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385c2c5a-bf24-4c75-b3e4-3d3f9f9515c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01bf777c-9dab-4b59-bb0f-d492bdc543c5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0551ebd1-b99f-4a78-895e-5329204d02ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb36801c-a91c-4857-b833-df9c91f8be6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddb8654-d37e-474d-9e46-3baa7be9c86d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef047cf-51ee-43ec-a771-6d084deca966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed51391f-a5c7-4291-beb5-b9b396b34c6e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051b3370-29a7-47a1-89da-356a474cd48d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3408a73d-edce-4b6c-8b65-441c3409a8df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a3d90a-f7a4-415c-8fcc-d6e72a7c6a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f78d97b-ace3-449b-b796-a79dfadfbf54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac84ff8-4d09-4ddb-afe4-684c7a85607d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a607bf0-e347-4619-a2a1-de0df0e45554",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cbce0c8-f62c-48f5-a505-ed6ef45a2bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ef269b-d329-4a26-bfa3-b246e2f2f88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e1a89c-05c7-43f3-9a24-e93bb3eadd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f25e02f-764d-4c10-b1e1-42111fce2e25",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d3dad1-817b-4960-ae10-296f79e8539b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "625078ce-4547-4340-b595-680d3c10df33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1353473-1e47-45ee-9307-df95bbdeb25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e4fe06-9598-47aa-9888-c7df8d9572b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac7bccc-d955-4c30-921c-c9934722b033",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd806dd-6238-420b-a1c0-fc2ae8401edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bdaa1c9-aff5-41da-bc46-805bbc898e66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754a9374-6df1-4293-a956-f6ea47295bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f2ea83-38b2-4c70-a432-97fdd141f799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878926cf-f0ad-42cf-87ee-5d7b139be383",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c7bcfc-1afa-4897-87e8-1bbb84bc18e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a53221a-3f1a-4cde-ac6c-eaa10deed67c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6475924-837f-4079-a763-2b03ae9e0713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deae2429-292e-4474-a9f1-50320834d4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebdd34c-6717-456d-bde3-7b283c811600",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d62a1fa-c5c3-4705-b57f-c9818098bc3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d65ee8-1867-455f-9fb2-cf5af1abb22c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53840bdc-2b12-4499-acb3-bee62b15162c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc06494-83ee-495d-8a93-95b1073b28a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb605459-8d85-45a6-82ed-7d757bd85b0d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d013c4-2b1e-4eef-9879-dd748fbd123f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1672630a-509e-4661-86f2-006f0688ea6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d4794b-e69f-439d-a6e7-866a89d802a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "618f96ea-91a0-4f92-963d-b5ffc1d194b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd3241a-abed-4d45-a317-ebd0cae8a0fd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a155242b-a9e6-4428-8235-9d30ead3495a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b04df5d-cfcc-4a67-a6e3-7ea9b89ca6a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c6c919-001d-4c70-ac6a-621f0805d5b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1f2fc42-43f5-4f31-8ed2-ceb8b15f7f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a471233-0857-4356-9ab9-5f75b572f8e7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1587857d-a635-474d-8114-cd1b1270f366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14c13f9-e6c8-4430-b390-d575ededd289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26fa240-c490-4ae7-a76d-10a27575705f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b0f7c9-c715-4dec-afc5-c143def3f965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad682c9d-e830-4dc4-95da-09660dd1078e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d7bf8d-7a86-47c3-845d-80290a9d96bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d7cca5-3415-425b-b234-7edc63169c5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c53fbf-3fc8-48f1-a20d-c1b1b835ad8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c8d4a5-b2f4-4c4a-acae-7c2b7c0fd186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2766d1-ec52-463b-8cea-360b281db652",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3a9fc2-2aa3-4f2e-8c25-29bad4aacf6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b62e83-37e7-4206-b0d7-6cca8e243aa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9c5941-e26a-4bef-ab44-1676c3f767cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "182d1f5d-8d3e-4c01-a786-3ec4c0408dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b24a48e-6555-49de-bdec-b0e3c7521af8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f234c2-c5e6-49c0-8211-f3f2f2c34db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf4e6a4-a52d-4d4e-8bd6-8f9efb71d5e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68302ae5-d1d4-4933-9fde-ee94ea1e1e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd585e83-6d17-42ec-bed4-3291dcf61825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be48ca31-bd1e-4cf7-89a9-fe81a04bb5ea",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48419a8-ec01-4a5e-b956-e7f41637caa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afcdb205-3df1-40d2-b8cd-9b072ead7a00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "974f26d4-e95c-4991-989e-82c33157ed2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b85cf8e-38fa-456c-a502-24505ef01b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66eb4906-afea-4c8c-84dd-d118ba8a9bec",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec98d21-5e3c-4475-8501-ee7cf759e833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a4ab7d5-cdfa-4f60-a66e-c9b0ee71f919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7ad12b-2c27-4344-b47b-a9b825c75cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01eb9342-dd88-4262-b55e-4b160f2297c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e083e6f-afe1-4664-89e1-caea65ce7c36",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e7c406-2cf8-4f4f-9fe2-17c6123ec460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15bd4c2-8a32-46e3-823b-e68ae1078428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59de01e-b8c8-486e-b989-8dfd69713315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f97a2e-e0c0-4395-871c-9993ef17e138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edaa079-2c90-49cc-aeba-a9dffdcd6fd2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5c8df6-482f-4297-be97-83a4a72c5f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d51eaa8-9de2-46a1-bb04-9889a1933990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3679e044-6c6b-43da-99e8-cfadef0dd01f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ed0108-e76c-4b62-8036-0550cd3e2437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157f7f0f-63c8-4b3d-801f-2adca005dfa3",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7cc0f7-617c-4445-a348-74a8720402f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cce39c70-a401-4760-b499-f70efb5cb40e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45baafb8-353e-468d-b63a-21a8a03c78a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c38947-b9b7-4098-9a4d-ada2392c5f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8991b791-d6b5-4491-84d6-13ad4f3b47cf",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533801b0-d297-423a-8d0c-6465b1a19320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3e23ec-bc33-4133-8e23-99cc07462bea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3bd6b92-e2ea-410e-9bc6-e46909e69db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94bf6e21-abf0-4a12-be46-ddbf8f0f5886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc40c78c-df72-48b4-887d-7c18d1b9573f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe7de78-8faf-442c-86e9-5939850e32ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05be75c1-0b98-4d8c-b1c1-8351e8ce7581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e159fd94-1062-43d6-a0f3-f1745cefc2c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca9c621-1072-4074-9629-aa4b8a97bca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fefcda9-d6fa-4ac2-a3db-3473ebcf793f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee50ffc5-90f3-4694-8f24-80d2ec3175f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e74ce302-582e-485e-a245-fc720b4a157b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c4707d-821a-4cdf-9cae-34afbc3ed5d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca745e2-ff91-4e95-a1ef-d6c100498730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa5f0c5-9cec-47a9-82b7-e2a4da51b455",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e592c7-3bde-41cf-bc5d-664d39b7a5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c974ec5f-8528-4d38-ac8b-1fdc8ce68d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "399e9c40-715f-4634-b8fd-b14639b00fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba33ed7a-22a6-428c-b789-b75f3590e90b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5ec9a9-8fbe-46bb-8896-bb84a6d0f566",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e91a22-7b93-430d-a405-4c88bb30f380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78611c8e-2210-40e7-983e-65eaf3bb6572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c2347f-aecb-40a8-88dc-d070c7a2d98e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c75d57a-a1e0-4343-8845-7da5fb3311ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab2dfcb-e61a-48c1-bef1-06a502e734cd",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5f1a26-62f6-4abb-a8f8-bfe5d4046940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e9e50b-bd99-4e31-a6ad-1707a1081375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22891c5-4533-4eaa-a5f5-948d9b293b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730c5907-d0b7-4755-9352-d558fb5aa85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32313dca-bd3c-4d8e-bd3e-e10ba263f39f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d9ea35-d55a-46fe-abdd-236af7a52f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4aaf5f-8c14-47f6-afdb-95692037a7ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b11bce-3d14-459a-abf8-f8e033cf30ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d20d13f-62e4-4957-843d-40d0bd9ab8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1576e738-ad87-46b8-a9f7-c030ab9e50d7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e381cc-6ae8-48fe-a293-680e757cd59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5744a7-999b-447e-9d41-267da58b808e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f4023d-2dda-4ec4-9503-7e0d3f344572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f089a304-3a29-4bda-95c8-ba6a681884fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e24296b-7b19-45c1-a5e8-aaf80eb9f73f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa34243-1156-4db2-919a-a84bac714d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c73c8f8a-7ddb-4324-9b6d-729a82f59b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b536358d-6c9a-43ca-a1d2-bcc2eed1fa37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e48bdd-8482-42bd-b1d9-bb0cc091c528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181f36be-31ff-4c1d-a078-ccaca4be5435",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d32b351-9895-4d1d-95f6-14b0c7137676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f48ae3-9f88-432e-95d9-fcf402d90874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee5defc-4afe-4d21-921b-3ceaf63e1132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7c314c-8d4c-412b-8315-f720a5171f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4987d8e-73a2-4802-8e8e-133c3d341ce7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d5f213-36e6-4fe8-bd4e-09d9ebf50363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6a7bf3-9f38-4512-a7fd-e7bb802f74d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df519d70-dd70-48c8-a34e-57f35f7c1653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b55e44-f0be-4be7-8782-378104ccc432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6929cd2-44d0-43e0-85ae-86cffe9382ea",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd1dc39-9cee-4ef7-a28d-11b1e9943ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40874e72-10ec-4731-9723-a7a6df5d7220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "509bfc59-0428-4737-8c61-cec5cdd0f668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb5574e-3c36-48ae-ba04-4fdcf673534b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01469646-6270-4e1d-8e90-bfde8bfa5b91",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9fdd48-8492-4df8-973f-f59767a88b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "370436b2-d2c8-4d94-98cf-d9f6b6ad24cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71215df9-43e3-4799-a432-183967b4fb26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd17dbbd-c600-4e99-b282-c82e1c7b0f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19bd905c-e926-4273-a162-04ba9d59ad79",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13c9602-5953-474d-aa23-6826b55c4813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a1ef11b-a23e-4fdb-9238-8417a9ada9d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e61939-2082-402f-858b-2e224a2cd4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71299f5-9ef1-4048-9d45-1eabd2b2b705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94906643-3c6e-4046-8267-16700c649e3f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14558944-c25b-4f2d-97cd-882c0965d0d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76165d23-73a2-4169-82b3-3432ec52bc69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da529fc-c5e6-433e-92a5-6da3931a511e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e2cd24-db96-4b5e-9433-25c7ef667415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7a10f0-6fa2-4aa2-9682-1af87ca5dd28",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a412aaa9-49a3-4dbd-8459-b85d4ba7708e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a562a5d6-016f-49f9-ab1d-ea5002b44b16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0bf427-655f-48ac-be39-5eebc57546cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc701bad-bf5a-421a-81a8-1ad618cb753f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238f5b55-cb2f-43d2-a3f9-888ec9255728",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e71eb9-cd0a-4014-8b3f-476c2341dd86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bc73a87-862e-41d9-9a25-ce5b2c5fc460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd3192b-65e7-4355-b8a0-8bdbce83e871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52762ed8-56df-4008-8a09-2018c471c66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e265b7e-3a78-4f35-9535-81f6d59871e9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248becd1-c128-4a97-b436-be60e012773c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b061ce3f-12ad-42e9-a14a-cc56d54f6355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e944f0da-af58-4848-aacf-b5ddf0451ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2a4cac-5705-4ac5-84a8-969c38b80678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d4ca0a-acf2-4742-a85a-086970a26c06",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f8c8ec-aa67-4d07-bfb3-2b76447b9481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a6d2c97-3037-49e0-aaf6-893a5a75b35e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8c7de1-a9c1-4525-86e0-68a11e3af483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06849f7d-5ec7-416e-87ab-b614bdd7842e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43929d20-216b-427d-a973-bb5efc86da89",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3713ef69-ed4c-41f5-a84c-714b59a3644a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "696970e7-477e-4777-8b26-4d56b09d83dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9143efdd-fce9-425b-81d0-fcb0a897780c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b4e29d-88c1-4eb7-afb0-92cea0834b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77343870-0ddb-4675-b185-a434fc3a93b1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108f5ee2-5eb5-4955-b972-9771cd319780",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1fd78e0-0647-4a9a-95e8-87895c828e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88de5ce-809c-4ce3-9a29-1c0a649e7f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ba1363-19e2-4c65-ad54-2e87c14dc84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddb00e4-6df3-4996-bbc5-73e71ef939a2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4fcf32d-0035-4a2b-b6a9-0da99c18e992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ab17674-65ab-4c7c-bea0-65eb3f06c1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb29f67-28b3-4836-81e1-8e80fd44815b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403f06fd-89f1-4584-abcc-f76f8f89c221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe44715-f893-4a03-874c-0df37cc59491",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e388b71-9f14-4153-9b74-b83af5fcb0a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ec9c85d-fffd-499e-bc14-4644a8d54c60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e65518-6444-4914-bc54-eb2dea1ad762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf7d36c-9ab7-4a13-83e4-12b984601e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c60c9a-57fc-485d-9d94-2099782887f4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf15ee88-e351-4f20-bcfa-007ab4247a3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f9d7102-ebed-4c2d-8e5e-31a735e2cd4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62b88bb-adf3-4373-838a-34bccabf953e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "946659d0-ad0b-4afb-9d06-1d666a9f782f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a8eab5-41f7-4dbb-89bf-794d950e4b7d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936feeb7-301e-49f2-933f-111bfb0959b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24f41ade-d9bf-4920-8bb9-472285a8c294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "989ae3e5-ad0d-4358-a791-082c4e8df3bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b34a6f77-0c7a-4e02-a400-6f871c98cb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102438d9-b036-4336-9c12-4375c942ec9f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff32b731-494f-452c-932e-9d8c758e0555",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67cd63a5-78ae-4e6f-831e-4d8385aab716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0133d602-4ea2-44e3-bed9-a149c5e50a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ee3821-0e16-484a-98c8-520222b96000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3757a63e-0220-4dbd-ac6c-f8856b38d8da",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c30375f-8dfb-4c91-a5e3-67eefccec0dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "210985d0-b931-4bba-9f4e-a81f0411c1af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80bfd68f-756c-4a6a-b852-ff6d941cf1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aaea596-63d6-4de0-b56e-c4ff4283e851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e49a97c-abbb-4873-9c5d-ba1505ec47ac",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230add38-a10b-42fa-b7ac-e3d5c2e82465",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d55436f-5cf4-445d-b9e5-9a973d790adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a6457d-5964-4054-a53e-afd25c16ffae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3506f526-c502-4861-8cb6-7abdfd78a739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0c29d5-6116-48b3-8366-56f3f2483a14",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b901a1f-d983-4072-892a-48126288beab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b128135f-58e7-4645-9204-b0b792cbab31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d6823c-cc4c-47af-9414-817fc08d8f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058a0d19-8c76-455b-b3ae-fcd29b95d51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb0de84-c460-417e-857a-4c155cdfcb39",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a19318-12ee-42bc-971a-9838fd845e84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3109219-3a1c-424d-9392-d2b0d11edae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "611bdd04-7f16-4280-97a7-343000b7e42a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e148d8df-96ac-4659-a367-9c6a5f400a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a231e5-3fbe-4170-b337-33190e9cc01c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc46429-9914-4dd0-81c9-b8e487f96440",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68e948fa-b9b8-4d14-adc2-39c65bbc93e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fecac03e-c4c0-4e37-8f3b-acf68b8f3ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59aa74f5-b32a-42f0-82f2-d2d2366ad09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e0456f-0c44-4a00-ad8b-949f4b99d5c3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f680fe12-6809-4283-a47e-a24b69dfe3bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d36ce63d-56ff-4139-b446-480f8ad1a795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf60ec6-4fd5-43b4-9116-f458be36e0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29dcc821-0bd3-4e3b-ae26-ab0d2831e500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64998d4-32eb-418f-88f2-c6ff31814582",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "becd5553-7951-4a68-a690-4e1f96a73b11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7995c4f-dccd-4513-ab79-433c7c8cb559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e41ec7-3498-4602-90bb-35765e05fd78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e60e2e6-9e6f-4d19-b6ef-bf53dfd3260a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4325fe36-4016-4587-bbeb-e8eb5d8f392d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8411ee-1d83-4173-ac9b-265b8caf25ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6066adfe-eced-4486-b112-dbb0c53197e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8842b7f-b6b3-421e-a191-a59ec4463e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86bff6ae-e44b-4abc-8445-63ce2eaf013e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade018a4-a92b-46de-9df8-d8633e6c4d18",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427aaf64-9f68-4893-b4ab-8613079cbb60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27b2235e-203b-4752-9d7a-b05375f505a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "204b6b72-a706-454c-aea7-88c85ba26b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69f276b-4647-4494-b7cd-487b4be73e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5058e3e8-617d-40aa-801f-368b82b6d9bf",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6a4535-ef9f-4bb2-8dd0-7f1c647953b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80110f95-fc8e-47c4-a059-c99ce91b23da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8871e491-2544-4ee8-96d9-9f2d85d3a57d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f46465-37e8-4127-9591-c2e066ee3dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cad5226-db20-49fb-8415-e0b0aed5a789",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872fca57-aaf0-4ab5-b458-73300915e5d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69841069-166d-4982-811d-32c778c15ba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "085f2bea-d100-4e0e-b1db-fee76b1812db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b925c6-1786-453d-8ea5-338cbc154b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884a73ae-14aa-40d6-8166-f4c11171ae38",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d61d86-e523-4c62-b3f6-6af67e3ee0e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97a1b054-aae5-41be-943b-62fc005483e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede948ad-28ca-4958-8aed-d08b2a787686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5168b3a-ede2-4094-93f9-70f83764ea5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd407b8-6228-4590-8019-e721ae911a36",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79d04f9-7632-47a0-897e-01083abdbe6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40c434ff-c7d6-4484-b345-3018db31cfc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a2c965-7d4c-4408-b179-4eb33334065c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb039d4b-5747-474d-963c-dad62807d2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb17b6c2-2070-4691-935f-98832972a2ab",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22256af4-712a-4192-9038-ae45c3465da8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c24544d-48a3-47ce-bd9a-f4e7ed159562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10454464-e69d-433f-ab84-b8498acf2e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91500397-e3c6-46f3-b8b7-a51b724394a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84a21fd-cffa-4d0b-a5b4-e58c16efbcc5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe4b7c2-8e71-4626-9472-b9bdf893a0ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a00fe20c-3e37-4e1c-bc66-dce2f7237139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a094a42-74c9-4333-ae9b-c8f530ac4ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e6d7b04-c7af-4aad-b391-5ba3a89838e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ddaeb9-5ca6-485f-8409-56309f14763a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af856920-e9c7-41e1-aa40-897004d4eb90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f08063af-afaf-4371-9c86-62fc9ab78cbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8a1fbc-1829-479a-9f89-ccbc13ecf958",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35a096f4-6495-485d-96be-c19d4ddd1ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668255d8-6dd4-4532-b027-3d1eb517c501",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195514c3-1eca-42b4-bcbc-b81fe713df0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "525eb450-8581-4fc4-82b6-4250b8e6c36a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a941eb-9e5f-42d0-b174-6c20dbc1a3e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69bb783-6c25-407c-96be-93299db08145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5980c8-9e29-4270-b452-ca84a48ccaf2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2287c89-2225-41ef-90b3-271bf1427313",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "243cd3ae-d390-4592-856c-d699e405de76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3faa2d92-e846-42af-b9b5-f81301f9945e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4cc6ec-6b00-410c-b4e6-7cbd91373fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796a7984-c9b9-4222-ae06-9a802d83dd22",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3ec8c5-cb7c-41b1-911d-7b6a1d1e21e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de680f3d-d95d-454a-932a-5b1246963c4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45955132-bf79-4caa-8cfe-ba3ddc3177fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a16f477-c04c-4cb1-98b9-6381d1ad0b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e5527f-6b94-4f15-bdbc-6d9269337ef6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f473510b-665b-4300-baae-fde41751268e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe5aef80-86e7-4f89-8843-66d863e6dc02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed687f5a-6865-41ad-af59-9e1ed47bf56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa8ca5c-f83e-42f1-b899-6acc88679b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba87ef2-f9fe-49c9-8335-0d9befa4efb0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1ebbdb-02e3-4de0-a74d-58f11933e45d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38dc3009-1ee4-4bc0-b10c-2477ec22b277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0ea331-b98f-4f74-9728-56de55364586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ebfe9c-af28-4605-9e6c-99c7ed4d6aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a26ba5-f75c-454f-8c0e-8e3c2c62236b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53225998-62e2-4bac-844d-6729b23bfda6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8806f82-560d-477e-9028-af1734f3929c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91507e2-8bdb-42e3-baf7-6163cc4f48b9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5471c540-87cc-40cf-85f1-9fdb4bed387a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdaa18d0-beb1-4b19-8b19-42ac42943a03",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64891308-5875-4d38-988f-d81aa6b4f3a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2f6c4f7-c568-4188-be5d-21f5ec62007f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacf1d1e-358b-45ad-b11b-8e2a6396efdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3140ea1d-18e0-4537-8938-23f5d71987d6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8926316-9342-4b43-bed4-98dc88053b5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad091697-a84f-4541-9308-48ebfa07f9f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73f8e22a-dd50-4338-811f-e10f5ab3d523",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a9c8866-dd41-42c1-99db-a646aec09806"
                    }
                  }
                ]
              },
              {
                "id": "48f30bde-a70e-4564-a72a-08fca97886c3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cad91afd-0fe2-4290-94b5-2bf189c751fe",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d20d0b7-299f-41d9-9e60-47b061faee87",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2fc79779-a31e-4e7c-b58c-aed6e7619741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1faf1bc-bda2-473b-be67-50bf9876bc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c43f3fc-7b20-485d-85c2-89c34a4e8dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4fcfa5-2c9e-4a5d-b071-ea2497608e04",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e89cd77-32f6-455c-a5b4-805f8f15a168",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5c6d9847-19fc-4a9e-93ba-e8947cbf081f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67bb5b9-92f2-4550-8e20-d9ee2bba9726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2c8816c-56da-4560-b4bf-66209f2fe357"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d4d62a4-f08e-4bcf-9e20-01fbac391c31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb12781f-2af8-4bd2-88de-9e14106c7ee3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e4e43db-74fe-424e-8bd5-90aeb3c766f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f6993d8-4b7e-4422-af87-5ad96b97e320"
                    }
                  }
                ]
              },
              {
                "id": "d30b7d1a-e831-488a-aa61-37e5ce33628b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e66c969c-5190-48a3-9136-ae9e6062e400",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4817c2-cea7-4e7a-ab23-164727bc40d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e8250a3f-0527-4e40-a393-76427482e24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d011bd-8479-42a6-9832-cd021c18f1a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32815945-6a95-4ef3-8ade-dc7bbd847406"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5adb2f74-bfc6-4d7c-9d60-ffcc20b7e9e1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a7af0459-0e37-4445-8e47-a0647a9b82cf",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9076008c-cd23-4934-9d82-212268cb7798",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8457fbd0-2995-476c-bc31-1116370fa447"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c1a7961-be98-4904-a439-40dded0b7068",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ee559a6-96c5-4f0d-9f57-ac973efd594e"
                    }
                  }
                ]
              },
              {
                "id": "fd118f50-8a38-44b8-a52a-c87587f41057",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4bde076-f058-481c-88cd-083e3eee2847",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "25cecb6e-50ba-46cb-9f82-7724fb7b4bcd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f52124c5-c4ca-4b34-8e87-5c48d60fc9a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3caa8797-baac-4ebd-8d35-3195a6e06677"
                    }
                  }
                ]
              },
              {
                "id": "e8d77e97-e1c3-49cf-9895-474bbcb00b10",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "187ff18c-19dc-4f23-93ae-6949c02a095b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4b275ef6-5189-4fc9-8124-5d4369079949"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a2fc55c-d4a3-41b0-8025-b726cd0f17d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a34eba3c-e54b-441b-b787-1ecc670c7fdb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9bcdaf5-bb28-4194-91ce-29bd942590a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9bc8dce5-3a4c-4b81-a2c8-5196665d93db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9c1433f-30c5-4c3c-afb7-be50d7829ff3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a919d0a6-3111-4444-b983-2d0d5753efc2"
            }
          }
        ]
      },
      {
        "id": "9b6d657e-4d31-485a-906e-35dfa206f921",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e63347ff-4519-4671-9647-dfae1aa4d9d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "07841c7b-e29f-4449-9e88-ce934c93d7e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9cb92591-d40d-4650-b502-396185bce1d1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6758af-b25f-44d9-86fc-bf3911ea84ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ec153498-4c6a-47bc-b046-fc550aebb281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9c2921-afd1-4802-b5c0-d07577d0714f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e0ecf15-a2b3-4453-8956-97397f3906aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ed4951-068b-441d-b0df-aa944159865b",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad031f63-066c-47fb-a031-9c02fcf91972",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c3d5232a-65bc-4dd7-9278-bbf912e99fd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f449f023-6c83-4a6b-b6d7-13a96b75d1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adc86110-1d04-470c-81aa-c62e03c53fe2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c60731f-6bb2-49e0-84c8-4f318873e3fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5fdb073-baee-4986-b119-74a7810269f9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "def5fb4d-cc8a-481c-9629-c10273d0ca38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05ff7c41-2bf4-4b66-85ee-dc4a18a9a216"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19bcaade-aba8-4b72-8003-e0b8cd99c583",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "626ffcbb-3199-4b05-bd08-a64e08f96b95"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35e03e98-0abf-4553-bef9-7a04e6c8a9ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "72db7177-ab6f-48ef-b5c2-b0a2248bf89b"
            }
          }
        ]
      },
      {
        "id": "c1b6f2ed-00fd-4a4e-9375-89677b58485c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "dbfd23bb-3aa6-4bb4-87d0-8d3c1559e3b0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6f613f8b-0f74-41db-979c-63e814dc16d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "42c2b364-462c-4776-af5c-00e23eb5799a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d51960-237d-4b32-8317-64087a02b5c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9c7b730d-4503-4491-8396-dbbf4ee2efa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0009a6f8-7588-47f5-b698-d57843aa9175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee3f803a-3cd1-4e9c-b603-2b9d59823ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401d9bb9-6a83-48ec-9491-7d9095792572",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2128657c-79c5-489e-8f6b-315581624aac",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fa16b6d7-818c-4aed-b866-98303fcc219e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c254cffd-0bf8-426c-86f8-0e997452e013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "370f6b0d-9a5b-470d-ba77-2275bfdcc9ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02759f4d-70ff-4379-b6a6-243af6a09829",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f91671b-0746-47bc-9215-99fb8980fb9e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8dea2a2b-91ba-4f04-b7ff-fc492501b0d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec37830b-2733-4879-aeb8-7d06ea85eed7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09640da9-fa07-42ae-9241-e01aa30a8a74",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b6e7f7c0-049b-46e2-b704-b96400121fbe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dcd680f6-6fa7-4418-b807-34ded649bb4f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f7df11e-5196-455f-bd74-eef1a24b3bb9"
            }
          }
        ]
      },
      {
        "id": "6f4ac613-0bbc-45c2-8bfb-5a8bd1e6c81e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "db8570a3-0ac9-48b7-b79e-a8c1737ccca1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9db72f3d-4658-4b0e-9838-618223a7cf64",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a469744-5a61-4c61-b895-3ac5048fcc80",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a1c76f-a80d-464a-bb6f-a78db25267de",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "567975bb-c2f6-4d90-9c2d-2a1fbb34a221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d717a841-f8c7-41d9-ba71-bc6c1db2f5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa8c815a-b365-4bbe-adfc-ffe6d248521c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2217c1e5-ffe7-426f-aa89-e20bd056b13c",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4538f8c8-a731-47ea-9a73-01a2d1eaf93e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8543a725-697a-4519-89c0-240a35148ddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "510f0435-359b-4aea-9869-7a2ca80cba4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85c151a2-a528-4466-b699-608c1fa511e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d4edbc5-93c3-4b2f-868c-95d5e810c0ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26155d78-e727-4de5-afe7-8408fe6ff4a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "816e24d0-8afe-4986-ae36-b27dd10ea68d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0c36544-72e5-452f-b1f5-db4833fb7036"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "372e8bf7-2c2a-4f42-8ed9-1fd3a4318224",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "37822a09-1bc9-46d2-9ba8-fb84b807b251"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d97c4e1-42e3-4928-8787-ce0800f411b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "736019e3-19f1-45d9-bd78-10b09b1f12cc"
            }
          }
        ]
      },
      {
        "id": "db442296-ecf4-4b56-bab3-d009c1149ba5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28174b9a-b9ef-4010-a574-bc199ef23ac9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b724dd85-71bc-47f2-a820-be40a92a0f3a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "38294dd6-1fcb-4b55-bc6c-a93e8597b0ba",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f7eb85c-67a6-4377-8726-d3102390a65b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b66456e-cedf-49e1-968a-fe3b02715c54",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 524.2298850574713,
      "responseMin": 7,
      "responseMax": 4493,
      "responseSd": 464.26012578536137,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1668991531273,
      "completed": 1668991680793
    },
    "executions": [
      {
        "id": "77b0f084-651e-45e7-bff2-445a57fb1b87",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6e8d1a04-9366-4250-a1fa-1706d539ddf1",
          "httpRequestId": "0ede8bc8-2e6e-4ca3-9fe6-dd7d13aae097"
        },
        "item": {
          "id": "77b0f084-651e-45e7-bff2-445a57fb1b87",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a0e24225-e7df-4dc3-af5c-9f0983743330",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "19447d06-b0fd-401a-aaa1-13fdddf4dc8e",
        "cursor": {
          "ref": "11514073-273e-4dff-8ec7-d217dc5ede6d",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2dd037a2-07a7-491f-9040-d0102bf7775c"
        },
        "item": {
          "id": "19447d06-b0fd-401a-aaa1-13fdddf4dc8e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bca015b8-ef69-4019-af25-6a3a3f31eb62",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "661f1268-c88c-4b2d-9d85-32212efdfecf",
        "cursor": {
          "ref": "57a29b3f-b556-4db4-80bc-a305044e57ab",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0effb2a0-7eb6-457f-be1d-4b042b78c3bf"
        },
        "item": {
          "id": "661f1268-c88c-4b2d-9d85-32212efdfecf",
          "name": "did_json"
        },
        "response": {
          "id": "34213424-563b-4e4e-9718-881c4b886838",
          "status": "OK",
          "code": 200,
          "responseTime": 1148,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b173b473-111b-4088-9bdf-90bbd4379fd0",
        "cursor": {
          "ref": "f1e7d458-fb57-4941-8b5a-7a6a8805d98d",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7d90f8b5-2018-4fa8-ad38-f9b26ffb1275"
        },
        "item": {
          "id": "b173b473-111b-4088-9bdf-90bbd4379fd0",
          "name": "did:invalid"
        },
        "response": {
          "id": "f7bd4d48-3dbf-43ef-b1eb-1a8b228f91a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1043,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b173b473-111b-4088-9bdf-90bbd4379fd0",
        "cursor": {
          "ref": "f1e7d458-fb57-4941-8b5a-7a6a8805d98d",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7d90f8b5-2018-4fa8-ad38-f9b26ffb1275"
        },
        "item": {
          "id": "b173b473-111b-4088-9bdf-90bbd4379fd0",
          "name": "did:invalid"
        },
        "response": {
          "id": "f7bd4d48-3dbf-43ef-b1eb-1a8b228f91a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1043,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89d7c20-e717-40c4-9b37-ec37acc0b0a9",
        "cursor": {
          "ref": "99c2d7b6-a0b8-4c89-a846-a79315b5d123",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d56a1bf1-5847-41a0-8c76-a43905894d5d"
        },
        "item": {
          "id": "b89d7c20-e717-40c4-9b37-ec37acc0b0a9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7cd72139-f7f4-4da0-a5e3-cd008fa0a2eb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 716,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28779d43-9dbe-478c-acda-55f7e6e7d5af",
        "cursor": {
          "ref": "6cdfad24-e2a5-4104-876a-04be79c4e69f",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7b9c56c2-3a26-40c7-adbf-2501071d8bdf"
        },
        "item": {
          "id": "28779d43-9dbe-478c-acda-55f7e6e7d5af",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7789bdf3-6447-4f5f-8aee-9dfa443bff3b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 472,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52280069-8a46-4723-9cfa-17b7fd4ede5b",
        "cursor": {
          "ref": "08d1bb8f-2ab0-41be-b544-87776e316336",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "573385b4-b861-4140-9fee-932f2aa3284e"
        },
        "item": {
          "id": "52280069-8a46-4723-9cfa-17b7fd4ede5b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "78088b9d-78d8-4be2-89ab-ccccb0f2d2b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37758ef7-f4c5-4b16-a893-9abc75756de6",
        "cursor": {
          "ref": "9618f91b-c252-4fb3-879a-0b6539eb11af",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3ed0ea8c-d717-4d61-8fa0-76c2e181acaa"
        },
        "item": {
          "id": "37758ef7-f4c5-4b16-a893-9abc75756de6",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c33d853d-1028-4654-baf9-e9d61edc1e76",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 486,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37758ef7-f4c5-4b16-a893-9abc75756de6",
        "cursor": {
          "ref": "9618f91b-c252-4fb3-879a-0b6539eb11af",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3ed0ea8c-d717-4d61-8fa0-76c2e181acaa"
        },
        "item": {
          "id": "37758ef7-f4c5-4b16-a893-9abc75756de6",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c33d853d-1028-4654-baf9-e9d61edc1e76",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 486,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61678eb3-5758-4cd3-9382-2d2eb5923dcb",
        "cursor": {
          "ref": "3c009d65-3dc3-46c7-8645-9eaa1d082000",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ae006346-c0c9-4aed-aee8-88e57524b8a6"
        },
        "item": {
          "id": "61678eb3-5758-4cd3-9382-2d2eb5923dcb",
          "name": "identifiers"
        },
        "response": {
          "id": "39568cab-b8f5-498c-953e-c9f68d0ca171",
          "status": "OK",
          "code": 200,
          "responseTime": 861,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff030f1-7462-49bb-b14e-a38ce82424d4",
        "cursor": {
          "ref": "868bc434-feed-4d31-9a71-2f04206017c1",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "71c6edbd-911b-4f19-8629-a94cbba7d934"
        },
        "item": {
          "id": "8ff030f1-7462-49bb-b14e-a38ce82424d4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9308ec74-391a-4c8d-aa99-cb696a1fb9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff030f1-7462-49bb-b14e-a38ce82424d4",
        "cursor": {
          "ref": "868bc434-feed-4d31-9a71-2f04206017c1",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "71c6edbd-911b-4f19-8629-a94cbba7d934"
        },
        "item": {
          "id": "8ff030f1-7462-49bb-b14e-a38ce82424d4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9308ec74-391a-4c8d-aa99-cb696a1fb9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbed8e2e-51be-4a79-9696-14ee9d045b62",
        "cursor": {
          "ref": "821fddd9-331f-44b1-9d88-3af8510bda6f",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "78212174-e682-4f3c-8ae1-e5246c9f632e"
        },
        "item": {
          "id": "fbed8e2e-51be-4a79-9696-14ee9d045b62",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a40ffaf3-4def-4bb9-82fb-6a65037d560a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2bdaae-bd79-4320-9869-0dc452fd3ec4",
        "cursor": {
          "ref": "bcf60e2e-4e2f-4f0e-9916-a15e87d5e3a8",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e229085c-123b-40ca-a2e0-6aa90b432ca6"
        },
        "item": {
          "id": "ab2bdaae-bd79-4320-9869-0dc452fd3ec4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9eb76ab6-173d-466f-83d1-5e111e521a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fabf23-ac32-4390-a00d-8fb821e98a76",
        "cursor": {
          "ref": "3b52d59f-5ee0-493e-ad22-e2117ff1ab04",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5ca2765d-b263-4e73-b0aa-2e525057bbb0"
        },
        "item": {
          "id": "09fabf23-ac32-4390-a00d-8fb821e98a76",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "dbc64e1a-9b05-4303-a999-20cd538db35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02edeed4-a2bd-4d20-b5de-53a1c165aa08",
        "cursor": {
          "ref": "7923913c-8598-4aef-b837-c17b7c179766",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a3df586a-09e3-46d3-bcca-ed26c7385a9e"
        },
        "item": {
          "id": "02edeed4-a2bd-4d20-b5de-53a1c165aa08",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4d5ce1c0-34e2-46a7-9ca1-399c84d27663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40fb046-5b35-43e0-b58a-013731825c59",
        "cursor": {
          "ref": "5416d77b-a731-415c-9e25-151a69fcadf9",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "758f3e26-320c-4614-8f1e-52d8ca82de12"
        },
        "item": {
          "id": "d40fb046-5b35-43e0-b58a-013731825c59",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a77c0cce-1b4e-4ed0-b88f-2433241d710e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efcd431-66b3-4e39-969f-392565b0c4a8",
        "cursor": {
          "ref": "f0cec705-8ab3-45f5-bb03-0297a1dd8c8d",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9150a5a5-29a4-489b-827c-122e37ce44a8"
        },
        "item": {
          "id": "9efcd431-66b3-4e39-969f-392565b0c4a8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "00f19ff6-8618-4f37-a365-5715b43b8d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff87ae2-51e0-4954-8575-6839897dc324",
        "cursor": {
          "ref": "302e2035-5e88-4c29-a8af-7818e8d9f73a",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "66b7895b-9cec-4f60-a793-1c0c445bf771"
        },
        "item": {
          "id": "9ff87ae2-51e0-4954-8575-6839897dc324",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9c30b236-8e34-407c-bb6f-eecaa96be192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c4a0a4-fa48-485e-a431-2b6ca6614ba7",
        "cursor": {
          "ref": "bedb69a4-4c92-4aca-9317-9c5b9cb142d9",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d7438206-ce33-476c-aa68-24955aa1275c"
        },
        "item": {
          "id": "f3c4a0a4-fa48-485e-a431-2b6ca6614ba7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c8264877-dee1-4815-a9d9-a6659354b8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea32e96b-3b51-4c88-8b82-c038e581e132",
        "cursor": {
          "ref": "b53b7bbc-52fd-4acd-9e69-128a9cf428b1",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1fe34a45-510c-4ad0-9305-1e7527cbadb1"
        },
        "item": {
          "id": "ea32e96b-3b51-4c88-8b82-c038e581e132",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5008d91f-90f4-4e6c-a3fb-589a606b3e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e051933-9e59-40ee-9f42-90bac34ff941",
        "cursor": {
          "ref": "709294e0-2602-41f6-a917-6273369bc713",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "998386e5-d33f-4c71-a684-3c6b475dc94c"
        },
        "item": {
          "id": "3e051933-9e59-40ee-9f42-90bac34ff941",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7ec54ba5-5651-4fae-aaa3-789175e4961a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b756f0-6f74-44b9-acd7-f15d026c0a0a",
        "cursor": {
          "ref": "47470e8a-2c04-43f5-9238-66dfef74a461",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "315900ee-0994-4029-ab46-e7fb036305b1"
        },
        "item": {
          "id": "c5b756f0-6f74-44b9-acd7-f15d026c0a0a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f71dc22e-8b41-491b-af57-1cf869d0c83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea866cc-7f1c-44e9-a2d8-9cdcf8e12e55",
        "cursor": {
          "ref": "03bf768e-aa8c-4384-9229-59e7826bb943",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c3293870-ace5-4cb6-bd2a-c258ff7f712c"
        },
        "item": {
          "id": "2ea866cc-7f1c-44e9-a2d8-9cdcf8e12e55",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "230d7121-2f42-49bb-8752-4a423d8bc2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30bad4b0-419e-48ea-a48d-8c0f3dd57f7c",
        "cursor": {
          "ref": "dfebfe95-0792-432d-9aad-cfb4265bbd30",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "82f856fb-34cc-44de-98b2-19485fb3ffc9"
        },
        "item": {
          "id": "30bad4b0-419e-48ea-a48d-8c0f3dd57f7c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e9673a38-e792-4934-b3f5-222072da6996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a93bdc-57b7-45ab-8cfe-53ec5c56e9a7",
        "cursor": {
          "ref": "3d9f26e4-45a1-43b9-b3a9-f1f6823500b4",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3f2da675-164b-4a49-9c01-b34c65f4523b"
        },
        "item": {
          "id": "f8a93bdc-57b7-45ab-8cfe-53ec5c56e9a7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2cef966f-ade9-49da-8d0b-be450f548fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5690710-d050-447e-b265-18ad155e385e",
        "cursor": {
          "ref": "99c9b662-10f4-4f30-a26b-8ab4ff4a7a6d",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "44f3d4cf-3130-4252-8b78-e34ecb50a79d"
        },
        "item": {
          "id": "e5690710-d050-447e-b265-18ad155e385e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2a557e3b-a3aa-4fd4-bc10-b1c63606d198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d220191-94b6-472a-a866-0c8032698f30",
        "cursor": {
          "ref": "03981cff-7c77-4c47-8795-dd2827a98740",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7410b9c5-bdf9-49b5-a22e-27ca5ef21cd1"
        },
        "item": {
          "id": "0d220191-94b6-472a-a866-0c8032698f30",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d48b65b4-b48d-4007-8c03-b4842e21c39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be41ed75-bf6e-4aa3-9968-1a54717968a2",
        "cursor": {
          "ref": "2979fb30-d2c9-4e59-aa6d-3ddbbf31c34f",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3764565e-ce14-4db8-a889-b5aa31fd4072"
        },
        "item": {
          "id": "be41ed75-bf6e-4aa3-9968-1a54717968a2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4196747f-559a-4ed2-8e76-ee219810238b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2a3c0d-5680-48ed-967d-db843af8149f",
        "cursor": {
          "ref": "93367f11-7a9b-4242-96e5-588628de1e70",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "eba53241-9e5f-423c-aab1-b7cb23791034"
        },
        "item": {
          "id": "5d2a3c0d-5680-48ed-967d-db843af8149f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b67b33bd-2be7-49ad-b391-a721ca7bcb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848f6cfb-573e-46ee-98fa-aed38eea5b47",
        "cursor": {
          "ref": "7491b947-3820-4e53-bc73-cbe96c9d5be2",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7d28fce7-0aeb-4a87-9420-d7c7ead639b1"
        },
        "item": {
          "id": "848f6cfb-573e-46ee-98fa-aed38eea5b47",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "da5132f2-7ee2-4f26-84e3-3182f6827a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f1b98e-158f-4768-bc69-c2140468b838",
        "cursor": {
          "ref": "206aab9f-b7d2-4ee0-bbf6-e991dd625ce1",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a45206ab-b16a-4441-a2cc-6184637bb9a0"
        },
        "item": {
          "id": "63f1b98e-158f-4768-bc69-c2140468b838",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "70daa548-ef5b-478a-b2bf-a700de6f4253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32344e37-d49e-42fd-b7f6-31d6afc53343",
        "cursor": {
          "ref": "a696c792-78e4-467b-aba8-7f7ecae91352",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "81abd9e7-f6a0-450a-b28d-3f043cf10523"
        },
        "item": {
          "id": "32344e37-d49e-42fd-b7f6-31d6afc53343",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6bfb02ed-2eef-4eff-9309-e99521a1aeeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9cfed03-7b43-4ff8-b37f-984126fbe0a4",
        "cursor": {
          "ref": "bf115030-9119-4666-8a55-12179dd2dff9",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "60132cd4-1014-4ce6-bdc0-e1007843fa77"
        },
        "item": {
          "id": "a9cfed03-7b43-4ff8-b37f-984126fbe0a4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bb6df8ea-b311-474d-b61d-cc94727c9a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e37ed2-20cb-428a-8bc9-719fe00126ab",
        "cursor": {
          "ref": "e2e8ce9d-b1bf-4f9f-a0be-97db1ddf94a3",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "94407769-e1b4-4b71-9555-3ddaa99eb003"
        },
        "item": {
          "id": "b1e37ed2-20cb-428a-8bc9-719fe00126ab",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5059a4fd-1de7-4a20-998f-f827566b9977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3220835f-7ab9-4597-9257-1f048bcd0655",
        "cursor": {
          "ref": "02ca8a6d-c580-414c-bdf6-8af88b3cf7a3",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3504852f-19c2-4022-b7fa-b901dece5e88"
        },
        "item": {
          "id": "3220835f-7ab9-4597-9257-1f048bcd0655",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "176762eb-6b08-49ac-82ca-851b620a16ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e677aa-092c-4bf3-9a1c-3fe5ab57a713",
        "cursor": {
          "ref": "8645422a-d7ed-4d90-9abf-50197b647f10",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6b9f788b-53fd-46b6-b860-fe1f6aa9be29"
        },
        "item": {
          "id": "03e677aa-092c-4bf3-9a1c-3fe5ab57a713",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "64438cd8-0111-48f8-9ef2-8f8f4e2c2949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c85ccc-9e46-4277-85dd-3d02e64b45f7",
        "cursor": {
          "ref": "7f66007a-5c2e-42b3-a16c-f817a8906ada",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7d6cde89-9936-4851-8376-5161e1b2ff50"
        },
        "item": {
          "id": "10c85ccc-9e46-4277-85dd-3d02e64b45f7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "661eeffe-09d6-4009-b6aa-34bac7da9f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ee463c-ee4a-4a0f-af1c-f6a363151ac1",
        "cursor": {
          "ref": "ddfd7753-4fd3-4238-8d88-8e108f10256d",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "eadad7a2-f005-43bb-a28d-613ff6764df1"
        },
        "item": {
          "id": "43ee463c-ee4a-4a0f-af1c-f6a363151ac1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ea7e01d7-22ab-40ba-bae8-03edca7e5742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c11d97e-127e-4d5d-ba1e-0ccab367d7b8",
        "cursor": {
          "ref": "b557223c-c7df-4d3e-9556-ffaa91b90447",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b47c1f67-20f7-4908-8c0a-c9167596750c"
        },
        "item": {
          "id": "5c11d97e-127e-4d5d-ba1e-0ccab367d7b8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ee3837cd-a9a1-4d02-981c-1b16bb48294a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d9f9db-7257-41d1-95f4-1fef39571e0f",
        "cursor": {
          "ref": "8c3ae932-5d9b-4237-a17c-f63a30fba817",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8fbd9de2-dfdb-4661-a8ed-722d17358b24"
        },
        "item": {
          "id": "40d9f9db-7257-41d1-95f4-1fef39571e0f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4bcb411a-c861-445a-ab7d-ee5b3d0f4519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3c06bb-aaa4-439a-b094-f070058066c5",
        "cursor": {
          "ref": "43577f49-f8fb-4bae-bab9-7d5f276cf636",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1546e8d2-5399-4f8e-a01e-510591cbe3bb"
        },
        "item": {
          "id": "2f3c06bb-aaa4-439a-b094-f070058066c5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5a3275c4-ae09-487f-bced-4e5171e92217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471294c5-5ec4-4754-a1a0-dd9bedabab90",
        "cursor": {
          "ref": "187d7800-5453-431b-8dbf-ac106d5f60d2",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8cbe5555-ad63-4028-88ea-14b9b3f69b71"
        },
        "item": {
          "id": "471294c5-5ec4-4754-a1a0-dd9bedabab90",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "79ee5ee3-d3c2-4211-892a-b4795fe2bfe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1908,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34566b13-6097-4f50-93ce-443534dc83dd",
        "cursor": {
          "ref": "4691ded1-e410-4ffe-9dff-e8ab873c12ee",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a5e60783-c4fb-4f25-b291-8e4cd3b76b04"
        },
        "item": {
          "id": "34566b13-6097-4f50-93ce-443534dc83dd",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "14e3d05f-73d9-4ea9-a2f0-bb83869d441e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bcc3741-5c61-48ad-949b-daa6e74f0127",
        "cursor": {
          "ref": "d5580dad-9793-4a89-8906-62bab17e8205",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "54c2045a-602b-42f1-a5a8-b045234c54df"
        },
        "item": {
          "id": "7bcc3741-5c61-48ad-949b-daa6e74f0127",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6a29ba66-f3c5-4aa3-8a68-9aa909ab52f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1424cc4-a335-4305-b0c5-3126f28ac4ff",
        "cursor": {
          "ref": "2ba96cab-1bd7-44c4-9eb4-eb827bd377d0",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d2f38e0c-1ff8-4772-a8f1-a29ac0db50ce"
        },
        "item": {
          "id": "b1424cc4-a335-4305-b0c5-3126f28ac4ff",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "da7ac380-2962-49bf-9bfa-c530e676d550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d030f69-2424-459b-bf9e-ba0cb67c19fa",
        "cursor": {
          "ref": "9ef7006b-a2bc-4b9b-8d5f-aa4a5e18371a",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4e8b4e02-1e6c-411f-8176-914fa269bdc2"
        },
        "item": {
          "id": "7d030f69-2424-459b-bf9e-ba0cb67c19fa",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "72114dfd-a78d-4d4f-bee0-c4b01ba4c28c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 522,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ceb0540-b32d-417b-a329-2f83054b9d24",
        "cursor": {
          "ref": "9f875d75-ac52-4b89-b80a-46d20f924cc8",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8bbaeb92-baae-47f0-aefe-b26432299918"
        },
        "item": {
          "id": "2ceb0540-b32d-417b-a329-2f83054b9d24",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "79dd960e-6ea7-4a34-a6be-6b9b4c1f2325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b29d52-8ef9-4750-ae4f-4d2c95fc3488",
        "cursor": {
          "ref": "915228eb-2a23-4572-9885-f7ae03d5113d",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "dae032ee-b9aa-4bb3-b23a-22401d0ef792"
        },
        "item": {
          "id": "49b29d52-8ef9-4750-ae4f-4d2c95fc3488",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e8248a90-c1a6-48a8-b639-916c85f987db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8033941-196a-489e-ada5-f7582b324ab1",
        "cursor": {
          "ref": "1be6fc85-d5da-448d-aa03-c38a488903d4",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "80693eef-ffb9-4329-b4ff-ca5bd5b3fa04"
        },
        "item": {
          "id": "c8033941-196a-489e-ada5-f7582b324ab1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ff43c613-fb8f-4b8f-bbd6-8a5e706fa566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c45075-bd50-4b4d-9be2-c9c6520bf668",
        "cursor": {
          "ref": "85b54af9-df83-4ffd-9332-47ee6cfd20e7",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1ada4297-82b3-432a-8393-9ee4fb4d331a"
        },
        "item": {
          "id": "38c45075-bd50-4b4d-9be2-c9c6520bf668",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5630c910-59dd-44e9-9ce2-6e72b68c7263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891a7ebc-2ec8-4516-8abe-1c3546707189",
        "cursor": {
          "ref": "74b09b37-5206-40d1-9e2d-529e2d3d494c",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "93ba7426-cc74-4af8-9e3a-cd5478d25f59"
        },
        "item": {
          "id": "891a7ebc-2ec8-4516-8abe-1c3546707189",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "00d9dc88-4142-4e74-bad8-e7928ebac287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1003,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3592e89a-0670-4f83-ae46-d8ce9e98f758",
        "cursor": {
          "ref": "2ed9d9f4-6b6b-4a84-8b4d-f958aaade266",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "cd033248-9893-4411-af9a-fca9b64d9a28"
        },
        "item": {
          "id": "3592e89a-0670-4f83-ae46-d8ce9e98f758",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "498a54ec-d93e-4478-b220-639a40ab99e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 887,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17164082-3b2c-41cf-8bf7-37d0602c3ae8",
        "cursor": {
          "ref": "357b7979-a9eb-4ebb-8881-df40320e5fdc",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "183ab0eb-c521-4121-bc95-adbdcaf95b4c"
        },
        "item": {
          "id": "17164082-3b2c-41cf-8bf7-37d0602c3ae8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "71e6cbe9-856b-48af-ad28-51e2b70fd57f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 995,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1827c75c-1cef-4898-bb69-bd33ecc69551",
        "cursor": {
          "ref": "c2a3b1ea-78e3-49d6-8b42-0ec1ced5c2fd",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "725acf1b-beef-41c9-9536-9af76697fb50"
        },
        "item": {
          "id": "1827c75c-1cef-4898-bb69-bd33ecc69551",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2735ec41-b508-44b7-9db2-0e1a514bffed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1176,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f743dab-958d-4079-9c8b-062769e71dbb",
        "cursor": {
          "ref": "7357322a-47a5-45b1-bf62-dd575aeb06fb",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ea96c1da-b4ba-45cf-ac04-cafb91a5a226"
        },
        "item": {
          "id": "5f743dab-958d-4079-9c8b-062769e71dbb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "659ec247-af1d-4cd9-a0cb-270d66fb34c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1453,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbde8b44-98de-4573-a50d-cc9752e7aea0",
        "cursor": {
          "ref": "21927c61-9fca-4426-a5af-964abc91af9c",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8ea4ef64-99b2-49df-9298-927942b87e66"
        },
        "item": {
          "id": "bbde8b44-98de-4573-a50d-cc9752e7aea0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "48cd194b-14f7-4069-b66c-181a91fc54ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1327,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608d2d7a-8dc0-4fca-bc2e-5590bb9537d2",
        "cursor": {
          "ref": "33f5e696-6cc5-4f38-810a-37c2d8d66775",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1df04d44-aaef-4fdc-879f-c81036c5e725"
        },
        "item": {
          "id": "608d2d7a-8dc0-4fca-bc2e-5590bb9537d2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e66d2b54-bba6-4b3e-9c2d-794ca52d8aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcce5fe-c8ee-4449-8e0f-13dd39e55178",
        "cursor": {
          "ref": "162dc704-6d03-4ca8-aa98-77a1be0f798e",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "798c8032-f776-4fee-b22e-19ec2501bbca"
        },
        "item": {
          "id": "4bcce5fe-c8ee-4449-8e0f-13dd39e55178",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "05672370-9ba9-4995-9302-6b568e1644a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef547505-eb97-4d4c-94be-c2ce37b2d3da",
        "cursor": {
          "ref": "64d4d22e-79bc-489e-b621-aa45a14b3424",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "af55a4aa-862d-4ae7-9eac-7d530976a4fe"
        },
        "item": {
          "id": "ef547505-eb97-4d4c-94be-c2ce37b2d3da",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "cfc3616b-890f-4801-ad8e-2402e7c16fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198f9520-8f60-4119-8be9-f53c9220480a",
        "cursor": {
          "ref": "33e5fad5-b32a-4232-8072-98e0babf500c",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "119bd91e-a4ae-4612-85e2-05452944aad6"
        },
        "item": {
          "id": "198f9520-8f60-4119-8be9-f53c9220480a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ba35577d-60cd-4c25-8f29-4fb78e9d6d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c4fb34-c86a-4329-9d7e-a54d19743674",
        "cursor": {
          "ref": "b65374f2-4dd3-4fa2-8270-1aed86e565c8",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fb10c1f1-2ac9-4fa4-a8f7-2de6b921d99f"
        },
        "item": {
          "id": "67c4fb34-c86a-4329-9d7e-a54d19743674",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8accd90b-9797-4c0d-841b-13d2b0fb5cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24ad2d4-eb7a-46bb-842c-438d2f50c11d",
        "cursor": {
          "ref": "0e039120-a078-4896-89c5-3c0feb8cf64d",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "baee6d34-0fbc-4146-b240-fbb519c28675"
        },
        "item": {
          "id": "a24ad2d4-eb7a-46bb-842c-438d2f50c11d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "00fedca3-5f3a-46d0-8774-6a102469a8d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50eeb580-fdb1-4a4e-967b-cc960da31aef",
        "cursor": {
          "ref": "7a9571e0-f55f-45c4-9d45-300d851deb36",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1524b508-596c-41e7-b738-3b07c52188ff"
        },
        "item": {
          "id": "50eeb580-fdb1-4a4e-967b-cc960da31aef",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "15272506-995a-4ba6-8392-520998a490ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b71ea1-6236-4bf8-92ec-585bfe9faf7d",
        "cursor": {
          "ref": "158f6932-5def-40da-9ee1-a0b6df6dc2ae",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a1ef750d-f554-4a28-8bf7-ab01df7f656e"
        },
        "item": {
          "id": "f3b71ea1-6236-4bf8-92ec-585bfe9faf7d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3157c409-22ce-4a66-ad44-8bf4e5f23a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb43090-bfe7-477f-a824-37cfb64cdfe9",
        "cursor": {
          "ref": "c551dcd4-4f4e-47e7-982a-50323d71d338",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c665ac09-ad09-418e-bb85-a71cfb26c9b2"
        },
        "item": {
          "id": "dfb43090-bfe7-477f-a824-37cfb64cdfe9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a67653e0-b4fb-47c1-8d70-e4db66a09322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71769811-d000-402b-ba05-98e0069aa9e5",
        "cursor": {
          "ref": "dd8a26bd-8d0b-4215-a0bf-9bd7bd90d90c",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b5ec51bf-d796-4d87-8f57-3db84f40379d"
        },
        "item": {
          "id": "71769811-d000-402b-ba05-98e0069aa9e5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a865f2e5-632b-4521-9ae9-5958fb641a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48519adc-9a48-42d0-acb8-ef789b76df56",
        "cursor": {
          "ref": "bb6c3520-d640-4267-93b3-a93fd64b8069",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "abdc86bf-07a0-48e2-8769-68b244e48358"
        },
        "item": {
          "id": "48519adc-9a48-42d0-acb8-ef789b76df56",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "cac319db-2d1f-4c2c-804d-8a53bd87f8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677047de-662b-4de3-97f8-1a4d54367f42",
        "cursor": {
          "ref": "66a3c92c-af2c-484e-96f9-2c6680ed0bce",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d6d36444-0719-4e70-82ed-1dcc0ac6d44f"
        },
        "item": {
          "id": "677047de-662b-4de3-97f8-1a4d54367f42",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "edcb4a6b-0c2a-438c-af17-3871bbb09e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67300ed0-cba8-4f65-b0c4-23cfb811b631",
        "cursor": {
          "ref": "b177158c-7851-4065-921f-96c9531f2d5d",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c697dacf-0701-4513-9098-8555cc2f4cdf"
        },
        "item": {
          "id": "67300ed0-cba8-4f65-b0c4-23cfb811b631",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2f591a59-d5ad-452a-b93d-f167cc07ed3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d407e8fd-866f-4da0-ae40-0b9db2ca682c",
        "cursor": {
          "ref": "cd5a8aea-6d68-4473-92eb-cb1d94e4e600",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2f49e3c6-8c0b-4ddc-9d68-9d11f6c091ed"
        },
        "item": {
          "id": "d407e8fd-866f-4da0-ae40-0b9db2ca682c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ba7cdc7f-2dfe-4f7a-9380-bfa130b2698c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fb203c-addf-45b9-b825-47d8d66e4a0c",
        "cursor": {
          "ref": "78d67acd-cf80-4d94-92ae-065de2a9d56e",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "85154794-0aa9-4cf7-ac5b-06341fd0e258"
        },
        "item": {
          "id": "76fb203c-addf-45b9-b825-47d8d66e4a0c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "19510656-54fe-49f6-a97b-47bc7b5ff6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be21825-4946-4353-aa0d-30c1601134fb",
        "cursor": {
          "ref": "17f48f39-324d-4627-9e5a-7d656b08ebf4",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d8834c14-05b0-4bcc-a874-f7567cb0b24d"
        },
        "item": {
          "id": "4be21825-4946-4353-aa0d-30c1601134fb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5fd24e73-8ba8-43c6-a6d6-94719dfbc11c",
          "status": "Created",
          "code": 201,
          "responseTime": 2247,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "f98b7a08-d246-40f8-8f14-9cb3f17a69c4",
        "cursor": {
          "ref": "d2dc787d-ea55-41fb-b827-9db84044c7f2",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "06937bc6-0106-41bf-a9a8-d75e84117a00"
        },
        "item": {
          "id": "f98b7a08-d246-40f8-8f14-9cb3f17a69c4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "730fd620-e6ed-4004-9da1-7d23732da0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b077260a-f42d-46c6-9f6a-756365afe215",
        "cursor": {
          "ref": "502dc5f6-310b-4b78-b0f7-da6395d05995",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d53769b2-7d16-4769-9532-ae71659200d0"
        },
        "item": {
          "id": "b077260a-f42d-46c6-9f6a-756365afe215",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "13b0f5ab-a5e9-4419-9c20-5cd11ebd3c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f480f466-f08a-4ffd-b8d3-b7dddf3e84db",
        "cursor": {
          "ref": "539da294-ce3e-48a5-9767-918b94cc5cf6",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "86594122-67a0-4f00-8140-fa60938d6a21"
        },
        "item": {
          "id": "f480f466-f08a-4ffd-b8d3-b7dddf3e84db",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "34148016-95f1-4a7c-88ab-f84e5c8af437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30c2eaa-4287-4c2a-8053-8f6424de5f0a",
        "cursor": {
          "ref": "3c12c5d0-52e4-497b-b93c-17b9ece3564c",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d76e42b0-64a4-412d-b044-971ce4567ffd"
        },
        "item": {
          "id": "a30c2eaa-4287-4c2a-8053-8f6424de5f0a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4d3209d1-5d2c-4f17-b31e-601cdd82dab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1613ca2d-09d9-4d25-898c-68a7651f3033",
        "cursor": {
          "ref": "51e2c0c3-cda9-46d9-b899-601ade36d0ec",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e39aefa6-e2a4-41e9-9027-aec5e4b0d7e2"
        },
        "item": {
          "id": "1613ca2d-09d9-4d25-898c-68a7651f3033",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a789d91a-8aac-4baf-8c9a-790b9e4d7aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb9cf69-0c6f-445d-85dd-3b8269e395fb",
        "cursor": {
          "ref": "a047e0fe-554e-40b0-9d34-5113c18871bf",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "dca791db-e555-4f47-bd0e-a26ee23efb5d"
        },
        "item": {
          "id": "cfb9cf69-0c6f-445d-85dd-3b8269e395fb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "901f6453-9d8f-42b3-9aa2-2798f4bb8053",
          "status": "Created",
          "code": 201,
          "responseTime": 2272,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "f2735f85-85c3-47e9-a835-9456d80eaae6",
        "cursor": {
          "ref": "c0a2ea0c-5adc-42ed-a609-e50ab2ddfecc",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8c43d53b-151e-43de-8811-14ef8621bcf4"
        },
        "item": {
          "id": "f2735f85-85c3-47e9-a835-9456d80eaae6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3e858174-3f8a-4994-9255-ce87395a71ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd47fbf5-e478-4a12-80a2-50d5e8495eb6",
        "cursor": {
          "ref": "96f75230-a659-4c74-9aa9-46a8385c68a2",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1223880b-8513-441c-92a8-5d1338caa9fe"
        },
        "item": {
          "id": "bd47fbf5-e478-4a12-80a2-50d5e8495eb6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9c7c8755-fbc1-427a-a568-05f67cb692f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b250cc7a-a378-4665-a381-1173205e3a2a",
        "cursor": {
          "ref": "6c366019-ccc1-47dd-8c90-9dd668395bd3",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "22d850c0-037f-4658-a3bc-4d2604142176"
        },
        "item": {
          "id": "b250cc7a-a378-4665-a381-1173205e3a2a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2e6d9ec7-9971-4c0b-af9e-0c9695a89f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe83e4e9-3deb-483c-bffd-80a4af6a9bc3",
        "cursor": {
          "ref": "27f2e2dd-fde7-4fae-9148-c84523181dcf",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "10bee4e3-5a7e-499f-a395-543fd425df96"
        },
        "item": {
          "id": "fe83e4e9-3deb-483c-bffd-80a4af6a9bc3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3501898e-ee0c-4ab6-a8c1-6a4d2ac6586a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f4d9aa-a72b-4375-9722-88fdc45b0acc",
        "cursor": {
          "ref": "061382f6-9c2b-48ca-93a3-16f8ed7d83be",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5fa673a8-f5eb-4a93-a83d-f9dea328309c"
        },
        "item": {
          "id": "59f4d9aa-a72b-4375-9722-88fdc45b0acc",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fbc22931-2a84-471b-a028-05efc188346f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c3f568-f0f8-47ff-be0f-1582482943cb",
        "cursor": {
          "ref": "ba756dd1-f5bb-4b44-8f0f-10acef6101e0",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1da566ea-e7ba-4bad-8214-2d19e902e619"
        },
        "item": {
          "id": "22c3f568-f0f8-47ff-be0f-1582482943cb",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d347137a-e901-4487-9446-68899e865834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f368bb0-9b8f-4c5a-9ebc-48ec49bef068",
        "cursor": {
          "ref": "dcf0acc1-6003-4fc7-82d5-b442be6f1e1e",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d4267324-03d9-4907-9452-a2881971de9b"
        },
        "item": {
          "id": "9f368bb0-9b8f-4c5a-9ebc-48ec49bef068",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a24661c0-39e2-4d4e-b944-f154973e5ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e900c94-f9a1-4c78-aaab-aa32450e662d",
        "cursor": {
          "ref": "1ae0e507-84b0-4660-bdcb-a7433d722c45",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6b31d81b-8018-4997-b47b-599517f1fcfe"
        },
        "item": {
          "id": "2e900c94-f9a1-4c78-aaab-aa32450e662d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "19eb76da-8c08-4f44-82be-8790740ca1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2c40f1-c262-4357-8138-edf4fb907a78",
        "cursor": {
          "ref": "dfd13179-7d95-4c67-acc9-1b4552814d67",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5ceff4b5-7765-4838-abd8-197c04ec9ee9"
        },
        "item": {
          "id": "cb2c40f1-c262-4357-8138-edf4fb907a78",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e634da33-e8c1-4997-bcd2-26e345a070d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a538fe88-139d-4c0a-922b-4d10c13aa428",
        "cursor": {
          "ref": "126c4e94-66df-4eb4-92af-f96924d5cc2b",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "247b2067-057a-43a2-b8af-765f3978a34a"
        },
        "item": {
          "id": "a538fe88-139d-4c0a-922b-4d10c13aa428",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3bcc978a-dfe6-4de9-95bf-88e601b9f8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a54b24d-2bc1-456a-9358-d38e1ee32e66",
        "cursor": {
          "ref": "839fbf75-fc9d-41ba-8d34-51c96303a41b",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "149a8154-fa28-446c-8cde-4e98128b8c2d"
        },
        "item": {
          "id": "1a54b24d-2bc1-456a-9358-d38e1ee32e66",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8a68b057-e361-422e-b455-2a5119ea6625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32233a5-2f20-4691-b041-404c13d2f5d9",
        "cursor": {
          "ref": "0d6cd520-bc3a-475e-b0ca-d60895f705ec",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bf945d36-4281-4480-99e4-7d6197138b17"
        },
        "item": {
          "id": "c32233a5-2f20-4691-b041-404c13d2f5d9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "59a60635-1232-4047-a5e0-4bc00f1095dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d85d1c-5572-451e-9726-cdbb7df1d709",
        "cursor": {
          "ref": "0ec40aca-fd07-4838-9b60-f16d9466dfa0",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "59293650-c577-4ec9-82ab-883beb4b0d5c"
        },
        "item": {
          "id": "82d85d1c-5572-451e-9726-cdbb7df1d709",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8346539a-3ae6-4c75-9614-206c34ed69fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd1fbf9-9361-4795-956a-dabf46e0d2f0",
        "cursor": {
          "ref": "a43fe517-91a9-4a92-bb12-a0bc53acea62",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f283c212-e77e-4ce7-8044-f125f4b3dfe9"
        },
        "item": {
          "id": "2bd1fbf9-9361-4795-956a-dabf46e0d2f0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b46bb555-62db-4406-9010-ce8378db3121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80fe81b-3fd9-4235-b2cf-c461691b5dc4",
        "cursor": {
          "ref": "ad295f90-829e-47f1-8ace-0d29548ea1c2",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2cd438e7-11ee-4711-9267-4d681d79a2eb"
        },
        "item": {
          "id": "f80fe81b-3fd9-4235-b2cf-c461691b5dc4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4b18e588-4c58-4222-8a96-1f2d2589c2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eee1ac9-bc0d-444b-8eb2-3d1f0167ddcd",
        "cursor": {
          "ref": "03a3497f-a384-46ea-8df3-c5ff3ac2d583",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3273277a-1632-49c0-96e6-e3bc9d1168f6"
        },
        "item": {
          "id": "7eee1ac9-bc0d-444b-8eb2-3d1f0167ddcd",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "995a12bc-1d0e-464f-ac42-f7136e70792d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8bfabaf-2abb-45e2-aee1-0fb0d786c62d",
        "cursor": {
          "ref": "64fcb860-4c3a-495f-b022-fb6e93912d95",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3a5751d3-8c74-4656-b939-88ba7030bfbf"
        },
        "item": {
          "id": "a8bfabaf-2abb-45e2-aee1-0fb0d786c62d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2e921e11-59a3-4fb2-8c0d-decb4d87d126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880df1ec-c661-49a7-9b19-f97030bc04ac",
        "cursor": {
          "ref": "1691709d-81f0-4f5c-ae68-4cbdbc8032d1",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3ab66cf7-3a34-42e2-8352-f6b918ee727a"
        },
        "item": {
          "id": "880df1ec-c661-49a7-9b19-f97030bc04ac",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "aee884a1-4299-4b38-a4fb-6b8628e8880d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb86aab-e5b7-4828-bcd7-f1b2cf3e6367",
        "cursor": {
          "ref": "13ebc6a0-cf45-4b7b-bd5f-5152edf72894",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d713fe28-afc7-455e-a2e2-59d7855f9923"
        },
        "item": {
          "id": "bdb86aab-e5b7-4828-bcd7-f1b2cf3e6367",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "809234e0-9140-448e-81e4-85fae125c966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0ff25d-e96f-4844-a72b-89ca019d2f3f",
        "cursor": {
          "ref": "af362f5c-52f6-414e-8085-83f2467cfb84",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "094069f7-45d4-4aae-a21f-8df88e4aed4a"
        },
        "item": {
          "id": "bc0ff25d-e96f-4844-a72b-89ca019d2f3f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d76df80f-8c17-4bfc-aa15-7cd9fdfd7c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fdae55-9d47-46c0-a9ea-d806b5da303f",
        "cursor": {
          "ref": "e7140e80-f9a3-4753-987d-0091a14a0fd1",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f3e5d5d9-baab-4f2e-941e-7073cba64804"
        },
        "item": {
          "id": "22fdae55-9d47-46c0-a9ea-d806b5da303f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8d0e13af-22e8-45c4-b6ca-7a71c38d27a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9624bb6d-31fd-44bf-9cc1-f05d37bdfe26",
        "cursor": {
          "ref": "360cd81a-2340-413a-b79a-ee51311e3bbc",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7357ad6b-84fd-46f8-87b2-767f6f2d6914"
        },
        "item": {
          "id": "9624bb6d-31fd-44bf-9cc1-f05d37bdfe26",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fc9ed451-abff-478f-a409-d1c8d33551dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509d9e68-d41c-4520-b7b0-559ce56ea335",
        "cursor": {
          "ref": "d87ac25b-b04c-4859-8491-ca6f14381262",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "269b10c8-6f81-47ec-a79b-ee26c4856fc0"
        },
        "item": {
          "id": "509d9e68-d41c-4520-b7b0-559ce56ea335",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "bf686945-3cf7-45e0-bd2f-8d648aa96c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3de3960-3072-4748-9e78-e159ae845d4c",
        "cursor": {
          "ref": "6d4f3ad2-3ba0-49b5-9785-e0b3590f1a1a",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bfd5e777-c911-455d-8a68-6ff0cf46945b"
        },
        "item": {
          "id": "b3de3960-3072-4748-9e78-e159ae845d4c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ee79738e-9f56-4fd6-bdb1-d8b4d2c9578d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce022de-4fd1-45dd-8521-069a717bab1b",
        "cursor": {
          "ref": "379c5b38-6468-429b-997f-0f128d094e8b",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1c196454-01e0-4c51-b670-acf8168b9d6f"
        },
        "item": {
          "id": "dce022de-4fd1-45dd-8521-069a717bab1b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "53fa236c-640a-46b5-8564-3ddc6b26a0d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb51b0b-1924-4b7d-a9c9-938e363b51db",
        "cursor": {
          "ref": "3716d906-74d9-465c-b5a3-5c10333f4f58",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8ba7073b-7ea9-4b8e-8e70-2a608f109994"
        },
        "item": {
          "id": "aeb51b0b-1924-4b7d-a9c9-938e363b51db",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "592d7b1f-6a01-4b1b-aa40-7cabf48b1b0a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 538,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06121fbb-3bae-42f6-9e77-e092210b2fe6",
        "cursor": {
          "ref": "d589aa0d-1196-41cf-86df-4e803be289a8",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b1411624-7419-452a-878f-b07f814a2093"
        },
        "item": {
          "id": "06121fbb-3bae-42f6-9e77-e092210b2fe6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8f613432-b15e-461a-95a2-c21ff747b7cc",
          "status": "Created",
          "code": 201,
          "responseTime": 4493,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "c27d1079-5d12-4f48-adca-0490ef3ed7f5",
        "cursor": {
          "ref": "42c5d9ed-8dd6-4cd9-b13a-028ffcd81e60",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "74bbb202-60bd-4ff3-9bd3-c97b56d848ec"
        },
        "item": {
          "id": "c27d1079-5d12-4f48-adca-0490ef3ed7f5",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "33ad562c-0b2c-42af-b58b-836648cfc72f",
          "status": "Created",
          "code": 201,
          "responseTime": 2983,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "907b470d-b7b6-4c74-913b-bbb25855ee53",
        "cursor": {
          "ref": "37550dcf-68c1-4252-983d-9ca1ef4ce828",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ed5d6785-7faf-4b86-9065-76afed19dda0"
        },
        "item": {
          "id": "907b470d-b7b6-4c74-913b-bbb25855ee53",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2da3f2ea-8eca-4f2c-b782-40c40926e93a",
          "status": "Created",
          "code": 201,
          "responseTime": 2155,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "7f0acb65-7f35-4cc6-afc5-d4dc54f4d0bf",
        "cursor": {
          "ref": "f10ca136-72da-4262-988e-1cc2263cbbcb",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c7b8952b-0642-4637-999c-ed04799adfd9"
        },
        "item": {
          "id": "7f0acb65-7f35-4cc6-afc5-d4dc54f4d0bf",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2fd05b9e-bd89-44e7-bb7c-dadc3729e970",
          "status": "Created",
          "code": 201,
          "responseTime": 1944,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4060ae82-47a1-48fc-abf9-621c2772b5ea",
        "cursor": {
          "ref": "58bb2731-99d6-4d69-8a0e-788ef02a7c15",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0e5ea7c2-0853-47e8-8b68-dddd014d3a4e"
        },
        "item": {
          "id": "4060ae82-47a1-48fc-abf9-621c2772b5ea",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5e1ebee9-7ed0-479a-9232-617902c2c03f",
          "status": "Created",
          "code": 201,
          "responseTime": 2143,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "72fd57c8-bd33-46f1-90ca-a35a1cdab138",
        "cursor": {
          "ref": "5fb94b75-9d98-42a0-8934-9f4d90bf94e3",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ef504b73-6b40-49b5-9924-3f59ad7f34ea"
        },
        "item": {
          "id": "72fd57c8-bd33-46f1-90ca-a35a1cdab138",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e76d71ff-c9ce-4dc1-8865-c5b3e41a2400",
          "status": "Created",
          "code": 201,
          "responseTime": 2774,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "4e973829-6ccd-44c0-928b-59c0e1d102d1",
        "cursor": {
          "ref": "97e41111-e8cc-4876-9ed6-3257c080a439",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d8f020e4-c52e-4cab-be9e-83c41813174a"
        },
        "item": {
          "id": "4e973829-6ccd-44c0-928b-59c0e1d102d1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f25ef082-8786-45b1-bf5e-a8f1ade91cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e973829-6ccd-44c0-928b-59c0e1d102d1",
        "cursor": {
          "ref": "97e41111-e8cc-4876-9ed6-3257c080a439",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d8f020e4-c52e-4cab-be9e-83c41813174a"
        },
        "item": {
          "id": "4e973829-6ccd-44c0-928b-59c0e1d102d1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f25ef082-8786-45b1-bf5e-a8f1ade91cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22751505-f9fb-46a9-9531-0d474ec76e08",
        "cursor": {
          "ref": "16f7cb89-5d9b-4ca0-9d28-60c72bcd3a08",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7fd1ea2f-291a-466c-9bfc-77bd43455304"
        },
        "item": {
          "id": "22751505-f9fb-46a9-9531-0d474ec76e08",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "338c4b4c-0092-4226-9881-07fe3f76fcb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52a1610-9cc3-413f-80dc-147009b93bad",
        "cursor": {
          "ref": "f33c8385-57c9-4b19-bbcb-590c7eb3361d",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9da8beeb-b899-4609-ba1b-079dc357a70b"
        },
        "item": {
          "id": "e52a1610-9cc3-413f-80dc-147009b93bad",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "65031278-f6f4-4c98-9750-e42e0cdbe48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665ddfb1-f372-4273-b538-9531c96d6cc7",
        "cursor": {
          "ref": "70e908b3-5326-41b0-876d-cea988d6c830",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c88e5add-8e5c-451b-85fc-16956d894d29"
        },
        "item": {
          "id": "665ddfb1-f372-4273-b538-9531c96d6cc7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9ad245fc-03a3-4961-93fe-b44a1677b141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865b7749-1023-451c-b98a-5983784a54a5",
        "cursor": {
          "ref": "33e1d38d-4775-4410-a5c1-24f9a478e3a2",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5f837c65-1a3f-4728-9884-e33a1af89de8"
        },
        "item": {
          "id": "865b7749-1023-451c-b98a-5983784a54a5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "05691330-7d97-495f-a592-bf1b33997470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c44e377-0aec-49f6-8f75-18e6838392c3",
        "cursor": {
          "ref": "61d78c7b-ce09-4ff8-89cf-e3d4a8f48e81",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e111b3b2-a3de-483d-82a0-0827eb6e1dbc"
        },
        "item": {
          "id": "2c44e377-0aec-49f6-8f75-18e6838392c3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "425da5a0-2497-4af0-b910-ae716e934996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03824101-6e6d-4a36-b922-efbf5539d191",
        "cursor": {
          "ref": "c93b757a-9da9-4a7f-a875-5b97e303ad4c",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "898010ce-fecc-497b-b3e8-29cbdcb65b0a"
        },
        "item": {
          "id": "03824101-6e6d-4a36-b922-efbf5539d191",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a1d248c3-456b-4513-9efe-6f17d85a7426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980bfba8-0940-46d1-9033-19135fc3feb7",
        "cursor": {
          "ref": "39f67960-ee2c-4414-9027-a6dcd9f89a30",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d8264f54-b3ff-40de-a2de-8407d07b7f20"
        },
        "item": {
          "id": "980bfba8-0940-46d1-9033-19135fc3feb7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2be2d526-9a7b-45a2-b8f7-38c2e9d48573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5228ed9c-e29d-4541-9ff8-95be545311bd",
        "cursor": {
          "ref": "7a03dfc0-a346-4b1a-b254-d7c0b6ae2dbd",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d328b291-1a4a-49dc-a4ce-749a4370b9a4"
        },
        "item": {
          "id": "5228ed9c-e29d-4541-9ff8-95be545311bd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3fe4b6c0-ff4b-4614-a4bc-b7be3d396779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452560ca-453c-4b18-b595-f8f89b066d0a",
        "cursor": {
          "ref": "6ccec14b-bded-4bab-96be-072ec8dab196",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b5f91177-9aa7-4109-99e0-8a2d74307f98"
        },
        "item": {
          "id": "452560ca-453c-4b18-b595-f8f89b066d0a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d257eee4-9cc6-4bd7-bef8-d01cc617789c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059499fb-427d-4af4-869b-3242ea908f05",
        "cursor": {
          "ref": "ff415363-8926-44ce-b233-2f9bb749e99b",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f809632e-8fe5-40cf-ab32-fc6331cdf11a"
        },
        "item": {
          "id": "059499fb-427d-4af4-869b-3242ea908f05",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4572ffb6-7668-48ed-b342-8dca1648e44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2759d3b9-d980-48c1-9b59-6543a271984c",
        "cursor": {
          "ref": "31d3ea0c-b9bb-4aa0-bfab-abc643c141fa",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "217afed2-bfa5-4e63-8f43-4f1da9d4820b"
        },
        "item": {
          "id": "2759d3b9-d980-48c1-9b59-6543a271984c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fdd67cad-5aaf-435b-aae1-7c490a4d4fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1190e72f-9772-4c07-93ad-a8dc47b856d2",
        "cursor": {
          "ref": "70f69967-bf53-4d47-830d-3960159d42bf",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6b0487fe-5f0a-46e3-875c-fec4b8a99256"
        },
        "item": {
          "id": "1190e72f-9772-4c07-93ad-a8dc47b856d2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a6aa9268-c382-4770-b580-2f49e73b5e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5fef29-2747-4df4-8d2e-ee43ef769bbe",
        "cursor": {
          "ref": "13456a7d-08dd-4bef-84e3-13d542f366f5",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8a0e86b8-5367-40d4-98b4-e999f5dafe62"
        },
        "item": {
          "id": "4c5fef29-2747-4df4-8d2e-ee43ef769bbe",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cbdd3753-01af-4d38-816b-4ec14c348f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb11837-3f20-4d1e-a950-dad294bd702c",
        "cursor": {
          "ref": "696f1092-03d9-43bc-9213-22d94bc146ae",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8eff51a7-99ff-4ff9-a2e1-5be122e080dc"
        },
        "item": {
          "id": "1eb11837-3f20-4d1e-a950-dad294bd702c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "024355be-dc76-4ae6-974a-e56c67b4a297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0193e225-5684-416e-84b6-6aa376724f6b",
        "cursor": {
          "ref": "4f2e3bbc-6a7d-4ba7-b4dd-945c0cc58549",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e46c3358-c338-4f02-b410-9128136e8a31"
        },
        "item": {
          "id": "0193e225-5684-416e-84b6-6aa376724f6b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5d7ff9bd-b304-48e5-bf9b-c8802d5a4d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bf596f-0ea9-40ad-9278-adce59e2efdf",
        "cursor": {
          "ref": "1be8d2ff-88ad-421f-93a6-758cf8551ad4",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "42ee09f8-adf5-440b-8201-457a4d3ae228"
        },
        "item": {
          "id": "07bf596f-0ea9-40ad-9278-adce59e2efdf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e88752b1-0db8-42e2-96f1-4561c134e117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1057,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61802fa9-66a4-4a49-9ad9-2104dafb5742",
        "cursor": {
          "ref": "99e8ce2d-3184-42f6-b8b7-04d5ee3af1d3",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "18e18776-7ca3-4202-b987-ce8322e2676d"
        },
        "item": {
          "id": "61802fa9-66a4-4a49-9ad9-2104dafb5742",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1b97eb62-47f4-4eac-9400-13bf51513736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f355c8-6e3e-465b-9bb8-bbde3b7cd5f2",
        "cursor": {
          "ref": "3e52f4dd-46ac-4028-879a-b55c438e4b31",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d051478f-2a5b-455e-9a02-3aadad105b98"
        },
        "item": {
          "id": "93f355c8-6e3e-465b-9bb8-bbde3b7cd5f2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3b4c9e6b-1bef-4c4b-acfa-5e7109abcb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1175,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2b6a30-3d39-45f9-b542-0cbe4ba75669",
        "cursor": {
          "ref": "20b91533-0ba3-4f38-973c-08c25cd71485",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "40e89c1a-6a6f-469b-8f32-19abbe0699f6"
        },
        "item": {
          "id": "fa2b6a30-3d39-45f9-b542-0cbe4ba75669",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f041531e-af24-478b-9ec9-4b45ee855043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fd9b43-ad5f-4038-afb3-d41f50aadef0",
        "cursor": {
          "ref": "b8320bd0-d786-4791-84de-a972dd7bccd3",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9113411b-81f1-4743-98b1-f2a623b09598"
        },
        "item": {
          "id": "08fd9b43-ad5f-4038-afb3-d41f50aadef0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ca2187be-54b2-427f-9bc6-4953cf77e58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7eb8310-cb71-4290-abb3-98b56feeccc3",
        "cursor": {
          "ref": "05582353-31bd-49db-9f8b-b533523a5092",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "dd997a95-9970-42b6-a32b-f75b2abd3a44"
        },
        "item": {
          "id": "e7eb8310-cb71-4290-abb3-98b56feeccc3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c191ecad-68af-44ee-b125-21c7ede0a286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f981fba-ef61-480d-a104-43488f8a5ea6",
        "cursor": {
          "ref": "2c651a37-143b-41ea-987f-6457c4bed80b",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9700ad96-8732-46eb-b46b-056944d881c2"
        },
        "item": {
          "id": "9f981fba-ef61-480d-a104-43488f8a5ea6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d507a175-41fb-4b4e-b67e-a6db4ea4872d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625deacb-eee0-40d4-9651-b9c91255dcc4",
        "cursor": {
          "ref": "46e79322-ad03-433d-89aa-84284bd73a87",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "978d3bd2-fec9-42fc-acfb-aadd8530c8ed"
        },
        "item": {
          "id": "625deacb-eee0-40d4-9651-b9c91255dcc4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "27a71167-afa4-4d1a-92ff-9921176388d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3266227a-dbd6-495c-a44f-3302b2adb701",
        "cursor": {
          "ref": "838877ce-1714-4fc5-a5d4-9fddd3e87ec2",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "52fc0411-de68-40ae-83fe-6748e8312735"
        },
        "item": {
          "id": "3266227a-dbd6-495c-a44f-3302b2adb701",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "898dee32-8d41-42db-ae51-78f666c208f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e5c806-1467-4725-a589-77eab27ffb1b",
        "cursor": {
          "ref": "d561243c-e220-4479-952b-a2b0a06da280",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f5da916b-0423-4200-bf33-232edc4bde14"
        },
        "item": {
          "id": "06e5c806-1467-4725-a589-77eab27ffb1b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ffb3b14c-4376-4769-9fea-b34e0feec215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680b159c-4c98-4300-8233-c4649e9e3369",
        "cursor": {
          "ref": "9b424fa3-dc59-4807-9946-72273bdcf136",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5842c1ae-8db7-4cde-ae81-d2bcd4193441"
        },
        "item": {
          "id": "680b159c-4c98-4300-8233-c4649e9e3369",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3a2ac3ec-5ccb-4c1b-beab-a1e5cb1acca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5156c216-9a5b-4fcc-850f-393324c61d00",
        "cursor": {
          "ref": "93832648-7cdc-4394-82d0-7e67acb2da36",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "df09dcf1-153b-4a59-9f78-78a9f168defa"
        },
        "item": {
          "id": "5156c216-9a5b-4fcc-850f-393324c61d00",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c69fb460-bfca-407a-9e89-e44a04492889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1148,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7baee0df-1f59-46fe-8b0f-45f33471787b",
        "cursor": {
          "ref": "84ce08b7-ab37-4320-8f95-758da3e6f23b",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4aa8197e-a021-4819-9fac-2ff1674060ed"
        },
        "item": {
          "id": "7baee0df-1f59-46fe-8b0f-45f33471787b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c7ba3068-c983-4f97-94de-74dd1fb38277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 890,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a600f0-2cc7-4ab0-a697-43e3f49dbffd",
        "cursor": {
          "ref": "7846cc23-5bd4-4db6-a402-16ae2a6a6ea1",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5ada1247-2aed-415a-9463-ae2c6ec25829"
        },
        "item": {
          "id": "21a600f0-2cc7-4ab0-a697-43e3f49dbffd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f02cf765-ebfb-4652-b456-3bf64bcf45b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1111,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862bd6ae-8444-4590-ba4e-fed6d4ef361e",
        "cursor": {
          "ref": "e463f796-ab62-4039-8830-43606900398d",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "610fbd94-3fad-47f6-940f-f7fdde167b67"
        },
        "item": {
          "id": "862bd6ae-8444-4590-ba4e-fed6d4ef361e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "47dc5cc4-a202-4e05-93b9-47c42054cdc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e88010-6fd5-4619-9a4e-8f98ef429ebd",
        "cursor": {
          "ref": "f3d145da-c6ee-45dc-ba7c-8f4ffbd30520",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1be836be-2543-4e33-96f8-4d7f759fc2d1"
        },
        "item": {
          "id": "96e88010-6fd5-4619-9a4e-8f98ef429ebd",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9602e450-c150-4fe2-b9cd-984c2827c800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7836b0d5-f444-442d-96fb-900efe639325",
        "cursor": {
          "ref": "cef3f447-d33b-4446-9776-9f9b57a5c66b",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ae5a8a86-2cf9-4dc4-9ff0-99963c91f945"
        },
        "item": {
          "id": "7836b0d5-f444-442d-96fb-900efe639325",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f055e99c-da43-4b82-8b30-d2853ae631f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16b57c9-5d15-4e89-a03f-b08f2fc9c1a7",
        "cursor": {
          "ref": "b0389c7c-792b-4ca3-9756-b2d3d3b17570",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c3437401-a79f-4c4c-b971-7e1cc883dcfb"
        },
        "item": {
          "id": "d16b57c9-5d15-4e89-a03f-b08f2fc9c1a7",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "cdce4e51-1945-498a-a004-209d3006b394",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 794,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41b926b-26ab-432c-9703-d9d4d4adf968",
        "cursor": {
          "ref": "b8280d24-e1c6-4ef1-a615-5a7c6c148a4b",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "539dc5cf-e3a3-4786-8c93-ce83a3959df0"
        },
        "item": {
          "id": "b41b926b-26ab-432c-9703-d9d4d4adf968",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "44136d77-e8e1-46ee-8fd0-b27f6e2c0ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41b926b-26ab-432c-9703-d9d4d4adf968",
        "cursor": {
          "ref": "b8280d24-e1c6-4ef1-a615-5a7c6c148a4b",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "539dc5cf-e3a3-4786-8c93-ce83a3959df0"
        },
        "item": {
          "id": "b41b926b-26ab-432c-9703-d9d4d4adf968",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "44136d77-e8e1-46ee-8fd0-b27f6e2c0ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963ab175-d7cf-485b-9b75-d51a888abf7e",
        "cursor": {
          "ref": "663f470f-60bc-4351-8e71-3b7e659ad563",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5fec53a2-8821-4a12-8240-a437ae9ed880"
        },
        "item": {
          "id": "963ab175-d7cf-485b-9b75-d51a888abf7e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "38e0220e-695d-4836-91bc-a75e73163b8c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 259,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "48b35275-ba27-44f2-a495-3a6201dc7860",
        "cursor": {
          "ref": "f02f66fd-2f4d-4db0-bcf1-0c82f385ec2e",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5e7c3423-c639-4ebd-9567-fa30b67b45ec"
        },
        "item": {
          "id": "48b35275-ba27-44f2-a495-3a6201dc7860",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c965cb7b-21b4-44a2-ac8d-682a2fa82e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ea3b7c-74ba-4e42-8f11-5cab543cfd16",
        "cursor": {
          "ref": "d295dfb3-4fc6-4a0c-be70-3e49f96e6ddc",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "93ce305a-07f4-474d-96ef-f0422add9ca2"
        },
        "item": {
          "id": "f7ea3b7c-74ba-4e42-8f11-5cab543cfd16",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8872f7d1-b8be-40de-9ceb-c3a3ceb391db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57438512-301c-49e5-9a1e-9297bc7f37df",
        "cursor": {
          "ref": "a495dea5-691f-4e35-8582-cd8a23f5c4a2",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "dc5f985f-4a7a-4659-b90c-b8adba60dc16"
        },
        "item": {
          "id": "57438512-301c-49e5-9a1e-9297bc7f37df",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7bed5a6f-2457-47f8-b6d5-8b3b17d1ddc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e84eda-d3a2-4ccd-b7b2-7ebc23ba48ac",
        "cursor": {
          "ref": "d3bfa3f2-16d1-4632-b8f9-517b47c417d9",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "07cef880-c8f9-4fe9-8ecb-1123f6241e85"
        },
        "item": {
          "id": "74e84eda-d3a2-4ccd-b7b2-7ebc23ba48ac",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6236f32c-ae38-470d-a1b8-66e4929b4db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ea8416-9ff0-48c2-a065-95fbd68f5e1b",
        "cursor": {
          "ref": "5aea7cd9-f3aa-45aa-8827-4d4b69429904",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0cdbf83f-fefc-4b08-a086-684105be7977"
        },
        "item": {
          "id": "19ea8416-9ff0-48c2-a065-95fbd68f5e1b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3776a7e7-a9d8-42e7-88b0-3aeabab6633d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c462ad-fbe1-47f2-98fb-6a6a34752660",
        "cursor": {
          "ref": "c44d9b2d-3767-4815-9e0d-74f42be0ef3c",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "22273d7d-ff71-41d8-adb9-59a6f169121d"
        },
        "item": {
          "id": "34c462ad-fbe1-47f2-98fb-6a6a34752660",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "fde7f702-fe69-43df-b216-ff4ce5c7d5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb443a6-9dad-4627-891c-c9ee13c1b273",
        "cursor": {
          "ref": "67562f03-f662-4c2a-9e64-396a5c1323d6",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0269cbce-084b-4eec-9b42-c7acca2b86dd"
        },
        "item": {
          "id": "2eb443a6-9dad-4627-891c-c9ee13c1b273",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "557e9a0d-3a78-4415-86cc-75a83e46a4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481dde16-dd97-49aa-acef-6733b7c7fd33",
        "cursor": {
          "ref": "e46fb167-6992-47d6-a105-810839d9182a",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1696537f-037f-49d8-9b91-30ebe1fd8be8"
        },
        "item": {
          "id": "481dde16-dd97-49aa-acef-6733b7c7fd33",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "bda559c8-0ac3-4d3e-8292-1544e235e124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1b5707-bbc3-4da8-9438-27f4980f995d",
        "cursor": {
          "ref": "7429b3d1-0bcb-4fec-823f-c0e35bef042a",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d8cca1ed-d25b-4a21-b72b-bf559dea4e13"
        },
        "item": {
          "id": "ba1b5707-bbc3-4da8-9438-27f4980f995d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6b0700aa-41ac-443e-9dde-5790d1c55dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8c193a-72de-4223-aef9-594f21ea7475",
        "cursor": {
          "ref": "a1a206b6-db14-4653-afcb-9bae4b258173",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0c0e6449-001d-4db5-9844-d085ea16df4e"
        },
        "item": {
          "id": "ab8c193a-72de-4223-aef9-594f21ea7475",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e5b13c2a-a0a4-4716-bc3a-b8a1a619eebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91337a32-0b79-4ecd-934e-5923c02fe42e",
        "cursor": {
          "ref": "15ec32d2-88c5-4acf-848f-c0509fd57574",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0a9d5f5e-7284-4572-8018-9887416b1f30"
        },
        "item": {
          "id": "91337a32-0b79-4ecd-934e-5923c02fe42e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "11075ae1-346a-4c6c-8326-5503cd161094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5711b0-436e-4c49-8415-ae663ad90173",
        "cursor": {
          "ref": "65ca4bed-2930-452b-9679-05808abc2b36",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0daabf4f-9066-442e-8c7f-27fc702ed684"
        },
        "item": {
          "id": "3b5711b0-436e-4c49-8415-ae663ad90173",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "050d9ff1-279b-4034-bd78-74f347c727c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c580452-f31d-4d56-8b98-b4b9cc29984d",
        "cursor": {
          "ref": "994592b3-4f8c-43b6-a0ad-d9b3b42c2076",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6071ce49-fa98-4936-a9e4-93c1a8910bbb"
        },
        "item": {
          "id": "6c580452-f31d-4d56-8b98-b4b9cc29984d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ffde277e-f933-4620-964d-b73798e13adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71eb0fee-7dbf-48dc-8618-065392399c14",
        "cursor": {
          "ref": "7c99157b-b761-4fbc-86e5-47e38e084bbc",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "db6d96c5-3a0b-4ec1-8716-9fdac95f68bc"
        },
        "item": {
          "id": "71eb0fee-7dbf-48dc-8618-065392399c14",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "72dbbf55-db79-4062-9558-10debcb2d72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af41865e-3a29-405f-acd9-a9df5fa5db39",
        "cursor": {
          "ref": "86623a8e-8c4a-471f-9e50-430790ea6538",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cfd062ff-7dcb-4076-b8d3-e1e6e718f293"
        },
        "item": {
          "id": "af41865e-3a29-405f-acd9-a9df5fa5db39",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0adaedf8-6be2-4470-bdbb-51ce6baa36e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9b5b1c-3ed0-4470-8385-c5a783062f62",
        "cursor": {
          "ref": "5322396e-92a6-43d5-8245-b2fb4be871d1",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a2ccc5e5-b4c0-415d-ac58-929d0ea12043"
        },
        "item": {
          "id": "2a9b5b1c-3ed0-4470-8385-c5a783062f62",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "67448732-d67c-4e6d-8311-5a695c352782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970f58da-8ae0-44f7-95ea-a9e644f0a59c",
        "cursor": {
          "ref": "12f5b985-385c-4b0b-9c10-616a0db2bd34",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b6845615-0bc9-4b67-a23a-e2f1d08b9600"
        },
        "item": {
          "id": "970f58da-8ae0-44f7-95ea-a9e644f0a59c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "511f7c61-3f4c-4787-af96-1143425422b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa97d756-6908-4849-bfce-6248f77cd3fb",
        "cursor": {
          "ref": "b07b8fb4-aed9-4571-b560-4ebdecd23a4d",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "73bfe020-6395-4855-8f47-99be01b83252"
        },
        "item": {
          "id": "aa97d756-6908-4849-bfce-6248f77cd3fb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c5fe2315-e2e0-4a62-ae03-3b699dce554f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ae3840-9195-4f83-aa9d-b14e0158290e",
        "cursor": {
          "ref": "989bbc2b-c94d-4f2e-963a-cf3e4a072341",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1af8b861-f11d-4cfd-8a5e-a7c6b294261e"
        },
        "item": {
          "id": "51ae3840-9195-4f83-aa9d-b14e0158290e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ecd27a11-5b2d-4519-805c-fd8475d72212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91048603-bb33-4ba7-b3cc-9b072e6745d6",
        "cursor": {
          "ref": "e48321b7-8759-4d84-a4eb-2af882319508",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e5a4794b-c62b-4c34-ae71-2fb2af7c112f"
        },
        "item": {
          "id": "91048603-bb33-4ba7-b3cc-9b072e6745d6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a0370330-fe8d-47c3-9fb8-558d77a7cfa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182ed587-c25a-46b8-84bc-db82de7ebeee",
        "cursor": {
          "ref": "2c8cac1a-d3ed-4ec0-80e3-3d020230024a",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0e0d4a9c-d859-4ea7-a57b-4189e60c902e"
        },
        "item": {
          "id": "182ed587-c25a-46b8-84bc-db82de7ebeee",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "05ff9da4-5c57-467d-81b7-cdca2311c91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e99f820-02e3-4c7e-bc35-65c3176443b5",
        "cursor": {
          "ref": "479aacc6-91b9-4f16-bfd9-9ab0e9cebbc8",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ac0ff3a4-2f77-4046-8da9-f18b479d91df"
        },
        "item": {
          "id": "6e99f820-02e3-4c7e-bc35-65c3176443b5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "75dd8969-7243-46b1-a671-79fd3b3c7d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2dd1de-da79-4ce5-94ef-0476fb1d7a5b",
        "cursor": {
          "ref": "e0095baf-895b-45b2-b032-0359debf2e28",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "cca1305d-513c-4552-bc72-0b02d5b8c93c"
        },
        "item": {
          "id": "ce2dd1de-da79-4ce5-94ef-0476fb1d7a5b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c15f17a3-a00c-4773-9d54-bb957af53b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09c521d-7ed0-4ef2-bd52-6bda9f8df095",
        "cursor": {
          "ref": "b89eddf1-fcff-4732-a2a3-45ed8614efa6",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c1bf6477-c711-4f6b-ad2a-a5486708ba29"
        },
        "item": {
          "id": "b09c521d-7ed0-4ef2-bd52-6bda9f8df095",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b289b3b5-86f3-4201-8257-ae64422c57f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2c49d6-0a72-4958-801a-a91438e3cbf5",
        "cursor": {
          "ref": "0f3009b7-977a-4026-9b92-8ae952e45f84",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "187a6a33-9b34-4eae-923c-8ae8faf9c69c"
        },
        "item": {
          "id": "3b2c49d6-0a72-4958-801a-a91438e3cbf5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "913297df-b6b5-4886-8929-4dfafc5af6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebb3c09-7576-48ea-88cc-8076f46c1610",
        "cursor": {
          "ref": "3739e0dd-ed94-4d68-97b9-a98a068bdf3c",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "02906127-2593-4263-8e26-646965ba5998"
        },
        "item": {
          "id": "8ebb3c09-7576-48ea-88cc-8076f46c1610",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2417cc8a-5c37-4784-8856-ac9b0bd082d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa76777-646c-46ca-94c4-5ec935229886",
        "cursor": {
          "ref": "6c41f301-f1a4-4b66-bd36-35169e87a385",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0cf272c0-2287-4a6a-9186-c6a9f6a0e3d0"
        },
        "item": {
          "id": "2fa76777-646c-46ca-94c4-5ec935229886",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0db5b2f6-b80a-40a2-893c-16de39ef7edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa3e4fd-5817-42f5-bb31-06084174dd20",
        "cursor": {
          "ref": "9bf8c536-f521-4d97-ae26-b468a8361352",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "49f74b5d-5b5e-434f-8992-75f5df2101af"
        },
        "item": {
          "id": "daa3e4fd-5817-42f5-bb31-06084174dd20",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "37b508d8-5dea-49cc-af45-2fffc3e40496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01bf777c-9dab-4b59-bb0f-d492bdc543c5",
        "cursor": {
          "ref": "2794b34e-8da9-4793-9567-091db7928022",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "810291e6-e7f5-4de4-b941-63c7aa086799"
        },
        "item": {
          "id": "01bf777c-9dab-4b59-bb0f-d492bdc543c5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d16c9f90-5d38-48b0-a43f-a7e2a093f80f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed51391f-a5c7-4291-beb5-b9b396b34c6e",
        "cursor": {
          "ref": "100ffb5c-a69c-4f9f-9f18-5f344a4bdf9c",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "82e0a6bf-01b9-4b4c-b092-5075e37d8f46"
        },
        "item": {
          "id": "ed51391f-a5c7-4291-beb5-b9b396b34c6e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "cb21c32a-73c8-47c7-a7cd-04661f745847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac84ff8-4d09-4ddb-afe4-684c7a85607d",
        "cursor": {
          "ref": "3d1d03ee-b34d-4e3c-8e6d-e708fc9909bb",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "88a7f9ff-6fab-4190-b7b3-ff0f7e6f4633"
        },
        "item": {
          "id": "5ac84ff8-4d09-4ddb-afe4-684c7a85607d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "277b9a88-3bbe-4a15-8cbc-a50b617e1de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f25e02f-764d-4c10-b1e1-42111fce2e25",
        "cursor": {
          "ref": "d5b2a80a-71f3-4017-8549-179c9346ac6f",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e832f343-5726-485e-b6d2-cb0a71b863ca"
        },
        "item": {
          "id": "5f25e02f-764d-4c10-b1e1-42111fce2e25",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d6b7b527-7499-4eb6-a7e7-8e06d801dea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac7bccc-d955-4c30-921c-c9934722b033",
        "cursor": {
          "ref": "ede25a3d-474f-4156-8064-12809af13653",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "30a93be0-6c73-4bc6-a7a3-927e917976d1"
        },
        "item": {
          "id": "9ac7bccc-d955-4c30-921c-c9934722b033",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b2dcc682-6c22-432a-aa21-94522cabc590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878926cf-f0ad-42cf-87ee-5d7b139be383",
        "cursor": {
          "ref": "e5bd72eb-2dbb-4710-860b-0e3e8671212b",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "21cbaf36-1c4c-4ad7-ba35-bc701e641e07"
        },
        "item": {
          "id": "878926cf-f0ad-42cf-87ee-5d7b139be383",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a749e710-6dff-44cb-884e-46d37b6b98bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebdd34c-6717-456d-bde3-7b283c811600",
        "cursor": {
          "ref": "b2812100-2ee7-4c49-9f72-c35da987013c",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "95ebfe29-1a29-4efc-a7d9-a651d8021397"
        },
        "item": {
          "id": "2ebdd34c-6717-456d-bde3-7b283c811600",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "657ab005-b7ef-4418-a5ba-052b5905575d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb605459-8d85-45a6-82ed-7d757bd85b0d",
        "cursor": {
          "ref": "159d7314-02a2-44ff-9932-4d5df4351f18",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "dd31e7f3-fe0a-48a9-9ef1-2692eca5bba3"
        },
        "item": {
          "id": "eb605459-8d85-45a6-82ed-7d757bd85b0d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "32f38558-19d9-44b3-bd66-592552965d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd3241a-abed-4d45-a317-ebd0cae8a0fd",
        "cursor": {
          "ref": "f27f2069-c99b-4934-81d4-ec59d83c2ab1",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "dd81df44-5b7d-4313-9e70-9f8c3353557f"
        },
        "item": {
          "id": "7cd3241a-abed-4d45-a317-ebd0cae8a0fd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "840f118e-cd45-4a32-9532-0806cf5ee2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a471233-0857-4356-9ab9-5f75b572f8e7",
        "cursor": {
          "ref": "14cc74f7-1256-4041-a19f-67cc260c9868",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4728bb31-1e2a-4f99-ad5f-7f4b6e20b1ff"
        },
        "item": {
          "id": "9a471233-0857-4356-9ab9-5f75b572f8e7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4b48943b-e80e-4d82-afad-cf90fbbb86f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad682c9d-e830-4dc4-95da-09660dd1078e",
        "cursor": {
          "ref": "4af3d444-7c01-49a6-877f-9d566e124a7e",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fdec8d67-5ed5-4ce9-9e4f-ecda14559d25"
        },
        "item": {
          "id": "ad682c9d-e830-4dc4-95da-09660dd1078e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e11ece01-4ecd-41b7-9e90-4ce5591845c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2766d1-ec52-463b-8cea-360b281db652",
        "cursor": {
          "ref": "48d25e1b-50ef-4921-9c97-8f0250622cc0",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "eedff803-8276-4af1-94a6-dd2cdef8d2b9"
        },
        "item": {
          "id": "8d2766d1-ec52-463b-8cea-360b281db652",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c3ed400e-c07d-4883-bab4-12571d66f059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b24a48e-6555-49de-bdec-b0e3c7521af8",
        "cursor": {
          "ref": "5cd3b908-38e1-43a1-a8b9-be020dd767c8",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0142b28a-b71a-4411-b8db-6465e3383c20"
        },
        "item": {
          "id": "9b24a48e-6555-49de-bdec-b0e3c7521af8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "36217df9-331a-4f64-95e0-533dc88c3f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be48ca31-bd1e-4cf7-89a9-fe81a04bb5ea",
        "cursor": {
          "ref": "3406fa5d-f24c-48c3-98ea-246f32deabe0",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c08c1365-3157-4e32-a2b1-f4373fe32f8f"
        },
        "item": {
          "id": "be48ca31-bd1e-4cf7-89a9-fe81a04bb5ea",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a79443dc-1505-4d04-8d72-f17fe8913325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66eb4906-afea-4c8c-84dd-d118ba8a9bec",
        "cursor": {
          "ref": "c7105495-e143-42b8-9fe4-d6afd83ac0d3",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5dbd6f31-e420-46fe-92d8-33e3607bf8ee"
        },
        "item": {
          "id": "66eb4906-afea-4c8c-84dd-d118ba8a9bec",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6cf2fc71-4342-49ac-94e6-8b0438a4a1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e083e6f-afe1-4664-89e1-caea65ce7c36",
        "cursor": {
          "ref": "de811af1-f601-421e-a2c2-b9021bb2681e",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "18fcf53f-6ace-4c73-a58c-0f41da9f601a"
        },
        "item": {
          "id": "3e083e6f-afe1-4664-89e1-caea65ce7c36",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6f596540-531c-45a3-963e-b44cc7e20516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edaa079-2c90-49cc-aeba-a9dffdcd6fd2",
        "cursor": {
          "ref": "b85f66d1-5a28-4d40-820b-3766cb07ec33",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a178edb2-cb05-4cfc-acd1-15b699f70aea"
        },
        "item": {
          "id": "5edaa079-2c90-49cc-aeba-a9dffdcd6fd2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7e426a2a-2aee-425f-aa45-dcf69b2f91a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157f7f0f-63c8-4b3d-801f-2adca005dfa3",
        "cursor": {
          "ref": "a7ed8070-2fab-44d4-845e-4511102756fc",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "05185fcf-c1d2-4b12-bf2c-95cd18c24970"
        },
        "item": {
          "id": "157f7f0f-63c8-4b3d-801f-2adca005dfa3",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "53088a3d-a2b0-4dba-8939-65e83c3cdf02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8991b791-d6b5-4491-84d6-13ad4f3b47cf",
        "cursor": {
          "ref": "6e8e90d3-e9f2-4caf-8a37-58fc312a273e",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b917ee73-df80-4307-b006-60e7cff02755"
        },
        "item": {
          "id": "8991b791-d6b5-4491-84d6-13ad4f3b47cf",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "de702046-658b-4788-8573-88835e5fd7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc40c78c-df72-48b4-887d-7c18d1b9573f",
        "cursor": {
          "ref": "a5738596-7d03-43e3-abca-3b3cf69a6ebf",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7a71394e-34fd-4409-b24c-25be6f4ff7aa"
        },
        "item": {
          "id": "dc40c78c-df72-48b4-887d-7c18d1b9573f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5e2968bb-d7fa-4920-b08f-b320fee2986a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fefcda9-d6fa-4ac2-a3db-3473ebcf793f",
        "cursor": {
          "ref": "e2adcfcd-33ac-482b-b6e7-0a2fc44848b6",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "00995ef2-3438-40fb-9e4d-8edd234d8a81"
        },
        "item": {
          "id": "5fefcda9-d6fa-4ac2-a3db-3473ebcf793f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1e39281c-3d31-4ed8-bfdf-e61293f8bf87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa5f0c5-9cec-47a9-82b7-e2a4da51b455",
        "cursor": {
          "ref": "5c9532d3-8da2-4b35-a1f4-7418e21e520b",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2994bfc4-15fe-432f-980e-8c1fcca81a6b"
        },
        "item": {
          "id": "0fa5f0c5-9cec-47a9-82b7-e2a4da51b455",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2117946b-139f-47e6-acee-c79f67d6b8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5ec9a9-8fbe-46bb-8896-bb84a6d0f566",
        "cursor": {
          "ref": "4afeb3b1-4228-400e-82e7-799c023e2b69",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "20db70db-3960-4ee1-bb5c-8532307d21ce"
        },
        "item": {
          "id": "ee5ec9a9-8fbe-46bb-8896-bb84a6d0f566",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "910110d2-7bd5-4e33-ba93-8cd5da4d00f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab2dfcb-e61a-48c1-bef1-06a502e734cd",
        "cursor": {
          "ref": "ce8e6e93-34bd-4850-8f09-24198fc1fd83",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c6bbabde-2cf6-41c5-943c-074152e409f9"
        },
        "item": {
          "id": "7ab2dfcb-e61a-48c1-bef1-06a502e734cd",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "521a1ffe-cab8-4d03-b686-21ed9b43e576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32313dca-bd3c-4d8e-bd3e-e10ba263f39f",
        "cursor": {
          "ref": "5dd37eed-7136-4ef5-9406-1824a99b9049",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ee7d526e-2e0f-4dbb-9148-bee0fd7f5b75"
        },
        "item": {
          "id": "32313dca-bd3c-4d8e-bd3e-e10ba263f39f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4f17227c-ccdd-4c48-bcdb-fcb8f2f919e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1576e738-ad87-46b8-a9f7-c030ab9e50d7",
        "cursor": {
          "ref": "6a2e6dce-0180-4be2-b67d-204a0306b091",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f9f6cf19-a755-4994-a55e-db8b9cb4a4e3"
        },
        "item": {
          "id": "1576e738-ad87-46b8-a9f7-c030ab9e50d7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "24c75089-7e64-4b55-8fdb-a87a1154171f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e24296b-7b19-45c1-a5e8-aaf80eb9f73f",
        "cursor": {
          "ref": "5af7fbc6-3f4b-4cb7-a91c-324ab0dbdb4f",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6fe975a2-2d0f-4d34-a9da-09aba3b37241"
        },
        "item": {
          "id": "6e24296b-7b19-45c1-a5e8-aaf80eb9f73f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ab60dc5d-19bd-45ea-929b-029d2c89959a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181f36be-31ff-4c1d-a078-ccaca4be5435",
        "cursor": {
          "ref": "b020abb4-4aae-4ece-85b8-68a1efa24658",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2b6bb8b6-c24a-4a51-9627-57dcb0990ea1"
        },
        "item": {
          "id": "181f36be-31ff-4c1d-a078-ccaca4be5435",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "898228d4-27b1-423b-988f-5c0010f7de81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4987d8e-73a2-4802-8e8e-133c3d341ce7",
        "cursor": {
          "ref": "e196856c-1545-49cf-8900-736d05316c59",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6a7a5ae6-6537-4aaa-906e-4c564f12bc07"
        },
        "item": {
          "id": "a4987d8e-73a2-4802-8e8e-133c3d341ce7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6f79fb35-2db2-4e5a-8a11-859c9f38ffdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6929cd2-44d0-43e0-85ae-86cffe9382ea",
        "cursor": {
          "ref": "bb2b5e57-5565-4994-82ab-1c7015a41844",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "955a236f-d2c2-4c6a-ad5b-95cd9e065586"
        },
        "item": {
          "id": "e6929cd2-44d0-43e0-85ae-86cffe9382ea",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0412d7d3-0f40-4815-8e61-20ac30a176e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01469646-6270-4e1d-8e90-bfde8bfa5b91",
        "cursor": {
          "ref": "ce051fc3-5715-4bd3-b1b3-12cb0e1635a4",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "046cbcb0-c949-4cad-8d65-0f459bb508ee"
        },
        "item": {
          "id": "01469646-6270-4e1d-8e90-bfde8bfa5b91",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6b25872d-495f-4ec6-81e8-c331f7e05779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bd905c-e926-4273-a162-04ba9d59ad79",
        "cursor": {
          "ref": "56b11cae-6ab9-4423-9f83-0f68103edb67",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0ce0027c-8783-4fc5-b251-d134332729c1"
        },
        "item": {
          "id": "19bd905c-e926-4273-a162-04ba9d59ad79",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7e07eb3a-569b-491b-852a-da02446fb377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94906643-3c6e-4046-8267-16700c649e3f",
        "cursor": {
          "ref": "40620ff4-4bf4-4be3-8878-04bec3d7d24b",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "46ad4997-943b-454e-ae3f-971513fd845d"
        },
        "item": {
          "id": "94906643-3c6e-4046-8267-16700c649e3f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "657f9060-0e32-4d71-9ce3-5d1fb47cddc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7a10f0-6fa2-4aa2-9682-1af87ca5dd28",
        "cursor": {
          "ref": "aa172e64-01cb-4b7e-b704-5aad13c70efc",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9900b48c-607c-4157-8ff4-0c1207fca964"
        },
        "item": {
          "id": "0f7a10f0-6fa2-4aa2-9682-1af87ca5dd28",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1e6f9db8-0d8c-444d-8a63-9cd058dda13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238f5b55-cb2f-43d2-a3f9-888ec9255728",
        "cursor": {
          "ref": "fce03556-9ce0-43da-a66c-a0943378d526",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ea4649f3-8129-42c9-a450-60471f7077e6"
        },
        "item": {
          "id": "238f5b55-cb2f-43d2-a3f9-888ec9255728",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "232ac027-19fb-46ed-99b6-057a3a9bacd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e265b7e-3a78-4f35-9535-81f6d59871e9",
        "cursor": {
          "ref": "550ba72e-7803-4b17-8191-d7a81b314dcb",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "340ab521-c705-492c-a023-9a72aed249fb"
        },
        "item": {
          "id": "5e265b7e-3a78-4f35-9535-81f6d59871e9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0e7df2ff-1504-451c-be72-435030caa916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d4ca0a-acf2-4742-a85a-086970a26c06",
        "cursor": {
          "ref": "c1a55667-4da4-4dfd-98f3-a34dc896a5d7",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ca3c2ab3-658d-4099-b81b-bde8a42a5823"
        },
        "item": {
          "id": "92d4ca0a-acf2-4742-a85a-086970a26c06",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "16882b8a-2057-4eaf-a16f-1cac63ebf487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43929d20-216b-427d-a973-bb5efc86da89",
        "cursor": {
          "ref": "2b04bf7f-c130-4681-81a0-e48f68b9b513",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3e7bce8e-ba06-408c-9574-143826bb6ab6"
        },
        "item": {
          "id": "43929d20-216b-427d-a973-bb5efc86da89",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "58f37c4f-6afb-4477-8280-4a1980224533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77343870-0ddb-4675-b185-a434fc3a93b1",
        "cursor": {
          "ref": "7f27366c-e599-4429-84c7-a56bf69236f0",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9b30a10d-ab7d-4f53-bd4c-a513dbb0f5ea"
        },
        "item": {
          "id": "77343870-0ddb-4675-b185-a434fc3a93b1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "caa50d68-3d98-4130-8e89-c47e3832cf4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddb00e4-6df3-4996-bbc5-73e71ef939a2",
        "cursor": {
          "ref": "f62ca68b-8750-44f7-ba00-619e4a4acf20",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "32b009a7-2ad6-411c-ad97-938153df73cf"
        },
        "item": {
          "id": "dddb00e4-6df3-4996-bbc5-73e71ef939a2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e258f782-9f7a-49f5-81bc-5e3ae5a15c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe44715-f893-4a03-874c-0df37cc59491",
        "cursor": {
          "ref": "dc474887-fe08-443d-b0af-e185efb1e8fb",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ab26a5d7-1694-456f-bdbf-c7da4d234580"
        },
        "item": {
          "id": "dfe44715-f893-4a03-874c-0df37cc59491",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "cb51a3db-c8d2-4b3c-be58-4b05f493a26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c60c9a-57fc-485d-9d94-2099782887f4",
        "cursor": {
          "ref": "0328bfa5-07b2-40f5-80fc-81a219a1ada3",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e426f986-218e-4edf-8cba-b687d3015105"
        },
        "item": {
          "id": "f8c60c9a-57fc-485d-9d94-2099782887f4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "01c9bec3-afc1-4d71-96d5-78724a9ceedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a8eab5-41f7-4dbb-89bf-794d950e4b7d",
        "cursor": {
          "ref": "9561018a-23b5-4c75-b866-be02d98d83b0",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b1bf5a8b-8d22-4f71-8ca7-2a8ae5e300e3"
        },
        "item": {
          "id": "10a8eab5-41f7-4dbb-89bf-794d950e4b7d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f17e63a7-40d6-42c8-ac5e-d6a448b1b315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102438d9-b036-4336-9c12-4375c942ec9f",
        "cursor": {
          "ref": "bcd3e5b9-1eb6-4648-b6eb-13bc4f58f4ec",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "88ec9082-3a94-402a-95f5-d34d68e537da"
        },
        "item": {
          "id": "102438d9-b036-4336-9c12-4375c942ec9f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d0b91ae0-4d19-4d67-9dfb-216fcde9c126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3757a63e-0220-4dbd-ac6c-f8856b38d8da",
        "cursor": {
          "ref": "0820ec0d-a45c-4ba5-ae50-bf04125f3844",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "89cd58f5-0918-49a1-9652-f89de4436be1"
        },
        "item": {
          "id": "3757a63e-0220-4dbd-ac6c-f8856b38d8da",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "72675485-5043-4231-bcb1-5a19009484ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e49a97c-abbb-4873-9c5d-ba1505ec47ac",
        "cursor": {
          "ref": "5ebc324b-cab1-40dd-ae68-54204b350b07",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "aa674639-6bd4-4e22-8a93-afae4b85be04"
        },
        "item": {
          "id": "4e49a97c-abbb-4873-9c5d-ba1505ec47ac",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "baa55657-0a48-48b5-8add-9c4f820704d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0c29d5-6116-48b3-8366-56f3f2483a14",
        "cursor": {
          "ref": "8a28c326-ee61-437e-b293-dd7ed3777c9a",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f5d08a43-91d1-4bdd-a2b2-bb7b3cc78819"
        },
        "item": {
          "id": "ca0c29d5-6116-48b3-8366-56f3f2483a14",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d5adc6d3-d13d-4644-aa1c-63b6b2e84595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb0de84-c460-417e-857a-4c155cdfcb39",
        "cursor": {
          "ref": "f6039760-2b4d-4fef-8a90-3df79a60b582",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "68ffdfef-d0c1-43d3-9384-7cdc80dd9d90"
        },
        "item": {
          "id": "1cb0de84-c460-417e-857a-4c155cdfcb39",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d11f8f8d-f7f1-4a6a-9d53-ada6d384d0ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a231e5-3fbe-4170-b337-33190e9cc01c",
        "cursor": {
          "ref": "2271cf9d-9b12-4aa4-8e8d-3afc72c5e14e",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "03444f46-951f-4955-a9ca-53997e1eaecf"
        },
        "item": {
          "id": "51a231e5-3fbe-4170-b337-33190e9cc01c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5d9912c2-e2ee-40c7-9751-16662d03ab5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e0456f-0c44-4a00-ad8b-949f4b99d5c3",
        "cursor": {
          "ref": "3b093afe-8c95-4606-8bb5-c97a074a7098",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9d57cbb6-a68b-4084-96f9-69ef12ace5ed"
        },
        "item": {
          "id": "60e0456f-0c44-4a00-ad8b-949f4b99d5c3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a7cc0094-0f6a-404e-a139-7525c83adce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64998d4-32eb-418f-88f2-c6ff31814582",
        "cursor": {
          "ref": "4ddfbddf-ee51-4d2a-9ef2-558c13a64a48",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "36c94061-b5bd-4431-ac20-1545f1096f2e"
        },
        "item": {
          "id": "a64998d4-32eb-418f-88f2-c6ff31814582",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1b984417-6a57-4499-bd19-0a12debc2b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4325fe36-4016-4587-bbeb-e8eb5d8f392d",
        "cursor": {
          "ref": "68579e66-ddaf-4e75-a371-de03955d0bc6",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "dc21e839-ba64-4a95-9e6e-287fe6deff7a"
        },
        "item": {
          "id": "4325fe36-4016-4587-bbeb-e8eb5d8f392d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "71124e78-953c-45b7-99fd-09520ad6028d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade018a4-a92b-46de-9df8-d8633e6c4d18",
        "cursor": {
          "ref": "f640c806-7827-4c2e-8113-30a5097de4a5",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f70437a0-fa69-4485-9aa4-c8a29932b067"
        },
        "item": {
          "id": "ade018a4-a92b-46de-9df8-d8633e6c4d18",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "56a38a4c-c3e9-47a2-be9a-dd12aab588f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5058e3e8-617d-40aa-801f-368b82b6d9bf",
        "cursor": {
          "ref": "7cc50860-5a86-41b1-9b37-e69b07eeb147",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f340ca4a-95e2-43ce-bd7f-4425ab2a9610"
        },
        "item": {
          "id": "5058e3e8-617d-40aa-801f-368b82b6d9bf",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "52c3635c-cf51-473d-8cea-425daedad818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cad5226-db20-49fb-8415-e0b0aed5a789",
        "cursor": {
          "ref": "c9773385-8df0-4483-913a-6715d0123799",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6b1cc057-5e1f-42e8-b5a2-689a225206db"
        },
        "item": {
          "id": "9cad5226-db20-49fb-8415-e0b0aed5a789",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "26fba0ac-766f-45f7-8a34-08616d5329e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884a73ae-14aa-40d6-8166-f4c11171ae38",
        "cursor": {
          "ref": "a6368bf2-7feb-4523-8c36-ec03c271af0b",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f200ecce-7759-49b9-a60a-bc9ccde848c8"
        },
        "item": {
          "id": "884a73ae-14aa-40d6-8166-f4c11171ae38",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6719f019-0b8a-4c8b-a281-2fc0ebb9c629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd407b8-6228-4590-8019-e721ae911a36",
        "cursor": {
          "ref": "2ef164e9-dc01-4434-8c00-8e35fcc112d0",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c234d443-3139-493d-908c-6a43c84245e4"
        },
        "item": {
          "id": "fcd407b8-6228-4590-8019-e721ae911a36",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0b673e1a-2abb-4d61-924a-eb9f7af96463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb17b6c2-2070-4691-935f-98832972a2ab",
        "cursor": {
          "ref": "9391fe49-3a80-4c2d-b5f6-6cd3fe299185",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c2e2945f-42cd-4b2e-829c-b713ada7f59a"
        },
        "item": {
          "id": "cb17b6c2-2070-4691-935f-98832972a2ab",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5e6d6252-2d37-446c-ad38-361c50ac23c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84a21fd-cffa-4d0b-a5b4-e58c16efbcc5",
        "cursor": {
          "ref": "2c25fa82-3b16-4100-84f5-40541f500525",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3f65c8ed-0261-4873-95b8-c403fe34bd9f"
        },
        "item": {
          "id": "a84a21fd-cffa-4d0b-a5b4-e58c16efbcc5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c6670da1-d6f9-429f-9c11-0a01cccb5c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ddaeb9-5ca6-485f-8409-56309f14763a",
        "cursor": {
          "ref": "7a42497d-f29c-4343-8ea4-d188653c2a88",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bfcf4038-4b8c-4831-a571-72cb6b7275a1"
        },
        "item": {
          "id": "c8ddaeb9-5ca6-485f-8409-56309f14763a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "87ef4c9c-a0de-4334-9f83-d0a16ac03a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668255d8-6dd4-4532-b027-3d1eb517c501",
        "cursor": {
          "ref": "09d85976-1138-4ab8-a3cb-184369a152ec",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "900079a8-6389-464f-9f0d-161be626a5c7"
        },
        "item": {
          "id": "668255d8-6dd4-4532-b027-3d1eb517c501",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8494e06e-f519-4e42-967c-0e6dfa7565f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5980c8-9e29-4270-b452-ca84a48ccaf2",
        "cursor": {
          "ref": "9c0fc1b8-1104-4cae-8089-1bcc00ef9fe1",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "16f16371-bb56-43c7-b9ab-7b8a69b70dd0"
        },
        "item": {
          "id": "aa5980c8-9e29-4270-b452-ca84a48ccaf2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e1f1286c-f5ac-4c72-abf3-d5f9b3aeceed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796a7984-c9b9-4222-ae06-9a802d83dd22",
        "cursor": {
          "ref": "11b65c1e-b5e0-427d-b245-81d1ef2ddfe8",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c587b466-eba4-4084-a4bf-0f4bc1242a1c"
        },
        "item": {
          "id": "796a7984-c9b9-4222-ae06-9a802d83dd22",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3ff374e8-7b3f-4ab8-be6c-fb420ba9af71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e5527f-6b94-4f15-bdbc-6d9269337ef6",
        "cursor": {
          "ref": "7f1b9e15-2854-47cf-97c3-12a2559f6b40",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "70d6cad3-db0a-4d77-aea9-a95a3f309b52"
        },
        "item": {
          "id": "d9e5527f-6b94-4f15-bdbc-6d9269337ef6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5d497d43-58f9-4d3a-b36d-58b49b131451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba87ef2-f9fe-49c9-8335-0d9befa4efb0",
        "cursor": {
          "ref": "4ecb3ee7-9318-4a00-9a88-ac562b7fc668",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "12445e93-98f6-4438-8ee6-91ad10d12c75"
        },
        "item": {
          "id": "1ba87ef2-f9fe-49c9-8335-0d9befa4efb0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "12cd3465-93c5-4f14-ad2a-354856d3390a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a26ba5-f75c-454f-8c0e-8e3c2c62236b",
        "cursor": {
          "ref": "98e78d6a-3da2-4164-bb91-bfb7df3bc730",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1088d8bb-0f02-45c5-8600-85e0ef542e3f"
        },
        "item": {
          "id": "c7a26ba5-f75c-454f-8c0e-8e3c2c62236b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c655f05d-615c-4967-bb25-f6f3c4c96350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdaa18d0-beb1-4b19-8b19-42ac42943a03",
        "cursor": {
          "ref": "29b98c30-31ed-4a3e-bba5-522c5f43f977",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1a839b66-1e1c-424f-9192-6ecc5bd5605e"
        },
        "item": {
          "id": "fdaa18d0-beb1-4b19-8b19-42ac42943a03",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "07c4c42b-b8a6-42d2-8369-3d495a707d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad91afd-0fe2-4290-94b5-2bf189c751fe",
        "cursor": {
          "ref": "f1317b35-cd9d-40f3-9b3a-9f5aa1dd0165",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "034a0b05-2059-4e70-83d2-e154b447c8bf"
        },
        "item": {
          "id": "cad91afd-0fe2-4290-94b5-2bf189c751fe",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "54b530b0-481c-4b8b-b564-b7736fddb9c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4fcfa5-2c9e-4a5d-b071-ea2497608e04",
        "cursor": {
          "ref": "41e583f6-08a6-449f-a851-6ba1f71ce79a",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "560c385a-98a0-4214-bb36-64dc0ee3e9a5"
        },
        "item": {
          "id": "ef4fcfa5-2c9e-4a5d-b071-ea2497608e04",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "71c4544c-e016-4274-9832-d3402e0ba1cb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 466,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66c969c-5190-48a3-9136-ae9e6062e400",
        "cursor": {
          "ref": "23080362-614d-4f56-993a-56b56c333462",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0ad13853-e835-4dad-8fe7-7923e399e30b"
        },
        "item": {
          "id": "e66c969c-5190-48a3-9136-ae9e6062e400",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "dfe483ed-8990-4637-9d3d-437e4379341b",
          "status": "OK",
          "code": 200,
          "responseTime": 900,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7af0459-0e37-4445-8e47-a0647a9b82cf",
        "cursor": {
          "ref": "b77ae131-bd56-47ff-8e8f-747523bd7129",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "14aaa97c-1d46-4193-aff9-7b4173b17177"
        },
        "item": {
          "id": "a7af0459-0e37-4445-8e47-a0647a9b82cf",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8d3610df-9afb-4f80-9fbe-8c52df5bad66",
          "status": "OK",
          "code": 200,
          "responseTime": 976,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd118f50-8a38-44b8-a52a-c87587f41057",
        "cursor": {
          "ref": "8bf82098-dc12-482a-a184-92b99f831681",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "74d692b5-a93e-4272-8d88-f968350f28a1"
        },
        "item": {
          "id": "fd118f50-8a38-44b8-a52a-c87587f41057",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "5b3b7f1c-4b97-480d-ae2d-9814cfaa357d",
          "status": "OK",
          "code": 200,
          "responseTime": 629,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d77e97-e1c3-49cf-9895-474bbcb00b10",
        "cursor": {
          "ref": "7975ea33-80f6-420b-b35e-c1c54f755855",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0dc1108e-31b8-4150-928b-541826414166"
        },
        "item": {
          "id": "e8d77e97-e1c3-49cf-9895-474bbcb00b10",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "931e486f-33d8-4a03-b119-d335322320b9",
          "status": "OK",
          "code": 200,
          "responseTime": 374,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb92591-d40d-4650-b502-396185bce1d1",
        "cursor": {
          "ref": "1811d236-1a52-4068-a0f4-edfd585a9e1d",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0b3a6a0a-e738-481e-a644-e57cd1da735b"
        },
        "item": {
          "id": "9cb92591-d40d-4650-b502-396185bce1d1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0466580d-ab8c-43f3-bef4-4ef9030913ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb92591-d40d-4650-b502-396185bce1d1",
        "cursor": {
          "ref": "1811d236-1a52-4068-a0f4-edfd585a9e1d",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0b3a6a0a-e738-481e-a644-e57cd1da735b"
        },
        "item": {
          "id": "9cb92591-d40d-4650-b502-396185bce1d1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0466580d-ab8c-43f3-bef4-4ef9030913ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb92591-d40d-4650-b502-396185bce1d1",
        "cursor": {
          "ref": "1811d236-1a52-4068-a0f4-edfd585a9e1d",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0b3a6a0a-e738-481e-a644-e57cd1da735b"
        },
        "item": {
          "id": "9cb92591-d40d-4650-b502-396185bce1d1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0466580d-ab8c-43f3-bef4-4ef9030913ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ed4951-068b-441d-b0df-aa944159865b",
        "cursor": {
          "ref": "ea4d7c45-780b-45b5-8a16-b753e61ce535",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f96b14e3-7dde-41ce-a9c2-3e9bc98e8271"
        },
        "item": {
          "id": "85ed4951-068b-441d-b0df-aa944159865b",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "38e64b53-80ea-40d7-bc97-989c1aa08c80",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 291,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c2b364-462c-4776-af5c-00e23eb5799a",
        "cursor": {
          "ref": "c1ebe44f-8121-4ca2-bd6e-5f0717e27e0a",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "31f32c70-37ba-4455-8bfb-af40f638d7fb"
        },
        "item": {
          "id": "42c2b364-462c-4776-af5c-00e23eb5799a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7b33b8cb-39a0-4e6d-8d3e-c085682ec917",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c2b364-462c-4776-af5c-00e23eb5799a",
        "cursor": {
          "ref": "c1ebe44f-8121-4ca2-bd6e-5f0717e27e0a",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "31f32c70-37ba-4455-8bfb-af40f638d7fb"
        },
        "item": {
          "id": "42c2b364-462c-4776-af5c-00e23eb5799a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7b33b8cb-39a0-4e6d-8d3e-c085682ec917",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401d9bb9-6a83-48ec-9491-7d9095792572",
        "cursor": {
          "ref": "d0401212-cc73-4027-bb9b-271c9edbedf4",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e1caf689-35cd-4925-a04b-398a5dad06e8"
        },
        "item": {
          "id": "401d9bb9-6a83-48ec-9491-7d9095792572",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "e1d6b31c-de56-49c2-94b1-eaa3a1c73e44",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 517,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a469744-5a61-4c61-b895-3ac5048fcc80",
        "cursor": {
          "ref": "de640499-7acf-4269-8f47-529f31a1d78b",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0453259c-4852-4be2-83d5-c04b4b58cdb3"
        },
        "item": {
          "id": "0a469744-5a61-4c61-b895-3ac5048fcc80",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1ebb95c9-4a19-42a7-86a6-bec02bf83582",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a469744-5a61-4c61-b895-3ac5048fcc80",
        "cursor": {
          "ref": "de640499-7acf-4269-8f47-529f31a1d78b",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0453259c-4852-4be2-83d5-c04b4b58cdb3"
        },
        "item": {
          "id": "0a469744-5a61-4c61-b895-3ac5048fcc80",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1ebb95c9-4a19-42a7-86a6-bec02bf83582",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2217c1e5-ffe7-426f-aa89-e20bd056b13c",
        "cursor": {
          "ref": "353daa7e-1c7c-459e-82d9-f222e9a2dabb",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5c7ad2dc-4c29-4898-8f6e-e0be6841aa2c"
        },
        "item": {
          "id": "2217c1e5-ffe7-426f-aa89-e20bd056b13c",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "fec69270-e27d-44ce-8db8-193d545f31b4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 502,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}