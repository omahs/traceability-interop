{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "965f61de-3509-4269-8693-0c873c4e6f67",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1ffc8170-d08c-45a0-b5d2-d70aa4d2c243",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "630418ff-fccf-429d-b256-e5cfe2819d62",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eec2f56e-fdf4-49ad-a078-b67e56262909"
                }
              }
            ]
          },
          {
            "id": "3733ba9f-b913-4f63-b761-e9f39b7ac335",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a28552fe-fc93-48a1-9346-10b7c2f3e173",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e7fd7a7f-ffc9-491d-85f6-fe29942bab28"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c54f05b6-2ff0-4dc2-8de6-b1f07751c394",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8cf30a13-fdf7-43aa-bd03-6cc8a1643a73",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4de8f5cb-8d6a-462c-9209-7782ee5eb1bd",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7199973-c291-4283-b69e-cd06e7abb63c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48bdc48f-139c-4dc9-827d-4324736d6362"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e34ff327-e593-46fc-816e-5eb17c32b222",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c39b2c7d-bcfd-4dc6-814f-a3aa7db6fbd2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4a82bad4-3eb3-4341-9abd-c587a16d4f78",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3b1e7b90-48c4-4036-baf0-3d82172321a8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2cc8d66e-25d7-4e7a-954b-53fef317ced8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8ff667b0-e38f-4426-9560-c1ce9ca9a55a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7a8829d-63f7-4c02-a325-3c70058597a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "65533d7e-35f6-4811-98c5-12e34a37c08b"
            }
          }
        ]
      },
      {
        "id": "92969290-e8b9-43ae-a4e3-ee1060486261",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6052bb1c-b05a-4dd1-97b8-9ea31204d536",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a3d23e5-3199-4e42-9b1b-edf880e348c2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "daf4fb88-74d9-4c40-8914-7374ddcea5ed",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1916664c-c537-4097-85bd-60713fcced06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c50b455-b5b9-4181-9d6e-dcef40458e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60bebdf-bffb-4d10-8b65-9ffa4dc20056",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3c5e6d-8d66-4d0a-a827-20e36e9a61af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "148ae3e4-bb32-49df-8ca5-c5cb68e4fd60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ca9fe6-b263-48cc-a050-513363834aeb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a562f55-fc1c-42c2-ac49-69f1ab505955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edf32f85-9da8-4be9-bc18-8e8628904704"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a198a5f2-1ec3-4417-8089-acfc142bab6e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c832dcf5-0d13-4d25-b069-6aa2d9b54c27",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da32ae64-bb8b-476b-a944-b55864c76ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd2d554d-cf3c-42b5-9e7d-9f4ce4af8cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13ae9c8-55c7-454c-b5fd-ecb50efe92e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "002d2b58-4236-43aa-b830-7569331d774a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4e2100-3aef-4a40-9b6e-2734ad7d7824",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d10bc5-6afc-4fee-a0b7-88d743434a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81c36dc9-e3a1-41a4-80a2-338b1c6205b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e800ca0-e270-410f-bcf1-56fcd919f54f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "e4e1ed9d-f3b0-4577-91ac-214fbe6d85cd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "06d87c34-fd24-4215-8199-770796cb0bae",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ec8e38b4-57fb-477f-9854-646b4ab51033",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44b48f33-796b-4bf7-9dce-70f888aa79bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "83eeedc8-4206-4561-aeea-aa692c0aa405"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c3d2c86-a088-4de8-b523-6f9471e0933c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "50b68a6b-6620-4c7a-9d1c-9825fe97c8a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d09219e-94e5-44fb-b43c-eabc1508704d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "44604c25-0084-4c47-a139-b8e0c96df2db"
            }
          }
        ]
      },
      {
        "id": "13bd4f03-9a0f-4995-a6bf-329a719b5599",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5e9ba1ae-7838-4bbd-aaeb-0a27aa3e9a4f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e30f0d3f-3db3-406b-ac6c-064f8027408c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a37d3f51-a34b-424b-a218-88dfa384ac62",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5d18cc-45e4-4237-b55d-04f821cdfc8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7087ebd7-029f-46a2-9e6b-b1a71ea78021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d638a9-47d0-4709-8b4d-ad3bd3757364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49551fd8-42fb-4344-b509-312d41dd82bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15fa1d0-7a2d-4d58-ad9e-4bb13dca7a2e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c131f8-2f26-4071-9492-70b0848e7ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ebb03f2-ca17-4880-a3c8-23ca7bb2a72d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09db1d41-05d5-4f27-97d4-b0eea8aecfe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15569a72-7b3c-4704-b3d2-e528f94fa104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5380d8-be5e-468b-a6c2-161d956373ef",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a9ed1e-3231-455b-8cfb-8643ea2160c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08210412-3a27-40ed-8bd5-560416f154f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32881453-a9b2-4f88-b8f0-c9f872b0f985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d99ee0ba-841f-4ab1-a91e-37a0f837ff04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760fe0d4-f0e8-4bd6-8d82-29932cad455d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc646de-fc1e-4721-b91f-f3db7aaf3dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cadbb77-821b-4949-87db-3c68634226ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f426618b-9393-475e-ba85-fe6857560122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a66e393-a865-4eb2-90a9-6e3f76c876c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edd3d32-7b7a-4030-bf47-53b4da12b6d3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d98d88f-a08d-4049-9095-63f0cdfe9a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "288a8170-5848-46cf-be9c-402ce9c8c728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a48775e-9efa-4285-a16c-523256a1165d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbf6e16a-4963-4739-aad7-36b292399717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fe38ed-d092-4de3-8437-59eb6ee17a39",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c12232-6b86-4ad6-9219-6ad3c77fdc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8efabb92-d467-4699-8848-5f9f8f2cff1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db574658-0a5f-42fa-85d8-bff7f63610d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ba8ef9f-2a04-4a86-a6d1-7a92b65fc292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc3049d-f169-491c-a7a8-1a4b098cd87c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a6c5a2-7659-4533-9809-4738e6e45091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e4cc32-8391-4096-bed1-16ba36abfa23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57287044-1411-47f5-a6f3-dd5d23932102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d535a92-7fbd-41ba-8cab-88df67a68853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55b094d-e5d3-4b48-baa1-cb2ef66dfa10",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133b2d44-6c9e-4605-8256-e97f97ff139d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3adfc6-98d9-4aef-9da5-719eb396729b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb7bcde-d908-4290-8d59-1cfbb9f7f88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4db5410d-19bb-4b8d-bd44-d31f51bf5a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe268930-ef22-414d-8a88-3af368d4a25a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "693d5020-7584-4ded-a8a5-f75adb298e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b5baa5-524a-4f7c-b566-cad9c27fc9da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34cb38d-4ff1-42c0-90e6-4a55391925fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1811037b-4306-410c-a983-578e8e32d9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6844f3-8d38-4eb1-9e40-b7458dfc546f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0818581-d594-41c2-805e-d6612f8f9a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70315638-b5c3-4c10-a402-c129e9f17743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c12e743-c804-464e-9f75-60a65b6db29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ab18a13-0d93-429d-89c9-4a665c85a002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213ea772-0031-4908-a7c8-1b74466c1f10",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3ef12a-04d2-4cc2-aeae-ba98c6b0b94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c0882f7-aea2-463b-8e73-9f81cae8603e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b784fb16-3f04-4484-a845-fdf1dd51f899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ac42991-e8d4-416b-bf10-fa877a311063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79425217-9cfa-4238-81a1-2fbef069af5c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27c3acb-4f30-4297-ab3c-616f2647c796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6fd39a8-9f25-4890-b202-85edc9eb122d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af0d627-6369-4ef2-b65e-c70281efef0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d535b9f1-546f-4cea-a2bd-45078e732108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a03bb4b-dcaa-4f8f-8fb3-5d4fdbf0759e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d74a42-9f1e-4dc3-a239-a239479cad9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1922d476-16d3-4d81-beb7-c35fda7b3c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc28091-2c1c-49dc-b709-426e40ed0a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f3fa2cf-c3a6-40cf-a876-e7cede3a0903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f00d5fb-4962-43b6-be83-5a921cd1696c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2043345-9d4b-4efe-b96e-d1460a744fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7861cfbb-4f27-4d30-81ac-0f7b50303ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546aff7a-37ff-497a-aa89-c6a14f9bdc8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "911d3467-2175-465b-8cbd-909e0ac1d163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58901cb7-2e6b-4685-a78b-9367a78e7f67",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359f6e72-ec43-4335-94cc-9e73f6379188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39959ff6-349a-42fb-a3f0-0a3dc8cd8d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc231d1-425e-4ca5-823f-cce40419aa3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b8f56ce-9204-49ac-8aeb-027d21291ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f4885a-6313-43b5-a6b0-8b9dc057a154",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5500f9-728e-48ce-a96a-6d97839aee2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85745486-432c-4936-9e96-0a2ac0b3ff3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef17a7f-1048-4c04-a27a-404fb915b20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74b32fe7-5d6a-4470-b414-b40940c128bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65772d40-9dc2-4c21-b2b0-11e9d5e255a2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "745585c2-75e1-49b2-b93d-7d087c08f9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b2c1ce-dabb-421b-8daa-c530d26759c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d613d941-34ce-4548-a2b7-14bc3626a56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfde21fd-51d5-4888-a28e-0b5029032db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaad6dc5-d1f0-4b4b-b7cf-70d65c467202",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e851a771-cb12-4fc4-9d51-87284e0ed738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5206586-5c22-47b8-b68e-0d2f9a7c04ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c230bc-8970-4b86-8390-fdbdc9239f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4000c8bf-7105-4101-af65-f2975bf5d22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2b39f7-2a28-4715-b25b-9a5f34b2e0c2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4ae483-a385-4237-b7c7-2960993fec42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c4c1ce0-2304-4618-8e97-79e961122e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb46228b-6790-43a4-b521-8af3f532d89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "991009c5-1eb1-4971-896e-2480a2c4a531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8424bc8a-1a5d-4136-be9a-775039e2c600",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e3af8d-4277-47e4-8fbb-1ad5e7f8025a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860018b1-1f85-4004-9242-8a19f64996d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3814d028-a870-4836-8fa6-5c040c99c051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c86523e-4e4e-45ab-a464-2edc39e8fa5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdac217-ebb9-454c-9a2c-0686933d333d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4022ef20-db94-4293-8779-2b5b238f1707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "568574ac-f9f5-4f47-95f3-7fc1e89b551a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8beb1409-e84e-4fb9-9cbe-50902f26eca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d8edd2d-37d2-47bd-9bf3-cfe41873d28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57b964e-9077-4499-9ec1-d8d2adf66e50",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7f7c34-f5ce-41b4-9bdd-7a167dec19a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "766bd999-2c00-4e4c-b09f-ab17d4e190f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b07e897-0199-47bd-82fd-4f939e655f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd2e9d9f-fcd5-4ccf-9f4f-15c372dbeee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5ecdec-23f3-4ee2-8bc0-ff61d284041f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209e90a5-5dff-4386-a3d5-5dda5f9e9b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f11286e-4de6-49b1-8512-1e4966f0bc92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27eb517a-a34d-4032-8cbf-1f7e22467362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c78d1b76-fa67-46d1-b086-cd92e3967e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a776e1d-e443-49d4-8918-a8de48f5f1db",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0864b16e-9215-40aa-8074-71aac59cf497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65664bc5-05f2-4aac-90f9-8461fca453ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821b2d5f-ec73-422f-989f-82d244d7a11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "430a9c59-f67f-4374-9c3b-542249694730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e9a284-f08e-4c86-89ec-9e14decc7018",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07896ab0-12b9-432e-a699-6c49f2c04625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c9d5cc-0a13-43f2-897f-ce28735a113c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2895177-45ed-4254-8bc7-8b1a45a42904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "856439f5-19eb-4e36-99e7-008a0fe15c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc052e17-cfa0-4468-bbfd-7e8a5d14da87",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f69b837-a891-40ff-b1ab-b1e68f80f837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4d9f74-a230-41c6-a41b-8f77267ebd92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e4bdb2-341d-4f27-9413-3e29d9c88960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad97acf8-93cb-4384-999b-b47335f3a0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411e15cb-877d-4cd7-bb6a-296ec95eb0eb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86b5dd8-9b0d-4d1c-9d6c-40b45a5ae833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3364ef1-52f0-4dba-9f63-a5da3c98bfca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1770a028-d74c-417a-ac10-c26ead7f7d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c1db00-d485-4ec0-9c09-2b22674acfe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579a833e-a895-40ac-b6ac-6d163c58cec9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a902f72c-b518-4662-80d8-207d981a69a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "344e6418-e9d7-43a8-818d-45d70434adc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7033cb-b942-435d-818e-8e5457f51d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3053711-466e-4ce0-8a47-b2a7547d8d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a6b4cd-f954-49bd-8ba6-de36fa161852",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "506a350c-d5a9-4465-87ed-fc93f0ec12e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014eda73-84a9-4604-bb37-3227834880ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126b8157-9593-41e6-865a-6cb326d64717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b587c45-fd41-46e0-a03c-a9c489f4d4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74be9f4-9194-4570-b320-95cbf9f2fa3d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32ca52e-9354-491e-b59a-f5f21f0088a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe8fad9-f837-4054-a827-a4c1832f9935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1990be12-44e2-444c-a6f8-2a10591b8d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e68ce2-281e-47af-90e2-87403cfe643a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211e2979-e1a5-42ff-be53-5ee232125caa",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9078a11-dfb5-409f-8e75-b76e5ea6f287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "129ec33f-7d49-4a45-854a-a4e1c4df0a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2d6614-2fa6-40ea-9d22-86b19975cb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a375492-e60a-42ee-b75d-8135b0d13246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896cfbee-d8e7-4e46-a4bd-a07574d12cec",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47d7bf6-61c9-4feb-91bb-5551a57c002c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677046d1-f943-41ee-b718-60f6f4b3fc3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7028b4de-7d85-4740-baf4-acda6d60faa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "057c8dc6-c9fe-40f2-9ea6-d1a1d0faa4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfcaca4-4808-4ec1-b7c2-b2d5075ae4c5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da91f6ea-4af8-4fb4-abcc-e61b95058af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4c45ed-37e6-4a4c-980f-642195673c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50dc588a-a8c9-4896-a60a-30139ccf6abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb97a64-4790-4f66-9b1d-9436fdc3a09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3d7e4d-1dfc-4304-877b-65b2a4818ad1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d30c21-113f-4b87-bd9b-4bfc86731ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e09e9dac-6725-4c27-b4b7-56249cc985f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920c82a2-8b3c-4131-838e-79ecc9702b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65627f92-42ff-40d8-b360-0b7f82cd92d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e565c0b-36e0-4c5f-a068-06dda97dfd56",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c096a7fb-cbe4-4ec3-a608-0879401bebda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd1431d-b119-410a-a364-08840b0ec9ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592a78fc-b661-4f26-9660-a3107b253855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dcdd84d-edf9-4117-aecc-366b425d9a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82ef30e-aed6-4a90-9b9e-b21d014beabb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5f8e17-9ee0-4b21-a2d4-3000af3b9049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b1d398-75a4-4a0a-bdb2-abcd17e3ca20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4310df24-b75b-4ecd-b477-51b041fd78dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b1105a95-9dab-4eba-abb0-b944ab4d3076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c9e06e-27e8-4e65-b7ed-472bad2d2487",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31584ba8-76e6-411a-9cfa-bbfe5d7e1e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c673a7b-bb50-4118-b4b5-5e28ff416b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1e0e62-8959-4d12-9332-940da89374f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a1d9eb-aeeb-4bed-87ec-64d93dcbf437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3335b9-60c8-46ee-9360-b6aac8a0a8e5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64081c9c-1a8e-4728-8390-a0fea86d6073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e898c636-df4e-4af4-9fba-bb0fc545727f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392cb106-bdf6-4373-be70-ba29fa2b863a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "30c307ff-f3fd-4d9f-a573-00187b8acdc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8baa55a8-d554-4181-bddd-0ed7e549ddea",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc59fb5-fdb4-4e9a-be67-7e4934ad679c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aba14f3-b778-40e2-84e9-4eb40cd05b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa4eefc-d9da-4ae4-95df-91773f68d19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "476bbc2d-0ff0-4e04-9187-aa5dfaecd7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2fc405-afa0-4e55-8f35-12ab613562f8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff6b881-9964-48ab-bba3-5d3289de554b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2e69d7-1617-4c1f-a97c-674e02eedfef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa81373-7b62-4cbf-b153-52aceb76b8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9288f25b-dfd5-403b-ab04-ba9befb97d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe6eb75-f60b-401a-8a1e-5faf39402363",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841f96ba-818f-4f90-8ce8-96055bb90dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b0bd56-87e3-4d22-a823-126324ae7ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249c5399-51cf-4518-892d-c308960bb4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b01d813-5439-4cb2-8c26-adbe8bd847ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffccd241-5e5b-4744-b805-b73beffa125d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebee750d-31a5-4feb-95b6-3b0e76b0d8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1173b1a-b518-4251-aa9b-704dabd3c9e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abadff92-f296-4014-a023-7ab56cc232f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "18d87f26-6816-4f04-9261-3a3c9f87fe1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5681d35c-feec-432a-82f7-d6ee240d01d8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a33fbf2-58d6-48ae-935f-a6509f7324dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b637e653-11a8-4df2-aad9-f1d0115b778f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abf80fd-5401-4d77-afd4-a329bc558f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca2045c-12c7-4191-b2d8-095c927837cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7e35d2-2535-45fd-a16b-ea5615dda9d5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e48984b-3b54-4203-8022-d17f3cf119c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e765b2a-4c9a-4755-917e-848042cf7abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66018776-162c-4215-b4d5-bcb1ddd25f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3eaa2ae7-eed4-4ab2-910f-c26222e94a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b42074-c3c7-4460-939a-03933cde1f86",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee25288-80e8-4583-a3f1-b2e77116896c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7e4c8c-a5bb-4d08-96d8-dc01f7d91971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f46ecd4-1deb-4962-8be1-86184558bfb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3fab496-8161-4d05-8a9d-4749b69d0625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d461276c-8faf-4f7a-b6a6-0b8eace6ab9b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "415710c9-aeab-4fa9-9506-0f4e621e8957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f80b95-ed6d-452c-a005-26b65367bad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9699c67-cb00-4c95-bbc3-efd140ee05a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f52e54bc-cb32-49df-bae3-50b2cd86834f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466950c8-a1fc-404a-b267-356cb73d1242",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a0e93a-0c02-46f3-91be-b46baa00347b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf83e94b-0de9-4591-9bfb-42f495e37a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c5d815-65ec-458a-b84f-80029f5cd322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62bc4817-ceed-406e-95ee-5b41fe44ac5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b715470b-0d38-4097-be6f-cefdcdba6fff",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0987e8a-5d70-4a75-bcd2-767f26166223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a503524-652b-40bf-b157-2720d3d55944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c54cad-cab8-44e2-b17f-5aed0e55192e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e92bf6-e768-490c-94d9-51ff45a2c2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca4a047-da09-40c0-83e9-0ee0c5efd2bb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749dbd0c-40fc-4238-84f7-66c02c1bf4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7682edfb-8aaf-49ef-ba12-9eac35bc3122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd60d63-6b3b-4f4b-aad3-17996a677357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff49a09-9604-4cf1-aa5a-b6e2695a0900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797cad92-45f5-46bd-bf2e-40e27e9b26c2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79b51a4-e034-48b7-be8c-503a2f50788c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf5b467-5e23-4f27-ab28-d716a5e5f5bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5ddff2-7ef8-4040-8992-3c007987f2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4219a895-4877-440f-901f-98c7aa1c4e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5973a0eb-5ef6-4fbf-bee9-7d79cf718dc8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "784176a3-d392-4467-b788-c3dcf193c9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac2bdac-7def-4c3e-8870-9ba9da999c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a82b6a-fdd6-422e-800f-56904180a1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc2f740a-6e79-4358-9bd0-bacfa46e1847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7752c9-8987-4d0a-bbdf-cca589614a5a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac7726c-8f0d-4d66-bf9c-97b2bc285baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00c016e-340b-49bb-a0fb-502b2f1d09ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8abaa4f-e03b-4374-978b-787e707e5dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfae2b5e-6839-470a-8dd5-54df76f0b633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f6be71-f1c0-44c2-b2b7-45106bf18110",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f52dd22-6993-4895-9ce5-b7388e918d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d80526e3-ba90-4b55-bff1-5f6825a04715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf1afe4-e88e-4f8f-9147-6d20f5cb818b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b358ba6-8378-4b68-a61e-d77c046a6a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285db0db-efd5-4d41-9447-481705cb4d15",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac283f8-21c4-4e57-bbd6-440099d556e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ac0d16-3d89-4986-a8d6-194b83833285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf71590-43ac-4777-8390-996a7dc46285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30a8c576-3195-4ba2-95e8-5d0bb6ff6c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae8d069-f602-4393-9731-7fe3eec581bb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53508259-db09-46b2-ad67-ed205b431038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62416432-f5af-404f-91aa-d77549639557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f339ba-e0e4-446c-93bb-cf48cb255ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3b4f69-00ed-4990-b7f4-9dccb58e0815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3ede76-ffb3-446b-93fc-e9667cf5c97a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9edaeb-843d-4ede-beb2-94120cb0a50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85a0f52a-cd6c-49b3-a149-54e2d566f786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4d898a-9fcd-4074-a536-158b2a46d1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "993d97cd-5d6c-42a6-a19e-f7466235eddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc6053a-feb9-4b91-ad6a-62753699ba04",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7eaffd-290f-472e-8660-8411a9f1caa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e3b902-c2ef-4894-a488-b1dfec51e0cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d488d6-8e6a-45cd-bcee-12695c6a348d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c39098c0-97a9-4667-b9c4-e126d12e0638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752f1a06-8d4b-495d-bc64-f1f578bef974",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76125a0-e36c-4b07-ad70-fe26f5b56ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af3b9df6-ea03-453f-9714-3780a05ce264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8450272-8ea6-4312-a5b1-afada813c7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "04c34231-25a6-43af-9323-85de927899cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d525d02-8b80-48a0-baa7-cc9682a28dc9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3993eb33-2699-4585-9bb2-618b8fb8b19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d71c34-ae11-4ca6-8c9c-bc81f62f335b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9578e3-1469-4b8e-936b-06e9bdaf0b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6711ca44-9eba-4264-bad6-3f256bef4995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c440e02b-3df7-480f-a5b4-099c857cef69",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a23edb1-b0b9-4e10-a3ff-cd550eb4b4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "173de548-dc67-4e0f-8f48-e638cc09a6b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75a82a7-0dc2-49b0-a510-abb2f699d523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "707af51c-d9f9-4de0-a37b-9517d0635176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afe4115-df55-4241-bb86-8ea6a119f93b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdf0e0a-378e-4038-8a47-d243b1124272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0ccd3e-2357-4270-b3da-ed915668e80c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24269794-48bd-4631-bec5-71559c95678b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b005034f-e0f1-4ec5-abfa-ec9bd4fd5796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134df18c-dc98-4541-847c-a72a01924060",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b14e75a-483c-4747-9450-98f8ba83f17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a2e443c-6038-433e-abc5-6b6602802575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4112ab42-80b5-47ea-9fda-6c6bfbd67ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "581ddf90-e051-4884-9a09-62e208307b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a38372-f632-4bd0-84eb-796616be4cc4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72bd1f4-2a9a-45ed-8795-c2105824150e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a7e7ed-bca2-4bc2-b76f-a42022b05acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5607bc-a7dc-44a1-8c18-1448b221279f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "22e039e5-9ee2-4717-89cd-c44fcd5e269b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d8d732-6d77-4fa0-b64d-7a068b252871",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d6fac0-83fd-4695-abda-84f45ad5c4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984b02e8-d591-4135-920b-999f03489248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "706f69ac-0e16-4261-8e51-6727e351e923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c218e334-494e-4b18-aca8-a82bc815bb1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37112ef4-ea4e-46ec-bc06-ab1ad11d39e8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fb7b9a-b9b2-40e9-bb0f-74646997ea66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1b9947-602f-42bc-ac63-52d07f91a2ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74b7855-ee06-4942-860b-c00a4a344c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "829eaacb-04a5-4c79-a8c7-4312e81a1fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29de5a18-4e98-4e55-8af5-046a6de83356",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0a0aff-bc45-4c44-8d9b-983f083420f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e46fc73-9bb7-4577-98f6-b128b2553944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be0a251-b8da-4251-a63b-6d505d0ed572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a67f9fbe-d40b-4549-9cf5-bb75e46a3714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947639d8-d708-4e30-891e-d2e25d66b67a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd73c07f-d2cc-41fd-98f2-e202866935b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65ecd73-be41-49e2-b751-e1e56d2594b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc4fa17-d571-4dbf-8f7b-457d075862fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c101036-c39f-445e-aa5d-924f38a2ba0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3179c34-163c-4af3-86b3-f3b63568be30",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484f80b7-cd32-4f13-8fe1-a391ead6739a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a47772-ff05-4807-b157-556b9c0afb85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1798554-f5b0-4c8e-a65e-106fc3bac7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f2b4f27-33a3-491b-a60c-a8f9fd392edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b19c4c-0835-4c1c-95a9-6dc20521a40f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a14d62-cc37-43b8-817e-169b3c6cf895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44acc187-24de-4e71-bf45-fefd473c94d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5858efb2-606b-44bb-baeb-b405936dc1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fdd9e10-8e0f-4393-9a73-9767f129ae51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ba0812-fbeb-421c-8e80-e0c2ef3e7750",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de74174a-7bb3-4f2f-a2e0-b7e476ab6615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364e912a-38b6-420c-a3b3-04e932f09986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5baebab5-2ea5-423e-87d7-1fd41d80a4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2b38b5-b52e-4168-8313-7ff0877a341a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e209ad-3b56-4722-b5ea-f7b9c046eb69",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f6140d-fe9c-4177-a46f-e43964d16895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5932ef00-168d-4418-97e1-4c316d3589e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af68700b-df02-4089-bb7a-f830f2799a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02dce2fc-e8e1-409b-8619-c1369196104b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3ef126-6134-40bf-afbb-41291f70aef8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1609d050-37ff-4cf7-bc41-4f862fc769db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346acd07-be56-4af8-8a23-ca0a620c947b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f059d3a-1e38-452a-b72e-b9bb4e1a5833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "206efa5a-ea5d-4706-acdd-e8120a38e429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03eadd3e-0617-421e-8047-be584191b1be",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f11597-edeb-4c0e-9af9-19aa9486c6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004a1141-d470-42e4-afe0-6b89e962c716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbd086a-664c-40f0-9da0-d4b723e51abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f82049b-25b0-4c70-8e69-dda99b906a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cc9631-c4d0-4d46-8329-de2e0672150b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb07ecd-3846-402d-a950-0e9a4d34a6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9543932-a590-48a1-8faa-a05a474a74c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a285c2b-2376-4180-a666-eca4eebd5398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73133574-e660-46da-8718-ddae34deef82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bf4a3e-fddb-4539-87a5-134aefcc20df",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3dc185-6ba3-49ca-82f1-ce65d2589b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c964da-4798-4e7d-b584-c85d8e2b3904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae6d3ee-08c6-4f34-ab33-5fd80ba2dd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78d10447-35fa-4745-997b-5ecc6fa79c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ae7c42-0cd8-4df4-b97b-1e3711967b31",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d6288b-d5e6-4986-8120-12b87c2111ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5150380d-9321-4722-9625-2b77c96dd813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6cf980-8dd2-4717-b740-d89bb1aaf08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "229a2003-9168-499d-9edb-bd9eb7f54bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1e8d7a-6fc6-4d1a-8fbd-0d20c31a34c4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bd51e7-0137-4501-93c7-303a0d559d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8639f22-ef6e-441f-8e29-53e66e097890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ffcc03-aab3-4a8d-8b50-8804f090896b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "146c1572-e238-4c60-8e53-314981970377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f455c57-d59a-44b3-95bc-360026210dd9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf602149-2cf9-435f-881e-b67bb05a45c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fbdcf66-f120-45c7-9a98-c8e02551d9f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adf222f-47d8-4095-94e6-b7de865a1e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d7acbff-2dfe-4ae1-8c35-c3c9044bb5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54715fbb-8151-4fc8-b7f6-fc780df6d664",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2dad79-73bc-484d-acae-e8c729d87177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e04fd16-cf49-4e5f-aab9-bdd2f159b229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4406de1f-7b82-4f7f-b062-65fcc6cd66f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6d5fbd-3b5f-40d3-855b-3c2e6cfdc704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af9d65d-a03f-43b4-8cb0-137bdb64a08b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae10bb80-64dc-4808-8aed-92190a2fb9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99eeb0c-6e64-40d6-ae1d-6f2d1ea49af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1df98d-a3fd-411e-8e46-2418677bdae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e80ebacc-2e2a-4b1b-90b3-a8077b0bfe46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37efd88e-e89e-4d0f-b770-51b3b43becba",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5998433e-3443-4917-95a2-8321b35513dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be1929ab-763c-4bea-9576-6dbc8ae5db6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb59d1a8-5268-44c6-98f9-8b04d7c26a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e896ba36-f36f-47a8-abcd-9be8b058a961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec11d35-5334-44a0-a8a8-a6b17040134a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144500f9-171f-4bcc-874d-3f2c984bc7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7b22047-c607-408f-a48a-07f1ba382680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3573d2eb-2f96-4085-a72e-1b51dc7f0bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "72cedd09-f0ef-4d1b-b126-c20b88720ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eac07c8-907e-4a5f-ab13-8c06040855f7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c723374-04dc-41d4-bf5a-80933ebc710b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7bded18-0737-470f-ac04-2723a6008d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13180290-e95f-4fe7-a13b-d58413dd88ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b950d958-afc0-411f-9402-4636f936cd0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a5bf1d-fedb-4808-a3be-dd70d6d4e79d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6dc6164-05bc-498e-96c1-d1f54c3cd2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa3eed18-71be-46a3-80eb-04c6de2e0c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b476a103-ffe0-41a1-9659-fa433f3c6e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18b5cbb8-4db3-488a-a301-970a67646f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76b3723-1004-4c51-afab-c81c932b7a5a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9415a057-e9e6-412a-a9fb-59c86bb94fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e2d366-bf45-4391-a6c1-99a4e12b4ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b270078a-d061-4c60-872b-4052d14b6f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc1d273-7c3f-46ed-9d05-66ab95261355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9b6d47-21ff-41bf-88f8-b946b43ee2af",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acce8d39-ce05-4a32-82fb-ca289d50157b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94d3d98-c23c-43c8-a62e-2521aad06b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee409be-85ea-427e-ac07-1b4203bf85c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c14886c2-0b71-4704-8e51-e46b3218f08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adcde15b-856b-4c16-94b8-7d5af01c4243",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00af6e53-a3f5-4519-9296-781c43d2e4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84715ab-7eb7-44df-abe5-7cab84e195a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e87fee-aba1-4850-a804-71efab8f13eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5f2f241-4165-42b9-8106-0f96f926c9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50f2e5b-dccc-4cb1-af35-94e229cf1085",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b13c15d-95bb-4b6b-beb9-dae6dd96b662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b7bed2-42e0-4c7b-980e-5a76baf16131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea71a6b2-0deb-4327-ad34-2df88dc9118d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "76e6a6d2-983c-4546-b7b9-2d171672ad76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b2c797-0b69-4aec-9293-247d53bf1090",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48ab8b2-a4d1-4953-be60-af1c5b6a1669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607b6f7d-df5b-4100-9275-fb93f966d996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70bc3677-4fa9-4df7-a872-d0157c806e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b0f2e3-990f-4ccd-aee2-ea960df24736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38138a8e-9ec8-404b-8ec9-06748f7a4403",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c95a61-578b-44c1-87d7-eac728ffacaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba8bf22-8378-4785-929a-e1fb1697b735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9948b19-b5d4-42b9-a61f-01abf40d3e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "46950cbe-e6c8-49ae-a109-25bbb75362e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9745eec5-485e-4da9-adc3-72b0814a4a03",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee4f603-0544-4191-8511-1b34f0987f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9868cb0-7945-4395-bbfb-046a555858ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a799da-fe72-4052-b6f3-29c6d0eda293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a69ffd-fb9c-41ed-add5-8f42ba0a5892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a45f1aa-e9c3-49be-bf2b-958e2a9a0784",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81516734-395b-46a7-8f89-8dc3fa905414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cbb939c-409b-4aba-83a0-0c1a46eb0a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5723698f-ddcb-4463-ad2a-6dd02b9372a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3550f802-913d-4d0f-9e71-07ac654249de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3687629c-f4b8-4d0b-a33f-ef28d6dfde6d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96663338-8d6b-4fca-8067-b25f9509512a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f4d323cf-53a4-43b1-9973-f0a29897d245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91af75a4-0de4-4616-8220-db01d6d7b94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab96768-f497-43fa-a684-20f81e2bcd94"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ba8f2227-b50d-42ce-9cfd-c11df4aafa43",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "79c0170a-7aff-40d3-b980-6e4cd5242ced",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea851e6-d31b-42f4-b416-4406f1944366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b22aadef-7cdd-4757-9b77-6b6b6940a217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2dabc5-01aa-4133-97a3-a6fdc25ad1ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "4fc55cdf-4f7c-4905-9387-0a9d80fa34c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf9236c-d639-4e98-af41-3ab647da43d3",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717c9c92-e22d-4b20-b994-d6e7b13aabbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf7cc6e8-3324-49e8-8777-9fa4f7c614d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afd2fa0-0286-4b5a-a7d5-08eded12ace5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "6af5b8ad-6551-442b-b753-a688e94626fd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "716515af-9622-4fe7-8923-70bc302fb3c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f871e05-2848-49f8-877a-d4a30df0a863"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "80da5d44-5f91-4db9-9e67-9c0150bc93c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3281101c-3c63-4a57-8971-960d8b21338e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2194face-e1e6-4b66-8545-6b516427c02f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "820dcd77-2929-429c-83e0-43d27ddab1dd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ed2816f3-3ea9-445b-af46-713e3967211e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "10fde25f-c09c-46d5-87c3-24ea81f8285e"
                }
              }
            ]
          },
          {
            "id": "17a80c15-c770-4195-a8a0-58d8252d672d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "203911c4-8bb0-4801-ac6e-ceba3da9f72b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03469259-02ad-4ce4-aab4-5246db655afd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f58e0c21-d56b-4b9e-978b-13dec51d5f82"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1639a0d-5ef7-4328-9910-29a9cf2077f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3dcc5297-6734-4f0f-99af-642ac7ef956d"
                    }
                  }
                ]
              },
              {
                "id": "3b525cc5-946d-4ce7-935d-ec09548b32bf",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95784034-d3b2-4586-aa55-44c2f56bdd68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed707dae-0ec2-46be-8202-6eb5c8691ce3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87e7f64e-f5d7-4f11-ab26-fdf68922f6f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f000c7a7-725e-43eb-b69a-7cda1bdbd2a9"
                    }
                  }
                ]
              },
              {
                "id": "44b05ddf-efe0-42d8-8946-66792d8203ca",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e88f11a2-baee-4ac1-9796-91bb04b6ffcf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ebb53f04-f59c-4b7f-91e3-1022f744a518"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9d6c6b9-a092-4809-89dd-f9e1573f27f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2dc47bb4-e054-479c-b30c-f101f42064ab"
                    }
                  }
                ]
              },
              {
                "id": "ceca3168-33d2-4ad9-9e45-c0d3d58f40ae",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cbd66b1-6c55-42ab-8220-617b77d3f52f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "514a31f5-886b-4213-b25f-d79d45b45d7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fb2601f-a9f7-4626-95bf-e970377fbed0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d53ea503-a4c4-4cf6-9df3-126784e960a3"
                    }
                  }
                ]
              },
              {
                "id": "393e3be4-39b2-43ee-8b95-841c3980595a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c76295f5-bf75-4800-bad2-a80f95d89015",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f9a1c8c-2a96-4464-8a6f-079d2ec35e4e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd45c428-5bd7-416f-846e-cfac08657bd1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "62ed3a60-b57c-42e4-8a4b-36c449d844bb"
                    }
                  }
                ]
              },
              {
                "id": "4317c253-808c-4677-9145-1f5c20235180",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc2dde5e-4f96-4808-9284-ceac1874cb71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "919982fb-ea35-4c40-aae7-6dc2995f71c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25f87d42-fbae-47f5-abdd-08a54189df42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "68ec3236-a64a-4241-b0e4-e6ddb2b5147f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5fc0a011-5665-4b1d-8bfe-2f555ed48ced",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "700d647b-0343-44b3-8781-81b167e824dc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cf5c3ea7-65c8-48de-9b3a-5d2e3e099c48",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c7ac4040-e4a4-4b55-9577-657900504e4e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a48f93c9-1caa-4709-8ad5-b02abe67d605",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1005b91a-ad52-46c5-b205-ab3ff6a50069"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40e13c97-6a13-4df5-ae3e-266e235adc6a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13594b04-e1ba-4e52-b98d-7bf0f6197317"
            }
          }
        ]
      },
      {
        "id": "03cf0128-c08e-470e-bb33-43972fa5012b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c797dd5e-4d4a-4d0f-901f-fc70945e5a9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4537891-3400-4fe4-9393-ba97de315e1e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6a91ee54-f08d-4e7b-96a0-62ab98e260d8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ba398a-41b5-4ea0-8be5-1aeed01b9a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6166288f-3e90-46be-8736-7d1655c8f1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a7dfc8-24e7-4d7b-bf3c-33ed53996e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca805fa5-31f4-4ccd-89bc-709898da47f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d4e240-afd9-4f2b-8efa-9ede30dfeee1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b917abbe-7ab3-44bd-b251-2073698b45fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd7efd8-9413-41a1-ba8e-a6e46e4e3003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a552e74c-2573-42fe-8f64-25b5c9c4950b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b370d5fe-feb0-4abd-a01d-c53ed0177177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b111f11-6978-4220-90c4-3938020ab8c1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32dcf6e2-a134-40de-9b91-01344fc99d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6dd168a-a6ce-466b-9850-cf03124041b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fee0415-ec28-4aa5-b954-05f7cd831eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2c5453e-e337-4a58-bd3e-782f498f5f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19054b66-1dd7-4b67-adb1-8e257c7334bd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7074ed4-7984-4bff-98fb-30a929408e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa7f583-d826-4baa-9f5a-0d654a09b794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d038afc-715e-4ecd-8ed9-9fccf737c6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "521a9355-7ca0-4a46-a18d-ba28cb2ac17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59bc6739-9564-4381-bff1-c9401b2d50b9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae2bac6-89f3-4745-b783-5786f453864b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b6c57e-aa2e-4e66-a5ea-bffbe6cd97a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52404502-f4b0-4d20-aac8-07a189982543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbeb9e10-b29b-4edb-a315-3d1d3602af77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb815ad-f731-4e3c-a5bd-e2db33799f74",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4353ed-9da9-4570-b0e6-42f5d4a4d1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22cfd741-ad9a-4a62-b3fe-99f6c54f2df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0792ba51-0ff0-4417-a3bd-d2430dace60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13d6138b-b22e-491f-9c42-0000463656b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d118468-2cfa-4dbf-8128-95e513ec7b5c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31df70b2-6ba4-4696-89cb-6852577dd6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b2d56ec-814a-495f-aec3-a1f97de0e4b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85186c96-9709-4831-bd4b-3dab5ca1e7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "de3b8bc6-7eb3-4555-a805-c228fa309cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d33099f-4a53-4a17-a84a-54c43a899c37",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f59c27-fc00-4f25-881c-7f8a9b53b4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fdd7170-4d1e-4b15-a245-ce370393ba7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d327b939-3bb8-40a8-92fd-6695745af809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af9eca44-15b3-41e9-b6df-afaa891ad262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4294a6e4-8fce-4977-91bc-725304187647",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bc2a9d-b384-4756-b020-8d186d7fa009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "126786ee-e066-4032-b2aa-1014930cc36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb32e0e2-99e3-410c-9529-b0ed1902c742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d229b84c-6627-47a8-a57d-ccc0c6b67c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694194cf-7cc5-4761-9ea2-626ca8e1cdc8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03fcbbbc-9c92-4bde-89fe-7aba1828789e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5746edb-ffb7-4a12-8d4b-22b06ca6a355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4d3c59-9d19-4436-80c0-239d1161953b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "271b46bb-498d-4584-85f0-1caa3684a3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95322e54-17d8-4ee0-8a6d-6f912db13bf0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40586290-087a-467d-8cf1-1def08bba8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6802d5f2-55d5-4cb5-a813-2c5a2851d909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070414d4-66e6-4786-a979-c9d4de889149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "64d324b0-448c-45de-9573-037f3d8ff70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed7a62d-b443-4174-a06d-526607b8c5a0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c816bb42-9361-490c-a70c-262a191d2b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f843c128-b8d4-4a21-a79f-f456da7ad1e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43ac8ba-6089-43f3-aeb9-a019caf2faec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16814dc7-a0ca-4751-b738-75850d753e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5fd3eb-af50-4c7a-827b-6f2e095b7393",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad9d9e3-244a-4cb7-a9aa-e9e49ddd164f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8b5ca0-c0a6-45dc-9c77-c0ed3029abcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99f5f62-0c3e-48dd-8074-02d6cf357d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e7bb250-e5b5-42ef-b28f-0dfce288767a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4c5ef3-279c-4131-b6b5-29221adca028",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf8e403-b11d-4280-b448-f1d72fcc1273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b4f0a80-9286-47e5-ae57-666674a2ab76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16bad74-3069-48df-9641-758810fb1096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a81d042a-2ff7-4f15-8f76-d3bfd0928c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f2de73-7c01-48dc-908d-437223971441",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889a17ed-2ca1-4ef3-8248-62d5b69207b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598088ac-cb93-4eee-9692-7dfc9d7a536e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93acaf99-f75f-4c8e-8ad4-6f4e31894c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "84a2e1b9-c4fa-43b2-a5f8-7ce782f2f3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84968706-d6fa-42ba-b807-c74bba3a500f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceda00b1-9f5a-4e9e-82d5-8ee25ed2f857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c40c3e3-432f-44ef-b3cb-6e32e677bf7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd73d51b-d5d8-4093-a857-e6c86ee3912f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e3db699-14b3-4547-9fda-7507a304b254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b5a112-07e3-45c4-8020-6812cebe8e10",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bf0ca5-927e-4e5f-84c8-976db1422cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b92036b-cf50-4099-8d99-d98c86ddb321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97076c20-4d3d-4cfc-986a-60e7a37c208f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef278d7-7dae-4613-9505-02d3a66f1996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce06bca9-5d48-485a-841f-c8373b197245",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc13e74b-f0bd-497e-b265-f3275bbd39e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6908614-81b0-4aeb-ab32-e2111a62f85e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd71194-a4e0-4646-9416-a922c4a1c61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa8f34e-0e6f-4b84-8fe5-f3aa18e38e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63470f4e-b0f0-479a-a3d9-ae7053221a4b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9df2049-6e8b-41c2-9c83-a2a84d8cc5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "109f870e-9db7-49c0-8d28-06ce970925b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51aa1a7-ec16-4042-987f-0c4a63cf161a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6834642c-d1c6-4486-a6d7-e091c73cb2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de47192b-75f9-4b69-ac80-9fe6352b5d04",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0649009a-280c-40c6-90c1-cd64ef9a89df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e17986b-9254-4b42-b2d0-468f9b377f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4bcb0a-98b8-413e-800b-11b3b18fc304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ded4b5f3-b6a9-4100-95a8-c675d3b1b0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f4d798-5518-4b9a-ac4b-1a83559b2dc0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358c7026-6487-477b-9fec-afb599c943be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f7ad09-cb57-40fd-aa30-9352672b64f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27667590-277b-46a7-a6dc-2b2ef79f2be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "375390dc-367d-41f7-8792-97bcfdd4af6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefd7fa5-7fbc-4fe6-8060-6565a9e1d202",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09097084-ff37-47f4-82ce-1652f70c6b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "674c5207-a29d-4856-b68e-9222c3fd5aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e532a72-911d-4f40-9f19-ad464b9dd421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99fec716-57b7-4e34-9a29-093a7976c8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f45c3b-ddfb-4858-9dba-7a59524d619c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5fb4b3-531b-4f0a-b87c-338accc22f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5cdcd1e-d894-4054-99ba-00ceb879e628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0685a905-89fa-4334-9960-7ea70451519c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3709ada9-1690-40d1-82b2-af28c22b9ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd114437-0c3c-46b3-b492-458d3a6998bd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead3d33b-d608-413b-8979-35c83e78baa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0260f57d-fec6-4d91-b8cb-a994088dd165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b6761c-30ee-4f07-948e-02baf5e03901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88f08c09-0a55-435e-a6dd-4aed1a5420a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814de5af-5360-4ff5-b095-22efd5a2b596",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33dc16de-1a63-4f6b-8a11-b65436b75fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f0dc12-68f3-40c0-8c38-514f6e20ffec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9002383c-b507-4323-b392-c332d9b8208b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38687a78-64b9-4714-90a4-0959ec5aecd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579e4d53-6a88-49ed-bb7a-0d37d9af45a2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fcfe7f1-478a-4ec8-a1e7-3d4d145d4f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838192d7-717c-4555-86ab-9e3ee8c00c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c01f99-bb37-4d83-af36-fa6a1c8e88c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a694bed6-429e-4e6c-b8f8-5ca758ff3a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb3054c-70a3-4f8e-976b-db205dd49344",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad988839-3e2d-44de-8400-4321c4f3eaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e817ac3-df89-4217-a1fc-80d9e30e99fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca108a5-117e-4993-8706-91a79e183ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5101ac18-393c-42b7-b48a-c3628327a27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee67f3a-5e8f-4d6a-898a-07c8e2bbf3ad",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97455cb8-b3e2-449e-80df-c0f77915166f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0419a5dd-e2b1-4c3c-9bc9-5e091ba7674c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9351b0e3-4540-4843-a6fe-4e55e7cc102e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02558d6a-4a17-4b12-b4f1-5116e3562f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e60752a-471d-4571-a539-0039d34304bc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b44f25-ba2e-444b-a1b4-ed9d329aca87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1165733d-f4d7-43d4-904e-97b964a4c40c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15797868-0f55-41ea-b9c8-2c8d3e6bec3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17d60fc1-1c5d-4a0f-a098-f76143fd3bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec1c019-87bb-4c93-8d92-69f24f831a66",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03de2369-5511-4d4c-8a9e-1e9e2751e87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b6d8b0a-56c0-4de1-be32-e2260ecbd53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d812617-8e58-4414-8b0a-4e1b025fe10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72ac52c0-c569-4fc7-9c15-366889f9ca02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee1dab9-0689-407c-9eb2-180f0156031e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba54956-4816-4ea6-bef0-c4e4bfa25f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f6c4b9-c695-4958-aa33-aaaf5220b561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fa2c50-94c1-4d46-a824-7dd5b5ec29d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "603f42ed-ef7a-4cce-adf9-4e28c676b146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a48d75-7088-4bde-8570-2cc2cb992556",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebacb12-f8b2-4fba-9cae-52688ecf6794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bebd48f5-af0a-4d0f-a5bd-0a59ce35ad7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce50edc5-7d72-4307-b6e7-ebc46ed5afaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a74075-e68d-48eb-bba8-8444ae6f69d6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5bb4b5ff-57ac-44f2-a220-cf61625a6b07",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "90b7c4c3-01d3-4b98-929a-60700e15f06d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7d4fbb-c939-4193-8205-91572aa255e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "031f7010-cf52-4b5c-acd8-d6a2bf3bfbe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14346ca-afce-4625-b3c9-5c3062ed90e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05e60503-3044-417f-9384-13388b9f961c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc7e792-c138-4faf-922e-43e1b6a83694",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc0734c-f4fe-49e0-a78a-215af6e3da71",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "751a014a-7b65-4ba7-b94c-cc317a95be0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddd369c-9db3-42b8-b17c-131f148c96c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d6ba9f6-d3dc-4ee2-a84c-1b945406cd4b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04096dbd-f6e4-40c5-9e50-56362c0559fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "673f422a-cdae-49dd-93d0-f9bb5cee415b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39051010-78d1-420a-a9d8-d32e7d2c0dc0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7790a705-7abc-496b-8793-01b2df5f0c1a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1664ae8d-8388-422d-a8a2-ce256255ce00",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "572ed199-23f8-4f6e-bb6f-f01cea1f3a99"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80fd40cb-31b0-41a1-9ce5-9be4142d2987",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "07247b6e-d02f-4e59-99b3-2fae800ea97c"
            }
          }
        ]
      },
      {
        "id": "3c0ef86f-0823-45db-aeed-a6d3ec250d37",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "04c6cf62-3289-4bec-93e8-1b717c521649",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3095f495-12b1-485f-9ddc-747797887d6b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f8dc2706-737e-4497-ae84-2dc128771ad4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d16142-08a3-48a3-889b-3c689a13735a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f3cc14-91f9-4fbb-a3de-43ee7acd81d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4732345c-80d4-48ab-a01e-60db99c66164",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63fc73f-d036-4f5b-909e-00f6f2341ebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "343bc080-d93f-4cab-9f5f-373663be6998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374cb9fa-017d-4650-8ab4-23135c2ccdd9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91462aab-c6b0-42b8-b4f9-80640e5494cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e10f904-8407-4554-bded-dfeb787736c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e66fcf4-a4ed-4c77-8bbd-f1823a9968a5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a4ae2c-13dd-4e30-b3fa-aab112aa5e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15110a3d-5bea-4da6-9ff0-f19ee6ff498c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9cf43f9-b423-447f-b5dc-0031b697177c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0c7ce6-12b2-4a96-92f8-1e86d334ed49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5796ab74-6983-479a-b158-2211c7058d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2dae79-dc39-4ee0-b87c-db0f1c22116c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8fcbb2-c296-4ceb-a2dd-0001f12af6d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1806f839-1e7d-4b71-b6b7-7cfdd03e03fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1fb4af-d48f-4925-af28-6c98b2e9e826",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d3664f-510c-4364-bff4-cb97511892ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff6e828-6146-4341-baf9-dee416f89057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54cef3a-b351-4cf3-91e9-5f9786a8ff19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02e306a-0c78-4744-b71b-0172b0ea30b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe8f64f-6a98-47d5-997f-d8a660a013f4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6eac790-1bc7-4bcb-bebb-bb30cd78a2b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae4ccc9c-48fe-4cfc-b306-1dc4df9fd7ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95dae658-b1c9-480e-982f-bd00f1739fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd793449-e593-4c73-879b-3bad79d32189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f4b6e6-fad4-4615-94a7-1b0c8e3ae3f3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9696a10c-a276-4e72-b2b6-bffb83ebc063",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfa708a2-93fa-441b-9c3a-c353366f4e7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3e59b9-7247-4273-b772-d6fc9f726c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641c02b7-3037-4475-bd04-980969172067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93844540-123e-4579-913a-e99ac22f4cf0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38a7c91-65c5-4bc8-a4d1-55837d0f01e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e29db38-a7db-497d-aa6b-016d62297f26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "984946c3-07c3-49ac-b535-6ada966a1c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3496935-f9e9-45a3-882e-d7141a5bebec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16480b58-efe4-4336-991b-17d238b5b4cf",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc28d8d-1623-49df-ba35-a0e9bccae240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d3ad2a0-98ba-4dc9-b988-d04ea7099663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdf87fd-b5a0-42f6-b66b-ff3d44e358c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ebb332e-0073-4c1d-a783-68de7b05c5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e87a80-4182-4caa-a9ad-c08aa6f3c12d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a1957b-7e20-4a26-b6e5-9d20d46e3536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86a20fb5-08ad-4460-913e-508a116346b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1e33f4-105d-4c36-bbb8-e491eb233aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "472a47b0-2f58-4e42-a7fa-30b532736925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9b7d28-5b18-47f2-8627-72cedba9ddd5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60118b28-75b6-4c9c-8fe7-a8c4d037ca60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "251ee893-dbfe-4015-bbd5-06b5d082fa15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff2602f-3604-451c-b819-7b376c76d275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27121c3b-adc2-4b3b-aa45-30649ebbe2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1719b237-ad34-488a-8011-90d338747065",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ac89d8-fa29-41c9-9e06-6c9ed76a2365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07934c44-0345-4443-b21a-9013af927916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26c2f3b-a818-45e7-a5fb-a5f788dfc91d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb260674-4795-4ca5-9d89-93e05d0f6fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafb3694-19b7-44b7-b456-b3e16eb63c54",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35541596-14c9-4bcb-8afc-72225f15dba5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59007b13-4125-4637-80cd-1267fcd437de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2063850f-a64e-45cc-ba56-5cec4e7ccf00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2457dc9b-c8d7-4c49-a2fc-13facc8e9692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e7ba77-91a6-4b81-9e58-17cc4735346e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0b74a3-e721-4d92-a466-20a06cfceb25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd8245bc-f14e-4315-abb8-294329c04217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c819d43-a08a-427b-a0e9-4d3e3bff362f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb59ac4-bc02-4715-b03b-6c0fd6c3777f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044ae51b-f9b9-4852-8568-778f6dc94a93",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069014b9-9fe0-46f0-8053-440c42b2646c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73740ac-deca-47c9-94b8-c5574b8c91eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8385aaef-76d0-48ae-a54f-60666bdeaafe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c67fed7f-9c2f-44ad-93f0-a350a6bb414f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705ba32a-69df-44aa-a0e0-865023f2572c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332191c7-403f-434f-87be-f3e2577505a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f6f6816-a25a-4d47-a9da-a132646afdc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c972cc-adf1-4ed1-ad49-e71866a87871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ca05ff-b634-4aee-9d2b-d7b41a8de201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276ded1d-5ac3-477c-891e-2c91847df466",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e2c45d-5e3e-4024-9182-e3b8c5c9d432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "994ee8ba-798b-4f34-82d0-6b498ff100b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d09031-60bc-4ed8-a445-5f72dcbca526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c8f618f-a08a-4ef8-9f62-c45dce3d44d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361f69fc-c3a5-4407-9a8c-6f5a7e581e17",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcd5490-f6ab-4b60-849b-0dbcd82e12c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd53c40-0713-49d5-89fa-1a138ed4f2aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5501cee-72ed-4374-90a2-cd254f6c05c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d6cac6a-ea7e-4d33-92f7-46e40ca8b339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f60b76-7ecf-47e0-8c3b-d3eb67dbc7ee",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6a612c-0e6d-4273-bced-b00c0fcb70c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86100ee2-8c12-4845-a4ff-7e0697dfdc80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a6ed85-d8f6-4f5e-9a6e-d724e7c9c1d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8be913b-e648-456c-b958-4513db1adaa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd2210b-91c2-40ee-8a59-e80b971cbdba",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda9cb42-8f20-4863-9c98-4a836642a2a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71ad184-22ae-488a-a4ff-c25da9bfc453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc96d786-7395-4493-a6ed-5a79e658b3fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943d3eef-a4f1-41fa-868a-3a0fe7e49b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1bbf47-5a8e-4443-af00-0c59f3a45267",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..a5NS2rMhgsOcN1dYaNHuMMfcuscEbs0zL9JCQVt7y1iy7q1g9pGUlhFwffQUNj_M6JgmHG2e-V_QNPQN9b0rDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034f2d2a-e4f8-4824-a9d4-0b656bbc7f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e6a888-0947-4502-b2b4-ddd2d6169e97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed1eb4b-0d52-4dfd-98cc-a245bf062e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0391181b-8426-4bf8-979d-e662d688cdc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5e44f2-c56a-4759-813c-0a9f18f17514",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5058325e-84c6-410a-9743-c3c440bec4b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e1255f8-f532-43da-8683-693e524ce0e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd238142-9e60-4e15-ad21-14d1769d3865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71fd7f9c-c9e0-40ac-96f7-32fc3c536001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ebd012-33b7-4545-bc12-a6e1383fc6c0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b2f069-91d1-426f-b82a-05105d4a6f20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd37a38e-b1fe-4702-9636-dcedeeb0ce93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81ff655-6d6f-46b8-acb5-2fd5fd951109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e608704-40be-4f04-88b4-adfa87121de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6f2ab1-390d-4d76-a258-1974cabbb3f6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f590724-6045-4a8a-95b1-194542c2b864",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bed95c54-6ac0-43a1-9ca4-e8f16a95d150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf25aae-f2ae-4be7-8aa8-5eba8e275b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97f5ebf-271e-46b7-b90c-5faeef069cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd639e3d-bcd4-4529-9fd5-f302f19f098e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c399f06-2f36-495a-9a8e-53833542bfad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c98a3724-8a0c-4b26-9980-08474bf17519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97d8831-5d5c-4558-b527-aaf91e52b99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d484aa-d60d-476f-a70c-011a5da46858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2746a89a-028c-467c-a98c-a12c7e48a74d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b42c5f6-9692-4fb7-90b3-9c41164255c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89bf773-1e6f-4f85-a0c2-272a0c8ccf06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d63291-480d-409a-a398-28bf925ca8ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a52dac-fd61-479f-91d3-9ecab3a716ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce5bfe5-60f0-4fc0-9d43-2fca998b8348",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ba0ea7-94a4-4c1f-ba41-f6b9d98dd456",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "822962bf-b04c-4eb4-b385-b597798eb829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d329167-eb09-436d-bcaa-01cde920b700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a37769-1a0c-481a-b989-3777f6d74fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5747ad-023a-4a83-9792-b24b88053d8a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9848eb6d-1314-414f-b066-0d8afbec462a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8d1973c-7146-4e8d-bca3-7c9e5438fb1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e02d79-0578-46a5-89d9-aeafb715af21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa24b927-21d4-4bdd-9dec-a240bd44f999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8319ef70-fe9e-4a93-8b27-8bf34e4d4ca9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d50b14-4a25-49f6-9085-45683c7a39e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad74b3c9-7d4a-493a-b7b5-cefe60cccf5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e037cf91-0542-41db-acce-cf281af5574e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef30318a-bd04-4b38-b850-a6fa14e346db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3609a13d-c120-411e-b169-4f2c3f9c4580",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c70fe5-6fd7-41ff-9ef3-b7a8ac4cfcb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72cf0784-df24-4a15-adea-88e1072f2704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "273967a6-3c0d-4d13-a514-11384aceea29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba14a67-4d3f-4341-ba33-80a5c0b9b0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b94694-c41a-44ed-b309-c303507fcf38",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd03f88-df68-44ed-9aa8-ffe42d4d8ebe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7d85018-dac8-4c8a-88d3-7a0ef6dc3ad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca23201-b8e9-45bd-a128-6b1d662af5ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b047222b-452c-413e-a4e8-9367a3329bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8aa2465-10eb-4837-a712-12d38c71c71f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51702e66-c8a1-4036-9741-9a243b43dfd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7aed4f6-9c7f-4b54-8d77-9fa437aa908d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd57ec9-f36e-49e7-b0f8-f07d79304732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cab96bc-af15-4765-afaf-3c9fbf3e211b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ebcbd04-7ae5-4eec-8cb0-d77d5104d569",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e218c265-51f5-47ba-a646-663537dd2ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb14c88-99b3-41b3-82f2-2849c2cf6b79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d332706-3d8c-4579-9559-f12d082209c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84427a25-3f85-4520-bbc4-73792ad3aa91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6ff2f7-f87d-4f61-acf0-06b7e5708eaf",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc80f8a8-eae1-404e-9173-50b28911cc82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3244aa3-9d97-46eb-94cf-e55f1325c441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ebbd56-f899-4ab8-9bf9-c8af9a4db344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b736c69e-6c5e-4f25-979f-ef00ff4a553c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865eb93e-abc3-4fd2-8664-39543a42b12c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096ba12e-eccb-4a8d-ac17-4a9864b35697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19493b92-ed8e-4ddd-a178-7fb37f98d899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe5a1fa-3609-49f9-9a50-bb525711f5de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c37066fb-32ee-4800-88c1-60cda7cd93a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954689b0-6b7b-4567-acc5-f4fd1de8145c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a21a308-7710-451f-85e9-20431b026909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bdefed0-b226-45fe-b946-b6e87c2f6207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c05832b-bff3-4084-b550-bf349c4897ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0887f820-598f-426f-a8d5-7a383efe0358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7504b2a-3592-44e4-ad23-0939c32d4eaa",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67ab996-78c1-49f5-9c87-ad7276ba6870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ed05181-35eb-418a-a7e8-8ca5ea58f48e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e55328-3e3e-4f78-8eea-6c1a8641b4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab82ea7-f727-45a1-bef1-b890ce8e3b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbf0ccc-8d5b-479b-adbc-92db005c125a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28af516b-db6c-4f84-8f75-882df00e0c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83f247c-d436-4446-9485-03b48940e98c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b28f3eb-d418-4b91-9c7f-a412c69308ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28052875-4437-46af-a1b2-5af6a0b27a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c817a4-0692-44f2-8c5f-27ac45767979",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14d4d09-85b1-412c-9e6b-aca733dae123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c039fa-a20f-4e27-b13d-7aa5afe26e61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a83700-0aa1-4ec5-b841-9c4cc89717d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1266f1d-d1ca-40d0-939a-b3a330d3e101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c265f5e-aae0-4cc3-905f-9053bed871a7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a982b5d-767c-4ba6-bb36-7554ebc7f5c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc369850-0d19-4a0f-a91e-e0d37778fcf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0fb1a4-be1f-4fed-b1ab-c16c1b8dadae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe26d88-eea3-4b6b-92f8-6400f0c4ee57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caef90e0-bbb8-46d2-96f1-23cc683a1b17",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53559858-4c18-42ec-b810-e86fc1178d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e28f3c7-4147-48e0-9486-8bde67e814a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d96f88e-9222-4fbd-b314-15fbf5e7b98b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05293b74-6fb2-448b-9d0b-1a51eb46e40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6994cf1-c9ec-44ab-bb6c-fa8547bd707c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e5457c-974d-450b-b482-f6cbcf650c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce024c1e-9857-45f3-8f95-84db69c046d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab0d313-6cd0-4627-bf9b-ae9acb35d2fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f86df3d-8d43-4eb5-9ae8-4cff54a2d0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9938dce-780f-4a06-a838-703893b19561",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..4x5xT7i6SOYZ2xoyxzXT8uh0iLvuJKsaEi5AHunTghGIyojcl7qPoXS7-zIBtAzdJ_hQ0Y0FUTCtt_iCymTcAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a411a918-9396-44ef-95ca-246d7f262c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "224f8d1b-bc02-4505-a7b9-456e02fad896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f172e6-5dc9-4e39-beef-b4eb0d6f907a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ab5bc8-3470-488b-8fc1-4a2193c7cf14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f6dd0d-2bb9-47de-9639-de7d5c417a2b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246ee77b-0de7-458e-935a-47a730a53acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b4734fa-dda6-40b9-b268-14a2e1c3a139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc619d4c-c959-4cf7-8516-d8dc9ee444fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825232e6-66e8-4bfe-97ee-f42d7d3d07fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7373b1-e5ea-4dee-960e-9baa237da493",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d281ec-7a02-446f-b5d0-0f3ec4c0496e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54559cc8-74df-44ad-958d-7512f7b17216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79cb81ba-77ca-4b59-ac1f-09e66d8a799b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92bfa030-1e69-4165-932c-eeebb50734aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be31945-db0a-403a-99fc-66bb43e96de0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa056ac-551f-4a70-92e4-6e0f8c5cd6a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f57dd7ac-704a-423a-9ff5-8cc64fe63bd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9633e224-2928-430f-a81e-1514850cbf5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a111451-8590-4940-ae2c-eb052b71d01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bae1f1-f4f7-4916-839e-4f65889ef91f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18d80a0-dac0-459e-8dc6-0713f05bf73f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "657e3d24-fe18-46f2-b328-958926de9126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26a39f9-2983-4637-8c18-790ea88f24c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca2bd3e-1064-42a4-9fbc-4a311da965d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef72ff9-b152-4de0-82ce-10594550c4c9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf7b09e-4f70-4f72-b90f-b0a34b4aed32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d4aaf54-d6d8-4700-8f1e-1d23e8f90d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "565b3dd6-7297-4704-b4fe-791555de6bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "371ead93-6427-4584-a40c-5b979d56504a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d31049-74c1-4b44-a3fe-e339886fdf81",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ScdiIJdpg-fZNifwI7dNf0i4fItp-Gf_MGpTO4Z7kp1eQGg-1nf3O3BoaPem94UO-gL2fM-eY3HdNOyTUl7bAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6049156a-03a8-4e3b-b62d-e4e6cb423a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a74c3a5-485d-40fa-bb60-5ebc95f6347c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af558b79-fc36-4663-b4cc-a089affba269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da9eb4e-1dc6-4872-a472-8cd4249baf0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58baa69-2309-4253-9d87-83c98c97ae9d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07556148-0e34-488e-b5a1-7f9069ec05e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce5f4f7-88c2-4d00-8ede-da7a35808a24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34eb1ba7-2c4a-4f33-8ba2-53b4cde1288b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8415ed45-5b2f-46a7-bd79-dda8d129a5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2517a7ef-2ee6-4a95-ae86-67a47bbd1817",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fab298-7222-4ff3-8f1d-ef4eeb43e521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac112fc7-0f8a-4f2f-81d1-c1183917dfd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7bfc03-be91-4c06-bc0f-e4b57a78a2e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44fa7dc8-4318-43bc-a8c4-7847c2230e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6316c1dc-b409-46a3-b8b2-613f5267435b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12cb1a0-3cb3-4c50-9b3e-9617aaa138dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a042a940-9abf-4699-a550-558f52cde0b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "221a3ceb-4dae-4452-9c7f-1c162843ac91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892adc6d-483a-4d20-89cd-46beb82c798f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c96056-8433-4807-9fa3-4173a1c05258",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189c2d36-41f1-47de-99df-f05e2bde3371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e34877-d609-44ce-9af1-912ad169269a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a0e5fd-80d3-4aef-8488-1fcd9a2a7487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7257b24-9438-42ba-8ac7-35e25c108bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a66450d-310b-438e-8a97-a1ca7fef204f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a2fbf0-a2b0-4133-8183-ce3b76987a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821c38b2-18bf-4ddf-934e-e57fbbf51bd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f075ac-a850-415b-91c9-04bd5ecf3c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b19a49-8955-4c35-8a5a-b4c642168801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03b9faa-0ff8-41c7-9038-bc79e12f3a03",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ffaee31-f78b-4b1c-bdc0-18a362b50846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e8cb5f-2711-428b-9c1a-4ddcef8f413f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e49e623-2bfb-4601-a56b-e46fd27a56f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "443d3f24-1410-4008-93f2-ad452403c807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e21fdb-3f3e-4fa2-8560-0abdfeab37d1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7cf41a-3c07-4ae5-af94-d6033262f56d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641b602a-e81d-4c3e-826f-8cb69a2db610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b20752-5db3-49e1-8284-71dec8a65ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd328e0-f86e-4117-8151-9950d98d88f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91ada51-000c-429f-a7df-da151ebfd2e0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ecee3d-c913-4c1e-8b47-c5ddb34c01b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e578dbec-1996-43b5-898f-76d499c2d4e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f54f18-828d-4fb6-ba00-61f167efb1a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d534cf91-96bd-4845-ae3c-1a49555506db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fa8e47-531a-4989-8bd5-5a62c2594f0d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4942c4-0921-4ecc-8503-870b13707280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb716593-247e-453a-8ab1-5cd0df0acba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ac97a1-f5c3-41bb-b9f6-fc54452837ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e876a61b-1b10-4e72-ac8e-d5c7efdf3af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7aa451-296d-4d93-a81a-9d30427a79f1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37e767e-d06d-44e1-a773-e004bb978e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced8576b-16c5-4fcd-9975-7c8906cbd104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be51ab5-8a4c-4f14-a5e0-9c346a089137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241e0d54-e8d8-45c7-a1af-1cfd12bdc43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a777fd64-ee25-425c-a471-1f0d0c475c8a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f5e4db-fa5a-43b8-9f2e-5c9d19b1d48d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e712b1c-f336-459d-89e7-5c1c254b18d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c993fbb1-19ee-46fd-ab24-94cff12e2dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a9d2ec2-cfbc-4fee-a781-44ad532f297d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e007ee-d20c-4fbb-ab4a-5db73e8afd3a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..WJ_K6rlTXdYFhAt5Zmbei9B-5TawMj7h7MwRnKEnJ6pRjHvgBVRwgjrbdpCMs8DtA_SXe5LoVTNIDPSYA8ALCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acaeea2-6773-4e1b-8251-b6a2372f5eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96dd6f0a-b4c6-49e8-be8c-7b07c71cd028"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9e443e-4b07-450d-b30b-2a1396010f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ffe76d9-fc6e-4e79-b174-6a8d453bec7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bec7de-384e-4ecc-a230-9dd87aa633a3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09734ec7-2b3f-4bac-99c9-d1c0867729cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "665bfb53-2433-44c2-9373-e75e16541c51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44dac289-8f55-4e2d-bd6e-c03f7cb396cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ab6b9d-9b77-4f23-a532-28856149ee5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09cc9313-b9b3-4181-89f6-8ba60af2837a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9029e6d-ca71-4e6b-ad19-3ee483295598",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65de7203-c96a-474a-bffb-4c0d7550bfb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f25b6a4-6219-4295-b506-5bf207639cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10560052-6296-47d5-9749-ea77ef21ecc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74848344-2a7e-400a-881d-c8f0f935f325",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fefb34-ef27-4433-a918-2676fb374cd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b124c9fe-3b8b-4fdf-959b-266920d8cdb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3016de-20fb-4bb0-b684-399f4a4c3f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea1d226-264f-462b-ac48-924cb4a74388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8888c515-95ef-4530-bf20-a57f3fe1ad3e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb7abd6-f4b6-41ef-b398-3ebe874df0bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e93912e-f109-42a6-87ee-6c5ae09fcc68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b0a39a-c7d3-4e1c-8618-4b0d4bd08fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5a8bee-3bff-4256-8285-38d90e8d81f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ec9219-a122-4c22-ad00-1d6c21b4b7ab",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd053177-ce7c-4ec0-bcfa-aff8cac2c298",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4fc2149-8a98-4a0b-999d-219c483f63be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a798fde1-7648-47be-b7ea-33b020053e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3961f262-defc-49fb-9777-aab600f09238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fbdbbe-71cf-4299-9e4c-180148d028f3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b421a41-4a93-4044-aad2-69f1bd13b9e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6af7d3d-790d-4d32-b465-88f5240da0df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "678d6e4a-6ec7-4089-be5d-840ff88c9995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5c56ae9-19ec-4bb6-ba48-429761c18941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1808a620-c82f-4a45-b20d-3728151223ac",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d322860-047e-4d34-83c8-d68f9b0f698a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47f70a1f-3569-43d1-8ab5-d7ace3e17fe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac945f2-84e1-4376-ae5b-a9c24e25f20a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "797d3114-512b-46ef-9220-6690d7e11ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52c5996-e9b4-4342-8a52-bfc5b661716e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c3f53e-4e60-460e-b97d-eb8c0e1f398e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18c63d2b-87b2-4d9c-8aba-f47584b07b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "359b07ee-8a0d-4ba5-a304-5ab4438ec6a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0511a78-4c33-42c6-b5c1-953e5e59117d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59704222-34bc-4f44-81a4-cbc799833580",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caad572a-3d20-45a1-82fa-234058d7bd65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8f163dc-4d34-4b85-b0f7-8bc275ee3d70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0244b4a1-edc8-4657-803c-46ce811453e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c98cc2-49e6-4bec-af28-96f2313bc3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f037a6de-0807-4d48-8352-bca9111458fa",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d21feb7-4d24-4f1d-b613-fd5d48430f85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef5672d5-ba50-4f82-9ee1-a6692830043b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eee097b-dced-414c-989a-fff0960c2378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "394e62bc-1c27-4ffc-9afb-2ad2df3fc884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5491325-211b-4875-8067-205caf79a9c1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7a4065-2f7c-4436-a1a8-4290b8d84f8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e535f1d6-acb6-4b56-ad70-bcb92b7d8465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94938ac5-c542-44f0-8d20-bdb34d3d4f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9090324d-968d-4277-8c73-cc0a85087282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d112bf-40b7-4748-af7f-51be058e3511",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62697264-8dba-4acd-953a-c98400405b31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb17e3a1-9f31-4017-9b8e-021d63735d61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a1aa98-77ee-4bf5-95cf-c31a2156b20e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a000176-eaca-4cac-a3de-f63233e882b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0bc6da-c250-48c1-8938-34e4863cc6be",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3e88cd-5ffc-4529-b5af-8ef92e28c7d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4fda2e2-16d4-4f07-b125-6e038036261d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4612d9-5c2e-4bdc-a39b-c4a0f6d1c8cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b562aaa-4500-4dd8-aeed-fb750a341977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0cd333-d155-4c4a-b255-22657229a7ca",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2683d6d-5c13-4b56-a4f5-7c0929ed6f72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2934d6b7-72e1-4ace-ae69-977d7e911ce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0767bb86-fa7b-4eb8-bef6-6bba3c0c615b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1916a4d-cf7a-46fa-b0d7-0656b6b102c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1326c12a-2647-4a73-bc0a-3edc8f1afe2f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1133c6-48bf-4ad2-936c-10899d62e212",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aeecb26c-9282-4c77-8fe6-1824e6ec7c3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc817d6-2982-490c-83ad-e4fd07d84955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20089060-7cf4-4142-a4f2-6eb6e28681a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd41e2d6-0d6a-41a2-bceb-1b46d17bf0af",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d64cfa8-a114-4923-b6a1-572ef9f9e6d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db0463a1-d991-4732-a88b-4ea680839d22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be5a6e8-27a9-493d-b4d5-35b4d2aae662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e096cc5e-d623-4655-b8b5-50f851945720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71054171-1444-461e-88be-3270d814d216",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd6cc52-fbe0-4125-b14b-8d02d7decfea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a50d5381-1e96-4632-b90b-67e056e40b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab77c05-4634-4cdd-b7c3-df3e17498658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec3b0fb9-f30c-476c-a61c-0cc96d6819f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27579198-b089-4312-9955-f5b98a75f59c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40613894-a958-46b0-9913-c0f91618cca0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faa95a4f-6266-449f-b18a-7d88fe0d1499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbf4a52-2b26-40df-99be-f07195aac3c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f40ac1-01c8-4154-84a7-7469a366e1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78139daa-11e9-4f7c-a0ae-f15720055285",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d1b928-966d-4c8c-9568-aca037deb234",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ae40ad7-6713-47dd-938d-48c203dd6745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5c75f8-cafa-4a4e-9063-e42857e44f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21cea4f-d8da-44c1-8965-c3f112fba445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743aee45-244d-474a-b259-96d8878b10e3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ba5b67-01c6-4851-a5e3-0546ffb3b790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc10921b-dcf9-459c-80a2-72831a737ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d1396b-794d-42fd-a747-a149ad824c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6642584-2368-455e-89d7-abf111734917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd36abf-5b79-43ea-99ac-91b674a58a8f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c890c5d3-b166-4980-84b8-45318136167d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8d81a75-e2ca-4c25-a095-380e43708f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114da3a3-57b6-48dc-89e3-913fc7981a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fbf1beb-b82a-410f-ba96-b674eb8866ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f0fa6b-b7ca-4f75-918c-039ab3c9229e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f50d336-aa28-42f5-b10b-6aec921bddcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b488802-be8d-4dcb-aa22-c5d38d6dcb0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2358538b-8484-46a9-a091-372a93c69922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0648940-d627-46d0-b93d-df9d5ff96acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1b676b-fbd8-4704-9104-33db0d2461dd",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452c4edd-3d5f-494b-a148-0dcd11a505c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06ef50fb-0548-4d8d-886b-0825b7ddb1b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f8f20c-d9e1-424c-9aca-54057d32a740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd19a86-8309-4a3d-8871-52cf449f0a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302721ab-c03a-46e8-907e-d9436114a9c1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fc310a-dd58-4a7a-9ee8-144b7adc5cf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6df5f911-f33f-4a65-b92d-24e171d0adb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ddf660-f698-4b25-9760-1be56fea9f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d126d7e3-113c-48c4-a45c-04888cb2490b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd36d41f-c78d-4762-9b73-24ee374e9358",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e6e698-fab9-45cc-b736-f2a5e05b3095",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cab67952-8d5d-4edf-a0d6-3f7824f07672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "785f4c04-9b68-4229-a352-f39faa7bfaba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f782934f-1790-40f2-be77-879b98b64752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4c03ca-e089-43d8-b633-0d93f718ed34",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff1fcee-842b-4099-b9e3-4da03d4f1c16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "409a922f-3c32-44cb-a0bb-5f927bc96aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "235cf935-578c-4e13-a513-e4752a683f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce8c349-b211-458c-a3fa-85a96d553384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a1a104-5eb6-473a-a3e1-b93c40aa59e8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a1e653-aa9e-4cce-ba47-a967f3796ea7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b1af25a-d1cc-46b7-b69a-57da22dadab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d00d4ee-80f3-4232-8f36-8f9f21a8fda1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9124b95-a9d6-41e5-ab92-5f3a50863fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8664ce4-b749-4348-a9be-4b379ee736c7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6010f5-d8d4-4434-b780-8e5dec8ee07b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d9e824e-5eee-453e-bb5f-e9f52bcf2a92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9858d86-521f-466d-845d-cd9c1b1383eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "575af46e-6353-4bc5-ac04-bb9cfb78e075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacbba8c-e290-4f21-91ed-95b071b74d3a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b179ff-12d3-45c9-a0b9-b0e79695315a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ab85dd1-ec99-4843-8f26-8b29363fb2f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de61d51-7337-4238-ac76-9c572cfe6ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76294ed5-657a-4980-9c0d-cafdba0de152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ec967f-1f37-422c-87f6-5c1b1c2d97e8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45cce695-0d4a-4243-9acf-9410bfdb3458",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51bed5b5-7a00-4f36-b070-f6d90c6695ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cc1fd7-dbfd-4bab-9003-204be76673f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c2c3e98-f3f3-4d9b-a13a-50b2be75d24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153ae5ec-b129-429e-ab69-cd13f463126e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a535b4-527f-40a0-8618-36eb691933fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a507f9e-0326-45cd-bc97-1e7d82699824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb150a3-c6c8-419f-b7fc-42287d8a6e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f65caf1-3363-435e-9d3e-cdfea5a9b9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be64209-3b4e-48dc-bc80-7e0e6a5fe17a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62f9052-abcc-4abd-abc0-26f5b0c00fa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d12ed3e-6e8e-4f32-bc40-65c9e8b311f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb743dda-7b5d-46b6-a3b8-eef32cc04ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad64ce0-1501-4058-a3b8-8cd6ee4a06ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb14aca2-9edd-4290-9b27-a83823685d85",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18381b9e-6b6a-4730-896d-ddaa55476f12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "822cc8d4-14f0-499f-a305-31f52e76d130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b648810-ffd1-4fc4-8f78-3170452f3e3b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a42ca06-92ee-45f7-bea9-ce1f2f59a51e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24c757a-ab3c-4d24-b86c-e404330ac376",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe37538-76b3-4f68-b8a7-3d108dcc49dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6647bf40-af8d-48d9-b89c-ed664e5b2381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31edd836-faee-4458-9b5f-f8213a772738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2a1a7f-ced0-4241-a183-522147338bc0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b842f31-389c-4010-b0e8-226122ce3093",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a3603ca-eec0-4881-a08e-2ce283ddf041"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "516598f8-1153-45d6-86a9-2407cf7c8523",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db34fb79-d148-470b-bf81-c0395b71a294"
                    }
                  }
                ]
              },
              {
                "id": "44da97bb-8b17-40ca-b364-f8c71a5346ea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f3488a9-866c-40c7-901d-fbd162e0d610",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f654e2b-83c0-4643-81fe-b8ceee0cea96",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0b65eb8d-42cb-49e4-8ab5-55f2e82ca026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8015ab07-de38-476f-ac7e-47a7d32236e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "daa57081-0746-41b4-86be-fa72b3131e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c79bb99-9d89-4c61-8f9d-e52a5e3bd613",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fd4e18-2b8b-4b29-9244-70e35ad16815",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "15b5f7e7-e8c4-4f45-af49-a7ec8417f17b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e610fcf-6e5d-42aa-85fa-626eaa3ee856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cb0681a-7dd4-4c85-a597-e3924113f20e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a901b2cf-cff3-46d3-8bef-bacbdbf0574e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90a9b60c-c4a7-4953-8c82-32043e4ca7d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "976dfc90-19d0-4644-ac73-25a44342362f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81dc77f3-0a7e-4380-878b-3010196d5c10"
                    }
                  }
                ]
              },
              {
                "id": "838b7b78-12ed-426a-afc0-5008d3be3a7e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e5e849a3-1ad9-40e7-af3e-fd410c49c407",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a8119a-3155-419a-a0f9-c156a3551522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8e2d70e3-ab18-44ea-9485-6545e24c6ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22286d76-ddbd-48da-beb4-157a767a6e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe2d3d16-e3df-4fe8-8ca2-e5cbe8ab6894"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "838e6922-050a-4045-af6e-a9c022714bc4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f10d431b-04c0-4c3b-ba92-a14725484a97",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c33971c-1c89-4d33-9247-c86c513890e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "985bef37-4f4e-4f7a-af04-0d0cf0fcfe1e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e78e33ea-bdbd-4809-ac0f-ece0f8490042",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "645aaf72-32f8-4b33-a957-f2f0a28cb9cd"
                    }
                  }
                ]
              },
              {
                "id": "670b2f56-f19f-424a-b8b9-a332ea497e60",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "871280c1-fb83-467a-986a-078842ea5824",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a773077a-363f-42f3-b988-94ba22042e59"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a19ebd0-196d-4939-9e04-c776ce160878",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0648562d-c252-4fa0-b413-14788c8fd80b"
                    }
                  }
                ]
              },
              {
                "id": "c3548bb2-eaec-4e27-940c-9643699fb66d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "152396b5-ded5-488c-984c-f21fb76f1502",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "21202b99-fa18-4430-ac1c-c05890527fe8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e098da76-3abc-4e3e-b5d8-1f58b47b0fa1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7061ddbe-26c0-4d24-8017-f1bc03075dc7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f5c2d12-6ca3-4d8a-8e65-19018aa10a3d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "830404f7-f424-4e73-a69e-0f0dbe2223ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2175a80-3c84-49ba-950c-813f34024eb1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a22bace3-56ae-46e0-8d35-82ebf89962b9"
            }
          }
        ]
      },
      {
        "id": "520b52ac-33ef-4f2d-8863-6b938b1d4b1d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "fea8bcb5-1a0e-4eb7-b34e-3d754c6f5850",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7be2ca59-eeed-4481-a344-c882bc27db68",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "586339ac-8fe5-4761-a203-fa93e2d4a8db",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f312f5c3-8a2e-4b37-bf99-adf85624d402",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "699f319b-c93b-4e31-8920-15ba9e5db74b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "209a62ce-416c-44cc-81e7-d2789164a6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c08d8333-63c7-4684-81de-577dcd4927dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820911d0-7010-4554-8a15-5c96733b179e",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646e3fcd-4068-44a6-a041-4243bfd92d82",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c8232a41-1a9a-46dd-91dd-8269618427dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e314694-2805-4b10-a79a-fcaef5272e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6115f9e-145d-4e1a-ad90-ea7b59f2058d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0319479a-dd69-4aa9-88f9-da7dddc2f636",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38331fbe-2b04-4f89-9d99-548458e41d60"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bba12e8-0c1e-4da2-82d4-ba4789d8e7a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16692fb7-e712-4b42-a5a3-919f50772acb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ee900b2-907e-4084-b6bb-766c8bb473ee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3b9cb164-bfa0-4054-a336-89452d9bc90f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67c8d1b4-2991-4365-b4bc-eb82f132f0f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fefef555-74fe-469f-a206-a80939dd362a"
            }
          }
        ]
      },
      {
        "id": "dc498d10-be3e-41ae-bd1a-f1f9596b6650",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c4c63cf4-fb56-41c4-9519-3df477ca85ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bcde9111-cd74-4299-8c60-4840e367267e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9cb4b12f-d396-4718-965f-f2932b103f4c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ff3264-47d9-4365-bef3-63fd3d257dfd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "36f9259d-a0e2-44ac-a621-6da2a5f1b3bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d2c6de-9bbf-4deb-8e0a-0ee13726bb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c203b0aa-582b-4aaf-acb9-4b7c33805fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9ed97d-7078-4a02-864a-c1cb5d988963",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407b52bb-7d47-4320-9e9e-5d258022e429",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e7990b6f-0139-423f-9139-1c9a8bc88534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ffe100-f2ef-489b-ab16-5e6f9bdfb0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63bd479a-8e7e-4fa8-a24e-aa80c95302c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aae199d2-d14a-4c6f-9b37-9eaa54988614",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a781caf9-e123-4b47-9e0f-1fa289a88afb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cc935d1-e5a0-4b79-be03-fdcb2f9897d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d68a7de-3edf-4b74-86d9-9cc4e0be3747"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0a91a7d-262f-4662-960e-ce080d42a6ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "40d4a98e-e963-4eca-a30e-e511168f2d30"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3ad428e-7728-4ff2-be80-9278db1c9cba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0651c125-1943-497c-869b-55925b114cf0"
            }
          }
        ]
      },
      {
        "id": "f755cc5f-42c6-449f-9478-f2ca9e4429f9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "50f37291-f498-4019-afaa-e298b97d4b77",
            "name": "Negative Testing",
            "item": [
              {
                "id": "58ee9c38-6fa3-46b9-8e55-9e41ca40db88",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa2757a5-eb35-4fcf-af51-4bfcfb038e21",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3acd0b-5fa8-43f1-97be-6e5d9901d16f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f3742e2a-77a2-463f-b56f-b8c277606f8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "194a8187-6c1e-4ff6-8f45-db4b8080447b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfb29275-28ce-4f08-9e72-c8d7487e3357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93525ee9-5f94-4061-92a0-c87c2e58651a",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5749cc79-8b86-4062-b6e1-cfffb10cc30b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "72f0cad9-0bfd-49e4-9bc2-b4390596ab65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f09a679-5778-4a3f-b5d8-44c43ea4af57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6848fc29-c67d-4c27-8677-ec0c62901466"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5abe161f-bf55-4035-943b-8a5d48f6c06f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da9f974b-2ae4-4edf-a808-38db47990256"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "046d67b9-2762-492a-ac32-275b195e15bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c56eaf65-467c-47d4-9111-b7242be776d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c0dd72b-e8cf-4d58-9d01-6efcee9fd56a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "45ccabba-4b77-4110-bed4-d2084d5448fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "617e5747-c92f-4b56-8b74-007d0b7eecf8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37570b17-4ead-4142-b5d9-34b824d36dad"
            }
          }
        ]
      },
      {
        "id": "545c790b-5371-47bf-a7a4-18f92d763c47",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63eb1f05-47be-4b83-bfa7-1c059e1fd266",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08bd4e3e-1866-4cc9-bf7c-74137f8d7162",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "da7e0e3d-1815-4583-be9a-1b488f007be9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e54e294-dab6-4326-90cb-4dec05a57d33",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7038d7d9-02bd-428f-967e-9f0f212fd911",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1923,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 519,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 966,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 957,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 599.1679389312973,
      "responseMin": 19,
      "responseMax": 6302,
      "responseSd": 763.4386966562807,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1670978322687,
      "completed": 1670978490338
    },
    "executions": [
      {
        "id": "1ffc8170-d08c-45a0-b5d2-d70aa4d2c243",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ae520c82-ba9a-4585-a0a2-d66e064d4537",
          "httpRequestId": "d87d04d5-1d12-4bb9-aa89-3a0b041db29e"
        },
        "item": {
          "id": "1ffc8170-d08c-45a0-b5d2-d70aa4d2c243",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "71565ba5-7213-405e-98c5-9c647859aa21",
          "status": "OK",
          "code": 200,
          "responseTime": 111,
          "responseSize": 0
        }
      },
      {
        "id": "3733ba9f-b913-4f63-b761-e9f39b7ac335",
        "cursor": {
          "ref": "f023f7f7-d5c7-4fab-a724-d689e50f6cc0",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c7a5f512-3f45-47b8-8c4f-6ccdcf1aa812"
        },
        "item": {
          "id": "3733ba9f-b913-4f63-b761-e9f39b7ac335",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3cc2d0c4-162f-41f1-ab4e-af27568c4b0a",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "4de8f5cb-8d6a-462c-9209-7782ee5eb1bd",
        "cursor": {
          "ref": "a13eef8a-d60d-49de-9081-64919417568b",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f60a9453-2227-43ef-99d7-08811db9b4b7"
        },
        "item": {
          "id": "4de8f5cb-8d6a-462c-9209-7782ee5eb1bd",
          "name": "did_json"
        },
        "response": {
          "id": "ba66ef74-970f-4d6f-824a-c7798a30b7e7",
          "status": "OK",
          "code": 200,
          "responseTime": 1146,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf4fb88-74d9-4c40-8914-7374ddcea5ed",
        "cursor": {
          "ref": "d17a6565-877d-4bc1-a893-6fe32e991736",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "850788bf-d9e6-4fd1-b1ea-03aa4f1c8859"
        },
        "item": {
          "id": "daf4fb88-74d9-4c40-8914-7374ddcea5ed",
          "name": "did:invalid"
        },
        "response": {
          "id": "654d84ed-6f74-4d38-915f-a02eb8cf970c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 980,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf4fb88-74d9-4c40-8914-7374ddcea5ed",
        "cursor": {
          "ref": "d17a6565-877d-4bc1-a893-6fe32e991736",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "850788bf-d9e6-4fd1-b1ea-03aa4f1c8859"
        },
        "item": {
          "id": "daf4fb88-74d9-4c40-8914-7374ddcea5ed",
          "name": "did:invalid"
        },
        "response": {
          "id": "654d84ed-6f74-4d38-915f-a02eb8cf970c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 980,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60bebdf-bffb-4d10-8b65-9ffa4dc20056",
        "cursor": {
          "ref": "c7034884-a746-41c2-89d5-8fe962222d42",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b3fdd70e-d939-4e65-8bb5-6f39e7e85f25"
        },
        "item": {
          "id": "c60bebdf-bffb-4d10-8b65-9ffa4dc20056",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c1f7809d-c3d9-4113-be2c-098712b98722",
          "status": "Not Found",
          "code": 404,
          "responseTime": 610,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ca9fe6-b263-48cc-a050-513363834aeb",
        "cursor": {
          "ref": "fbf58814-75f8-4044-90b3-c4c308c443f4",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f04d4d8c-a3ed-4605-b3b2-374867fe4063"
        },
        "item": {
          "id": "14ca9fe6-b263-48cc-a050-513363834aeb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "94981407-8cb1-4499-ad5b-14efe1e716e8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 486,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c832dcf5-0d13-4d25-b069-6aa2d9b54c27",
        "cursor": {
          "ref": "8a2f6b77-a588-4713-8a88-667b9bd42016",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "55e9f6ef-e27e-4164-8bf0-eafc49f50f69"
        },
        "item": {
          "id": "c832dcf5-0d13-4d25-b069-6aa2d9b54c27",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f2cdc66d-2bf9-4473-8488-38fc40e65172",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4e2100-3aef-4a40-9b6e-2734ad7d7824",
        "cursor": {
          "ref": "dd7142e0-c2b7-4075-8202-d153f94591f6",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7a31dfa7-e5c7-4e29-bf35-5de648ee4c95"
        },
        "item": {
          "id": "ac4e2100-3aef-4a40-9b6e-2734ad7d7824",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "32f3439e-4b26-4237-b8cb-42c67e39b4c0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 506,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4e2100-3aef-4a40-9b6e-2734ad7d7824",
        "cursor": {
          "ref": "dd7142e0-c2b7-4075-8202-d153f94591f6",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7a31dfa7-e5c7-4e29-bf35-5de648ee4c95"
        },
        "item": {
          "id": "ac4e2100-3aef-4a40-9b6e-2734ad7d7824",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "32f3439e-4b26-4237-b8cb-42c67e39b4c0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 506,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8e38b4-57fb-477f-9854-646b4ab51033",
        "cursor": {
          "ref": "fcb23b78-c85c-4240-ad12-d8d14a81ae71",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4bbbb76e-1e01-4244-bd5b-e9d01aff6e0a"
        },
        "item": {
          "id": "ec8e38b4-57fb-477f-9854-646b4ab51033",
          "name": "identifiers"
        },
        "response": {
          "id": "61d2ac2b-2f47-4714-bd10-6dc145112e18",
          "status": "OK",
          "code": 200,
          "responseTime": 772,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37d3f51-a34b-424b-a218-88dfa384ac62",
        "cursor": {
          "ref": "85db5a75-17c5-4f41-a894-319074eb6dad",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "818f8a8a-7222-49f4-8b3a-166877eed3b1"
        },
        "item": {
          "id": "a37d3f51-a34b-424b-a218-88dfa384ac62",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4b3791d6-1a5d-42ec-9ae5-334285fccdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37d3f51-a34b-424b-a218-88dfa384ac62",
        "cursor": {
          "ref": "85db5a75-17c5-4f41-a894-319074eb6dad",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "818f8a8a-7222-49f4-8b3a-166877eed3b1"
        },
        "item": {
          "id": "a37d3f51-a34b-424b-a218-88dfa384ac62",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4b3791d6-1a5d-42ec-9ae5-334285fccdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15fa1d0-7a2d-4d58-ad9e-4bb13dca7a2e",
        "cursor": {
          "ref": "294ea767-1b2a-49e3-8bb4-24b752176805",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fd33624b-4aaf-4928-95b2-0cc761c0cf04"
        },
        "item": {
          "id": "b15fa1d0-7a2d-4d58-ad9e-4bb13dca7a2e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "23f2b614-c105-4145-983a-361e651938f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5380d8-be5e-468b-a6c2-161d956373ef",
        "cursor": {
          "ref": "7771b927-556f-4641-8499-d75d1377b1c1",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c7db7300-7716-4c80-9748-ef9aecaf2f74"
        },
        "item": {
          "id": "8b5380d8-be5e-468b-a6c2-161d956373ef",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "25a180a1-3da7-42ba-93c5-9633c0e9b73a",
          "status": "Created",
          "code": 201,
          "responseTime": 2440,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "760fe0d4-f0e8-4bd6-8d82-29932cad455d",
        "cursor": {
          "ref": "67471ef3-8bea-46a7-9cdc-8e1baab308ae",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a847e63e-a190-4c60-aa47-a87e00f784c9"
        },
        "item": {
          "id": "760fe0d4-f0e8-4bd6-8d82-29932cad455d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1764ca8e-9894-40bd-bcf7-5c3062bb04b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edd3d32-7b7a-4030-bf47-53b4da12b6d3",
        "cursor": {
          "ref": "23bc173f-fc47-4358-89c8-713d19bab108",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6e95f3b3-9531-4385-845c-6d954dc1f36d"
        },
        "item": {
          "id": "5edd3d32-7b7a-4030-bf47-53b4da12b6d3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "80b46103-8718-465a-b037-0a031aa6517d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fe38ed-d092-4de3-8437-59eb6ee17a39",
        "cursor": {
          "ref": "8e70c5ac-8ab5-4f2e-9cdf-3403714154de",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d154adfb-46de-40b3-8bc4-ccd24a5ad6a2"
        },
        "item": {
          "id": "53fe38ed-d092-4de3-8437-59eb6ee17a39",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5d01892f-f53e-408d-b80e-b28302bcad06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc3049d-f169-491c-a7a8-1a4b098cd87c",
        "cursor": {
          "ref": "71b4799a-44f1-47ff-b1ef-09473f89455d",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f5b5c216-9434-4807-86e0-a9c6f6ea6770"
        },
        "item": {
          "id": "bcc3049d-f169-491c-a7a8-1a4b098cd87c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f8a82000-5a07-48f6-8073-730401203425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55b094d-e5d3-4b48-baa1-cb2ef66dfa10",
        "cursor": {
          "ref": "b944c7fb-1265-42c1-84c5-413e95131bf2",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "de66f988-8b50-467d-a97b-98cfc81e16e8"
        },
        "item": {
          "id": "f55b094d-e5d3-4b48-baa1-cb2ef66dfa10",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6c3304f5-1379-48fc-aee5-c4e3207f99b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe268930-ef22-414d-8a88-3af368d4a25a",
        "cursor": {
          "ref": "547dc6d3-5c33-4561-8294-5538297adc3a",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5ead2f2a-3363-4dbb-acce-43d42559491f"
        },
        "item": {
          "id": "fe268930-ef22-414d-8a88-3af368d4a25a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f782d7de-077c-4a75-9356-6fe26e17e33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6844f3-8d38-4eb1-9e40-b7458dfc546f",
        "cursor": {
          "ref": "9fb6a1c1-8b92-4dd0-bf92-025b34db1043",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5ef2cfb0-a462-49a5-b735-97812b856dd6"
        },
        "item": {
          "id": "8d6844f3-8d38-4eb1-9e40-b7458dfc546f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c4e80c5e-79dc-49eb-83fa-66a4ed692bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213ea772-0031-4908-a7c8-1b74466c1f10",
        "cursor": {
          "ref": "65e17188-7dae-429e-832a-687f528adeba",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "49d8c3dd-041d-4f13-b421-a1b67ae91d9d"
        },
        "item": {
          "id": "213ea772-0031-4908-a7c8-1b74466c1f10",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "06c64b71-5ba7-4e1f-9496-32039b72d7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79425217-9cfa-4238-81a1-2fbef069af5c",
        "cursor": {
          "ref": "68bd40ec-beab-4dc0-b49f-66c3a8ffa296",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8af61087-cb11-4e8f-b285-567549af7aa9"
        },
        "item": {
          "id": "79425217-9cfa-4238-81a1-2fbef069af5c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "62d727bc-18bb-4a40-9b64-1c013bcb62af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a03bb4b-dcaa-4f8f-8fb3-5d4fdbf0759e",
        "cursor": {
          "ref": "1b66a374-9481-4524-859a-9b22de320e1b",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "86680582-626e-41b8-82ec-6dd026745134"
        },
        "item": {
          "id": "9a03bb4b-dcaa-4f8f-8fb3-5d4fdbf0759e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "73cba213-9697-4180-b198-3cfa97411561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f00d5fb-4962-43b6-be83-5a921cd1696c",
        "cursor": {
          "ref": "48e9cfc1-ff0f-403a-a523-f6f1435079b7",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f378ad09-b304-4201-bfdc-a0a367917a76"
        },
        "item": {
          "id": "9f00d5fb-4962-43b6-be83-5a921cd1696c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7d8dcb24-97c8-4252-bccb-66f3bd9e7bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58901cb7-2e6b-4685-a78b-9367a78e7f67",
        "cursor": {
          "ref": "c93404d8-14da-419c-b1d6-1aa971b47996",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "27935280-22af-40ee-85a9-c5a95833e167"
        },
        "item": {
          "id": "58901cb7-2e6b-4685-a78b-9367a78e7f67",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4fdd2f12-112e-4d0e-ad2e-e1653373ed97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f4885a-6313-43b5-a6b0-8b9dc057a154",
        "cursor": {
          "ref": "cc096d0f-2c3c-406f-bb05-15676669bd3d",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4ef57380-120e-4bfc-b98a-1e5f60134f3a"
        },
        "item": {
          "id": "d3f4885a-6313-43b5-a6b0-8b9dc057a154",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "73b693d6-7a6e-4a14-b9f3-19a0773b7548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65772d40-9dc2-4c21-b2b0-11e9d5e255a2",
        "cursor": {
          "ref": "3dc6e25a-015d-4c66-a2dd-278c979d7644",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "aafb8514-e0aa-4c21-a507-519e02fd4491"
        },
        "item": {
          "id": "65772d40-9dc2-4c21-b2b0-11e9d5e255a2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d0f88f3a-ccff-4fd5-9f50-ce5622e432ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaad6dc5-d1f0-4b4b-b7cf-70d65c467202",
        "cursor": {
          "ref": "74787b40-8bd0-40d3-8a91-dbe443250e01",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bbc24bea-d528-4002-ad5f-d91d955a1791"
        },
        "item": {
          "id": "eaad6dc5-d1f0-4b4b-b7cf-70d65c467202",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "cec52a44-d690-4e07-abec-b4e5402206f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2b39f7-2a28-4715-b25b-9a5f34b2e0c2",
        "cursor": {
          "ref": "d262f0fb-38e3-45d4-8fa7-7d7dbadbe4d8",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "baf4c52c-8e66-4a96-8fbe-d8568e621b25"
        },
        "item": {
          "id": "4b2b39f7-2a28-4715-b25b-9a5f34b2e0c2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "32ca52e7-a468-4952-87f7-235f670775d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8424bc8a-1a5d-4136-be9a-775039e2c600",
        "cursor": {
          "ref": "fd04f844-9723-46fb-9b59-72e78acdcc16",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c77526d6-695d-434d-8bdb-666404846abd"
        },
        "item": {
          "id": "8424bc8a-1a5d-4136-be9a-775039e2c600",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6ec6fc3e-a9f4-4987-90ec-aebab5a97fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdac217-ebb9-454c-9a2c-0686933d333d",
        "cursor": {
          "ref": "61a57c81-b947-4be4-8bb2-4cf503b79a51",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8a5475cb-ee98-43d4-af12-4b14d3f76f80"
        },
        "item": {
          "id": "3cdac217-ebb9-454c-9a2c-0686933d333d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "45e2de2b-5402-4358-a064-460b3c5fc651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57b964e-9077-4499-9ec1-d8d2adf66e50",
        "cursor": {
          "ref": "a7f7d8b6-ced4-4c6d-916b-d3e22436bf1c",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "11de270d-1036-4bc3-aed9-9f46bd41742f"
        },
        "item": {
          "id": "b57b964e-9077-4499-9ec1-d8d2adf66e50",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ac98ca28-e4bf-4514-8408-acbf206f3c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5ecdec-23f3-4ee2-8bc0-ff61d284041f",
        "cursor": {
          "ref": "bd649c00-d862-4273-8f55-f529aabd5c25",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ead030e1-f814-4067-afb7-35648f998190"
        },
        "item": {
          "id": "3f5ecdec-23f3-4ee2-8bc0-ff61d284041f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6fd1b10a-1d69-4f0c-b24a-6066d546ae41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a776e1d-e443-49d4-8918-a8de48f5f1db",
        "cursor": {
          "ref": "f5ec3e12-0e73-4c41-8412-b0bb9180d849",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "de9953ca-0931-4323-bd1d-b244bbe8f44a"
        },
        "item": {
          "id": "0a776e1d-e443-49d4-8918-a8de48f5f1db",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9276f70b-fe61-4965-a4fa-88d82be2b0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e9a284-f08e-4c86-89ec-9e14decc7018",
        "cursor": {
          "ref": "c68fbf06-1abe-414b-9f60-a45c3c92c4c9",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "831f4a66-545d-45df-a6a7-b37955be1b63"
        },
        "item": {
          "id": "77e9a284-f08e-4c86-89ec-9e14decc7018",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d0845d89-e386-4b7c-9400-27e8eb72dc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc052e17-cfa0-4468-bbfd-7e8a5d14da87",
        "cursor": {
          "ref": "cd5a8d62-eea2-4093-ad6a-19478c5a9b1a",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "54ddb170-c745-4c3b-b005-8d3ec3307a2c"
        },
        "item": {
          "id": "bc052e17-cfa0-4468-bbfd-7e8a5d14da87",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3969f352-1b5d-418c-a933-66fd5f161199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411e15cb-877d-4cd7-bb6a-296ec95eb0eb",
        "cursor": {
          "ref": "cccefc7a-2daa-44fe-8eba-93643994a76a",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7dfd303b-e2a9-4aad-8265-e7d631ff83a2"
        },
        "item": {
          "id": "411e15cb-877d-4cd7-bb6a-296ec95eb0eb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "32642857-5455-4e5c-b8b4-920f7e61991d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579a833e-a895-40ac-b6ac-6d163c58cec9",
        "cursor": {
          "ref": "02206ee7-d2f1-44e3-96c9-cd96a6f85af1",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a1724156-baaf-4f5f-b06d-001a9f346ac2"
        },
        "item": {
          "id": "579a833e-a895-40ac-b6ac-6d163c58cec9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d778b1a8-b5df-4754-ac6e-849601a09867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 869,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a6b4cd-f954-49bd-8ba6-de36fa161852",
        "cursor": {
          "ref": "6a57a503-a150-40d1-82f6-984c6650798f",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3b6c39db-cd14-4d47-aff1-04852eebb079"
        },
        "item": {
          "id": "57a6b4cd-f954-49bd-8ba6-de36fa161852",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "716beeec-5593-4486-aa36-7b163f960e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74be9f4-9194-4570-b320-95cbf9f2fa3d",
        "cursor": {
          "ref": "232fd9ca-4e55-4ac2-9b13-5a74665b294b",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "025191b1-bc54-4ae6-a7a8-5f1ae54d12ce"
        },
        "item": {
          "id": "e74be9f4-9194-4570-b320-95cbf9f2fa3d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9c6b78f8-ba81-4b7d-9883-f0d766f80a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211e2979-e1a5-42ff-be53-5ee232125caa",
        "cursor": {
          "ref": "9264c28e-0498-4041-a248-dca9f0a1b067",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c10c8a37-d3e7-47b2-9993-69c74a5a2f57"
        },
        "item": {
          "id": "211e2979-e1a5-42ff-be53-5ee232125caa",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "dbf2a4a7-95f2-4a6f-9321-a06d2548991a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1009,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896cfbee-d8e7-4e46-a4bd-a07574d12cec",
        "cursor": {
          "ref": "3d2d38ec-269e-459d-9cea-ac85935f3d36",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a6d39c38-3b05-42db-b621-118df656ef36"
        },
        "item": {
          "id": "896cfbee-d8e7-4e46-a4bd-a07574d12cec",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "96058156-e56c-4000-b8d3-7b002046fea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfcaca4-4808-4ec1-b7c2-b2d5075ae4c5",
        "cursor": {
          "ref": "043197d7-4c1b-4e1a-a989-4d41632b76bd",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "df6d3824-86ea-4fdb-8d5b-c8ca1756b96e"
        },
        "item": {
          "id": "6bfcaca4-4808-4ec1-b7c2-b2d5075ae4c5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7df113d0-64d4-448c-ba64-64566315435f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3d7e4d-1dfc-4304-877b-65b2a4818ad1",
        "cursor": {
          "ref": "79a556a8-d0fd-40c3-acf6-fba7cee0c975",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4d2bcba4-d83d-4a2c-801d-b656e30de74c"
        },
        "item": {
          "id": "cf3d7e4d-1dfc-4304-877b-65b2a4818ad1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0271de10-1b08-4391-8503-84a3ab7fc560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e565c0b-36e0-4c5f-a068-06dda97dfd56",
        "cursor": {
          "ref": "9697872f-3c5a-41dd-bf7d-dbf4eb15deb7",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f1907cff-0c95-405b-9bac-3b4534f0bf27"
        },
        "item": {
          "id": "6e565c0b-36e0-4c5f-a068-06dda97dfd56",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "abf322a8-7f95-4e3c-99be-4b843fe78991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82ef30e-aed6-4a90-9b9e-b21d014beabb",
        "cursor": {
          "ref": "31d21173-1573-48bc-bf9b-80b72015d3be",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b80bf504-dfe6-4e42-95b3-13476b6992fd"
        },
        "item": {
          "id": "d82ef30e-aed6-4a90-9b9e-b21d014beabb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "eee09146-91fe-4b15-80d3-dabd8b0d34cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c9e06e-27e8-4e65-b7ed-472bad2d2487",
        "cursor": {
          "ref": "10b62189-3ec5-4c0f-a6b5-afe85dcc2052",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "daece398-38d5-484a-a929-8e5221aaa209"
        },
        "item": {
          "id": "66c9e06e-27e8-4e65-b7ed-472bad2d2487",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9f248193-1987-4316-9063-1c655c17a9ca",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 535,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3335b9-60c8-46ee-9360-b6aac8a0a8e5",
        "cursor": {
          "ref": "7f26a9a3-4997-440e-aa97-68874d9a40e7",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "27fa23fd-d467-4d7c-9ace-73e736ea2c7c"
        },
        "item": {
          "id": "7e3335b9-60c8-46ee-9360-b6aac8a0a8e5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e28a1405-d43d-4302-a035-2db6bfb95339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8baa55a8-d554-4181-bddd-0ed7e549ddea",
        "cursor": {
          "ref": "a761a782-0654-4cfb-92f0-46c146aabd35",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "23dee4cf-410b-47bf-88ff-973ad7eaede9"
        },
        "item": {
          "id": "8baa55a8-d554-4181-bddd-0ed7e549ddea",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "508f29a1-f37c-48f1-9759-153faaef8ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2fc405-afa0-4e55-8f35-12ab613562f8",
        "cursor": {
          "ref": "bc0b961f-ba54-4117-9f99-f04a8c4d3ec8",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9cee0e38-4538-485e-8573-4b14ba0f5ffa"
        },
        "item": {
          "id": "3f2fc405-afa0-4e55-8f35-12ab613562f8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1b6e073a-23bd-4778-a941-50d3b4166cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe6eb75-f60b-401a-8a1e-5faf39402363",
        "cursor": {
          "ref": "9ab0ef51-3274-47db-ae9d-cdfb50832bb0",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bad6a752-5372-4c0b-bee8-17843a2f90d1"
        },
        "item": {
          "id": "bfe6eb75-f60b-401a-8a1e-5faf39402363",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "709f1f9c-9c51-434d-ab39-4ac96d3de432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffccd241-5e5b-4744-b805-b73beffa125d",
        "cursor": {
          "ref": "82c9d614-dfca-41e4-b6ea-3315f6175b11",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "62eb24b9-80f3-4e45-b93a-0a5a424dd9bf"
        },
        "item": {
          "id": "ffccd241-5e5b-4744-b805-b73beffa125d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a69d2ddc-2acd-4a8d-97f9-ede01c11b926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5681d35c-feec-432a-82f7-d6ee240d01d8",
        "cursor": {
          "ref": "19ba1913-11d9-4dc2-ab95-ad84a66806ee",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c0ec1c1e-aef9-4cfd-9c63-116db184956b"
        },
        "item": {
          "id": "5681d35c-feec-432a-82f7-d6ee240d01d8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "141eeb87-2ef2-4e04-b23b-cf55096112a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7e35d2-2535-45fd-a16b-ea5615dda9d5",
        "cursor": {
          "ref": "a2b8372b-8545-4c81-be99-cf2cd2482558",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "13e1a6c4-1c16-4ee9-a706-1f5c065db173"
        },
        "item": {
          "id": "2d7e35d2-2535-45fd-a16b-ea5615dda9d5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7e66a300-78c7-4227-96f2-affa6a3a4092",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 562,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b42074-c3c7-4460-939a-03933cde1f86",
        "cursor": {
          "ref": "332ffea7-0780-4421-8946-a8fae5b89ac2",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4d2ab8a9-4ad6-4658-96da-823a137cc8c7"
        },
        "item": {
          "id": "d0b42074-c3c7-4460-939a-03933cde1f86",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "24e633d6-5840-4711-8b52-50315b55bd06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d461276c-8faf-4f7a-b6a6-0b8eace6ab9b",
        "cursor": {
          "ref": "4227d17d-24ef-440c-8de4-6cfaf4f60205",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "aff4ee79-73e1-4fda-9833-b9d2cabdd4d8"
        },
        "item": {
          "id": "d461276c-8faf-4f7a-b6a6-0b8eace6ab9b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8d27cb96-9d7a-4009-8cb3-ac010e5f1fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466950c8-a1fc-404a-b267-356cb73d1242",
        "cursor": {
          "ref": "b03ca924-1b53-42c0-84bd-293de342319a",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "cb5bb5fd-74c3-4204-8531-b36fdf9fa4fd"
        },
        "item": {
          "id": "466950c8-a1fc-404a-b267-356cb73d1242",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e2e8b66f-5417-4364-9f72-4c87eeb3e5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b715470b-0d38-4097-be6f-cefdcdba6fff",
        "cursor": {
          "ref": "94f13d45-81c5-4ac1-8634-c9a30fd7ff1f",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5e6b283a-6e45-4f1c-bf48-7eae79562e1e"
        },
        "item": {
          "id": "b715470b-0d38-4097-be6f-cefdcdba6fff",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "be834408-8cf2-4e4b-b0f1-2db7472fa19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca4a047-da09-40c0-83e9-0ee0c5efd2bb",
        "cursor": {
          "ref": "2dc0c659-6e7d-4fdc-897c-1dbc06beda58",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "871b1352-3dfc-4b9b-a7ec-a08138f80c15"
        },
        "item": {
          "id": "8ca4a047-da09-40c0-83e9-0ee0c5efd2bb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4922fc23-db31-4ded-949e-f39aecf820a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797cad92-45f5-46bd-bf2e-40e27e9b26c2",
        "cursor": {
          "ref": "2dd1bd0b-676e-49ce-8e15-0d2ab3967b09",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e295decb-55b2-4313-82c2-07ee279327fb"
        },
        "item": {
          "id": "797cad92-45f5-46bd-bf2e-40e27e9b26c2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "149a4a06-b17f-4618-8e88-37c497548de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5973a0eb-5ef6-4fbf-bee9-7d79cf718dc8",
        "cursor": {
          "ref": "af6e1f99-5831-4e81-9063-156d132d5446",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d124d652-631b-4eac-b533-d98438dd6c5f"
        },
        "item": {
          "id": "5973a0eb-5ef6-4fbf-bee9-7d79cf718dc8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "be83ab8a-ec8c-47d7-ae99-e5c2a1a54672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7752c9-8987-4d0a-bbdf-cca589614a5a",
        "cursor": {
          "ref": "dffd6fab-4a21-4129-8174-3eacce00da13",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4f3822b2-55f9-4f90-a887-d13013459174"
        },
        "item": {
          "id": "4e7752c9-8987-4d0a-bbdf-cca589614a5a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0d6e3aad-abed-454c-ba1e-17c006adc707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f6be71-f1c0-44c2-b2b7-45106bf18110",
        "cursor": {
          "ref": "549779de-2c69-4e05-ac66-cfeb66979e0b",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4e557ab6-a3c3-46fb-9c5d-fbea4ea99058"
        },
        "item": {
          "id": "75f6be71-f1c0-44c2-b2b7-45106bf18110",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a350a886-4a4d-40c6-a7cf-0e79e9898841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285db0db-efd5-4d41-9447-481705cb4d15",
        "cursor": {
          "ref": "41e94190-ab0a-4683-917a-cdb648a9ef99",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a5767897-f4a4-4fd4-955f-df8cccb4c847"
        },
        "item": {
          "id": "285db0db-efd5-4d41-9447-481705cb4d15",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "cb0a0eec-4f4d-48ba-8998-c09d7e9f8402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae8d069-f602-4393-9731-7fe3eec581bb",
        "cursor": {
          "ref": "1b7fa3ae-494a-413d-8874-0a54d8a5402a",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c82ab2b6-d6b1-4be4-9b03-28e749ab6cd6"
        },
        "item": {
          "id": "cae8d069-f602-4393-9731-7fe3eec581bb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "fe825c9a-5a19-4ea8-95b8-b9af46ac42c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3ede76-ffb3-446b-93fc-e9667cf5c97a",
        "cursor": {
          "ref": "3bcdcc68-0e26-4a27-9232-8cc445b3d675",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "617370a6-65b8-4287-a5ec-ee9a43a6a2e2"
        },
        "item": {
          "id": "8b3ede76-ffb3-446b-93fc-e9667cf5c97a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "dacc0a02-3a4d-413e-bbc9-3fd282a8bcee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc6053a-feb9-4b91-ad6a-62753699ba04",
        "cursor": {
          "ref": "29088657-6f51-48a7-9c58-4e54d9d803a2",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "58476641-0af8-457c-8110-e706cc744507"
        },
        "item": {
          "id": "ddc6053a-feb9-4b91-ad6a-62753699ba04",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6603e362-a6bc-4dab-a553-8a619e66258f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752f1a06-8d4b-495d-bc64-f1f578bef974",
        "cursor": {
          "ref": "9f68dc91-78bc-419c-b271-be5f010447cb",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "84630bf4-c0cd-43d4-bf8f-69aecef8b9d3"
        },
        "item": {
          "id": "752f1a06-8d4b-495d-bc64-f1f578bef974",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3f40932f-f4a3-4a3c-9219-f107f9ae5595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d525d02-8b80-48a0-baa7-cc9682a28dc9",
        "cursor": {
          "ref": "6b8d3151-c2a4-45b3-86b9-4d6f88820028",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f59629d0-b86e-4a7a-b903-80c8c277c61e"
        },
        "item": {
          "id": "5d525d02-8b80-48a0-baa7-cc9682a28dc9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "aa3ef25b-e0fd-475d-923c-e894e3de3701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c440e02b-3df7-480f-a5b4-099c857cef69",
        "cursor": {
          "ref": "01cec5b5-78fd-445f-9092-da92d03d6512",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3dffd00c-a857-4b15-abc5-9ea8517473f4"
        },
        "item": {
          "id": "c440e02b-3df7-480f-a5b4-099c857cef69",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "10070fee-c507-4f1b-8dda-e19d52c0f29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afe4115-df55-4241-bb86-8ea6a119f93b",
        "cursor": {
          "ref": "f79b1a8f-deab-4d22-b1b6-de02c7799cc8",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5fecf176-c881-43c1-974d-9829554898ff"
        },
        "item": {
          "id": "4afe4115-df55-4241-bb86-8ea6a119f93b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5595365d-8e0e-47f8-b296-f28ea1008cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134df18c-dc98-4541-847c-a72a01924060",
        "cursor": {
          "ref": "3b2ca49b-c953-41b7-9d12-082958a57437",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1662a8a1-efce-4287-b898-33dbbf742ee3"
        },
        "item": {
          "id": "134df18c-dc98-4541-847c-a72a01924060",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e23f61d2-d895-4054-9c7e-9a8cd4d22bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a38372-f632-4bd0-84eb-796616be4cc4",
        "cursor": {
          "ref": "62c78018-cef7-4008-ac00-bb1c00fef9dc",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "41c1ceb3-6e30-4711-834b-b09009d4bb59"
        },
        "item": {
          "id": "a2a38372-f632-4bd0-84eb-796616be4cc4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "bf857141-8be1-423e-bd01-ad08a628ae69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d8d732-6d77-4fa0-b64d-7a068b252871",
        "cursor": {
          "ref": "80319f05-5034-45b7-84f1-26263e761ba2",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "65e3bc0a-129b-4e12-87f5-867fd95eb50b"
        },
        "item": {
          "id": "95d8d732-6d77-4fa0-b64d-7a068b252871",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d3d29bd3-a993-4941-841f-6641860dcc33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37112ef4-ea4e-46ec-bc06-ab1ad11d39e8",
        "cursor": {
          "ref": "02890410-e752-42bc-bea4-fa46a9ce8646",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3362efaa-4d1d-4247-ad0f-b40942a279a5"
        },
        "item": {
          "id": "37112ef4-ea4e-46ec-bc06-ab1ad11d39e8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "be7db57c-f21d-472d-891a-3e02525223f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29de5a18-4e98-4e55-8af5-046a6de83356",
        "cursor": {
          "ref": "ab65330f-29e7-4bc6-9d8a-ffab83f7f742",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a483bc6b-be8f-4672-bd8f-1fa85e52ad37"
        },
        "item": {
          "id": "29de5a18-4e98-4e55-8af5-046a6de83356",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a0b559e4-9865-429a-b9d9-8c7581b6c46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947639d8-d708-4e30-891e-d2e25d66b67a",
        "cursor": {
          "ref": "ffe47ec7-17d6-4aec-b94a-b1dcf9b069a0",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cb49a546-5079-4df0-8631-8cfec370fda1"
        },
        "item": {
          "id": "947639d8-d708-4e30-891e-d2e25d66b67a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "357a2691-852b-46f2-8e8e-6ed7e70f9541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3179c34-163c-4af3-86b3-f3b63568be30",
        "cursor": {
          "ref": "35819a56-9cb8-4283-afad-e23b23b314c9",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "efcd8f6b-2049-45a3-9241-9c27b4f63365"
        },
        "item": {
          "id": "f3179c34-163c-4af3-86b3-f3b63568be30",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2d74e5f9-54cc-489d-81d0-e56ef7323bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b19c4c-0835-4c1c-95a9-6dc20521a40f",
        "cursor": {
          "ref": "dbbc0bee-c8c5-4cd7-907d-021a729bfe1d",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c5acf00b-32c0-4767-bf8b-c41ae6f609ca"
        },
        "item": {
          "id": "b0b19c4c-0835-4c1c-95a9-6dc20521a40f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b77f02fe-664e-4144-86bf-0c9e6bae5022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ba0812-fbeb-421c-8e80-e0c2ef3e7750",
        "cursor": {
          "ref": "02481549-986c-4bfa-95d4-f06d3aaeb839",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7e83a1d2-ca56-4dd6-8949-4ea2925afd87"
        },
        "item": {
          "id": "44ba0812-fbeb-421c-8e80-e0c2ef3e7750",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f8d1b22a-6f48-4e56-b4a3-e997f012a5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e209ad-3b56-4722-b5ea-f7b9c046eb69",
        "cursor": {
          "ref": "0a10af9d-befe-420c-b30d-07d77889e1c7",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8137ae5c-5122-4e0e-a95b-aca68c60996b"
        },
        "item": {
          "id": "b7e209ad-3b56-4722-b5ea-f7b9c046eb69",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fce602c0-3886-4498-ac36-552e6f27458c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3ef126-6134-40bf-afbb-41291f70aef8",
        "cursor": {
          "ref": "4aa6e26b-96d5-407f-8a27-2acdf93aff20",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8dffa59c-b29f-4c1e-bd48-bea08ffed831"
        },
        "item": {
          "id": "6a3ef126-6134-40bf-afbb-41291f70aef8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0b5568a3-4e09-4b3b-ba0c-850fbc0f2916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03eadd3e-0617-421e-8047-be584191b1be",
        "cursor": {
          "ref": "afb4e8dc-d813-47b1-86ec-4fa46d9acab5",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0339aec8-c0ad-4410-9d99-1e0aa15a8864"
        },
        "item": {
          "id": "03eadd3e-0617-421e-8047-be584191b1be",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "89ad29a7-10f4-470f-9d19-97ef057fe7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cc9631-c4d0-4d46-8329-de2e0672150b",
        "cursor": {
          "ref": "a20ecdfb-9ec2-4b84-972c-1f8d9f3748be",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fb16010c-84e3-4430-a416-f5505088c204"
        },
        "item": {
          "id": "36cc9631-c4d0-4d46-8329-de2e0672150b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4f3ff8ac-8cd7-4100-adce-2d562a39e529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bf4a3e-fddb-4539-87a5-134aefcc20df",
        "cursor": {
          "ref": "21aae1fc-3b2d-47a7-b25b-ac6ae1b99426",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "788168fb-9c7f-48e8-8c53-824f0597b7a2"
        },
        "item": {
          "id": "d2bf4a3e-fddb-4539-87a5-134aefcc20df",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "99cf272c-4806-454d-95de-81f53666c1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 926,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ae7c42-0cd8-4df4-b97b-1e3711967b31",
        "cursor": {
          "ref": "bd04646c-9dd1-4564-a4c9-5d629a0ef376",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5a789fe1-d1dc-4295-b547-ca8012384191"
        },
        "item": {
          "id": "47ae7c42-0cd8-4df4-b97b-1e3711967b31",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "35043dea-3e38-4a57-a27b-ff306e360645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1e8d7a-6fc6-4d1a-8fbd-0d20c31a34c4",
        "cursor": {
          "ref": "9361dddc-9cb2-45fa-869f-ea2bcfa8374a",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7e989e82-ccfe-41b6-8cf5-eb70e172e37e"
        },
        "item": {
          "id": "fa1e8d7a-6fc6-4d1a-8fbd-0d20c31a34c4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "229f3f86-39b7-4d3f-ad2e-20b8d759e963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f455c57-d59a-44b3-95bc-360026210dd9",
        "cursor": {
          "ref": "03ce0d54-5485-4811-acbc-33007cf12775",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3c474d10-546a-4e3c-8704-c6205a901184"
        },
        "item": {
          "id": "7f455c57-d59a-44b3-95bc-360026210dd9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "04300c30-fca7-4fca-8da1-d5085acd8158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54715fbb-8151-4fc8-b7f6-fc780df6d664",
        "cursor": {
          "ref": "d65e6963-02ee-4aa4-9ae2-311705097fe2",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f16ab22a-2e0e-40ed-b6cf-a1f9f299ca69"
        },
        "item": {
          "id": "54715fbb-8151-4fc8-b7f6-fc780df6d664",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6b4bb704-d10a-40c3-9a13-e70321bd961d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af9d65d-a03f-43b4-8cb0-137bdb64a08b",
        "cursor": {
          "ref": "5554583a-dce8-47e2-82de-4c6108685911",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "daf4d0d4-4f11-4e96-9f2f-8258adb1fb88"
        },
        "item": {
          "id": "8af9d65d-a03f-43b4-8cb0-137bdb64a08b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b040624f-9dfd-4314-9121-2a79b57360c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37efd88e-e89e-4d0f-b770-51b3b43becba",
        "cursor": {
          "ref": "aa3dc326-1eb7-4cb0-89e0-d7be63e91996",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cfdc1fc0-47e2-4515-92b0-301a181cc0fc"
        },
        "item": {
          "id": "37efd88e-e89e-4d0f-b770-51b3b43becba",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1619a8ea-ecd4-4076-abdf-c964f7aeff8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec11d35-5334-44a0-a8a8-a6b17040134a",
        "cursor": {
          "ref": "9fe00cdf-dc24-446a-b4f8-0d389929b11a",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "43f82216-a225-46cf-a850-9779b367ef01"
        },
        "item": {
          "id": "3ec11d35-5334-44a0-a8a8-a6b17040134a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "dcd38c3b-4e32-4aee-b696-8ece3708a1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eac07c8-907e-4a5f-ab13-8c06040855f7",
        "cursor": {
          "ref": "83cbaa6c-11ce-4307-acc1-f85958fef198",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c7bcbeea-725d-495e-81b7-574dd98d6e80"
        },
        "item": {
          "id": "6eac07c8-907e-4a5f-ab13-8c06040855f7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "94db27f2-df71-41e1-a27e-9daca0bc3de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a5bf1d-fedb-4808-a3be-dd70d6d4e79d",
        "cursor": {
          "ref": "d5ba505e-0a36-4030-9a02-3bfc073520c8",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0881a00d-6e2d-4116-9036-9334f0263932"
        },
        "item": {
          "id": "c0a5bf1d-fedb-4808-a3be-dd70d6d4e79d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1443c507-19ea-4153-b785-e2e86659ec3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76b3723-1004-4c51-afab-c81c932b7a5a",
        "cursor": {
          "ref": "40576830-f335-416c-a199-d02fa512d2cd",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "62443bf5-8db2-415d-9f74-33021a2560b3"
        },
        "item": {
          "id": "f76b3723-1004-4c51-afab-c81c932b7a5a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "aa8e6676-8e42-488b-80fe-fa377a34dffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9b6d47-21ff-41bf-88f8-b946b43ee2af",
        "cursor": {
          "ref": "1b80d074-0c29-4d33-898c-6101d428aa4b",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5ee1ff80-6476-44b7-922b-50a0f4b6ec1a"
        },
        "item": {
          "id": "4a9b6d47-21ff-41bf-88f8-b946b43ee2af",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7e308e94-d72f-4287-b185-ac0484b6e85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adcde15b-856b-4c16-94b8-7d5af01c4243",
        "cursor": {
          "ref": "b6fd0134-e590-4931-8721-b2a8d7f37633",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "50c3298b-b051-4a5f-87bf-a1a9edb72c0c"
        },
        "item": {
          "id": "adcde15b-856b-4c16-94b8-7d5af01c4243",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "874aca23-adf8-4d1c-9907-a8b8b1b1b120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50f2e5b-dccc-4cb1-af35-94e229cf1085",
        "cursor": {
          "ref": "3d5664a7-9685-4f6e-9f00-c4daed0620ae",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d5b67b9d-1d18-40bb-9009-d0f1c9edabfe"
        },
        "item": {
          "id": "c50f2e5b-dccc-4cb1-af35-94e229cf1085",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ed89e919-8a92-4278-a2c6-6458ae04d210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b2c797-0b69-4aec-9293-247d53bf1090",
        "cursor": {
          "ref": "6c13dee8-90d6-4b35-855d-876a790488a3",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "325310c9-298d-4ab3-91c0-219d907b3aed"
        },
        "item": {
          "id": "e9b2c797-0b69-4aec-9293-247d53bf1090",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c84214cc-baaf-47f4-a7b8-d48248422c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38138a8e-9ec8-404b-8ec9-06748f7a4403",
        "cursor": {
          "ref": "1c42d46a-3d2f-4b19-bdb6-2c2f664226ff",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "05bb9fed-319a-42a2-b376-c2857b5430e4"
        },
        "item": {
          "id": "38138a8e-9ec8-404b-8ec9-06748f7a4403",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5f0c231e-4172-4a13-96cb-3ef46a3c416c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9745eec5-485e-4da9-adc3-72b0814a4a03",
        "cursor": {
          "ref": "feffa1d2-c3ad-4c7f-be7f-05ec292cd598",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ccb82ace-d443-43a3-8a32-11092bb3be59"
        },
        "item": {
          "id": "9745eec5-485e-4da9-adc3-72b0814a4a03",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d9b31c58-fb1e-4bcb-9cb7-48b7e5da46d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a45f1aa-e9c3-49be-bf2b-958e2a9a0784",
        "cursor": {
          "ref": "98068808-eb49-4e01-9d9d-7fda1a314ba6",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "451856d0-9e53-4e3e-aa65-fba3635e83b5"
        },
        "item": {
          "id": "6a45f1aa-e9c3-49be-bf2b-958e2a9a0784",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "006ee27e-b522-42ce-9718-613b99bb93e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3687629c-f4b8-4d0b-a33f-ef28d6dfde6d",
        "cursor": {
          "ref": "64e94d50-572e-4a14-ad9e-e0e3926f458f",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c58c29b4-5a92-42bc-804f-9a2cc250e7fd"
        },
        "item": {
          "id": "3687629c-f4b8-4d0b-a33f-ef28d6dfde6d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9af44c0f-36b8-44d9-a201-81af3d6b4395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c0170a-7aff-40d3-b980-6e4cd5242ced",
        "cursor": {
          "ref": "3d46b6d8-8384-4a1f-a04f-5c66b0ed20cc",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5d265e7a-e5d8-46cf-8725-a0ac0e843ceb"
        },
        "item": {
          "id": "79c0170a-7aff-40d3-b980-6e4cd5242ced",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "343115c1-b7e3-445b-a598-2d4dd102b047",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf9236c-d639-4e98-af41-3ab647da43d3",
        "cursor": {
          "ref": "412aba6f-c709-49eb-847e-4297c8614926",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c922f441-0f8c-4367-93b7-61078319160f"
        },
        "item": {
          "id": "fbf9236c-d639-4e98-af41-3ab647da43d3",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "1dc57d26-c02a-4b5b-a64a-f2034767dd7e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 563,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203911c4-8bb0-4801-ac6e-ceba3da9f72b",
        "cursor": {
          "ref": "dd3fc3c5-b2bf-40ec-85a7-da69b0df08f6",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ececfee5-161d-4762-b6c1-0b40b182b131"
        },
        "item": {
          "id": "203911c4-8bb0-4801-ac6e-ceba3da9f72b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b8bdf36c-cf0a-4039-a774-127f9d5f3986",
          "status": "Created",
          "code": 201,
          "responseTime": 6302,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:105)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:105)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:105)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:105)"
            }
          }
        ]
      },
      {
        "id": "3b525cc5-946d-4ce7-935d-ec09548b32bf",
        "cursor": {
          "ref": "1bbfcdf9-e80c-4724-8701-3c274d920164",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a71b3c3d-e1bf-4903-82b7-e6322d29e54f"
        },
        "item": {
          "id": "3b525cc5-946d-4ce7-935d-ec09548b32bf",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "7f6d3903-692b-401c-9cb9-1bbfac14603f",
          "status": "Created",
          "code": 201,
          "responseTime": 3996,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "44b05ddf-efe0-42d8-8946-66792d8203ca",
        "cursor": {
          "ref": "4a9c6c29-55c2-41a6-915b-635b406a6e82",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e329df67-b060-4c86-9273-eeeeed088052"
        },
        "item": {
          "id": "44b05ddf-efe0-42d8-8946-66792d8203ca",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0351528e-4197-4dae-ba0d-50600034881c",
          "status": "Created",
          "code": 201,
          "responseTime": 3871,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "ceca3168-33d2-4ad9-9e45-c0d3d58f40ae",
        "cursor": {
          "ref": "b4248383-05d2-439c-a304-75ae06d24b9a",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "890be7f0-b5e9-446c-bbd0-f3c9cdc89e45"
        },
        "item": {
          "id": "ceca3168-33d2-4ad9-9e45-c0d3d58f40ae",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3bb106b1-3bc0-4d33-ae70-12478df62f56",
          "status": "Created",
          "code": 201,
          "responseTime": 5000,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "393e3be4-39b2-43ee-8b95-841c3980595a",
        "cursor": {
          "ref": "3dd39922-66fc-4de7-9c11-614bcbb3be08",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ce9a7b13-52ce-4072-aa23-85b3f2cb0b71"
        },
        "item": {
          "id": "393e3be4-39b2-43ee-8b95-841c3980595a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d09697d8-db60-4926-8c5c-2a55bd7e73bb",
          "status": "Created",
          "code": 201,
          "responseTime": 5040,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "4317c253-808c-4677-9145-1f5c20235180",
        "cursor": {
          "ref": "069ee726-94f8-48b8-8d0b-c0d3d1fbac17",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5f036c4a-fa16-434b-b8a0-1f3715f35da3"
        },
        "item": {
          "id": "4317c253-808c-4677-9145-1f5c20235180",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c80d09fc-6c02-4c81-b84c-8c93f6d716f8",
          "status": "Created",
          "code": 201,
          "responseTime": 4854,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "6a91ee54-f08d-4e7b-96a0-62ab98e260d8",
        "cursor": {
          "ref": "e72a4d34-b49f-4ed9-9288-1f0955e06d07",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4f2d1ff0-a982-4412-af55-de780b36928c"
        },
        "item": {
          "id": "6a91ee54-f08d-4e7b-96a0-62ab98e260d8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c86adda1-ac92-4ee3-957a-c9cdfe211cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a91ee54-f08d-4e7b-96a0-62ab98e260d8",
        "cursor": {
          "ref": "e72a4d34-b49f-4ed9-9288-1f0955e06d07",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4f2d1ff0-a982-4412-af55-de780b36928c"
        },
        "item": {
          "id": "6a91ee54-f08d-4e7b-96a0-62ab98e260d8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c86adda1-ac92-4ee3-957a-c9cdfe211cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d4e240-afd9-4f2b-8efa-9ede30dfeee1",
        "cursor": {
          "ref": "42cd3dfc-185e-4ce6-a7f9-63148f7d26de",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9d338ccf-930b-486a-ada1-58f8cb11dcea"
        },
        "item": {
          "id": "b4d4e240-afd9-4f2b-8efa-9ede30dfeee1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "24bb595b-4dbd-4732-b8a7-12bb025666c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b111f11-6978-4220-90c4-3938020ab8c1",
        "cursor": {
          "ref": "b048c31b-8366-44f3-9d15-db38304932ba",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "61ee2f7d-e4e2-48a6-b992-9096ef2e6cec"
        },
        "item": {
          "id": "3b111f11-6978-4220-90c4-3938020ab8c1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a6945bbd-42f8-48d4-a4a8-35510f8c6293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19054b66-1dd7-4b67-adb1-8e257c7334bd",
        "cursor": {
          "ref": "6e829d89-ac89-4193-bfa2-ad4175f41ea6",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7c41ab07-0623-4833-9703-4caf49ad4949"
        },
        "item": {
          "id": "19054b66-1dd7-4b67-adb1-8e257c7334bd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "32ba1b73-26ad-4332-a5ac-1d34842bcc91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59bc6739-9564-4381-bff1-c9401b2d50b9",
        "cursor": {
          "ref": "6ada2dbd-a477-4bc2-8532-b420ef131843",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a6502f8b-f2d0-4013-b070-963e3c8b9348"
        },
        "item": {
          "id": "59bc6739-9564-4381-bff1-c9401b2d50b9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7cd332c0-71be-4223-b83a-5395d8b031d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb815ad-f731-4e3c-a5bd-e2db33799f74",
        "cursor": {
          "ref": "004a9ca1-575d-46e4-8934-d7e57db7dd07",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0eb88ece-488d-4cd2-8aed-6f527a4754d6"
        },
        "item": {
          "id": "9bb815ad-f731-4e3c-a5bd-e2db33799f74",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8aeb9671-6b8e-456f-9923-c8e2932355d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d118468-2cfa-4dbf-8128-95e513ec7b5c",
        "cursor": {
          "ref": "283b6fb9-9301-40d7-b1d0-03075449bac6",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5c7f9f5c-040e-4a80-9f3d-e11fbdb3e98d"
        },
        "item": {
          "id": "5d118468-2cfa-4dbf-8128-95e513ec7b5c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6f345906-af0e-41da-b17e-12904d7d83b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d33099f-4a53-4a17-a84a-54c43a899c37",
        "cursor": {
          "ref": "8ac20604-07be-406f-83aa-57b411f6342b",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "aeda24b0-8f2c-4a6f-9dff-28a40dff057d"
        },
        "item": {
          "id": "7d33099f-4a53-4a17-a84a-54c43a899c37",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fb59a634-6341-459a-a7ce-cd8bb85b8f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4294a6e4-8fce-4977-91bc-725304187647",
        "cursor": {
          "ref": "232d684b-6c7b-4c08-962f-a7c939db7cde",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8a310615-f3ce-4a9a-9d04-edc0c09154b3"
        },
        "item": {
          "id": "4294a6e4-8fce-4977-91bc-725304187647",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9282a70a-2ee0-4a76-b725-d07e01329838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694194cf-7cc5-4761-9ea2-626ca8e1cdc8",
        "cursor": {
          "ref": "6f99c9e8-c829-4674-9a03-58f3a3e8accb",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "09e8f1ef-4d17-4c15-8985-2c7aff54b750"
        },
        "item": {
          "id": "694194cf-7cc5-4761-9ea2-626ca8e1cdc8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dfa7d8a7-f4d1-4daf-b5e1-ae770bff8eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95322e54-17d8-4ee0-8a6d-6f912db13bf0",
        "cursor": {
          "ref": "6f110b93-e0f6-42c7-b2a5-a9c9af290c8d",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7ebdc31c-e766-4815-baff-a00f7bd70ff1"
        },
        "item": {
          "id": "95322e54-17d8-4ee0-8a6d-6f912db13bf0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ae1e0d54-9bb9-4030-be80-b44523fac120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed7a62d-b443-4174-a06d-526607b8c5a0",
        "cursor": {
          "ref": "6094659e-207e-427e-8813-466231e1a3f1",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "95a269ca-d485-4735-8056-ae3fb6c43550"
        },
        "item": {
          "id": "eed7a62d-b443-4174-a06d-526607b8c5a0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "aebb7fc4-7097-4176-9df2-1507b55afe8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5fd3eb-af50-4c7a-827b-6f2e095b7393",
        "cursor": {
          "ref": "195f186d-e43a-4580-a686-7271d5998f4a",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0f8febda-1752-4e9f-ab80-4b04d447f1a2"
        },
        "item": {
          "id": "6d5fd3eb-af50-4c7a-827b-6f2e095b7393",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7614316c-482d-4090-90db-df40ac939bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4c5ef3-279c-4131-b6b5-29221adca028",
        "cursor": {
          "ref": "6c161c02-061e-4196-b7a1-d8ebc0f8def5",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "66e2e281-43ff-40f8-bb25-a19e4110e466"
        },
        "item": {
          "id": "5f4c5ef3-279c-4131-b6b5-29221adca028",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "968bce01-335f-4fc4-95bf-fd91e3830911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f2de73-7c01-48dc-908d-437223971441",
        "cursor": {
          "ref": "af6bfda5-2a4d-45db-b837-2ad4f07288cb",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a25c649b-ae73-4558-8125-a6b7091797d7"
        },
        "item": {
          "id": "93f2de73-7c01-48dc-908d-437223971441",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1c9ab82c-10ac-410b-9b82-f4a8208b11b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84968706-d6fa-42ba-b807-c74bba3a500f",
        "cursor": {
          "ref": "990b13eb-f3e8-4871-bb05-c047b4748fc7",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "70818642-dea6-44cd-9ed5-e6fa1d56574d"
        },
        "item": {
          "id": "84968706-d6fa-42ba-b807-c74bba3a500f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1eee6bb8-8d68-464f-882e-309d045210af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b5a112-07e3-45c4-8020-6812cebe8e10",
        "cursor": {
          "ref": "4e0a43c8-00a2-49d5-afc2-d5e6db27f790",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "dbc01641-3b6c-4a5e-9494-caaa8a43c9cf"
        },
        "item": {
          "id": "65b5a112-07e3-45c4-8020-6812cebe8e10",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b828d771-5718-45f6-ba8d-84915852e2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce06bca9-5d48-485a-841f-c8373b197245",
        "cursor": {
          "ref": "d409c32d-db6f-4727-b9b5-3940ce936638",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e5e4eba9-52a6-428d-9765-f85df660b3ec"
        },
        "item": {
          "id": "ce06bca9-5d48-485a-841f-c8373b197245",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cad659f9-741c-4687-9818-4fd0c9a2a9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63470f4e-b0f0-479a-a3d9-ae7053221a4b",
        "cursor": {
          "ref": "5e93ac5e-861b-40ab-b3ab-07e68a2bab4f",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "54c31120-54c3-46ce-8056-cf19f20063f1"
        },
        "item": {
          "id": "63470f4e-b0f0-479a-a3d9-ae7053221a4b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "46b496b9-f46f-4b96-ad07-1edb6d2ec12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de47192b-75f9-4b69-ac80-9fe6352b5d04",
        "cursor": {
          "ref": "a2d6d1a6-13dd-4e69-a788-b57e769b6754",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c3ecb430-1050-4bd1-aca5-08f5a6493051"
        },
        "item": {
          "id": "de47192b-75f9-4b69-ac80-9fe6352b5d04",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c7ce4afd-488c-4b95-a448-04f5ff37019d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f4d798-5518-4b9a-ac4b-1a83559b2dc0",
        "cursor": {
          "ref": "eed763a9-ecf7-4d8d-a312-3889999aa5de",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1b2d336d-e592-4d55-8d47-868b28216fbd"
        },
        "item": {
          "id": "62f4d798-5518-4b9a-ac4b-1a83559b2dc0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "29e3c064-2df1-48ec-8729-45feb9f58150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefd7fa5-7fbc-4fe6-8060-6565a9e1d202",
        "cursor": {
          "ref": "50d5bd8e-1928-400d-be3c-451f43448895",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7fefd51d-debb-491d-973d-53bdb9c424f9"
        },
        "item": {
          "id": "fefd7fa5-7fbc-4fe6-8060-6565a9e1d202",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "96b3002b-e4b4-4c1c-857d-bfa94e83dcc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f45c3b-ddfb-4858-9dba-7a59524d619c",
        "cursor": {
          "ref": "6cb4925b-e724-465f-b20c-e50e24828cc3",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "dc625b00-884a-4b20-abf5-4de52d8773bb"
        },
        "item": {
          "id": "d3f45c3b-ddfb-4858-9dba-7a59524d619c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "96eee6a5-b203-49ec-9934-1750e303450c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd114437-0c3c-46b3-b492-458d3a6998bd",
        "cursor": {
          "ref": "1bf8a906-8c6b-4ba9-9850-b780708b161a",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "407ad54a-80f8-43e0-a44b-4da2961ad4df"
        },
        "item": {
          "id": "dd114437-0c3c-46b3-b492-458d3a6998bd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7e001271-5aa5-44d9-96c6-6bc9d0e2a5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814de5af-5360-4ff5-b095-22efd5a2b596",
        "cursor": {
          "ref": "ffe61f8d-954c-4e69-9db3-8d527a37d318",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "49925cdc-638c-4ff2-9295-355215ed14c5"
        },
        "item": {
          "id": "814de5af-5360-4ff5-b095-22efd5a2b596",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6e90c2ed-2a56-4a69-90a3-85054b3952d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579e4d53-6a88-49ed-bb7a-0d37d9af45a2",
        "cursor": {
          "ref": "0036dd6c-1928-49d6-9724-df403fbe2368",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a1ae0255-3767-4ecb-80e9-6bfdcf967539"
        },
        "item": {
          "id": "579e4d53-6a88-49ed-bb7a-0d37d9af45a2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "37b4151e-9205-483f-a14c-8da8ea50a168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb3054c-70a3-4f8e-976b-db205dd49344",
        "cursor": {
          "ref": "e74580b7-d959-4cdd-a3eb-05375e7e5fa2",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f1da8b5d-f2a5-4e77-9777-9ff4ce0c0279"
        },
        "item": {
          "id": "deb3054c-70a3-4f8e-976b-db205dd49344",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "edf77080-72dd-4b26-af1f-56dfacca0f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee67f3a-5e8f-4d6a-898a-07c8e2bbf3ad",
        "cursor": {
          "ref": "f925b524-a4e7-4d8b-a52e-8ad63c3ea8f1",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a0e1904a-853d-44a2-a677-8f3cd8540019"
        },
        "item": {
          "id": "cee67f3a-5e8f-4d6a-898a-07c8e2bbf3ad",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "156adb05-175d-4f25-a239-9ba88f609304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e60752a-471d-4571-a539-0039d34304bc",
        "cursor": {
          "ref": "841c8307-5841-4dac-a66a-6836090cc454",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7d2a2dc6-3842-4703-91f4-daf1d92435b3"
        },
        "item": {
          "id": "0e60752a-471d-4571-a539-0039d34304bc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "657d64e2-1924-4fc8-a228-d5385cc5f42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec1c019-87bb-4c93-8d92-69f24f831a66",
        "cursor": {
          "ref": "50b69eee-af6c-480b-a88e-0775f6f29b01",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "113e52da-063a-4681-ab8b-9f544384c2d7"
        },
        "item": {
          "id": "fec1c019-87bb-4c93-8d92-69f24f831a66",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9ef5dcc6-8ab5-4698-80b8-c36f2e3cf471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee1dab9-0689-407c-9eb2-180f0156031e",
        "cursor": {
          "ref": "48447461-62cd-4bf4-8b97-b6f602a9dd32",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2e21028a-79ac-4cd2-b0f7-2d358db191b6"
        },
        "item": {
          "id": "bee1dab9-0689-407c-9eb2-180f0156031e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "43822896-c6d4-4500-9aba-217185138849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a48d75-7088-4bde-8570-2cc2cb992556",
        "cursor": {
          "ref": "a59525bc-748a-47ff-bceb-56c4f70ace49",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "dbc0a4e8-9952-44b1-8932-d890e7731d52"
        },
        "item": {
          "id": "d9a48d75-7088-4bde-8570-2cc2cb992556",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c8d9e7f2-4a5f-4c59-95d2-fe5c85ae8466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b7c4c3-01d3-4b98-929a-60700e15f06d",
        "cursor": {
          "ref": "9cacf01a-ceb3-4630-abc0-d1333ca0513c",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7fd2d501-33b2-4baa-abaa-3905abb326ab"
        },
        "item": {
          "id": "90b7c4c3-01d3-4b98-929a-60700e15f06d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "056e99c5-879c-4233-b7f5-4709f5ef8d49",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc7e792-c138-4faf-922e-43e1b6a83694",
        "cursor": {
          "ref": "f3981c45-ad38-46d4-90b8-1128691f25aa",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e27db072-073b-4a98-94f8-83a7122f4ad0"
        },
        "item": {
          "id": "5dc7e792-c138-4faf-922e-43e1b6a83694",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "15d5a4de-63cd-4629-9cea-0c408c8c56d5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 532,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8dc2706-737e-4497-ae84-2dc128771ad4",
        "cursor": {
          "ref": "13848371-4397-4b79-8216-0706eb4c1541",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "66418a37-109f-4c7b-b190-1d3130ce1e2f"
        },
        "item": {
          "id": "f8dc2706-737e-4497-ae84-2dc128771ad4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "08b69972-6e8e-4f00-9e0c-d388aa95e840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8dc2706-737e-4497-ae84-2dc128771ad4",
        "cursor": {
          "ref": "13848371-4397-4b79-8216-0706eb4c1541",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "66418a37-109f-4c7b-b190-1d3130ce1e2f"
        },
        "item": {
          "id": "f8dc2706-737e-4497-ae84-2dc128771ad4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "08b69972-6e8e-4f00-9e0c-d388aa95e840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4732345c-80d4-48ab-a01e-60db99c66164",
        "cursor": {
          "ref": "aa63ed72-b85b-4b18-8f5d-08c9a2a9452a",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6fd87789-3679-4e2f-8d4c-597f2fbfe1c0"
        },
        "item": {
          "id": "4732345c-80d4-48ab-a01e-60db99c66164",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9f47296a-2bfb-4f2b-8ae7-99c9ac214882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374cb9fa-017d-4650-8ab4-23135c2ccdd9",
        "cursor": {
          "ref": "2e858a37-5ed0-4827-acbb-21994e5912bc",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "dbcde4db-d358-46e0-ba34-0148a3400780"
        },
        "item": {
          "id": "374cb9fa-017d-4650-8ab4-23135c2ccdd9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6eb57900-4225-4337-8a41-8673bca68e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e66fcf4-a4ed-4c77-8bbd-f1823a9968a5",
        "cursor": {
          "ref": "eca0ab8b-13e1-4187-a842-10116f2cf5ed",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0e45a2c4-6f77-4835-8fb5-e8154307075b"
        },
        "item": {
          "id": "1e66fcf4-a4ed-4c77-8bbd-f1823a9968a5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "85c1805f-c6a8-4993-ad85-089b5f540045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9cf43f9-b423-447f-b5dc-0031b697177c",
        "cursor": {
          "ref": "33c42db6-2eec-4982-b411-48f738edda80",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "aa1fb300-f681-4315-8524-956eb15d3ac5"
        },
        "item": {
          "id": "e9cf43f9-b423-447f-b5dc-0031b697177c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d7de5726-cc7a-4f81-bae0-d71a20c0d276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2dae79-dc39-4ee0-b87c-db0f1c22116c",
        "cursor": {
          "ref": "57226802-0854-42f5-9a9d-534f05120ef2",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d5333718-5d7d-4ec2-a38e-56ecc2914503"
        },
        "item": {
          "id": "fc2dae79-dc39-4ee0-b87c-db0f1c22116c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9c6fe444-387d-4312-99d1-c5c42d84765c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1fb4af-d48f-4925-af28-6c98b2e9e826",
        "cursor": {
          "ref": "9f56b46e-e48c-48d3-98e8-321db7e62c67",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6b8eedb7-5b2f-417d-8e66-6be2b035913d"
        },
        "item": {
          "id": "0a1fb4af-d48f-4925-af28-6c98b2e9e826",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4ce492c5-50a3-4e67-ae30-dcb738801bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe8f64f-6a98-47d5-997f-d8a660a013f4",
        "cursor": {
          "ref": "abf7a7fd-9e92-4a60-bf95-d65fbf967cc9",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d8aeb459-0077-49e9-915e-b65e7e4f0343"
        },
        "item": {
          "id": "ebe8f64f-6a98-47d5-997f-d8a660a013f4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7f3d80d3-08f1-4ce2-94e3-09d0dffde68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f4b6e6-fad4-4615-94a7-1b0c8e3ae3f3",
        "cursor": {
          "ref": "ee3fcd77-9db0-4e6c-b5b0-f7f6a6c27df5",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "549ae865-0ab7-4dc1-a351-d31c534ce00a"
        },
        "item": {
          "id": "b3f4b6e6-fad4-4615-94a7-1b0c8e3ae3f3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e166fca9-79e8-4468-8a9b-ffb0b0ce28a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93844540-123e-4579-913a-e99ac22f4cf0",
        "cursor": {
          "ref": "a5bdfb1c-4915-476b-bcac-0e676511966c",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e783e2f5-7917-4ce0-b4c7-d24443b56645"
        },
        "item": {
          "id": "93844540-123e-4579-913a-e99ac22f4cf0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f7ffd82a-fafc-483f-a133-ba031007b41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16480b58-efe4-4336-991b-17d238b5b4cf",
        "cursor": {
          "ref": "0dc82b9e-5d7e-4cef-bf08-144fa071e9db",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6c8f317c-8b85-419a-a214-fc13e2b4de08"
        },
        "item": {
          "id": "16480b58-efe4-4336-991b-17d238b5b4cf",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c6485f5f-5e8b-4e63-b9e0-136a2e98f40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e87a80-4182-4caa-a9ad-c08aa6f3c12d",
        "cursor": {
          "ref": "9fd112ea-d45b-444b-b3cd-899c8162c6af",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fa5ffd06-dfdf-4490-a892-4aff9e1a27d7"
        },
        "item": {
          "id": "b4e87a80-4182-4caa-a9ad-c08aa6f3c12d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fabb8229-86dc-4cd5-b532-cd61add9f3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9b7d28-5b18-47f2-8627-72cedba9ddd5",
        "cursor": {
          "ref": "13f8af40-3e33-4efb-a458-04732367a1cd",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e2368221-6339-41b3-a05f-1842a1441343"
        },
        "item": {
          "id": "2b9b7d28-5b18-47f2-8627-72cedba9ddd5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "eda50089-6172-4d38-8f95-9117ffdfb981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1843
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1719b237-ad34-488a-8011-90d338747065",
        "cursor": {
          "ref": "8f4d3f6b-1fc9-4464-8966-e74fa782fb27",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bbcef674-499e-4709-a62b-a9228832f0f8"
        },
        "item": {
          "id": "1719b237-ad34-488a-8011-90d338747065",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "64ae5364-aeea-47bf-9639-2f816c0effa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1833
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafb3694-19b7-44b7-b456-b3e16eb63c54",
        "cursor": {
          "ref": "c3ca1508-69ac-4ca0-8446-9bea60ddee3b",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2fcdc49c-7392-44ef-a70a-3e980c941bb2"
        },
        "item": {
          "id": "fafb3694-19b7-44b7-b456-b3e16eb63c54",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c6a716fd-6106-4a17-bdda-24d1215fb84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1832
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e7ba77-91a6-4b81-9e58-17cc4735346e",
        "cursor": {
          "ref": "933f5684-3ccd-4e39-ad70-a6d85ebf05ce",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b2b44124-6934-4b6c-9463-672a624b32da"
        },
        "item": {
          "id": "19e7ba77-91a6-4b81-9e58-17cc4735346e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "99f1f8d0-f3df-4399-911d-36e6e19f09fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1833
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044ae51b-f9b9-4852-8568-778f6dc94a93",
        "cursor": {
          "ref": "b572b882-f7c3-4cff-82cd-daebd69ff08a",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "622e1595-ae5d-471a-bb98-d71f00113c88"
        },
        "item": {
          "id": "044ae51b-f9b9-4852-8568-778f6dc94a93",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "70d589b4-a733-4938-9274-4b3c4c07f333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705ba32a-69df-44aa-a0e0-865023f2572c",
        "cursor": {
          "ref": "5a3a330f-ffdc-4ee1-8e42-2e633487dc9b",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "54e5144c-17f6-421a-b3f9-ab741377a2e6"
        },
        "item": {
          "id": "705ba32a-69df-44aa-a0e0-865023f2572c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "52a8ed25-7472-45ad-850d-45986e12066d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276ded1d-5ac3-477c-891e-2c91847df466",
        "cursor": {
          "ref": "75763f2e-f3d9-40b4-a6c1-f52591e3d606",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "90897a76-638a-43d6-bdf0-9f275457acc5"
        },
        "item": {
          "id": "276ded1d-5ac3-477c-891e-2c91847df466",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5599605c-0077-487a-8b20-699ad97199cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361f69fc-c3a5-4407-9a8c-6f5a7e581e17",
        "cursor": {
          "ref": "9e1d11bf-c18c-4775-bdc4-c94f8fd96395",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fc3ce430-0979-407f-97f4-e6e9af02981c"
        },
        "item": {
          "id": "361f69fc-c3a5-4407-9a8c-6f5a7e581e17",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b7b46427-829a-4ac6-9d1b-999a0c8f363c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f60b76-7ecf-47e0-8c3b-d3eb67dbc7ee",
        "cursor": {
          "ref": "afaf8e93-095d-4514-b311-9f3b3646dfc2",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4fe2eac8-40d1-4a6b-a281-e1b33622e806"
        },
        "item": {
          "id": "01f60b76-7ecf-47e0-8c3b-d3eb67dbc7ee",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d4316a31-2bc7-47c4-b8b3-c82931ebf72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd2210b-91c2-40ee-8a59-e80b971cbdba",
        "cursor": {
          "ref": "888cb76e-7462-48f6-8e06-27ddf053688d",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e925475e-b385-46d9-b6c7-3b44d0a25325"
        },
        "item": {
          "id": "2bd2210b-91c2-40ee-8a59-e80b971cbdba",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1eab48bf-0ddf-49ae-bbc3-faf83ef8f1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1bbf47-5a8e-4443-af00-0c59f3a45267",
        "cursor": {
          "ref": "d21245a4-ecbf-4ad2-8efa-e5fd503b304d",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3068295b-b588-4f95-b8a6-be2c1cb5bc31"
        },
        "item": {
          "id": "9a1bbf47-5a8e-4443-af00-0c59f3a45267",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "62b698b1-0573-4df6-b4a8-ac9e177e40ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5e44f2-c56a-4759-813c-0a9f18f17514",
        "cursor": {
          "ref": "cfcc4637-ce49-4fd5-b77d-24fe2fdb21fb",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2f94a058-9306-4520-a5ed-59e6cfcd881f"
        },
        "item": {
          "id": "3f5e44f2-c56a-4759-813c-0a9f18f17514",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "15d4e3a9-ce5a-46ae-b83d-5199389a4a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ebd012-33b7-4545-bc12-a6e1383fc6c0",
        "cursor": {
          "ref": "e7db37ca-c302-427f-be18-3576b3780bde",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ac75a6ae-0dfe-4b88-a9e3-7390f149d771"
        },
        "item": {
          "id": "b7ebd012-33b7-4545-bc12-a6e1383fc6c0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "025a998b-cc48-44fa-b465-29c977e7bcd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6f2ab1-390d-4d76-a258-1974cabbb3f6",
        "cursor": {
          "ref": "0e0e3fcb-944e-46af-9538-300c411ca224",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4a232eb9-5165-446a-949a-eeb1d33f700c"
        },
        "item": {
          "id": "9a6f2ab1-390d-4d76-a258-1974cabbb3f6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "359c714c-0f34-400f-ae59-3dc423862453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd639e3d-bcd4-4529-9fd5-f302f19f098e",
        "cursor": {
          "ref": "65c1774f-cbfc-44cf-8a2e-e3dde7341122",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0d02be73-44db-4ebd-8db8-f019bbaa83e4"
        },
        "item": {
          "id": "dd639e3d-bcd4-4529-9fd5-f302f19f098e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ebd64c24-0035-4136-846e-c096169e1ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2746a89a-028c-467c-a98c-a12c7e48a74d",
        "cursor": {
          "ref": "2b53184d-6765-4b09-a680-6b33d4b44679",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7c568d6e-6b4a-4165-a5e2-2c43be5631aa"
        },
        "item": {
          "id": "2746a89a-028c-467c-a98c-a12c7e48a74d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "312a2d25-d84e-4df0-81da-12e083fb8270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce5bfe5-60f0-4fc0-9d43-2fca998b8348",
        "cursor": {
          "ref": "d2edf6b2-bc95-469f-895f-aff36f26efb4",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "49fadbc0-e70e-4e6e-acc7-bc73801f9d76"
        },
        "item": {
          "id": "7ce5bfe5-60f0-4fc0-9d43-2fca998b8348",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a5a5d03d-19e2-40d5-a35b-89720be07fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5747ad-023a-4a83-9792-b24b88053d8a",
        "cursor": {
          "ref": "99d1e4a3-a877-4be2-86fc-24e242e238ff",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b3c2cc70-1175-48a1-8e9a-61c5dc9b5d1d"
        },
        "item": {
          "id": "3e5747ad-023a-4a83-9792-b24b88053d8a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d8f13fe5-464f-4e49-9683-a48f55c58a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8319ef70-fe9e-4a93-8b27-8bf34e4d4ca9",
        "cursor": {
          "ref": "4c94397f-e7ee-4f13-9b09-953a832d798f",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f874d001-3fca-4f0f-856d-bcc7627ed1f0"
        },
        "item": {
          "id": "8319ef70-fe9e-4a93-8b27-8bf34e4d4ca9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "11f1a68f-1136-44d4-97cc-e5ac5db38b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3609a13d-c120-411e-b169-4f2c3f9c4580",
        "cursor": {
          "ref": "4243dc65-7c85-42ef-b218-fdb82831a136",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b37b9d94-1d42-438d-892c-d1efe6a88c2c"
        },
        "item": {
          "id": "3609a13d-c120-411e-b169-4f2c3f9c4580",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "00ece78e-ea54-4cce-9416-c7ba0d18d431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b94694-c41a-44ed-b309-c303507fcf38",
        "cursor": {
          "ref": "fdfa1fdc-0f27-4648-84ac-e6c3c299d5ce",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5ce18d60-d846-4ffa-8555-b8d58d021fbe"
        },
        "item": {
          "id": "46b94694-c41a-44ed-b309-c303507fcf38",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4614440f-04fc-4837-93d0-7fe2a090cda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8aa2465-10eb-4837-a712-12d38c71c71f",
        "cursor": {
          "ref": "86b3dbb4-601f-4e14-be75-d4ba4ca81223",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "92e5a1a8-51e8-4b02-a99f-a3a322a1c5c0"
        },
        "item": {
          "id": "d8aa2465-10eb-4837-a712-12d38c71c71f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "27143d76-8817-4777-9ec5-e06bffa53c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebcbd04-7ae5-4eec-8cb0-d77d5104d569",
        "cursor": {
          "ref": "99ef03d5-8b19-4a44-843b-afd0ef5d76ee",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fc69dc79-e4c6-4b4b-a98b-af2174607f87"
        },
        "item": {
          "id": "1ebcbd04-7ae5-4eec-8cb0-d77d5104d569",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "241a76df-93db-457a-add4-1d95bffea51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1230
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6ff2f7-f87d-4f61-acf0-06b7e5708eaf",
        "cursor": {
          "ref": "86bbd068-552b-46ca-a446-6566c6a589a7",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2ea30a6d-e2d4-441e-b4ac-54ba9275a993"
        },
        "item": {
          "id": "be6ff2f7-f87d-4f61-acf0-06b7e5708eaf",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d49ccd8d-8a4f-47a8-963c-dc6981b106ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1703
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865eb93e-abc3-4fd2-8664-39543a42b12c",
        "cursor": {
          "ref": "00b8d1ba-c9ff-4599-9f00-e450da1f13bf",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "96df532d-7a52-479a-8991-70cc07194a41"
        },
        "item": {
          "id": "865eb93e-abc3-4fd2-8664-39543a42b12c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4fa0cede-50b3-4acd-813a-a405a7285264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954689b0-6b7b-4567-acc5-f4fd1de8145c",
        "cursor": {
          "ref": "17f6a352-424c-4ca9-ae29-4e205e85e817",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5e84f28e-bb31-43f9-8f4d-f2b32e67357b"
        },
        "item": {
          "id": "954689b0-6b7b-4567-acc5-f4fd1de8145c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5a48ec71-ce3e-4eee-b255-0818b3b64f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7504b2a-3592-44e4-ad23-0939c32d4eaa",
        "cursor": {
          "ref": "379e341c-88bd-477e-99cb-312253f0f4e5",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "eed57773-bff1-4db7-8709-fbeca70ca573"
        },
        "item": {
          "id": "f7504b2a-3592-44e4-ad23-0939c32d4eaa",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "80531f31-a1b6-4c74-97f2-7419be0da330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1688
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbf0ccc-8d5b-479b-adbc-92db005c125a",
        "cursor": {
          "ref": "bb870609-ee4c-438c-b236-ea59fbe16b46",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ee1ccf84-43c9-4c45-98fa-d97ee95bcf42"
        },
        "item": {
          "id": "4dbf0ccc-8d5b-479b-adbc-92db005c125a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e93f036f-713a-47af-9ca2-c1014e691ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c817a4-0692-44f2-8c5f-27ac45767979",
        "cursor": {
          "ref": "07435393-5eee-42d4-864c-9e050c1bf9f0",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "90f7fb2d-9af7-49e1-a607-733372b0ab41"
        },
        "item": {
          "id": "c3c817a4-0692-44f2-8c5f-27ac45767979",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a775c393-1375-4fef-81c4-70ff6c95df11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c265f5e-aae0-4cc3-905f-9053bed871a7",
        "cursor": {
          "ref": "72cde8fd-1091-4365-868d-d9e2695a9470",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3d51228a-97fb-4480-8d39-4230da38a381"
        },
        "item": {
          "id": "7c265f5e-aae0-4cc3-905f-9053bed871a7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d9ecc4dc-69b8-4b07-ba56-d11fd999b3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 2048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caef90e0-bbb8-46d2-96f1-23cc683a1b17",
        "cursor": {
          "ref": "1d15b3a4-bf61-4d6c-b151-8a797548c321",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5619754d-fec6-47b7-9ac1-a7cd3677caa7"
        },
        "item": {
          "id": "caef90e0-bbb8-46d2-96f1-23cc683a1b17",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0baa74b3-6ed0-430f-9d1b-a1ac5c2b7175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 2046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6994cf1-c9ec-44ab-bb6c-fa8547bd707c",
        "cursor": {
          "ref": "ef06817e-99b2-407d-a2cd-31c770af1f0d",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2e392630-c3fd-4a9e-b4ed-af8dd0ca2a99"
        },
        "item": {
          "id": "d6994cf1-c9ec-44ab-bb6c-fa8547bd707c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c844e4a1-fb0c-4c57-874d-1fcc5dfee7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 2047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9938dce-780f-4a06-a838-703893b19561",
        "cursor": {
          "ref": "9aa8ab9f-94f6-436b-9b2d-031533c66e31",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3ec81dcf-638e-4cdc-a312-4696700afb87"
        },
        "item": {
          "id": "e9938dce-780f-4a06-a838-703893b19561",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "33d69ee8-e8e7-4804-be93-0a311fd43195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 2068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f6dd0d-2bb9-47de-9639-de7d5c417a2b",
        "cursor": {
          "ref": "480f157f-8a74-4a76-a3e2-3b57aae695ee",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8ab732f9-36a5-4627-973d-faa92952f061"
        },
        "item": {
          "id": "c3f6dd0d-2bb9-47de-9639-de7d5c417a2b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e996ac7c-3b23-47fc-ad13-8f2203e76fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1272
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7373b1-e5ea-4dee-960e-9baa237da493",
        "cursor": {
          "ref": "010ae6f0-e3de-4355-9862-6411d55f31ea",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "16248b39-ac53-425d-8e8c-7f32c6bd87ae"
        },
        "item": {
          "id": "6f7373b1-e5ea-4dee-960e-9baa237da493",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "18d16996-a92e-4b45-a6a4-ab17c09374e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be31945-db0a-403a-99fc-66bb43e96de0",
        "cursor": {
          "ref": "e6aebde5-3bc1-4d76-aeae-4f424a0dae15",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "88924b33-833d-4ca3-9428-635757ff3e5b"
        },
        "item": {
          "id": "9be31945-db0a-403a-99fc-66bb43e96de0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b6624e6a-0d5a-4574-8106-cbf58e502ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bae1f1-f4f7-4916-839e-4f65889ef91f",
        "cursor": {
          "ref": "c9da3560-537b-4b57-9942-93e58de3c35b",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0fa1ee79-f918-40d1-9aa9-abe983fa9d1f"
        },
        "item": {
          "id": "34bae1f1-f4f7-4916-839e-4f65889ef91f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1adda958-f265-4c41-afdf-cf52a2f1f52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef72ff9-b152-4de0-82ce-10594550c4c9",
        "cursor": {
          "ref": "520e5b81-1dc4-4aad-9634-3ee8c277188f",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f09336d0-f056-442a-aaf1-89888c979c0c"
        },
        "item": {
          "id": "4ef72ff9-b152-4de0-82ce-10594550c4c9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f38b1755-9746-4de2-ad48-abab0efb963b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1276
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d31049-74c1-4b44-a3fe-e339886fdf81",
        "cursor": {
          "ref": "e06f6c29-1343-4156-a91e-599723a6e279",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "81f25aea-fcd3-433f-8b08-a0e87d665e60"
        },
        "item": {
          "id": "46d31049-74c1-4b44-a3fe-e339886fdf81",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "738a684a-fc72-466e-aac9-4db002549523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58baa69-2309-4253-9d87-83c98c97ae9d",
        "cursor": {
          "ref": "7b704c65-5a67-47a5-9312-24bc959f8093",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "17a6fa2c-0d67-48ac-85fe-ce5c30208027"
        },
        "item": {
          "id": "b58baa69-2309-4253-9d87-83c98c97ae9d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9f6d31b4-e92b-4a89-bd85-8f276655928d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2517a7ef-2ee6-4a95-ae86-67a47bbd1817",
        "cursor": {
          "ref": "1bccaa95-e64f-41e0-aa52-3b8ee50b1703",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f26b1f85-c85c-4720-8b35-98774ac0b7f4"
        },
        "item": {
          "id": "2517a7ef-2ee6-4a95-ae86-67a47bbd1817",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d1052b3a-344c-4d87-b05a-fa0073cec4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6316c1dc-b409-46a3-b8b2-613f5267435b",
        "cursor": {
          "ref": "09687f41-78c7-4076-a36a-be4ba0dd153f",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e5a39a92-22b0-448f-a238-ce0e461ee15c"
        },
        "item": {
          "id": "6316c1dc-b409-46a3-b8b2-613f5267435b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "132f15d8-8b76-47b4-a730-248e35e51fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1776
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c96056-8433-4807-9fa3-4173a1c05258",
        "cursor": {
          "ref": "dc4fc8c6-d363-4698-82b4-cfc9e5858da3",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5f536ab5-dd29-4cda-97c2-41d46408fb9b"
        },
        "item": {
          "id": "00c96056-8433-4807-9fa3-4173a1c05258",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "201072d4-f4ce-41fa-a590-d3c809e89982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a66450d-310b-438e-8a97-a1ca7fef204f",
        "cursor": {
          "ref": "2f9b9013-d3c8-49f4-8f21-c9a8eced8189",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "21de0963-753d-4077-b0c3-245f9af8c29a"
        },
        "item": {
          "id": "4a66450d-310b-438e-8a97-a1ca7fef204f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "79366454-353f-4e67-a571-c0454e09d696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03b9faa-0ff8-41c7-9038-bc79e12f3a03",
        "cursor": {
          "ref": "687c0a8a-0bf2-434b-9d7c-c64c0ddc956b",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "79f8792e-266f-4c6f-8cb1-12f779e466b8"
        },
        "item": {
          "id": "d03b9faa-0ff8-41c7-9038-bc79e12f3a03",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d6b6bbf2-67ea-4ee2-b8d7-f49ef844c271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e21fdb-3f3e-4fa2-8560-0abdfeab37d1",
        "cursor": {
          "ref": "3091e8c3-9f9f-47ac-9b10-54d2be74d651",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e74048f6-503c-4ea1-9ec8-64420e1c3f20"
        },
        "item": {
          "id": "f2e21fdb-3f3e-4fa2-8560-0abdfeab37d1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8139279a-dec2-496d-a6c9-72484e0e0bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91ada51-000c-429f-a7df-da151ebfd2e0",
        "cursor": {
          "ref": "b8e99807-0007-48c0-8dfc-e860a78a97b6",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "145ca5fa-6d3b-4581-9a7d-dad156cabf73"
        },
        "item": {
          "id": "b91ada51-000c-429f-a7df-da151ebfd2e0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4116b2b8-aeb2-4084-b4df-406e7cedc4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 2111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fa8e47-531a-4989-8bd5-5a62c2594f0d",
        "cursor": {
          "ref": "1b1af115-f642-49e2-920c-d6a07d98c2d2",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9baea3dd-4a53-4e86-87ae-cc6311abb76b"
        },
        "item": {
          "id": "46fa8e47-531a-4989-8bd5-5a62c2594f0d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d2406ef8-d86d-4c7b-9b25-d5ac5c7801b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 2097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7aa451-296d-4d93-a81a-9d30427a79f1",
        "cursor": {
          "ref": "4b767163-1056-4e8e-aeef-6365d8b8dc83",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "70a6409d-3cfa-4fe2-ba20-9739f2a18406"
        },
        "item": {
          "id": "6f7aa451-296d-4d93-a81a-9d30427a79f1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f3c4261c-cde9-45b0-8ffd-82729dd8eb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 2095
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a777fd64-ee25-425c-a471-1f0d0c475c8a",
        "cursor": {
          "ref": "b9bdc069-69bf-4adc-9a91-04c26e76f03d",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3c34d02b-4b11-4691-8544-9123173062e1"
        },
        "item": {
          "id": "a777fd64-ee25-425c-a471-1f0d0c475c8a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "64acfe0e-c717-4552-8c24-f2714e5f2a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 2096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e007ee-d20c-4fbb-ab4a-5db73e8afd3a",
        "cursor": {
          "ref": "be5c6dcc-d3f2-4885-b8ec-e83c38220efa",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3a1a5640-cd68-49f6-a1be-b9b8ec78014d"
        },
        "item": {
          "id": "b4e007ee-d20c-4fbb-ab4a-5db73e8afd3a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "746d7176-2c50-4c52-b6c9-a0e91ec2bcf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 2117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bec7de-384e-4ecc-a230-9dd87aa633a3",
        "cursor": {
          "ref": "f3b1dcf8-f5c8-432f-ae2c-a97904db1dc5",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a593aef1-be08-4ea4-9c3a-942fa440a9f5"
        },
        "item": {
          "id": "c7bec7de-384e-4ecc-a230-9dd87aa633a3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ac98edac-70f0-4d8c-b403-8ad10545eeb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09cc9313-b9b3-4181-89f6-8ba60af2837a",
        "cursor": {
          "ref": "23d6e631-4ec2-4439-bc33-3fe28bc20f58",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bb0ce857-cf78-4c2e-bd2b-48ee6b1377eb"
        },
        "item": {
          "id": "09cc9313-b9b3-4181-89f6-8ba60af2837a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8105a24b-8d9b-4a74-9794-c42dcaad872b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74848344-2a7e-400a-881d-c8f0f935f325",
        "cursor": {
          "ref": "2d4b7b78-12b6-4fb2-b9ea-a829403f6d18",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9b40bcd1-769d-429f-9fb5-14ffaa510d43"
        },
        "item": {
          "id": "74848344-2a7e-400a-881d-c8f0f935f325",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bc87a0f7-62dd-4f8e-a52d-53008dd0be7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8888c515-95ef-4530-bf20-a57f3fe1ad3e",
        "cursor": {
          "ref": "d37ac442-4ca7-4073-a431-360ca04e186d",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c3a00671-0ce9-49ae-88f1-7790134db053"
        },
        "item": {
          "id": "8888c515-95ef-4530-bf20-a57f3fe1ad3e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d0962b27-18b8-4f50-9bd4-65ef6963f00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ec9219-a122-4c22-ad00-1d6c21b4b7ab",
        "cursor": {
          "ref": "63face9a-f490-4be6-a9aa-88a52d276bfb",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7c0890a2-2d09-4369-84af-b9e6a3b79efe"
        },
        "item": {
          "id": "49ec9219-a122-4c22-ad00-1d6c21b4b7ab",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8a7dd46d-2473-4dcf-baef-02477bb91e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fbdbbe-71cf-4299-9e4c-180148d028f3",
        "cursor": {
          "ref": "614fe131-1ee8-4ddb-bd5c-fd985f5263e2",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ddf8b317-a421-4bdc-9dee-d9bdb65bdfad"
        },
        "item": {
          "id": "28fbdbbe-71cf-4299-9e4c-180148d028f3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "56ee2dd2-3ef7-40ab-b232-34eb3a2db91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1808a620-c82f-4a45-b20d-3728151223ac",
        "cursor": {
          "ref": "0186b069-4334-401f-9c1d-39545145f42c",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "88243a81-af4e-4bfb-937c-7aebf0e1e313"
        },
        "item": {
          "id": "1808a620-c82f-4a45-b20d-3728151223ac",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3a319f7f-0356-496f-91ca-51622c715ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52c5996-e9b4-4342-8a52-bfc5b661716e",
        "cursor": {
          "ref": "837bfe59-5c94-4c9e-8882-65fbf0a5a174",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "181ad548-9521-4006-befd-ae3760bc926b"
        },
        "item": {
          "id": "a52c5996-e9b4-4342-8a52-bfc5b661716e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f9d79a26-e36c-4f38-9c6a-19818b41bac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59704222-34bc-4f44-81a4-cbc799833580",
        "cursor": {
          "ref": "25d5195a-b77e-4ccd-8540-0931aad2e033",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "681f436f-2174-4cb6-9b50-723ce551f2b5"
        },
        "item": {
          "id": "59704222-34bc-4f44-81a4-cbc799833580",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9a2e263d-21c2-47f7-b092-12675a62a763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f037a6de-0807-4d48-8352-bca9111458fa",
        "cursor": {
          "ref": "30ae7bfd-9813-458a-a2fe-af09d54b1928",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "bc819f0f-96c8-4880-afd1-5831dc0186ab"
        },
        "item": {
          "id": "f037a6de-0807-4d48-8352-bca9111458fa",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a8d5a881-8b89-4ca9-9922-bb38b4ede157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5491325-211b-4875-8067-205caf79a9c1",
        "cursor": {
          "ref": "b5256097-2f75-4c0d-9ec1-74015a3595fb",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3b2a2e39-56a0-4a06-a5d5-548a2485d3e6"
        },
        "item": {
          "id": "f5491325-211b-4875-8067-205caf79a9c1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e2532400-c293-4fe9-a7cd-84d5e832ba25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d112bf-40b7-4748-af7f-51be058e3511",
        "cursor": {
          "ref": "0d86d0a9-07d5-4b14-8519-4dbc20d4b1c2",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3c2554c6-c517-4873-bd1f-ba40d620acd1"
        },
        "item": {
          "id": "57d112bf-40b7-4748-af7f-51be058e3511",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "76f61380-6162-4f3b-8891-b353af42dc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0bc6da-c250-48c1-8938-34e4863cc6be",
        "cursor": {
          "ref": "489c66b9-c7fb-4efc-92ff-ebe0e7cfc1c5",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "76ee53b9-6106-4965-8067-a1ecb9c2f28b"
        },
        "item": {
          "id": "2a0bc6da-c250-48c1-8938-34e4863cc6be",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "df064a41-71dd-4c99-8287-8b74a1d8eb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0cd333-d155-4c4a-b255-22657229a7ca",
        "cursor": {
          "ref": "d0dc49bc-5ab8-4262-86a0-f58ac4a4a509",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0552b521-f9b8-495a-aa3e-a9ecbb37fe06"
        },
        "item": {
          "id": "9d0cd333-d155-4c4a-b255-22657229a7ca",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e78f2942-a856-4a41-8751-13c92ca5ba3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1326c12a-2647-4a73-bc0a-3edc8f1afe2f",
        "cursor": {
          "ref": "4858c649-8404-4445-8dbf-1ee6a96eb2dc",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e63d8948-f119-4047-b1cc-88119776c6db"
        },
        "item": {
          "id": "1326c12a-2647-4a73-bc0a-3edc8f1afe2f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a560934d-d090-43a8-b674-97732e0ffe0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd41e2d6-0d6a-41a2-bceb-1b46d17bf0af",
        "cursor": {
          "ref": "dd8e15a7-6b56-4687-b032-5c19c90917f1",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "889492cd-9a98-41a2-882d-11377bac2dcb"
        },
        "item": {
          "id": "dd41e2d6-0d6a-41a2-bceb-1b46d17bf0af",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cb040aa7-d31e-4ea6-b3c0-abd38c0745ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71054171-1444-461e-88be-3270d814d216",
        "cursor": {
          "ref": "05723ab0-0c22-4fd0-80f8-92c17a4123b5",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "574ea7a2-b558-4064-bafc-99761088700a"
        },
        "item": {
          "id": "71054171-1444-461e-88be-3270d814d216",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7ca57bd4-514b-454f-9463-aed11ba81e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27579198-b089-4312-9955-f5b98a75f59c",
        "cursor": {
          "ref": "2f995045-5ba9-4aeb-a0e6-5e0fc720b130",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9035ec55-67a8-4411-8a3e-2b0fdca53923"
        },
        "item": {
          "id": "27579198-b089-4312-9955-f5b98a75f59c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7841f099-2dc2-44e4-901b-75256434d15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78139daa-11e9-4f7c-a0ae-f15720055285",
        "cursor": {
          "ref": "020e5b59-b542-4e54-90ce-7ce9f58967e0",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "92b0400e-d3de-461e-86ce-6ede4fc7cc42"
        },
        "item": {
          "id": "78139daa-11e9-4f7c-a0ae-f15720055285",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "af0c10e0-6639-4670-af12-03ec6502820b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743aee45-244d-474a-b259-96d8878b10e3",
        "cursor": {
          "ref": "28a3c834-ee2c-47ba-a4c0-a6991b09b239",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f9e94273-5f9f-413c-b979-7569449f2604"
        },
        "item": {
          "id": "743aee45-244d-474a-b259-96d8878b10e3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "500a7d13-1f86-455b-8045-2abe4ae95131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd36abf-5b79-43ea-99ac-91b674a58a8f",
        "cursor": {
          "ref": "e2b71e97-d0d0-4206-a71f-56de43b4313b",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3c12212d-05ee-4736-a2fa-c9d2f7d20b54"
        },
        "item": {
          "id": "4fd36abf-5b79-43ea-99ac-91b674a58a8f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "70cf7c0b-f276-4b0d-831e-86b31a4b308d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f0fa6b-b7ca-4f75-918c-039ab3c9229e",
        "cursor": {
          "ref": "652939a7-7e2e-4a44-bc22-8a05aa08fd21",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "dda1928f-739f-44f3-9d69-ed6a22510e4a"
        },
        "item": {
          "id": "82f0fa6b-b7ca-4f75-918c-039ab3c9229e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "324e0b7f-ca7e-4889-b38f-5c9c944bf015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1b676b-fbd8-4704-9104-33db0d2461dd",
        "cursor": {
          "ref": "6b2326d0-ccca-40b9-a9dc-bdfacf3d7296",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c7caef14-d5f8-4867-b43e-5d9b469ad44e"
        },
        "item": {
          "id": "ce1b676b-fbd8-4704-9104-33db0d2461dd",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f1c7b550-3bee-4d86-85fa-a58a0b5d47e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302721ab-c03a-46e8-907e-d9436114a9c1",
        "cursor": {
          "ref": "19cd5298-9bc2-458a-ba1c-1dd074a2ead5",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4008c9cd-b8fe-40bd-8cca-647801e3e9c2"
        },
        "item": {
          "id": "302721ab-c03a-46e8-907e-d9436114a9c1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bfa7ee9c-7ca6-4a48-b804-0ae6342bde3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd36d41f-c78d-4762-9b73-24ee374e9358",
        "cursor": {
          "ref": "3a693957-da1a-4a08-a937-6e734eb89900",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fc048abb-ae31-4e09-a9a6-c9f70ca9d931"
        },
        "item": {
          "id": "fd36d41f-c78d-4762-9b73-24ee374e9358",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "46e0ddf6-c34d-4b50-9147-9e9c336eca52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4c03ca-e089-43d8-b633-0d93f718ed34",
        "cursor": {
          "ref": "41395b86-21b5-4e44-851e-581c17441286",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fd8f7932-9ca5-4cd8-bded-54463afeaaa9"
        },
        "item": {
          "id": "fb4c03ca-e089-43d8-b633-0d93f718ed34",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b48940f5-ea21-43f0-b47e-352020f8c1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a1a104-5eb6-473a-a3e1-b93c40aa59e8",
        "cursor": {
          "ref": "c40111f9-b28d-4730-8e2b-74f6ae1d6638",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c21abff9-3963-435a-b48c-ff97b460ea6e"
        },
        "item": {
          "id": "d0a1a104-5eb6-473a-a3e1-b93c40aa59e8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1dba5c8d-985b-46fc-a5ae-90971579c159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8664ce4-b749-4348-a9be-4b379ee736c7",
        "cursor": {
          "ref": "12eb84c5-e665-46d1-8a94-b73b24656533",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1af0e172-5fa1-40a5-9d03-003ad17ab54c"
        },
        "item": {
          "id": "e8664ce4-b749-4348-a9be-4b379ee736c7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "88b62094-c753-4509-a02e-6c6038fafac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacbba8c-e290-4f21-91ed-95b071b74d3a",
        "cursor": {
          "ref": "16d421ae-1ada-4cfa-85be-d08cee2f37b5",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0ae03ac9-66fa-4632-9ad4-9b0535692c17"
        },
        "item": {
          "id": "dacbba8c-e290-4f21-91ed-95b071b74d3a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c0259634-278c-4938-953b-7d1fcd911bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ec967f-1f37-422c-87f6-5c1b1c2d97e8",
        "cursor": {
          "ref": "4359ba61-31b4-412a-a966-0e9e9b272aaa",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ac498893-bc5d-4657-8079-299c92639042"
        },
        "item": {
          "id": "29ec967f-1f37-422c-87f6-5c1b1c2d97e8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f49ac2b6-acb8-4f78-9169-aa702beee0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153ae5ec-b129-429e-ab69-cd13f463126e",
        "cursor": {
          "ref": "0f8b2b23-cf6e-4c69-a79f-ab512acb11cb",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4f18a6ba-abc9-405d-bdf0-7fc5eea92d2c"
        },
        "item": {
          "id": "153ae5ec-b129-429e-ab69-cd13f463126e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3b111ea3-6c24-458b-b788-6fafbd64e4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be64209-3b4e-48dc-bc80-7e0e6a5fe17a",
        "cursor": {
          "ref": "915ce016-1f48-4405-aee3-3df2547a20a9",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "76be00bb-58ce-4fe3-9d26-a2b0b8b343e2"
        },
        "item": {
          "id": "7be64209-3b4e-48dc-bc80-7e0e6a5fe17a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f21f1806-5c31-4927-ac58-9167927a457f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb14aca2-9edd-4290-9b27-a83823685d85",
        "cursor": {
          "ref": "86c0754c-f56e-4461-864f-ba62e21f7cd2",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4173f6f5-30c6-4b91-8057-ff0a7d3dedd9"
        },
        "item": {
          "id": "eb14aca2-9edd-4290-9b27-a83823685d85",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4e69131d-f43e-4b60-bd29-2f7b0a71af34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24c757a-ab3c-4d24-b86c-e404330ac376",
        "cursor": {
          "ref": "3cc334ab-af6a-4b16-a5e0-2621b3570236",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d1de42ea-91ad-420a-a214-52fc7d901801"
        },
        "item": {
          "id": "c24c757a-ab3c-4d24-b86c-e404330ac376",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "de2d72b9-4e7d-419f-be1e-876a66736af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3488a9-866c-40c7-901d-fbd162e0d610",
        "cursor": {
          "ref": "ad8fe2ed-c3f5-4502-8984-c3bb9dae8f7d",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d44666da-388f-4fc5-b4ad-9b2f40ad7eaa"
        },
        "item": {
          "id": "2f3488a9-866c-40c7-901d-fbd162e0d610",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5f073296-a0a4-4ae4-abbe-d3323ebe6d02",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c79bb99-9d89-4c61-8f9d-e52a5e3bd613",
        "cursor": {
          "ref": "8254905c-72d7-47d0-953e-a8cac0a30816",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d7b800d9-e26a-4b6b-925a-302e89f1b16a"
        },
        "item": {
          "id": "6c79bb99-9d89-4c61-8f9d-e52a5e3bd613",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "76c1c806-c5b3-47d7-9b2e-785b71078402",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 298,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e849a3-1ad9-40e7-af3e-fd410c49c407",
        "cursor": {
          "ref": "fa29cf5a-ec73-47f7-ab45-a0434dee9a6b",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "68d633a3-5ad9-45e0-a0e5-f56024229fd8"
        },
        "item": {
          "id": "e5e849a3-1ad9-40e7-af3e-fd410c49c407",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "16c6b636-7aab-4892-a72b-e0a80dd4080b",
          "status": "OK",
          "code": 200,
          "responseTime": 522,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10d431b-04c0-4c3b-ba92-a14725484a97",
        "cursor": {
          "ref": "f0855126-980c-4ebe-9016-017f5e051433",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f98e5f1e-3fe9-4232-9534-8da23a41ec60"
        },
        "item": {
          "id": "f10d431b-04c0-4c3b-ba92-a14725484a97",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7a6e4757-1b97-4e2c-9ec2-0104d64d5ca4",
          "status": "OK",
          "code": 200,
          "responseTime": 3482,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "670b2f56-f19f-424a-b8b9-a332ea497e60",
        "cursor": {
          "ref": "c3068993-7924-4645-be1d-07cecbf9f87b",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6791a3f2-2b2b-4a46-9ff8-ef842efb90bc"
        },
        "item": {
          "id": "670b2f56-f19f-424a-b8b9-a332ea497e60",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "e241e7f8-0b41-45ee-930e-360479319745",
          "status": "OK",
          "code": 200,
          "responseTime": 3464,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3548bb2-eaec-4e27-940c-9643699fb66d",
        "cursor": {
          "ref": "eedba83b-0d83-448c-83c4-073e23d5933d",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f1101270-0493-493f-a45a-29d996fe79fe"
        },
        "item": {
          "id": "c3548bb2-eaec-4e27-940c-9643699fb66d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5c9655f7-f490-49bd-afcb-44ab07d805bf",
          "status": "OK",
          "code": 200,
          "responseTime": 3218,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "586339ac-8fe5-4761-a203-fa93e2d4a8db",
        "cursor": {
          "ref": "e564561a-d991-429c-897d-85568e9dc2b8",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2913bb22-9e93-427f-9872-6297da3652ab"
        },
        "item": {
          "id": "586339ac-8fe5-4761-a203-fa93e2d4a8db",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "17ae94d0-c815-4308-ac82-927bfec79ff4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586339ac-8fe5-4761-a203-fa93e2d4a8db",
        "cursor": {
          "ref": "e564561a-d991-429c-897d-85568e9dc2b8",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2913bb22-9e93-427f-9872-6297da3652ab"
        },
        "item": {
          "id": "586339ac-8fe5-4761-a203-fa93e2d4a8db",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "17ae94d0-c815-4308-ac82-927bfec79ff4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586339ac-8fe5-4761-a203-fa93e2d4a8db",
        "cursor": {
          "ref": "e564561a-d991-429c-897d-85568e9dc2b8",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2913bb22-9e93-427f-9872-6297da3652ab"
        },
        "item": {
          "id": "586339ac-8fe5-4761-a203-fa93e2d4a8db",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "17ae94d0-c815-4308-ac82-927bfec79ff4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820911d0-7010-4554-8a15-5c96733b179e",
        "cursor": {
          "ref": "19bdbbac-1109-4744-9ed2-b14a1021110c",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8fd3ff74-b1a9-4b9b-aecf-8f389734fbfd"
        },
        "item": {
          "id": "820911d0-7010-4554-8a15-5c96733b179e",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "af7a4dd6-33ad-40c7-b449-9aec0d46527c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 306,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb4b12f-d396-4718-965f-f2932b103f4c",
        "cursor": {
          "ref": "eef2c7c5-3431-4485-9f32-e0a7eed6cc26",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "35dde17e-a330-4882-9b23-6b5354f23252"
        },
        "item": {
          "id": "9cb4b12f-d396-4718-965f-f2932b103f4c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "10cc15ab-c102-4153-b3b9-05ec56ff3275",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb4b12f-d396-4718-965f-f2932b103f4c",
        "cursor": {
          "ref": "eef2c7c5-3431-4485-9f32-e0a7eed6cc26",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "35dde17e-a330-4882-9b23-6b5354f23252"
        },
        "item": {
          "id": "9cb4b12f-d396-4718-965f-f2932b103f4c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "10cc15ab-c102-4153-b3b9-05ec56ff3275",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9ed97d-7078-4a02-864a-c1cb5d988963",
        "cursor": {
          "ref": "9e8727a5-d5a7-4daf-adb4-270df5aec5e1",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a17381c0-ab52-448d-87dc-2dfb9c2048c3"
        },
        "item": {
          "id": "9d9ed97d-7078-4a02-864a-c1cb5d988963",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "636ba413-9bdc-472a-8a7b-4cb267cea135",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 531,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2757a5-eb35-4fcf-af51-4bfcfb038e21",
        "cursor": {
          "ref": "7632faa7-f5bd-4cb3-b37b-3df7c14f6fa6",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "dd7fa1b1-7865-4ab3-8f00-6044867e052c"
        },
        "item": {
          "id": "fa2757a5-eb35-4fcf-af51-4bfcfb038e21",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "423f4818-ce11-454c-a5ed-001f7f39d545",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2757a5-eb35-4fcf-af51-4bfcfb038e21",
        "cursor": {
          "ref": "7632faa7-f5bd-4cb3-b37b-3df7c14f6fa6",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "dd7fa1b1-7865-4ab3-8f00-6044867e052c"
        },
        "item": {
          "id": "fa2757a5-eb35-4fcf-af51-4bfcfb038e21",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "423f4818-ce11-454c-a5ed-001f7f39d545",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93525ee9-5f94-4061-92a0-c87c2e58651a",
        "cursor": {
          "ref": "e4d5f0d2-4376-4629-bc68-ff42d26ac810",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "fd2735e3-f772-4901-8981-654f9ba0b617"
        },
        "item": {
          "id": "93525ee9-5f94-4061-92a0-c87c2e58651a",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "e3bb30d2-cc75-448e-a6ff-9e57611d0580",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 521,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}