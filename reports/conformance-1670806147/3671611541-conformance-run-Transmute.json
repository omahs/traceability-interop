{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8406fa86-f7ac-4dbc-9a4e-7f02c5d1ff0f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e07e1dcf-c279-4097-8357-2c864258afd5",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6a39bd7f-fc57-40dc-8869-17ab7ef97bf4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2ceba243-f00d-4c01-818a-afd1511b5f73"
                }
              }
            ]
          },
          {
            "id": "4a51f7ed-89b5-4c94-8a5a-872676473fc1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c39ae818-d3a9-4679-9772-8852feb3708d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5e373177-57a9-448e-a78a-d526d3bc3d75"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "369ad798-0161-41e0-a9c3-307648072eaa",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "21e92b5c-d294-448c-bc18-47889142dd05",
            "name": "Positive Testing",
            "item": [
              {
                "id": "529429ae-42ae-4880-b2c8-337bbe2a7139",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f13d3a8-1e9a-4dce-9260-36c62549b163",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12639725-30d4-40bd-a6c0-300b293ede18"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "17539bad-8217-425f-9b89-7390ca7926f0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67c82839-5c35-415a-835a-cde74f4010fe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3f07353e-7d29-4c81-ad15-937b5ba30761",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "79c1068b-f27f-4def-bb14-d1db7abf4784"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a15b6e9-5475-481b-a4ab-19e780d52efe",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7253c418-0251-4f8b-957c-1582703b272b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c72c4471-c520-45df-97f2-ab971748cbb4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b08f07d8-d2b1-4d8d-939d-bd5e53ec8feb"
            }
          }
        ]
      },
      {
        "id": "a5694e18-1bb7-4e42-bcae-8776f61e42d1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a5171485-4145-423f-8f7a-a679a7cc9e49",
            "name": "Negative Testing",
            "item": [
              {
                "id": "962d0502-2a2e-4262-a785-c04febd3fb30",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7472cdd1-b64d-4fd1-923a-ea0ffc1f5781",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed740c1-85bc-4221-85bb-0f8859d4aeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ccaa4b2-a795-4944-b2af-8ab6e68cd801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da94c05-c906-4e1b-a0c4-866495a0a9e6",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16821268-16dd-45dc-940d-74b3cdfce807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63e99980-aef2-4512-aaf5-0c779928dcbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b108f7-4d64-4445-b4e2-9b80728d6636",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efc41d6-a511-4152-8836-a624abeec9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40eab2f0-edf0-4677-a48f-813ab1a369c2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4571891c-e052-421a-aca0-eefdf68964ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "58e033c8-58e9-4de6-9d15-dfbe0e4a7b14",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1687471b-d2e0-43f8-abb9-29563af4073c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f3d5174-edfe-4f36-a257-0f7bad121eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82287a9b-a9cb-46d3-b69e-112b35268918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26b8be0-5dbb-467a-b1c2-57002c739e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce201030-1f6c-46af-ab18-6d6ea03b6d20",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd7de47-7b15-4ea1-9b59-4887232c8ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb099f96-acc5-4da0-8eeb-7cfc5ac79172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0aa24d8-d2dc-4dc0-a28c-9952884dd753",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "3e1ceb83-6f61-41bc-b829-e7f745415ecd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4a45228a-3ca7-4b9e-b823-7a7f6348d2f4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5c2342a9-012c-463c-ac9c-7495680faee7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87087fe8-335e-42a0-bec2-293ecddadfc8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "05216123-b504-472c-b32c-b59d7e7aff86"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d04efeea-2894-4891-bab6-caed59b548d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "867c471e-2b47-4f6a-b507-e466662ae4f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4622018c-01a3-4fb2-a112-30ad5d695806",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "25e203e4-dc80-4ec2-9be4-926fb83e6017"
            }
          }
        ]
      },
      {
        "id": "3c8845e4-1542-4609-a7db-d12523500250",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f5e0eaf2-0262-476f-882f-2b6d68ad9e3b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d98da53c-4d5a-452c-a7a3-d636c529d58e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4922e75e-860d-4134-949e-810444d55215",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58942e81-a315-4e73-b629-ed0aa293f0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec0684b9-09d7-410c-a54d-18069eece576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540d1d2d-fe16-4582-b2de-f5be6ff16876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6782c4ff-73a8-4635-ba62-0556c221c3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a5ac4c-a03e-4a25-b857-62bc156f072e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef672e4-6839-4c76-ae4d-a2d4bc23887d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e592e5-c49e-4b36-86c9-65689c26ecf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18545f4-0551-4268-91a4-50a2773ca2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1294948a-dc42-4b34-bba0-88a3e376a4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a865833e-be7d-4bbe-92c5-c5eaa0e2bf6d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5549ffa-73b4-43cb-a8c6-e54a9c753788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782f5e29-2ae2-4980-814a-d312757b441d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37d9c13-a196-4e15-a430-a1a6c4bc834e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c94650b7-ed1a-4134-b009-ebe056659f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159daa0e-f90b-4c78-b235-44f09457455a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75d27c8-3727-405e-888c-785f695c1a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db3166ac-a460-4cd4-802e-1d6e8a5d3de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac48dd8-e0cc-4530-b3cd-82d075e9c98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73561a0c-4bd4-4f13-aa57-9304c658df9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f149c74-80e6-45e0-a02f-146c64607c8d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b9b707-5770-4278-976b-68ea35b39f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3c2741-683f-47fd-b396-ffc499a848d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7c31a9-d16e-492f-b553-9fc94d820e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "313aae3e-1106-4479-8148-86736253e678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534b1420-274f-4e14-8c4a-f7f625630ee0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54226f6e-5570-4c51-96ff-4640cffa39e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b7b58b-57dd-42cd-a995-0c316950dff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2bab2b-692e-4557-beb1-9149c1224f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7046d252-a807-4b76-8e69-634a6e39c0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0555f0-2bad-4847-8268-fe59635c1739",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85443760-4610-40f4-9fbf-aecfef1e67a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c85da1e-517c-4161-a662-38b94bb85951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09db92f-5ae5-40ec-8344-d4e3f1415364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a280ed61-f53b-4e54-bdbf-d15ed48b8987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f7a633-cb01-4b12-bd52-2bc5dd718049",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b790c80-308b-4ca5-8ecc-decd046c9496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098f2fb0-a003-41e9-9eb6-72d209336d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190f7196-79c0-44f7-83a6-3b0db7cf7686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbf5f878-b27c-4279-9be1-c06c8f3b8dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021e4eea-ae03-45a0-bc4c-3e9cf842fac4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e0927d-6a39-4529-8f3f-43032958ce5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ecce3a7-5be9-48b9-a388-2f3d065395a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d3e271-b9d4-46cc-96d1-025637d36378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9be01daa-72cf-4a85-93c9-cbbdbd9b7a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6c789f-7de1-4888-83ee-2a46f0164394",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2efc0e3-52be-44af-9bfb-b72269f7ef93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "391eb795-80c7-482b-85a7-461d4fbb6552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8029b4-c8e3-4977-b3f6-4360564097d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "226ebfcc-ca3a-4ebf-b214-bba2e2306e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148f80a0-a83d-41ac-9174-4bbabe9e29e6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7bc4d3-b328-49bf-a8e4-5024a28dfe95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc93e9c-be3e-4b82-9bb1-a66446b9bb35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69e644c-4661-49b1-a0af-d3a13aa3383a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38524c2e-ef06-47b2-99d3-ca4142824aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74070ce-5b20-4df1-ace6-0b7deb7f4ad5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9f8d36-081c-46c7-ac43-a7b48f55e465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c683b56-7e45-4687-b429-72b05d89176e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f823802e-7bb2-4f20-aa0e-cb6786dff2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf0600c2-32ad-4cee-aaa4-51197de91f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d026de9-29c2-486b-a1b4-45480ce3ecba",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649a11b4-d65c-4064-8ae9-3921b48a9761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "479ed8b2-1834-4d6b-80ca-ae7eb49eb797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2989dc9-10ef-4446-9feb-12045bdd6e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7002319-05e1-4528-a934-5cd908a71ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6801620-3f75-474c-8e66-320e28d69bd1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ea661d-643e-4ddb-af3a-4bd557a9cd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e601431-4fa2-4f7e-923e-5513bd9138fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc5f418-d58e-4109-801d-9c0e33f9ffa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c80beb6-5f43-4a63-88eb-041efcf80653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018fea5c-8d40-4b81-a36c-a6e7533410aa",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342f86ae-cfab-44a5-a6e7-71a0e77b4cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0d02e1-14ac-4a61-9155-2a3c8e3da2d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2153e90d-b6f9-47d2-9685-4974fbf3fd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b12499ec-ff7c-4b0a-a3a9-7cfabd1d3118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cae089d-5e32-42c9-b660-e871bb9f3718",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e941a1aa-0721-4be2-8122-7c023f644ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d2a59e1-7416-40fa-bc6b-6b1c9e5386b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bc512e-88e6-4c3a-9060-1baf7e4b4cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "287f7723-996e-4389-9f80-f329d40cf12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebec3cc-15d6-4fe7-a74a-049d63e72040",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9851bf-7033-4028-844c-6911af38961b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be519e47-0406-4ad6-80b1-ccea89baf0dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994bda89-9eef-4409-8d94-7be327be7d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba698551-87cd-4928-932d-cae85e06aa47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9f2967-d8e1-4913-b4bc-5a868d21063a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88caa3c8-4289-4e9f-ada4-6c56c5a198c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7738f4-bd2c-42ab-ab83-7676acb2c39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c427db9-acc0-4e2f-bec2-337ad644f907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "80a5614b-2fe6-4e9d-8366-4ff67bd1afdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a0d8a3-accb-4246-b796-5e78f3658c8b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf60200a-f727-479f-8317-43ffb59cc5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e733ca-7224-4848-992d-58dd5c3ab313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b33388-e98b-4aa9-bd0d-fc21ba304bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fea00226-3b24-4464-acba-6269a67874d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599ca4b0-0f3f-48b2-941c-e0e15452f6af",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1c79f9-f553-4c0b-bb0f-c46f9b1fc427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52abf511-0335-4761-b8a9-2d3a6b6c57fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4a021b-7f78-4dee-be6e-b7018d0e35b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1b6f6f-5376-4314-903f-0bf109d778e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03edfe2f-4289-4f13-9745-1696c697f799",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a2ad87-f72a-41d6-b573-f5e5e3ecfb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd649b8-a085-4a51-bfed-72358496d037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8029373-f774-49bb-957c-7550af84e66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56610798-8751-499a-958d-9163be024fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b200fe-d078-455d-b431-84eac48a50c6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca47e4a9-09e5-44f6-b177-8e790a7e21c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84368a87-6873-4290-8490-d094b2da5166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89147852-40a0-4f1f-ad42-1d309879f1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14d91bd6-0115-4441-b562-40387e367596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77d71d8-fb69-4849-9dd0-e60a747c8493",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181bdb50-111f-447d-b125-9ea424ea1130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bd682e-2fcb-4c8a-961f-fde109d44a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d784cb21-3137-4f8a-8601-6fa4a7759c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59bff31e-5a6c-48af-b3a0-c016412b472b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab925e10-692a-41e2-a21f-76fd24c06f8f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8615925-f168-4487-96a5-fe07457b0726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66bcc10a-3799-4bf2-b97c-a0f4c332fa19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b21baeb-233c-47af-b7e0-d0273b89d77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbbf905-167b-41a7-91cd-c84e68d38e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304fcedd-f9dc-41ae-a026-d8658ba14ae4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fb68d1-dece-4624-a9d0-18c50c44b027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "283bf594-de53-4d01-992b-732095ee1919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc338abe-c5cc-4e34-b228-a4052c363af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8462daca-1ae4-4a90-b31d-1e457e0b9435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12b13d9-bb46-44a6-b38a-1d73671156bf",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ffafce-1644-4cd0-933a-9837bc4de812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89611da9-d2ce-4473-89d5-f2bc96012a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a789ea-a91d-4e33-8572-45337e545f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d58bfe42-099a-46ff-b68c-346e8da6ff6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a209a6b1-a694-41e4-808a-eb90a9fac243",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5c64b3-4e1a-4e5c-bfed-632f7a6f537d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1112b9-4056-49d9-bcfd-344ffebee623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f051adfa-2d4b-4657-ba64-4a58b7f77de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a24def4-f4ff-4f56-b976-276153fabf26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0505fd-e12f-4294-9315-3c451e82047a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2098e7c8-30ca-4726-b021-4d0109b008fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56a9e46-8f53-475d-bb0d-f12ed35a82b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573f9ced-1589-400c-8cd0-ec5548f5dd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86151779-7ea3-4624-a4ff-08d425536b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c718aa79-3f70-4455-94cc-2bfd71d634b5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924c83f8-2e88-4d51-a0e8-9f76240b4360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed22df5-b8b3-4b16-b3df-deee4fa64258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e609df-97d9-433d-8047-421b56a372d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "89fa33b3-f19a-4a90-9c23-644b1415b221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf54c349-c0b0-475c-86be-f7a1849f8ce1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "232b192c-4a21-4733-8af1-c69e75fbc4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96ddf8d-e3c0-4e7a-af04-50644deb02f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41152aa7-c9e7-4ed7-ad53-8c0cf6b3f068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5e9f82c-d0a4-49a4-a00d-a19f93543cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cbf65a-7277-401e-aa46-f1c098422092",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a6e380-7f0c-4f3d-a0d4-fe74e0ea3d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37574de-5fcc-4b04-af8c-a254f3e0d62b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb8e648-0f11-4267-9b54-9f8198c6aa15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1970d56b-724c-46ac-8ca1-b0f60f4dfc3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fa3b8a-e9e9-4912-ab55-4a1d2b71b97c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e26c76-7171-46b3-ab77-8aea828eba5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c57d5d-4a53-4295-923b-f69faf86da7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5298092-ccd1-4938-be6e-df73a6c3d1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5dde23-0ab7-4183-a232-7e040afa1023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c94018d-e458-4028-a75f-ccddabbc6d50",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0344a6-5c6f-41ae-b087-d97aed30aaa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205e2184-0b1e-426a-8d08-09aa76a19fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550deebe-b7eb-4b63-8a43-17b5a60974bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20cb5bf2-a6ff-4f2b-af80-9596f4380510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bfd497-d1eb-4772-b69e-c2be0df5b6fa",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37e62a9-af0d-4681-9a76-60dbfcfd21fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d872782-fe74-4030-9622-e650628f4c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b53b514-71b6-45c2-af11-52efe9d0d728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "099c8987-6e96-4515-9c24-664a7ee643f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c054996-3a8b-4468-ab17-d5a22c3ced0a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8b255e-4e67-4aff-b2da-d53d075909d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edee96bd-9720-465b-ba22-4020cfdbde80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b681bb68-e2c0-4e6a-8b14-e84b015cdaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "be48e02d-4374-4542-a818-726ceabfde95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09dc3345-a871-4bfd-bbf9-6013dad3a745",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0354f1d9-667e-481b-82cf-743286b688f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5741b883-b499-45ad-9925-5451b4b84a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b598571-c6cd-4da4-9382-ac4dbb81b689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c45497-684f-4ad8-a2bc-e874702f619e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c835afe1-785b-40b2-90bf-8dd49cc0ca24",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f65db4-bbba-4f0b-8b16-4e2d7e441ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bcb8a06-8197-4b92-8830-a1faf68c7c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfaac104-3bb8-45fe-9991-a412c0a4e212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8dd8428-80cb-49fa-afed-af272db37906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d368cf3-eee5-42ba-a9de-75f4bc9b5dbd",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23dd6d4e-7d55-4e1f-8794-788892b87aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f83b189-6305-4875-88ef-3fce4095d41a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21911e7-6eb9-4bf6-8b89-db39c26d625a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c516d0b3-3de4-483d-b0d8-70d6bdbf5e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2329a1-e731-4d63-9acc-55ef0ec670ab",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062429c2-5059-497c-bb67-936a443793ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e4c6838-0417-4ef2-a7f4-c51cbc799bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4a3e75-c9fe-48fb-9799-d68d63c0b067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "86e63098-cc07-4ce1-852f-9497b4062021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f954af2-d8cd-4c5f-9c7d-8dad06875cbe",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "140f2b50-c73c-4f81-9cca-bc360bf1af3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827b340f-d7de-40f0-b0dd-6be7226693c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41285d1e-f2dd-4870-8234-abbeba73bb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "21fa1b7b-7327-4acb-bb7a-c032d88382f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e2010a-8fd6-4bed-a46d-d02330494a34",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357952f5-a141-4368-b4b4-c7e718d2f270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e532809e-64d8-4ecb-874a-d011f876a875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ec3177-fad4-49f1-ad7a-7bea5a7f70bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7274c0a-3a97-4650-b514-4936cea3c6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd27187-2827-4879-a93e-218039f3cc91",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65237dfa-253c-4896-81e0-53fc97d5e09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d539f03e-5c1d-4e8a-9fe3-4ccba857b87e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de54fd70-5728-4386-a14e-f825496eedd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ef675721-3b44-4bf6-8d53-b1838c46478b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e25f2e-ecff-4e49-8c38-de8a49fef208",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe21d25-ccfb-4906-8e01-3e25265b9754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63032c4a-448a-4b61-b56e-5b4e01198dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca732d6-544f-4912-ad52-e81dbe8aa4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba16d51-79fd-458b-9399-89dfe2ba576a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d82513-f30a-477a-9045-f718643dca51",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7fda50-1b03-4c1a-96ba-17919b847628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff77d057-1029-4e64-9cfc-577fbed85d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b193af-8dbd-47ea-b9e2-bb5969d6797e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "129e5f2e-bdb2-4a29-b82b-2e4cac3f4455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2807160c-6c10-49ea-adb1-80a877719de9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a489332e-6498-4dfd-8f16-054c36839977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f357c79d-343c-47ac-a7d8-baf21d1bacf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c581479-747e-4e8f-8ba6-d4b3e805d255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc5335fb-d667-456b-9d79-a590563ba24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0147e80-fd3d-4669-a324-d56bf271a846",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae641149-38fc-4151-8f97-efc9803a9aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494f87da-5452-412a-918c-4b644e0556f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31212711-de02-46a5-b8f7-fffdbc413582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df9ed93e-8929-4fe8-99a1-dda60eff9620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6bdcb71-869d-46a0-a9e9-1a739b55c510",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebfe2fbd-1061-4c71-82df-b56cd67f16f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd133504-f54f-4c01-87fd-7b477261d588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133ec0b1-963b-486b-a3a9-a11274780da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53afbe0e-286f-417b-9965-b019daf85542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4e2af1-5b61-4c64-a282-b4947f9b664e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940d29fa-a32e-4a7c-8639-5bbebfdae27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779fba92-61f3-4df5-8d67-a8c7806e7764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70ced50-fc9b-412d-b5ae-78dd94347a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c251ac6-6587-47d2-a5e3-3e65f477cd26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c643f9e5-09dd-428a-b336-7ff67c755862",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043c8e2a-dbfc-4cb2-a7a8-c116a836ccc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86647bff-3e7b-49fb-b2fe-54de35e9c4f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aaa32e7-db7e-475e-bb55-0055ab6cb6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dabb8782-418d-4888-8494-3681c0b2bfe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeaec884-797d-4ef8-9266-ebe916c5bfdd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f14884-e68b-4b45-b26a-fc36cd5cd94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d00fd28-ddac-4855-979f-9c3880f48546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8659aab-ceab-43b1-8232-d19c500dff66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a381afc-f3de-4869-89f0-2273e51859ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551be7cb-3c02-4139-bc03-b14e82bfbee2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9dc2465-9676-48c1-9c7b-5957ade4ed82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4290e60f-7e8d-4d72-9fca-e3cccd51023f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b1b990-c156-4f68-9e78-938618a939eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0123b49a-02a7-44cb-87c3-4375e0ca1a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6264e8a5-4578-4bd5-804f-2094341146f5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4732bc01-1781-4a0e-9bdb-a1f08cc47251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d83eed6-e73b-490a-acae-98fc85c3dac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd93dfc-cd0d-4b11-a468-6aed50cec877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c809c8-24de-4e4c-8ed6-ac8f0405e312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd6e9b7-9bbe-428d-a918-c5473080aa73",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b335485-671f-485f-b160-04f4a4b9cc29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9896692c-8e0c-4566-955c-90f37bce00dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2456ce-d12b-4804-8440-56e2c373cd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9739e654-90d9-4b78-acff-a112a458b1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46fcea1-f02e-408b-b6ae-b4a7acceaaa4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d15376e-0387-422c-beec-f2316bcdc8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def0853a-7b78-4d90-970c-c809a7246b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1de000-6ee8-4d24-850a-c533be771686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34795a2a-a3f8-4beb-a887-bd4d0ffda603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfc4d7d-2456-4ff4-bf10-21c8dabbc0c5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108fc4ca-44f5-470d-836b-6e6a44da88a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7766d5-8b18-4323-b519-0e98d8a06c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e213206-8544-469a-b8b5-58b3f985d9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ac364e-ab35-4de1-b980-20fd07d5cae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1196c033-fd99-4e2a-9b9f-c95f31af2a0a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa0a1e6-311a-410f-9bcc-c3f1c85f54a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04ffd13-20f4-4528-abc0-3c9b4badb3df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd36d69-4f36-41fd-ac52-8c5640094758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b969f4d0-7d7f-4774-91fe-739882ac0ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc549e89-e948-448f-bbe4-cf674c0b143c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a7a59d-93b5-4371-affd-f387318af429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9166df-f1c9-4cd9-bea5-5849f75f0b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0071d5-8478-40e6-b73f-45652767b4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0345c5ff-a0a1-412a-91bf-6442b8b5e245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca048094-a072-4ab5-be1c-55ecf5943b30",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529d261f-c24b-4f26-91b1-d84f103c1fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281c388f-35f1-49f6-9c1f-f94e18ead008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6717e1fd-6103-4011-a695-f3410a1d4557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b846160-92f5-4bca-8508-ec57a0e5bcd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97a46f4-7a3b-44c3-8f95-9b22e5b06f6c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c84cdc-47ac-4ec9-8b6a-f635b20ff72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d80804-dc80-4fd8-a086-7801698181c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475a9eed-d7e0-4dc7-9add-e561ad0a1fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "243c7538-5f7b-4845-a5b2-e6f45ca1679d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11dff60b-7ff6-4f7f-951e-04ce68bd3f06",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9853237e-fbc8-48cd-83e6-ca8d36792370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d020bda7-e5d1-4517-99ec-68c783fbb5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eafe7cf3-2607-40d7-b797-264824c5486f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d4c6c7d-9938-402c-bf47-afd2889b0642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02bb41a-7034-44e6-b5ef-00f3d4269d90",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a90ec5d-69f5-4574-93f7-74abbdc6e55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb5e9c45-6638-4f05-8428-c3c48acef135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ce2d9e-9b06-4c7c-a7a4-1bc073733463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb349fa-262a-4635-8a32-17358c8a54b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91277825-3b2d-4994-a7bb-e84523409ab8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da000d9b-2422-4b70-b9eb-9d08f5f2cd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "036d5333-2c87-4937-bdbd-d30128c3cab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3343bb7-af66-4014-bd89-4923c6609398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d712a10b-6fcd-4b93-9d7d-0bded22878f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86ee835-6642-4118-b956-11f63e7ded7c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80475658-5812-4c11-b8b8-3ae3fcd4eb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6598acde-879a-4f0f-a7af-5f4f984a35a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb46499-4883-43ba-9b7b-5f3286d346d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "05eb59fa-da09-45ff-91bb-2f1e086f7d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffca4bbe-b80a-496c-93d8-88a8d57680d3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba79394-3ac3-4d26-bb11-c491ce487de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f6cea4-9b81-4f68-b89a-9a5d507a59cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20069730-658a-466e-b748-f7b8592d66f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1fcf34a-61d5-47d9-a9ad-1daeb865f995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe23318-78d8-465f-a1ac-5a10c8610055",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c1a4a1-d15b-4407-b2bc-bd54820b514b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a91457-ca76-4a8a-9f5b-9448aa918344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f90b5da-68a3-49a5-bd4e-440dd75ca406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4737a4-170c-4c3e-b1c7-4164b72a8746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0df5333-7535-4603-baf0-aef248214d35",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d41005d-9630-47ef-af54-4df723d8cc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07785a75-eb02-4114-8114-acace60f96c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07789e23-e9e3-4a98-b363-b9fb3387547c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd77667-f1dc-48bc-a1ec-ec834f74a7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed70db95-91a1-49e3-8f5c-66d00bfff34d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433f52a8-0090-4bad-b59e-56644a418bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9cd6c09-8de0-4c11-a501-9a26c1fc9614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab57db58-2a11-4e2d-ae3c-495b6ec5d807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d08b10e7-3865-4955-a96f-8f203d229d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eab4321-7c7f-4704-8d18-871602f67e43",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a78912-7149-4bd5-a526-109997831509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def0558b-2e93-439b-bcf2-106e4a9ee52e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f27863-abc9-4209-a527-be638b2721e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c4ddeb-ddb4-4022-a2aa-d5872601321f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b64b1e-1e98-447c-af89-793722997bd2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8bfe3a-a17b-410e-a759-e6697b087143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57581a7a-d6da-48f4-9f0c-231880573d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e176629-ee3d-498b-851c-20a0a3c7ce07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8805ceb5-4754-488c-9bf6-e954b31d7421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4bea32e-37bb-4d9a-b087-bff5ef48908b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2958c2e6-0711-4abc-b0fd-e165dc6b64ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e34801d-bdae-4bc7-904b-030c230a602d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c2a1e5-fc3e-40c8-aaef-b8e3f0a90d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63c22829-75b4-49e7-b597-4d9d0242b3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044c332c-e4f7-4d7b-ad90-af54caeb6a46",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd2c8aa-b32c-4d6d-9957-7e92d21fe6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c179982-8de2-482e-bb3e-1e39a3e079c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20d27b0-43dd-497d-a500-dac1dac0d66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b52807d6-16f1-4151-b579-46dc01198a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f2c7b7-d73c-4fc6-937b-ba22563ad741",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a6d72e-6f81-417e-8af9-f375ed915686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0d5577-bbf6-4bb9-8daa-2acb540a6731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4919b09-cb0c-418e-8c63-f72cd4661f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a0eb86b-0b3e-40d0-a577-3b3bbbd4a967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad2e797-cd51-4802-805f-69e462dfae92",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d6a093-ea8f-4823-b4fa-6aedb0792700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd77f5a6-6c14-4db5-9bcd-00949d9fac88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d7e755-732a-4767-ae51-3a23f7d19e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62031a52-756f-474f-9d4a-736daf913c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5726325-96cf-4e99-9dcb-d9929f5da3be",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8feef26e-e859-493e-8513-145c2e114a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02892ded-acfc-45c3-9d6e-cd14eb9ca796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2afd4461-cf2c-46e7-908e-b7f5a30ce22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c4eac4-3457-43e3-a74a-0e0aaae966e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0e5c75-1009-4b3a-8b4c-3c5118aa7331",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2efc4b0-39ce-456d-b1bd-402705c015db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4dadcc4-6128-4c01-bd6b-187e13456500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcbadcd-d448-4a5b-b1aa-001c17b7ece4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "724f3e7e-65b6-4db5-995e-07ee980af1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31888d2c-91ce-41e9-8b5c-d314c8a1de88",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c645401d-ce0d-40e8-9d31-a1e28cc7e936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac11238-b693-447e-b22b-ec11aa041e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1beb2420-43fc-48a0-81a9-5856ad570e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be8a87cb-752b-452b-89ba-7cfe856c24f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed97a36-62eb-4972-a10f-6ad6260878ce",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7d9d89-a797-4a6d-b6c6-2ac2dcb1fe5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f126da0-13a3-4e34-918c-be5103451659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffba91e4-4f50-4b29-872d-7a2d27e6387c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9965a479-0d1a-44aa-b67c-805b99e2370a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e0844d-1868-449d-abbb-63261dbeacaa",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a19325-1b0e-4051-a89f-fb2c6d26c13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0175c1-1668-4208-a40b-2e60548aebc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3225121-a4d6-4f0a-8512-7718d0cd7f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6aff0e3c-7668-41b7-9ac8-3167d45a064c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f09c07-5bf0-461d-bcf3-71111890c9e4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ea3280-f18d-4aad-a9da-89d32a575c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64def9d6-a43d-4a92-b0df-2a9c246b3648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d6ad3a-32f6-4e8b-8367-4c2a9e362391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c53e2cbb-94fe-42fa-800b-d335609ff3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca0fd82-3c11-42e0-a2fc-a07836cf8556",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b313c689-7155-4fa4-b7c3-7ecad5d8fada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ba6634-f189-4313-a63a-26f1b9e2b1fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1df1910-95c3-4460-8023-0e3921b00693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea1d9f6-3d65-4378-8c73-1b70b6446157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3035b94d-5e3f-48e0-879a-b3e475a8961f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7c9b95-104d-49a7-aebf-5151de3567dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2aa9de1-7e7c-40ef-bbd8-931f86efff6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd3f5f1-a3b4-47b1-b277-f2bf625361bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7a1081-74ba-4fec-b432-aefda172d07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4accb701-462f-451e-be0e-4857e3b26150",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf94a2f-4141-48dd-87c0-3d1d02825739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a7ff5d-68a5-41e4-af54-d52891405f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3011923b-c0e3-4ca2-9b4b-9abd73b1dd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "545c5a06-f30b-47fb-9d96-3e488cdce16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c998a436-1f8f-40e9-b47e-941ef44554b7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02fed0b-2612-43f5-a30e-f8e4ab86823c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a918ffae-3410-40f5-8666-437c590bc33e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d880418-264f-441e-81ac-0b54d7c58edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef1962a-fec8-4bf7-9986-3f2a6e42b408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751dcd77-abf8-4884-a740-c49751d4fcb8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b03e4a-c5bc-45de-8ce0-9ec8fea24117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ecefe43-6c04-4cf5-b35b-81edbba1e279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8f0001-be4d-4e11-bc1a-f35044922aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e356743e-8b62-4d35-8c0e-266540da776c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d6a6eb-1493-482e-a6f4-29b583dd297f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a11e7b-3b67-4f11-a79a-3873cf402884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e475f26-f861-406c-81bb-b4cfc979512d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9560e12c-c22e-4fa0-a5b7-6977b6752489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6713f9d1-42b8-4763-9d8e-bdbdafb3f996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02d8397-b842-4191-95e1-bd8aecd0e370",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ff853a-7b1d-4943-89bb-a23345c0a7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e35648cf-493f-4e6a-8cf2-059155efd198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc07c3d-bd45-4acb-a024-2493d885a698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0fd57c5-3663-4e31-92a9-d83d9e0a7fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a9da1a-6547-46c0-b624-c90866acc08f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e91a45-d744-4518-bd2e-7493a7876cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3309a2f-9420-4c6b-9b65-401b15bb762b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c576732f-6df1-4f6c-afae-2d5a7fbf8f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9603b4-fcdd-450f-b0c6-7ed205e80e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ec7445-21aa-48a2-9ba7-99af3bfd1d13",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fd8392-d4af-4afe-b682-b3f377dbea76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2845c1cf-cbe3-42c6-b0de-3e3280151b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0bd50e-5568-4fad-b6d6-6d5174184363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e0011d-49db-4036-a404-543c7d3a6843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbfbd2b-85a9-4d27-9d1b-82d2a103f672",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff839ba-221d-4351-8051-298645c60bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e531e0-5af1-42fc-b4c9-e92c1dcda751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38efc54-9196-4d3c-8adf-ded3a1062537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6701bb-71fc-4f05-bca0-d88ea46b6b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d112f9e-9651-46a0-a869-9df55c955241",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2187b9b9-1b85-452a-b863-8343277c1016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c3d6168-6c56-47e6-82ac-34b63a29c221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8630eb67-5565-4f03-889f-d9922b9d1e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9465071-29e7-442d-b044-ae3e3fc0564b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79876e74-ef2e-4cc4-b62d-0c9f4da79162",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ef2ec7-600f-4ec1-9f6d-39f52d32b356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92837603-db91-455f-8c9e-6fc60861ec61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed068cc-ae85-4fbb-b06f-ae3155c9a954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "03abdee0-142a-42c3-9248-51aa90d27ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c5d684-df30-4c39-9744-1edac658e06c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fa42e0-7462-4937-b8a6-bbd45580ae45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4beba077-65de-4b58-89dd-dcddef4c3cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb737732-2e4f-4daf-a94b-fa6cbeaf3b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "59d9c9c8-d9b0-4176-a6f5-c5d48ae2d4a2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d231ad01-8907-4daf-a684-080baa1739ba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1deef28-d325-438e-9f2f-9d7f3727f8cc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b5df7b-a1d3-4562-8d6a-228257db766d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f078e7b2-b4a8-4bd5-8de5-c021963524d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa222383-407b-4e00-8a99-1688c611495c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "2e686c6d-ea39-4729-ad96-0b7b31ff9497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96752e5e-9371-4383-b369-4e2d1b845433",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041937cf-37e8-4ce1-be88-740d3c35cc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a4364a0-68d7-4429-884f-5f1831fba9b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae402663-6725-4c6a-84f1-dbef15375b64",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "8a7848e0-371d-4633-a7d4-e97711d6b99e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb082870-24e8-4856-a139-9378ec762323",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "909c49ea-e4ae-4c71-8c4d-8c46f0d4b7eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "48271d03-ef80-42b2-a412-5b71ef296d3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c53fa20-ee46-418a-9564-3f803e86b886"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c413b2cd-30f6-4c66-937e-ae9daed98abe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e4a5859-16ef-48ca-9122-ff4887ec4084"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2d0e21e2-773f-47fa-8005-d67026425c6a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4e12d96f-0cd0-4882-ae3e-1081f3b70e8e"
                }
              }
            ]
          },
          {
            "id": "1636226c-0919-4ad4-aa6e-f355a970d1e1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7aa18b5d-399a-4e4d-a748-1b38ca531be8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c145116-12a6-4fe6-84a8-61272f099a4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87b70901-2934-47c6-9edd-811654d44c09"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a93e2c1b-1e99-4f2b-9504-b44b7b2205e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "54a1e29a-4550-48c6-aeb7-14103df444c0"
                    }
                  }
                ]
              },
              {
                "id": "154ddb23-a8ad-4d85-98a9-0c07aa0bce97",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26760d25-dd21-4d74-9247-f0ad2170dca9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "21d0b5ad-64de-433e-b65d-7578c0833200"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf1fcd6f-4a75-4ec4-a8a1-399c45dd119e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "487e675e-ef77-4f1a-8848-c4c5503f139c"
                    }
                  }
                ]
              },
              {
                "id": "a01ce9d5-7d26-425e-82ad-73bc3545fade",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5654924d-37fa-4808-870a-6ddde8427ad5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ee18016-1d18-4ca3-bc40-a67e294f0229"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eae603b8-b85d-44bc-b9e9-561c52c05d2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b563441b-118f-4052-9bb0-5dfce4bb8be3"
                    }
                  }
                ]
              },
              {
                "id": "6faf96cd-6194-4fda-8eff-18c0cf425294",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb6c5d8c-d346-4349-84f7-21881888cf53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24c13a5a-0069-4bbe-859b-82eb5d8b824f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd945ae8-de7d-4cc3-97c3-d75e191af4b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "be710b8b-3881-4699-8593-31727a7b4514"
                    }
                  }
                ]
              },
              {
                "id": "bf48250b-2a7d-4a9f-b4f9-034d83cf0dde",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "abe68dba-5444-471c-89a3-65d87ea76393",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d2ef47e-17b9-404b-b072-86eff5445c95"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0abd01d-0f63-4275-9104-228095c568a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "370566e3-8d41-46a7-9ff7-a1da194a2c07"
                    }
                  }
                ]
              },
              {
                "id": "2109401e-23a7-44ec-b4e4-6665f666d11b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c3abd5a-72e6-45f0-874f-49749da0b9b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "acd47fca-7409-4b96-bd41-e63ea0bdcb20"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40c5925f-de83-48f3-be82-0c0e9f74b7d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6fe059c3-ba6e-40f1-9752-a695775ca9a3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cf61a86f-1d2d-43e0-976a-74e329ada384",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9ce43c8e-d5c1-4333-bb17-28084a72fdcf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6ed6af6b-915a-4e4a-8b44-8d9d7d3bd7c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13347695-ac7e-41ce-8e03-de0f06b36ea6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91394b75-cfea-41cd-b261-0d3914c4e496",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "206b75ea-9b2c-4045-8134-224f4fec5b28"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1b0cf44-ef54-484d-b8e4-21520f3ba1b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5da3d954-954b-4f95-b50a-d50de64d3393"
            }
          }
        ]
      },
      {
        "id": "5b04908a-6eaf-4a3f-a2eb-ef604cc9ad27",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "22fa7a36-26f4-404f-8892-6164fa86683e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3a6fb0b-c42e-4362-bba8-a60d0391a517",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "33d47a1e-b0ba-4980-bd1a-5e26c5c1556a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5918d064-0950-4aa7-8b0e-b0dbc936f8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77616a4d-cb06-4fb3-9ebc-acc38a37bd19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8cec6f-1883-4e54-96ad-0e86f4584890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "590d52e1-72c4-4656-9f51-68e436aca428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f23cb32-1691-4221-854a-b701b2c5ce76",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b670d8b-74ef-4f35-95f5-b73e595c7400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13ff231-abcc-41cc-8bf1-08f2632897d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c61a601-432b-46f6-98c4-0e8e7c5453c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a64602cc-0eb2-41ae-a6ab-e66d1f1a088d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362290f0-f24f-4ba9-92aa-164f7699eb19",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58af4b30-35bc-4d37-9a90-59ad87c52646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0061c3a-7d69-48a9-9339-3ce099935895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffb012b-febe-4baf-b1d2-29e2b60eac86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4571325d-145d-4bc3-8c8d-89c9dd2f40ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97cafd6a-70b8-4bd9-9c35-c55f7d05d9d1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ec20e3-e317-49ec-b958-c242ce58ed17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c534f44-c788-4851-901c-2ff9372765a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17de0c9a-6fc1-4f3f-abba-31fa0d380988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "818d676e-c8ff-4a78-98af-479d6b5f536c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d712702-b8a2-4fd0-b0cc-69d289d047dc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f0cfe3-fd58-4f0d-806c-7036bb2d86ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c47faa-2bc7-4432-9caa-f1100ea7e61f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac52ef18-8ab3-4d13-ae3c-20fe612c4ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95e4bc7d-0c71-4a39-a041-571088dcc1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc31ab25-cfb6-4104-bcc1-5b48957c0dad",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1262ec19-80de-43e0-87af-b04ecb612393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "288ada87-a109-4518-9a09-fdc54676fc97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205e0648-5552-47d5-abd2-1e26e1c8095d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec647e3-492f-4b24-b524-8d520ca6d582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc456ee-2068-43b0-b976-9e8d4f522409",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f745bf3-7198-4061-a63c-75fa5ccaafbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05261d40-1774-4690-94cb-a8b87e415390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d9ac2d-2dc1-4c34-b86e-9de2056380b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f8b770-0479-414f-9bee-907759c0816d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4daf32-867b-4420-b509-b283ed3367ff",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272d80ed-5ba0-43e1-9b87-3a99770b2c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1378cbd2-52ce-4519-afd7-6f6bf365d9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65d34ee-2d45-4063-8544-5207534e6259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37cbb15d-b030-4553-b90c-bdf22eee7fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3013f41a-9592-41d5-8d9d-3b95c12e5be5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252fd66e-0de3-4c79-854e-3c4e663db119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21ed043-36c0-4828-ad38-3b2b41a7997a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e314138c-989b-4092-ba6f-e3c4dd029658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49791658-9744-4e19-96e9-22eba00d85bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754a6dde-0e6b-4721-a960-db05632c3ceb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e498e3-8ce4-4a6f-b8f9-97fc876ea1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d207369a-826e-4fe1-ad6c-af96e28e2ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff1ebf1-e6cb-4248-9161-0b4ceb6e994a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef75ac81-9689-48d0-a5e0-9333a568e18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8640af9-4ea9-46e2-aa5d-a4a288e375db",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75efcb9-6452-4a08-ac48-cb674c89b650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65987469-6cdd-4055-aa92-6c4c2853cd01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d37759-768b-43d1-b85c-e5f13c8e0a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6242d24d-88e0-4297-a27a-1301dd49c742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7eb733-18a9-4671-8f41-ea3abd824e49",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8f80a4-f184-43c2-b5ba-c74f7357795d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7367e206-36d2-466d-8fff-49fee641dff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8986f15f-62ca-4e06-ab73-c8decae8c711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3da06747-2963-448b-90b4-82efc374c128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807270bb-8c1d-41c9-a0b9-65cc631bf990",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51677b1-4a5f-48fc-9224-fa2ad83e270d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d031fc8-8402-4fad-9754-69d189b64f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5af6f2-bb64-44d9-b56c-5e6d78d5369a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba8dbaf9-6c24-4dbf-a587-af7a406ec7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee3ccb5-64c5-4b6f-91e7-13cae4bf59c9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51502057-c3ff-41d6-9419-9fa9422ec33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "604307eb-29de-4aba-94cf-a2f97a3a1987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc94615e-4518-48e8-b848-e6cdf78b5167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad1bc358-9291-4f22-a86d-2e49ce08b77b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599f8029-c85d-4578-9320-dd156b264b98",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6322aba0-2543-4f7b-8ca2-acdeee999f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d570e3bd-95f3-468a-ba8b-e01e3195ddfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5938095a-b774-47e7-b556-adae0edf6f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d20961d5-9a73-43bd-8e45-f4d2a88e8fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a614d503-3038-4397-860c-0a26471b0ccd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fdbdcc2-5f51-4437-a6f8-4309a3ecec0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e733b834-d8da-4cff-8265-a124b891bfac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc4eaf6-15a0-40fd-9a67-7c33d5255ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ecb0fb6-48b5-4c71-9b6a-6682af5b0c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9150acf2-df50-44a2-910c-bbccb55418a9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e389708-6056-4bbb-9a08-c14131005d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc18b60-f98a-45c0-aabb-912da727282c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8f8426-4da5-446d-8559-ded33b944b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc0e7245-c58c-440b-be1f-8458c6b0ef6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9a8c7c-c3ff-4f24-b0a4-0cead9d80b3d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ae6a05-f56c-49b8-8cb1-b281f2cd5202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb9fccb-c6db-4fee-892b-9957891f2d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51832a22-09b6-4303-b7ec-c452e12148e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4493c867-09bc-4198-be04-72bad4666fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd1a949-500c-44e5-a0db-3fb701e822c8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757672d8-83fd-4166-937e-60b9a73c9d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0209c47d-cfe7-4801-b7fa-2d804ef8c021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2d91e2-e74b-48a1-a9c5-4498b09adeb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37f6b4bd-2f02-4058-8e2d-560434577e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0249b5f9-14ef-4bf2-9b03-797d700db61b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66e6523-0525-4615-86ef-ea4ada2a317e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f29885-5c6a-477d-84e9-57e98e9e3026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc75a4f7-d4d9-419a-b89c-b00bc5a57e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "126a0093-bc62-4c1d-bc5e-9a9709e68b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4822ace2-0561-42d7-8f2a-a8c471beac39",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "812d81a8-94fa-4f53-b4d3-7175a09bab84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a10e07d-f54c-4a6c-9c00-633e98a36537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cfb69c-035e-4367-9146-f7791f031a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eba9bbbb-e31f-44f0-b14d-f3ec1d1bb819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1120adfb-7152-4652-bad0-c57fb25e4ba4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d0810b-fe23-4490-81b2-bac6c5cf22ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48459d1-c3c9-4f16-9d05-35f194f48058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da62c51-91a3-4390-acf9-85fef4b765ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c516dfa-6907-459b-9024-8af0f52a6ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514f5497-935e-4b22-832c-621739b79195",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d017a5b1-d016-4a09-841c-84aa1ebcd413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f91d163-2adc-473a-80aa-f3fe897236ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fcf018-3acf-4e4e-bda6-b2dc257d6c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51272594-ca60-4779-9a40-9891f2c5c8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18a6a8e-e6c0-4aa7-a1c3-28e0005bcf6f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b238c7a6-6852-4684-9b6e-c93149d15930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f15b9d-05aa-4f3a-9ad5-d4e452e0a0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a14c23-654e-40ff-9f50-b781be9f5727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "025e9b53-2cfa-4f2c-86cf-95bfaec286fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfd7d38-f467-46d5-b817-92af430ad5c9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9369bfbf-5e5d-4a0d-aa07-ec5725b9eb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8be19d5-7645-45a0-9f0a-36eeb94cbee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463642d4-5182-4343-9a6a-65baf80b4f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0917f98a-ef52-4395-a4fe-d73f2bd2300c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3f3875-7d04-4a5f-ac61-4db0b978f7d9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989f4231-cc20-497c-912a-a54c527be04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8dbe4b3-8a3b-408b-adb8-169226a12204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fd3142-1cfc-4074-b485-52dfdb6ffa75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82ca9dd9-54f0-4bc3-849b-6845cd2c66b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af377e6f-b81a-43fb-a3a2-f569306e9816",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f994658-249a-4dac-b4cd-432fb88ddebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9427e88c-ff82-4530-ae9e-cf1d6ba1e152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a6ffc0-3316-4c5e-bd83-e07e07af9b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad41f214-0fa4-47da-b584-f3545eb7b942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2bdbf1-1135-4103-9227-34190498db5f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91539442-79df-4ac5-84d5-f0c6823930c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a04e96-aa33-4c3f-9847-4eee3be32d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e1c454-7132-4df8-9725-d6c774c55693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4fe1dcc-e3af-4dd1-aca6-cd0f02f11bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22b8509-e5e5-4d79-a26d-f3979402be0c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981d0cb5-7e1a-450b-95fe-9de02582480f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b37f2c6-1b20-4d94-a76b-238893d405b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96cc67bd-531c-4be7-a0bd-440663430516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1849a65b-9940-48cf-86c6-b360804f3a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3593df68-d17c-413d-ac13-578873d44e90",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df39d45-8def-42e1-a141-de87047fa8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c657bf-76b9-49f2-b705-db3488c2b4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2ba4db-c58c-461e-927c-ae86a6485929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1414813a-2326-4d0d-b569-b0f425a49e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415c2cb6-2603-41e4-af12-dbca8c656679",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9befa761-4742-43dc-9cb3-2e648f8c8c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d492f55-4d47-4875-87eb-ae1115c23257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e10f7c3-1864-4bca-8e6b-09fdc18df27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef1290c2-30f5-4c69-a6b0-dbf223840e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95f0ae1-4e96-40e8-9bfc-5cc8b048fa34",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1ccb2b-8f68-4e1a-aa02-8290d26322f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7681604c-adfd-45f2-8e89-778ed50f4524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946f43e3-79c8-41f7-ac8e-08d848e83866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c254219-f0f1-4261-91d9-a0ecae139921"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1ae01d72-0329-4e8b-a804-c8c19fc27d99",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f4322d1e-7114-4032-ba0d-e1a92140ccbf",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1770eb9a-075e-4fda-8bad-affad5bac16f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e43cb0-6b34-4372-8967-87ecc9352aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "837f080e-4fec-4b78-89cc-de24d9ddceef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "684bf6cb-2498-4851-837c-8905e8c67795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27212ad-a418-45dc-ab26-7fed6c270f92",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7e4ff7-ba71-457c-89ab-08ff49d4d5a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "e732b6dd-704d-406d-98e8-2055980ae4ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5a1600-78e6-4520-a0e6-f29600c78856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb1a4ac5-6324-4cef-87ae-2c1b19fbdf74"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47610a8f-0fd5-41e9-ac80-f45fd58967ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80ba0179-a525-42e8-a5bc-f0cf5429a5ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73f33b80-e470-4ddf-b30e-40844d00a007",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d800a45-9617-4f7c-8aa1-6446bd39a432"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da3ddbb7-a8cc-478c-b2fd-0789d4b2007c",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8afcaaf8-54ab-49bb-a9ba-43be16e9539b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e67e3f2e-4903-4dd0-857f-0ef10077a0c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "44eb3032-5b23-4a64-a784-0a5598fcc7f8"
            }
          }
        ]
      },
      {
        "id": "d8b83071-c2f4-40d6-9f83-440d450ccec4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e11374ac-aa0e-4d85-a514-90f28eefac04",
            "name": "Negative Testing",
            "item": [
              {
                "id": "67f0fe44-debf-4d49-a5d6-b20623173bcf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "27c5305b-c649-4ab4-9d9e-3779e095afae",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db035ca8-e3ac-4235-99f9-33f45f7afe04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c2d1e5d-7aed-45f2-9702-e7c3ba608fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2eb0b5-863e-441f-b307-2bcbcf5e054c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04e9bff-71df-4448-9524-cdb5fffc4db3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fb14cb-66e0-4892-bdef-cd69e58f9fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27eb2eb4-973a-486b-b67f-f681a6bfdf86",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437960dd-b246-43fd-9afa-63684fa6b1c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d25c6046-63fb-4d30-9b7d-66bdb82d7ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498ac07f-aea6-4e56-894f-299eef1df723",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef94dbf9-7e1e-43f3-a7b8-546768e2a648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8785788c-755a-4427-816d-6551e1709f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c77e779-dc16-4ce0-83d7-4fbe8ede2536",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de4fd74-1dec-4188-8c44-5fa7edfec5f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95dcc4b5-33e2-4b0b-abf2-0cc29ad18ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2dd648b-0bf6-4f28-b895-2c70cc309f42",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b233ad73-011c-437f-87cf-04aeaa9b93ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58898d96-945e-4dfc-b6d2-2233729990bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679eca54-4ee4-448a-87f0-80bf8e1388e6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dde4bc5-3a2e-49c1-9c3f-c313cb56070e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01779a8b-e25d-4bc4-a2ec-d9b7ba6ae2bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2037fa1e-d456-4c6d-a2bf-d55ac81b96b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f4f2ab2-67bd-41ba-8eb8-24845496241a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9bb1c3-6ad0-4dd5-86dc-29efe6ed4386",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1cef27-ad22-4fa1-aaaf-2a78482d98a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c97df658-c17a-48cc-9bf4-40a9a65ad72a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3d3435-10d1-4eab-999d-10b3297efbfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260af263-acf8-42a0-af85-112eb85d2f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f8fb3a-1e0d-45e3-88f5-9e11da79d56e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060469aa-227a-4145-a49c-5003a44c54bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e3f0e93-5d92-4f7a-b715-40ed36e19afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a492bcd-51e2-4761-a429-3870439efbcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16bbd55b-c5b9-4732-955a-9168b9b6823c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c58222-2859-42ce-af44-66cf2adbba93",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bd7288-74d6-4862-ba78-cfebd54805d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b1c9779-fe26-4549-8487-3b549b4112d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02749ed4-75c4-46ef-8919-b144c8615c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a0aa4c8-33b9-4fb2-864d-2f36b12d8cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496f6446-34b5-4c17-86c1-eb623ccc7c87",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48728f86-357c-4c7f-97c7-674830a82c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9632f80a-993a-447c-a322-5e17dccceb56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefd36be-b45e-4f04-9475-f5f158c50cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d3c4d3f-e6aa-4718-bfc5-6bc10746c102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9c6867-45af-481e-ab7a-096cf656839f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3d6f6c-ad5e-4d2a-b3cd-f3694fb8cbac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaaa158d-7301-4f75-b2dd-21d4be17e3e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d2f2f1-c68c-47fc-851b-68042b85fd8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b55690-5ecc-4ec4-a52e-a809894b99eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755d62ad-01a6-4be5-8fb1-3a88fdc2aecd",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e38ef61-5fd8-4fc8-a770-4f53ea00e779",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65f26a49-abe7-4d67-bb13-bce99a1cbf5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4366b96e-1694-4cd9-945c-40cd116fd1ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b579c0e-50b8-41a8-97a3-8d644a56be5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2dbd06d-37d5-42de-ac6a-35d023ba23e7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f336da00-b1eb-4580-9f8b-a85fee7da2a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fe6dcf5-7643-41db-be9e-1decaea03bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f147858f-a292-45a7-a65d-c6c74cdd897b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be8b3971-b659-4d75-a801-75a6c0e4fb8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a795c85-e09c-4919-95d7-5054c8651cc6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5526f5b-cdc5-4bfc-91e6-9557b923dc10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f597a3fb-3eef-4646-aa86-9c8dfcb52808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fcfeed-31b7-4c39-9155-a6eac3d80313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54baeb58-2d67-4a1c-8b0a-489560de95ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e15a052-d93f-4472-bb38-64cc39b41cd9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a800c2-ed6b-4afd-93ca-29f8db8d267a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95b7b31b-c671-4f29-be45-114298d8e0f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32850794-bb88-4622-b128-6ab0d4bd4d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6319165-682f-4410-a0b2-e3c457c9fcb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be87f10-22ed-4b74-b14b-200d9475d04d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442eb577-dbb6-4055-b97c-9f7ad06b119b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2015a3b9-4f2a-4426-b20f-fcf4babad896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbf2d6d-5ba8-404d-a838-197fd39f6835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f1492c-4f0b-46a7-8e5f-68b00be2dcb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24f67b0-ec76-4c92-bfd7-67d34ea3114b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ef806f-0679-4e00-90e9-d5f193299671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fda9e30-307c-4b70-86a2-4b4b0d0f7a94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4680a7-fdb6-4b07-ba1c-4d25235e7e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95bc78c3-cbb6-4e6b-839d-f5a2bdb893ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6858717-24e1-45d2-81d9-4c8265112ed1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3a0a6b-50f3-44c6-9aeb-61ec4a869cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac6ddec-8d53-421c-ab39-db2b8a86b29c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3884b74-9f07-48ee-8907-267212cbd38d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31deacf0-3472-4cbf-9604-9bd33432404d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a4acc7-9bff-47fb-a5ae-3d90190d9c4d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231af599-730e-4028-85de-e8cb47ee7600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6649804-65ca-4491-9db7-beb4170239e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a142be-8c1a-469f-bc7d-b8b79932f7ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b13282-0372-4b1e-882a-0f9721cc60c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e294e8e-c025-4c66-a5c9-3d42f79685db",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d1aaac-0c7f-4a51-a47d-691c940deab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995d37c0-0248-4ddb-a443-b5c3ccf57abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37e60e3-67f3-4b78-a572-c25f8fd7e981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a69a297-869c-44dc-9ad8-81b5cbe7036a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db47a7b0-1b2e-4b85-8fc0-0bebae55e272",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a728d57-c10e-4b97-864a-f4998b30244d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8334740-f9e2-48dd-8668-14b691824c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95b1b26-c9fe-4f55-bd83-d75f079670f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d0eeec-a9b6-4700-ad0f-373b8400a7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6aa87c-339a-408a-baf3-1205ba5b192c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952c3a10-4316-4f5f-84a2-12320d845737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbeaa3a6-dcf0-438a-bcea-b24173379517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "626c20df-61f0-4bf7-800b-47015dda3b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e189b57-1d9f-41fe-9b99-b1f64a82c527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d6a1af-c2b8-433c-b4b1-93635bbd2105",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c5a98e-79e3-4ff3-8b90-ac42af6ecd01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fb72ca6-8c1e-40cd-9025-bcb9497a899d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da76e743-a9d8-49c9-9d5f-0440fafcd185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2712fbb-ef8c-4db7-ae88-cd130c72f388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00466b2e-70f8-4254-a103-ce9cd8e2afcd",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73682a02-c523-4643-a3c1-ba12ffc841bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f6e03f7-51f2-46aa-b788-f8f34188310e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a8ca7d-7a4e-4155-83b4-0c5a2079caad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca06eb1-63ed-4993-832b-c57051ac0495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09513a6c-e1ca-4470-9ad4-3f9459005659",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b9ea41-b0d3-4642-9e7e-0c74b632aa9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e4f13b1-7e1a-48ce-9f94-665e5af425ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84c126e-aa76-4f65-a732-444e1d73e5b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1cc04e2-5d91-4b98-b81a-ac156989ce87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c546fa-322f-4a32-8453-045394d2805c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d14e1d-3985-4e59-b017-31c787155080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "505cc438-5790-4836-84c0-a92b30f9682a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2dedc32-2288-467d-9e1e-34f562351cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5778b52-f94f-4274-ad0b-df1388665663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3843d0-7c33-4ce4-9920-96f4789ffa78",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a753a4-0569-4ede-9069-06b3153b4814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c9153a-82e2-468c-8d94-3499eb23f292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f72c4e-e1f3-419d-9a7f-43fabf549040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bf602c7-73c9-49f8-aea1-9dd73f53de73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7610514f-5b35-44a0-879a-231bc475eb52",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1802e9c4-4ae5-4347-838d-31077ee73ef0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f15d5f6-5e5d-4ab8-8d25-2d0e356cdeb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bdb86b-7b2d-4ecc-ac3a-cda52da0f915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74240c5b-c516-4394-b4cf-650a8b38a772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4598e2-96b8-4734-bb84-c55f540acfec",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ac8d85-a24c-4c9c-b2a8-c492939aa631",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ecc7be9-24c8-470b-9dba-761139b54f45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ce9dda-2381-4f47-8cf7-d6643694d2e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc798a11-50db-41f1-8834-3200ad268ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159c8373-34d4-4327-b7b7-934683b894ef",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d0e4bf-5b66-426b-a4dc-f6211dcce076",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a36da5ab-ebd0-4b26-9e51-b4f1f52d2160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ea55f5-4645-4a96-8bbc-316913298e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93146b47-0cf0-4fd2-ba73-f059954dd55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5576e831-c119-4dfd-b914-13257b85e918",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c569f0-a7c4-4891-a095-a1edb0beb33e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b709a7fb-6857-4599-be27-033dba036560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2675b63f-2c17-478c-9166-596e819e702b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "332ab521-031c-48fa-bfb6-0741ee041944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c73bb24-3d75-450a-8aae-3e05c2d648ac",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1c5ee7-3013-4c05-b251-ba1e9230a6f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f77aaa5f-8f30-46ba-8a1f-a62514c4d1bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c900192-9fd5-4282-aff6-43d9350aec05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b00d3b1-6c3f-4879-a9f7-90f99bad7a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be80cd9e-a52a-4a89-897e-2c967471e74d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4dba51-56a3-4590-a100-5699de0a41b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60c2ec35-995e-4cb7-969d-3dd14ef63ce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d83d677-cd8a-40ff-80f4-5ccc1d07f4da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1dfd4b-4d78-4e4d-b1b5-f96c98253392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb4b59a-77e0-4845-bb44-d33ef3849a26",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1eb225-299c-45a0-aa6a-f28f172e4e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "700c4733-718e-497d-9cb5-57fadaaff835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cb7831-e580-4edf-9d87-d0ff6ad8557f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2516ce89-2cdf-49e0-be2e-f7a9fe384011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a308181-11ba-4067-83bd-079ea21ce62b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405e4719-1906-4bbd-a1f6-ba63d9037ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f317d970-64f8-429e-b112-48fa0e17312d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2656a2df-d560-4389-b33f-3482cd97cf10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd410504-31d9-440f-87ba-4d692a27f97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e97a51-cb0e-4d78-8162-67b8746a0d94",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d0a1b0-8c07-43c0-9e9d-93c1731b0750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1b7233-a418-489a-aceb-4e43e6976e41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3576ae8e-5cc5-4fc5-905d-6eed34f744df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f96a15-7c64-4f36-b44c-0a26b41ec2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0994a014-3505-476b-9fb3-176bb6a83b68",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50df9df5-9e3a-4758-9054-2f1c9600bd87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "395d0181-61b7-4662-8450-cfd60d44cc73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab94ac42-2964-48cb-944d-67fc22363340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a0b426-65bd-43c6-a3ae-6941ca126fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597de844-8cb3-4c44-84b7-37d4c952d625",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8f14b0-f8dc-4904-b7b8-f3ee90df393e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d7d943b-1d76-4597-abbd-4b48d5ea6f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeccb530-3c9b-4a24-b862-777eec06d1d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a416ad7-2def-4781-9903-3b0560cab3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87547645-d93a-463b-8834-eea1f56e11f7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1230de4-ae59-49b8-b8c6-7121a88cae22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf0ddbf-294f-4772-a13a-83608f06bc78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "829447d4-1efe-4408-bafe-2ff38e4e4d97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fed553-d470-4c41-bc81-f6581289c672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5c0154-d8e3-43e8-a746-6930fb555cdc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0f793a-0087-454d-beca-a23f094540b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7411eccd-ee70-427d-b691-03f3c94d49a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43494abe-4a1d-4b1b-af6f-62523be90dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60985b14-e3ba-4bf3-9b29-431307749d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2b04d6-b527-4d7c-8e5e-2c39f494ee63",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd5521c-77ba-4c24-85df-f2975e5abc09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52889d38-b8ac-4aa1-9a52-7d7c3b8cd29d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2263c6-abc5-4d29-9fc9-c0f5daa0a9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0096e03-844d-4097-8c0a-9f464a9a8cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa6c9fb-77b0-4707-8694-8ba1c97cff16",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aaa372e-d69b-4979-a126-a81fa94e1158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be424b2-e944-4137-b35c-fb40d32558a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "551f66e1-726b-45ae-8ba1-3d9a2a8d3d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c2bbc7f-7678-4304-8787-6fdfc8d96b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c95efa-46c6-4a2b-aa34-02aae783ac58",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983ff0a7-f2ee-4592-9c83-bbc5a53ae6ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa4c568-8614-4123-be24-6a9d1fdff89a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8451ff9e-9703-4a0b-8c0d-07681d277739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65af55d5-27d0-4860-93c3-0b4ceb60a4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1426572e-7dbc-4dea-9e8b-4343dfb37bfd",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7796a4-a2ba-40d2-bb0d-0e4ba3890b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d43f12-d15d-4cbb-958d-52f357caee97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37cc8ca-83a7-4221-977c-a061820e556c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e194e6-ced2-46c1-aae2-11402700586c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe4c929-0b76-4aa7-bcd6-1d4a2123c1d8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af80bec-37b6-4296-bd2e-3f64f6ecf47a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e83779a0-47d2-40c5-a484-b20da1c3ff82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c7ddc7-5206-4203-b264-4a40ffd3c1a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d5e1ad-5b25-4865-a5b4-10502c4a0797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb35bf5-fa86-4af0-b279-ffeefff0f713",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af34674-b854-4caa-bb0d-f8bb914c87c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a47fc44-ab2c-4a23-8079-1d3b0b1f1a87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21070621-1652-455d-9466-2c70c7e100cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ecac8cb-bbb7-478d-b994-e3edf318f106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aaccce0-56b3-41b0-8955-93c3e301167b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f9681f-e2d5-4831-bdc7-ade684f24aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0991a2-7f82-4ad2-88f0-b310f7acfd09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "334611e7-302d-421f-93a6-32effe9171b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb44b90-f74a-47d1-94b1-00b11680700c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea622fd-49cb-4b33-b55b-50208577396d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31eca79f-80f3-41f5-ae8e-ad18e88fbcf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b53ab0-95a0-4780-903f-80a3de9a4e8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c63e07-ebd0-4f24-adb5-3f4fb11084fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed2fda4-f72a-4621-9c08-aeb8310c4b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a024190-75e7-45e2-9efb-9d3efb2d5dd3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aaa35cf-6f70-431b-95ab-f44f93865782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19f753e-ff67-4546-8c3b-5b9a5da98edc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9dd247e-a616-416c-92cd-006a260954cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac8c8fa-0688-4816-834d-c0b5fcda8564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c2516f-de23-4cf7-a728-c200841316b3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0a77b6-f3bc-4172-94c9-d2c7c363b0a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d56f4bd3-634c-411a-b435-d0f05f3de656"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bdfc16-5c09-4cfa-aff7-8db1299cd4ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fede2c4-1ca9-4526-8b4d-7d82ee7de992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b093e60-e373-4f4f-bee0-7717d77932c1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac524afc-4502-4dbd-a77c-01508994243a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36cdd7dd-52bf-483c-b8f2-1d462b624352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b5c893-592c-4e46-bde1-fa8da3596b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dbee0db-f9a5-4c02-8fca-74b7eb196373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af6bed4-8b1b-48d8-9527-ec0656ffbb34",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad3b99e-e3a9-40d8-aad6-d139ae6d67cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4ef0d3-079f-4bdb-8d86-fe9ff6bab53f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7455ac9-1864-45dd-82bc-ffc6e7e806b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ebd1522-94d4-4c7f-bc6b-046a0b923722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64178a3-d407-481a-a55b-5ab02de828fa",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced2d351-1e66-4cf6-a2ab-90118aa76eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a26cadb0-f51e-4b3c-99a8-f244ab8f58fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ed8bec-472c-40f5-9e7e-075c1924e2a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0356d8ce-1ccc-45ce-842b-2896947dafea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7176b7-3d0b-4641-b8e9-3551b9462a3a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a5f6ea-eb86-4a68-9ec0-fc17221b3eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2500181e-e6d2-4562-85ab-ff8b135353cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f018e6-5698-4122-95ba-c44e60bcedfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e03972-0d97-451d-8d13-ea79135a7fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7dff4e-906b-4b41-95ba-73dae2e0dd5d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f31052f-fe76-449b-b9f0-bea0f9266a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f59e6e-11ab-4df7-8a09-a29ddb68a54c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a2b4e4-eb9d-4bba-8159-ccc51ea0f3ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0126a244-5eff-4cb6-b101-0578f543e54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc228e7-5466-44f4-8652-132703aa03cd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806845ee-5c35-4ebe-ad31-b22d47230cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ea69be-2982-4d1c-803e-c9a6e31bde82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bda383-f97b-4ff0-a83a-5b49670abd38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b54f5e8-6570-4b8c-bfe5-c7bb6587a859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57048124-5f38-4c95-af03-c155037e9297",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b40098-0886-4583-8578-14cb5f0ee344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732b9f53-78c9-42e3-8801-51ff3f7ce96b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "094a6bbe-866a-4b5d-9b1e-2b543119c2a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec59ba0-dd88-4e8a-9076-32de6463530b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b75a4ed-8628-4a34-b79f-1f909b763286",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554e60b1-ecca-442e-bb2c-d33a7091c441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce00e81-f0d2-41e9-b91b-5a466d04b542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd8b51d-bbcb-46fb-be31-c2af25161bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0b52e2-0cce-4260-8685-5f4b47606334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577c8fe2-3d94-4719-8b16-fb831c9f2b58",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2b7983-5828-413d-9f63-912e3afec4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170f3cb6-16e0-4c9e-9300-3fe34ed3f4ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95bf86c-aa69-4392-8bc7-62db9cf3fa3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf139cf-f2db-4383-8193-8f57292c7641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13b94a0-7c72-4703-abd6-b60cf74425d6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890505a6-1c35-4be2-b8bc-cb7c42402651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "591ceb3e-6023-45aa-87c8-2d77dfdc2fb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbad497-6b08-477d-80a3-b4da13a08dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca0f3a1-3bc6-4b61-9493-1a39ecb54a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8539f8b0-0107-4c58-a662-56e2de3ae33e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f330ff78-88e9-4bd9-94b8-608ad87c443d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a214b77e-ad8e-452a-b673-8425bc915ad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c27df1-e3e9-4d18-8690-34dee1f768f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf586421-7f5c-4acb-a871-5450126f7d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3432c0b1-dc02-49ee-8f47-661b925d54b4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c36689d-ec71-4462-8f70-f234a7f7da29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b14e290-2606-478f-ab7d-159995181281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d8bc98-02b0-4e3b-af1f-243892b69c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f4d350c-e36d-49bc-bd18-351263fb609b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2266fa-e0f4-4667-8157-d79f508bfffc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24165a62-1371-4389-8a59-5e27cf202105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41c67cc5-11be-44b4-9e50-edfb5d91e907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83da0170-8b8a-4231-94e4-00a56179b63c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27da0b72-0744-427d-8cc2-6dbc679bb095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afe421e-6eb8-48fb-9d2e-e1b22091b924",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b206f6a-ce88-4d98-ae8d-350e2769da7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5e87631-ccb8-42a7-8a65-ac479cfc2c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d59e150-c0bb-4a58-a785-8b6882a2c73e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d67c872-0b5c-4c48-9f25-ef50f4951106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9669a253-0f4d-4a14-9dfd-b548456fef9c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86c9436-4924-4723-bf35-199cb0a42e4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4054b46-9452-4fc2-b1cd-60068a9010f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1545e193-c0b9-4242-b4b5-a621a8ab914b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ef4e07-dddf-450c-bb87-1080729d9f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585db110-2a2b-41ef-99e7-ce5f55b2b957",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4606d27e-447c-4f3d-aaa5-13533ebcd0b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc025e19-5dcb-45c3-8f49-72845324a08f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d57ed0-2980-4a4c-be62-36996702ed19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6bb9784-e105-43f2-b943-55f4cb6b9546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b920ab6b-8fae-43cc-a2d5-66ee8247b7e9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1f9fba-5e0a-41ce-967a-e7ad4e656b63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2e5caa0-f828-4cb5-acae-69a2c05f7ce0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1d8494-a069-4474-84e7-1e7650073b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811c55cc-70fb-4f3a-8130-e27db885f6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874ef55b-ca57-4d82-807b-ae687f50b17b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3216a4d6-808f-4ab5-b962-db46669da3a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bbd1a59-f189-489f-9319-a9a8281fa617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "611619ea-300d-4fbe-a8a3-0566e90d0217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f0ec0b-b180-4c22-afed-cef9445b795e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c069b1-ef6c-4e69-81ac-7fa3ede575d8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a987c4bd-f1cb-44a4-add0-8246c63e9d5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a60fef0c-0242-4346-b40f-adef123ac15a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e33770-a292-4db5-942c-a62bfa420eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "309dea22-f96d-430d-adc9-4d91ce9c9909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6c1cb8-e3d1-4e65-8d77-d39bda9be61a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a82ee9-b11f-4fb0-b837-bb8f556b710f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6f0e3eb-87cf-46b7-9aa0-7b48ae711d2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3610b311-8ac2-4aa1-847c-05400310ee3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc3c2ac-e1c8-4b07-bf19-75ed893e661c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4f3a2b-abc3-43cb-bb15-cd0e0b4e0d12",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81208a1a-12e7-47e4-9ed8-b7a7a65caf56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "411fb2a9-d192-4e20-9719-0f852fe02ae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab56982-dc70-4dbc-b775-004f61601a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7172430-9337-4fcd-be6e-8b18b1242344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d34e2ae-5674-4e45-8421-8b0921ccf8e9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729cd216-5d24-4208-8668-64d9d7cadc41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9fd29c3-06fc-4633-8d94-4fac55f58364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd13cf9-8eb7-4c60-82d7-c3cc7c4ed294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e9c6a54-2d49-4e28-9aa5-efde514cf863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4fc75a-343e-4137-9fdc-8c14dc8e9ae1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811b7f1d-b505-492f-a1f2-a2d049a39438",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b116f79-a20a-4a16-bfc3-870ee73092dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3816de-08a6-4fd4-8216-d811d6dbb8b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644455df-6c50-4606-bdfe-fda1dabab316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be00b1c3-82bd-4be7-b1f2-3edccce34f09",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fe73c2-bfa4-4244-8420-83677f882cad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32d28674-8dc0-4e53-9a67-215423ec3d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29a95ed-64df-43c8-bf6a-c2486e3eaf7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a12ce0c-23f5-43aa-a5b6-494eaca4109d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e502ad-b18e-434c-842d-b91cd789b7df",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60423cac-5585-4d45-ab6c-99554b4b2292",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1666bc6-0def-437a-95b8-7b1126ff9603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0aa2ecf-45cf-4db7-b6c9-02ae307f40ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c648fb8-7dc5-4258-9f24-d0e89ff5a681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c385f3f-b29d-4285-90a6-92a5b026e96e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6698cd4e-43d8-4152-8a44-673d5b8f61df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db5abf84-ffcf-4428-807f-e74d0b0e5139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9572e3c-53c6-4b0a-99e8-ae21aff26fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076d19b5-be00-4df4-adf5-fb2653d18a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4712cac-24d2-4a4e-a607-255fa40cd829",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11b8c65-1405-4fcd-b11a-263e752cccce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc8a0dae-c00d-4d1c-b212-59fbe767354a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc8e8bd-d699-4d99-b116-de6e54ac3962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201422d6-bf5c-43b8-ae92-a53b35f4655c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd28b6b6-342e-4d5b-9c9e-008d25140dbe",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d35b56-045d-449f-b573-6075a111f839",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b947ca54-c134-4f69-ab4e-61735bae2859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22ecfec-02df-4a28-9065-936fe7c89691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f65a79-52f0-4580-8de5-3d2676512bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce53541-c8bc-45cd-8b48-a31e6f5168fa",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f76c2bd-ecab-4966-8da4-1cd4bc95b6df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d86cc15-f141-4198-a900-8fdbbb5bddaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7b3767-c338-4103-bf81-b1fcfa953774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8842f9-fa7f-4001-8ed7-f0c5a75a00db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c511e0-c667-4f7c-8323-25d016022583",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc03d75-6440-4f72-a879-ede28bdf8869",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edad2c5e-143a-4505-8445-58b0d59eb1e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2af1862-55ab-4db1-92a4-28e375422302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa3cc2a-55cf-45d2-b0ef-6566e99a5378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb194fc3-fcf8-47cd-a0d0-82e127dca7ee",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ffaf87-cd83-4b6e-a281-eb1ae2aa765b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f37b4b2a-5e3f-47d6-b0b8-1d2d62d455a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feca02e5-d006-4dbf-9e2a-bc56a549ec31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5b4f19-6d07-46f9-b319-9617b5f38f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b0f0b6-c394-406f-a383-9e8d13ed9b84",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d065d2-fb19-4250-a626-7ed8974fd9b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f12413c-d5df-4061-957e-21a88f344910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "129d7603-5d7f-403f-af68-a393b122f873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c5f1159-132e-4db4-851e-f686f982b12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b5f033-ea5a-416e-bd17-2cb8e8a1e7ab",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a25228-cc10-4383-a96c-4f465689c1cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11ef5123-d1e9-4bed-9e6c-522f56665ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c825fd73-abb3-4a3d-9cfe-7cb7158b68e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d94c462-007a-4add-a53b-81c3d09381ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf90d02-90c4-4286-80a0-e2442f2a93ab",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d8909e-743d-4b1f-96ee-2641a4ed1a30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3ed8d89-7014-46f5-8dd6-36f745d82ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23cf2970-61ae-478f-b877-e366477be01a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05a7b33-70f5-40a4-a0f3-d2bc7fc6ce19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a72f71-9a5c-4e17-98ef-5651f4196ef0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627cd6b4-c44f-4ce5-aba4-3a88417dac0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1be669f-4d2a-4558-a8e3-db5d0c77f5fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3650a3-e94e-425e-937c-9ce6cb7f8aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86359c8f-69e2-4266-9631-960fe1a5d630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac0bb97-930d-4054-b2bb-38c1164b1e21",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea05e13d-954f-4b12-a10d-5a164ee8be81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7966d778-6e17-43bb-a94c-99424411d7c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "607453ef-34d0-46f6-a5d4-aa993646c64f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716db00f-bd55-4bfb-8aca-de0045fe3ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92571a1d-da40-4473-84bf-a31b97c6e305",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fac5c9-beb7-4219-a9b2-60c56e7e50d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e6402e0-3398-45ef-b2df-cde4dd398fc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b57c61-8359-406a-aa4e-da2c419c4a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8faa7b3-9e86-49d9-b290-1d84dc7c0aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e0882f-6557-49c6-ad7e-0bf84bee5e48",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac83d213-c91c-42a8-a316-5fa348e2ac27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14a55ea3-3bef-44ec-b7ac-0905055d77db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "426d20d0-15eb-45bc-aa80-e11ade9d1eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeedc18b-405f-415e-8127-96a2c9b343cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92afdfa-25ec-43c7-a203-94bb58801bcb",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc5ebfc-1205-4d23-988e-a4cf71f909c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1487e29-fe23-4dbc-9777-2e26cae15aa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec78332a-97c0-4d92-9425-2b8f1c06e497",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce1b85d-667e-429d-bf35-a47b0a860828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8c03eb-6b74-45e8-a5aa-216a80e8577c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610af66f-8c88-41be-afd8-27ab79573181",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3651367d-973b-4770-a0ac-a7b634daf268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90a6b89-dfde-49e3-87a3-bafe4ed31cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af64d070-b02d-456d-bf64-77e92c4f0f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0edf5b-6b75-435c-a92c-0a11fcc6ee05",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e4320b-9064-480e-82ca-ac5375f19d11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c48fabf-1b26-4087-a27b-f0a160201a86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831c82f6-7f7d-496d-a232-f68a6e39483e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3991f95e-2e36-4ca3-8336-d3fd46a48cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4955178d-3c37-40d7-908e-f2e3464800de",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f7873c-4126-4605-b446-497a419cefaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ef6e324-488e-4423-bd30-8a6aba268264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46024c0a-b899-4e91-876f-b3b4677a826c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de549bdc-8f89-4b3f-a12a-01705c5c0e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63667d9d-4b5a-4374-9ade-6ad54dbad178",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbabbbfd-6807-4045-be77-ad54f0d423cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c864842b-9e05-40b4-aded-418ee8eea77b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6d2dce-5ab1-4bbe-b80d-590bd8537f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bba169b1-a9d3-4624-bee2-eda5e1840e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8a6738-1752-4fd8-a1ed-9dfb8ef230c0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d97e66-e0a3-42cc-b473-dd5f2afc7dea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ff0995f-041e-454b-a8ee-89a04904d575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f95e54-a9c4-4cd2-8fc7-89253a8027db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afdb35a5-83c8-4728-b4fe-efcc7bba4b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ada1b76-fc13-4d31-86b8-4481cc7c1306",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b93d18c-65e2-434d-94e1-4fa360e74bcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d35f9c1-ce95-469f-a0e1-da507b385df8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "111b1649-cf0a-4d56-81d1-8dda28ec589a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c964e3-b83e-4dc3-baf8-d3403df37b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8799bf3b-13ad-4663-8ebe-aedb7ee90644",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d3cc6b-f52d-4900-8bc2-481a11ecbcbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cdefcda-3f72-400c-a3ba-a1299d24d781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ffc761-8419-4d64-8522-291ea54de16e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3ba6d7-a20f-452a-83f3-655f1a210fd0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "395c2dda-fed1-452e-b63d-f5de8a672808",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47dd2d64-245e-44e1-bfa8-27d31bd2845b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "156fe734-06cc-4a54-a65e-093b1145a367",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "486bac49-9925-4449-a332-abf5b3ca69f5"
                    }
                  }
                ]
              },
              {
                "id": "520f2eb2-2874-47d2-859a-448b8daa5afa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "18ed6648-ec1a-4ae4-8f6c-1581ae6807f7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50b3b99-51fb-4ce1-bb53-79a1e36ba640",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "410148e5-553c-47c1-a900-82c42946e556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33aecb16-fee5-4800-81ff-26f8bd7f02e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edc671b0-6c97-4836-8f9d-2e97ed1dd698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07cc90d-9826-4d47-b9b6-3b4aabfbcedc",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934ec7fe-195d-4c70-8681-b4208f91d877",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0a9aaf27-6c94-4a82-888e-5cb4c76957c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c6fcb6-5fc9-4731-b056-e41da2b5f9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1cf7607c-1a62-4b00-95f6-121b4d43ca96"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26ab38d5-b472-409a-97df-439c74b3a2ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c55500b-9957-4775-a16e-5b1df19b21f4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f28369cf-126a-4b7a-9be7-e6a3b9e71a11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5eef6d77-0c41-46bb-9a19-bce85e5ce7b7"
                    }
                  }
                ]
              },
              {
                "id": "73e29dc0-4ef8-4623-8e31-91284b845c8d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4deef75c-a67a-43bb-861a-e6504f120ffd",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf1e341-c244-4ca8-ac0b-59c46ad25ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6661d87b-4e7c-453a-a2e9-295b5e17b4a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc98855-ffa3-4ec4-a446-0fb29d81f700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf33ca9c-fdec-4774-8c5c-2b048f2e54a2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c072c057-65d4-4c78-a9f9-2e52db7c7ae4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e7b1daf3-959a-4b35-9b3e-4856f3ce6a91",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd3707c2-2957-43ec-b213-00519a23c1cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "90129a2f-0db9-4f85-8a16-9be9b0199e7e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4cc276b0-0e48-4c5e-b1eb-0184bb2fa321",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6afc2e9e-e0d8-48b5-bbd0-e69e0f4fc317"
                    }
                  }
                ]
              },
              {
                "id": "b20f7321-b5c4-4797-a7cd-aa98c2f333da",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7def5877-6ac9-4028-9256-19305ec3f1b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1ad80c88-3e5e-4c86-9b29-f6639a09d674"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ad30526-c897-47fc-811d-d87fc2e5e968",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6ef6b01-88ed-4070-b3cd-62bfc434cac8"
                    }
                  }
                ]
              },
              {
                "id": "20091b46-2bb5-497c-be64-caea1d46b009",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a354ae5c-019e-4b31-bee1-070e3fa93493",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "abab30e7-b8fa-4dba-bbee-b934b30983a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3da7fbc2-ee0c-45a3-941d-3ccae847a06d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a35050d3-fd57-4249-b92d-a9c083e26ebe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24ddfd21-5954-4383-b211-2d144c2a2149",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1c98f1cd-38a9-40ad-a409-5830522be3ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee42b4c2-a4fb-49a7-aa30-d3c4a4c0dc87",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a125c908-ee3b-4caf-a745-70544ddaff4d"
            }
          }
        ]
      },
      {
        "id": "2b7f136f-1645-42fc-871d-b4c3a557f32e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8e7cc37c-35ef-47f3-888f-81f413b5706e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8489f72b-ac54-4934-af59-4d7ec282fabd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ce09d87-f5d4-44db-b906-530e0411ee6e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512b8fdb-0612-4303-9920-183306fb2757",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "46ff43f2-4bc4-402a-b61a-bf3348a86a92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e20608-b430-4f9b-b1a5-5bdcb6f5e38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6c16fc0-fc39-4e39-949f-cca79e4dd365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773610a6-b606-4b56-9dff-f0c41ebe1cd6",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5285a87c-69a5-491c-85f5-acbcafdd1346",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5eefb707-a9bd-4d86-bdc7-ebfd5aa3539a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ac1f3a-8b78-4a8d-a9ce-028e6d96f722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7dc6417e-f268-499d-9544-8e84862b1a3e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf63568e-373d-433c-b33c-d5f287e76767",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8389d1fc-8b15-41df-841b-123fe20a7f76"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c055ed5-53ba-423a-b044-c7c72757a5c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8624045-6994-4dbc-955f-cf14da7166f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d68e733-1eda-4815-9af5-c6a88ee5f945",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b5a6ba84-a602-4577-848d-e3b3877f90a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a8b5aef-18ab-4c4e-b946-6ceeb15eae2d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6fc85c61-6a80-4331-bc8f-df8859f089f0"
            }
          }
        ]
      },
      {
        "id": "0809e0fe-84d6-47af-811f-1ab47e8a5b02",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "868e81bd-ea4b-455b-ab56-7dda51e51eee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "469f3f1f-800c-4c81-9380-b925c28bedbc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "47add679-a215-4bff-b77a-151231d3d8b3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8189d2a-0cfd-4c88-a19c-f2a1cac4ebd4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "27a330e6-7c66-49b9-b76a-78e24e66af2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3825d4d8-f3c9-4083-abc5-439a68c3af17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97e55256-078a-4bee-b9b1-fd17e088cc3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ddcd0f-f387-4521-a258-e4f4184bb4ce",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c10b63e-0cdd-41d9-a383-661d58442269",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "742b9da3-7d5f-4ddf-9ce4-da6d76b5a178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ac5008-df0c-4416-8054-74bbaef6f134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97da8814-202b-40c0-b2bd-1dd4fd6f744c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c164014f-3f2a-47a0-8b5c-461163f38c52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f31ff6e4-e006-4970-bb4a-199bee19f310"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e75d9c89-1237-42ab-9cdf-c8428050fddf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c552027b-1e01-4afc-bd62-0df228e73096"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3da0a6c0-8596-4c07-a661-f164001f1838",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c5215a38-fb89-4d0f-b301-038dfa696e45"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef9ae1c8-92d4-4f51-9f1d-a9d0ace5420e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a06f1af2-0263-4798-94bc-13b43cd3cfbb"
            }
          }
        ]
      },
      {
        "id": "dd16c0f2-0d2e-4900-ba66-b664bcae7e8e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ea88b9e9-c65c-4736-a461-c2c9517ebc49",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0dbcbe97-05e9-4baa-a1e8-813966cb6f12",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c162e15-faeb-4414-9b19-e26ecc2faaa2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef550c4-3487-4a58-a08b-adfdf2aa7707",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "aab683a0-a598-4b17-adf2-6895148308a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50994438-7a12-46cc-b87a-31da6395d7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6775337c-07e9-4b5c-a913-ed556d79dbb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c89eb8-49a3-4030-8816-f07b8fc5eb5f",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b48abc-37d1-4b19-a969-2a816be8d865",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "65c5841d-2ff1-4ab0-be86-ce23e9dda852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d6d57f-f1aa-44b6-a5d8-c567f20fe3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98151797-701e-4cda-a20b-bc6b4d6471cf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68cca199-03c1-4b68-aec9-c2bcd6f669bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6517fe14-c7ce-4212-9bf1-adb13ca7f446"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0d91148-a0a0-415d-aa98-3a0af25bde06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c6722c3-20cb-4282-bd66-289ab2403bd3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebc9a498-2fec-46d0-953a-80ba018ec3ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "19de4779-b6c9-4f55-85ca-5832b8ebeea6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9b49c1c-af8e-4ee6-ac38-65bf97b996a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c30979b-602f-430b-889b-e953c5de6a93"
            }
          }
        ]
      },
      {
        "id": "7888126d-d2da-474d-b63b-48296f5e8d21",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2432f1a1-2cc1-48b7-8f63-2dc0b1ae2c35",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2b21c25-65e6-468a-9ae1-2ec74e581a5e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b7d07be7-96a7-40d6-9812-bb7c5c405c12",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53eef555-321a-4f5b-8cd2-4c0c1e7d0a58",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f43986a-f5e1-49e2-8e92-6ba9b60ad2f8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 13
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 520.0114942528736,
      "responseMin": 7,
      "responseMax": 4169,
      "responseSd": 427.60278487205176,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1670805838204,
      "completed": 1670805984459
    },
    "executions": [
      {
        "id": "e07e1dcf-c279-4097-8357-2c864258afd5",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3b1318c5-2571-4aa2-97f4-d04286d80717",
          "httpRequestId": "dd843fba-c979-4070-84c1-b2a2056efeb5"
        },
        "item": {
          "id": "e07e1dcf-c279-4097-8357-2c864258afd5",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "91427e59-699f-44bd-9404-658f512bfe1e",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "4a51f7ed-89b5-4c94-8a5a-872676473fc1",
        "cursor": {
          "ref": "a7d6372e-9d97-420b-bc88-ab9ca4f26844",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "34c62d7d-d7de-4afa-acf6-bf8aa824eaf7"
        },
        "item": {
          "id": "4a51f7ed-89b5-4c94-8a5a-872676473fc1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "87d81905-5e24-44fb-b2f9-78211374729d",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "529429ae-42ae-4880-b2c8-337bbe2a7139",
        "cursor": {
          "ref": "188fb90c-88cd-4ea7-84a5-6417d3e619b5",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "daae31ac-1dfe-48af-b2c5-641b4a7d7b36"
        },
        "item": {
          "id": "529429ae-42ae-4880-b2c8-337bbe2a7139",
          "name": "did_json"
        },
        "response": {
          "id": "21d37736-4a52-4512-b5b6-0c36fba509ad",
          "status": "OK",
          "code": 200,
          "responseTime": 693,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7472cdd1-b64d-4fd1-923a-ea0ffc1f5781",
        "cursor": {
          "ref": "d03739c3-3d14-4c27-9f43-5f34546d6983",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "11f115ff-8918-48ed-8dbb-bfa335c1f481"
        },
        "item": {
          "id": "7472cdd1-b64d-4fd1-923a-ea0ffc1f5781",
          "name": "did:invalid"
        },
        "response": {
          "id": "026cb925-813b-4c82-be97-e63677fcd023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 999,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7472cdd1-b64d-4fd1-923a-ea0ffc1f5781",
        "cursor": {
          "ref": "d03739c3-3d14-4c27-9f43-5f34546d6983",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "11f115ff-8918-48ed-8dbb-bfa335c1f481"
        },
        "item": {
          "id": "7472cdd1-b64d-4fd1-923a-ea0ffc1f5781",
          "name": "did:invalid"
        },
        "response": {
          "id": "026cb925-813b-4c82-be97-e63677fcd023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 999,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da94c05-c906-4e1b-a0c4-866495a0a9e6",
        "cursor": {
          "ref": "779044f4-3985-41fc-9297-6e5f461d27bc",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "857caa49-9dc1-45d1-8cb8-6a1456313808"
        },
        "item": {
          "id": "6da94c05-c906-4e1b-a0c4-866495a0a9e6",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0985ae4d-ab02-421b-91ea-9e4659663fe5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 703,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b108f7-4d64-4445-b4e2-9b80728d6636",
        "cursor": {
          "ref": "7c5c7f3f-aeaa-46b5-9751-b918660a7e44",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9a7816cb-1410-4f0a-9944-277990eddcf7"
        },
        "item": {
          "id": "d9b108f7-4d64-4445-b4e2-9b80728d6636",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "20fcf102-cc2b-4f5b-9a32-900a2c2600bd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 537,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e033c8-58e9-4de6-9d15-dfbe0e4a7b14",
        "cursor": {
          "ref": "ad99731c-4ab0-4e69-94e8-2a01587a7b67",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c1a4ae67-b59d-4cf9-a7ed-9232303252d3"
        },
        "item": {
          "id": "58e033c8-58e9-4de6-9d15-dfbe0e4a7b14",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d0259b22-f0a5-4791-a347-1f8fc598fba0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce201030-1f6c-46af-ab18-6d6ea03b6d20",
        "cursor": {
          "ref": "5c26ae3b-c62a-40c0-9d08-0670b60c7652",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ad26b33e-6096-4863-9715-283c8358bd1c"
        },
        "item": {
          "id": "ce201030-1f6c-46af-ab18-6d6ea03b6d20",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "2599a45e-defe-4c26-ba37-cd48d314245f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 519,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce201030-1f6c-46af-ab18-6d6ea03b6d20",
        "cursor": {
          "ref": "5c26ae3b-c62a-40c0-9d08-0670b60c7652",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ad26b33e-6096-4863-9715-283c8358bd1c"
        },
        "item": {
          "id": "ce201030-1f6c-46af-ab18-6d6ea03b6d20",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "2599a45e-defe-4c26-ba37-cd48d314245f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 519,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2342a9-012c-463c-ac9c-7495680faee7",
        "cursor": {
          "ref": "938d25cb-9ebc-41a7-a09e-2732ea636aaa",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "534f3da8-b2fc-4052-ba3e-1d74d7c23e78"
        },
        "item": {
          "id": "5c2342a9-012c-463c-ac9c-7495680faee7",
          "name": "identifiers"
        },
        "response": {
          "id": "f1c259b8-2821-46a9-ae4c-616fabb83df7",
          "status": "OK",
          "code": 200,
          "responseTime": 802,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4922e75e-860d-4134-949e-810444d55215",
        "cursor": {
          "ref": "b3dca36a-c90b-480a-9cb5-1d38c2b212d9",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "35040d2d-13ab-4847-8940-c5656df60817"
        },
        "item": {
          "id": "4922e75e-860d-4134-949e-810444d55215",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2e6aa674-eb3a-453a-90d4-81ec845426bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4922e75e-860d-4134-949e-810444d55215",
        "cursor": {
          "ref": "b3dca36a-c90b-480a-9cb5-1d38c2b212d9",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "35040d2d-13ab-4847-8940-c5656df60817"
        },
        "item": {
          "id": "4922e75e-860d-4134-949e-810444d55215",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2e6aa674-eb3a-453a-90d4-81ec845426bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a5ac4c-a03e-4a25-b857-62bc156f072e",
        "cursor": {
          "ref": "fdc297e2-ef94-46fe-a654-02b0f256a42f",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c70861d1-59c2-4e9b-bd65-485e25853a6c"
        },
        "item": {
          "id": "29a5ac4c-a03e-4a25-b857-62bc156f072e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a31d761e-c166-46b1-9c56-681050c8640f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a865833e-be7d-4bbe-92c5-c5eaa0e2bf6d",
        "cursor": {
          "ref": "b290fa54-9513-43cd-adc2-636f23eb590d",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e645c671-774e-47ef-9f80-940ee9cc8b94"
        },
        "item": {
          "id": "a865833e-be7d-4bbe-92c5-c5eaa0e2bf6d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5e1a1972-3f6a-4cae-9759-04a04b57bde9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159daa0e-f90b-4c78-b235-44f09457455a",
        "cursor": {
          "ref": "fe69f3d4-7e3b-4633-bdd6-1f69c011df0a",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "959f85d5-5a1e-4786-8696-ad7c92e25bf9"
        },
        "item": {
          "id": "159daa0e-f90b-4c78-b235-44f09457455a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "868c829f-bf55-464e-8eec-2239bbc3f996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f149c74-80e6-45e0-a02f-146c64607c8d",
        "cursor": {
          "ref": "c35b4aae-a529-4e95-ae3c-10ab16312b2d",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3c544248-b01f-4e4a-8161-2630e4411b9f"
        },
        "item": {
          "id": "3f149c74-80e6-45e0-a02f-146c64607c8d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0ca58788-5c4e-47b2-8644-a05913d44d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534b1420-274f-4e14-8c4a-f7f625630ee0",
        "cursor": {
          "ref": "b097e07c-9e27-4573-be47-05158d95599c",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "12c70a46-0e21-491f-8675-62bdcb8d1447"
        },
        "item": {
          "id": "534b1420-274f-4e14-8c4a-f7f625630ee0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1e47f58c-02d3-4482-aa8d-a1eda58bc345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 874,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0555f0-2bad-4847-8268-fe59635c1739",
        "cursor": {
          "ref": "6de31271-1741-442d-93b0-b8bcbdb63ce5",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "50d7e8a4-3335-4587-b3c3-7c867a87a0b9"
        },
        "item": {
          "id": "ac0555f0-2bad-4847-8268-fe59635c1739",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7311bfeb-c6fa-4c4f-a180-b3b1edc39c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f7a633-cb01-4b12-bd52-2bc5dd718049",
        "cursor": {
          "ref": "522f32cc-ce52-4d77-9e07-2c4fd3603b15",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "726f9379-b852-4142-839a-8dc9656578ce"
        },
        "item": {
          "id": "26f7a633-cb01-4b12-bd52-2bc5dd718049",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ed4f9028-bb38-4767-bd26-9cd2009a3541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021e4eea-ae03-45a0-bc4c-3e9cf842fac4",
        "cursor": {
          "ref": "32d60b65-40ea-4344-afd4-94ab39392d1d",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "23c243f3-df4d-4dd7-996c-2877d5261423"
        },
        "item": {
          "id": "021e4eea-ae03-45a0-bc4c-3e9cf842fac4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "39f2f649-d647-41af-b101-9f1c3497b20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6c789f-7de1-4888-83ee-2a46f0164394",
        "cursor": {
          "ref": "4cba50a3-1bb4-49dd-8378-fc74bf792a2b",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3b2f6439-c0fb-4731-ad1e-97d7ff575fcc"
        },
        "item": {
          "id": "4e6c789f-7de1-4888-83ee-2a46f0164394",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "41e27e8b-298a-4ac5-bd1d-304480bdc546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148f80a0-a83d-41ac-9174-4bbabe9e29e6",
        "cursor": {
          "ref": "d5cf501b-b2ba-48c6-ac44-a1106d97082b",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f920a7e7-1242-48ca-9582-2bc003e76878"
        },
        "item": {
          "id": "148f80a0-a83d-41ac-9174-4bbabe9e29e6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2f4656b5-67a4-4dac-963b-cac39e81ea9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74070ce-5b20-4df1-ace6-0b7deb7f4ad5",
        "cursor": {
          "ref": "ac37a8dd-7b16-4cf5-b566-390427e463b0",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9a89d7bb-428a-4ed1-9cd0-8b0d2d36b940"
        },
        "item": {
          "id": "d74070ce-5b20-4df1-ace6-0b7deb7f4ad5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "792248fe-c96e-46cc-b657-6f31e153ca3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d026de9-29c2-486b-a1b4-45480ce3ecba",
        "cursor": {
          "ref": "412feec8-36a0-49dc-b24d-b16fcbef3820",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "201b79c3-74b6-4949-ad17-f967503fc250"
        },
        "item": {
          "id": "3d026de9-29c2-486b-a1b4-45480ce3ecba",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d0ddadb4-969d-46a5-a711-303b1b787d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6801620-3f75-474c-8e66-320e28d69bd1",
        "cursor": {
          "ref": "145d5b19-b092-4806-b159-a815c3b062a7",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "19e692bb-3813-4f5b-b634-3ee595af207e"
        },
        "item": {
          "id": "d6801620-3f75-474c-8e66-320e28d69bd1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "63d01b4d-48d5-4831-b87e-447ebe586183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018fea5c-8d40-4b81-a36c-a6e7533410aa",
        "cursor": {
          "ref": "06e5067b-7d0b-4c33-b7b8-8b98aeeda35d",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3a4bc8cc-706c-489a-afe5-fb93866c1d72"
        },
        "item": {
          "id": "018fea5c-8d40-4b81-a36c-a6e7533410aa",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b808d2f1-e11a-40a8-b66f-de60394e8ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cae089d-5e32-42c9-b660-e871bb9f3718",
        "cursor": {
          "ref": "e37a1336-77a7-4d4a-b810-1df0f470aa78",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6ffe20a8-f1cf-41a7-8d00-52eeec3970eb"
        },
        "item": {
          "id": "3cae089d-5e32-42c9-b660-e871bb9f3718",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "de190ca5-577b-49c8-94e2-cc0a88a517b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebec3cc-15d6-4fe7-a74a-049d63e72040",
        "cursor": {
          "ref": "0de5c923-8ac2-422e-8ef0-8466a1489423",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d3e342b4-5401-447f-b71f-8c2d0d213530"
        },
        "item": {
          "id": "7ebec3cc-15d6-4fe7-a74a-049d63e72040",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9800bc19-c353-427b-ab9c-f281ca84876c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9f2967-d8e1-4913-b4bc-5a868d21063a",
        "cursor": {
          "ref": "a8d06e79-22bc-4804-b970-96f2d48b45f3",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0ed56bb6-3672-4834-a083-5587927e486a"
        },
        "item": {
          "id": "bf9f2967-d8e1-4913-b4bc-5a868d21063a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "785ca9cb-4724-4bc4-b37a-1d6b09a6bae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a0d8a3-accb-4246-b796-5e78f3658c8b",
        "cursor": {
          "ref": "06ad8460-3284-4b5f-870c-b424fb48b28c",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ee9805ac-c799-4dda-b655-c2d11439b1c2"
        },
        "item": {
          "id": "f2a0d8a3-accb-4246-b796-5e78f3658c8b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e9d91401-0ef2-4e2b-9813-91ad1aac80ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599ca4b0-0f3f-48b2-941c-e0e15452f6af",
        "cursor": {
          "ref": "398a0cb3-06ab-45f0-9d00-94722694bead",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "43a17ddf-c3dd-4d57-b78b-bcf5ff7e7d11"
        },
        "item": {
          "id": "599ca4b0-0f3f-48b2-941c-e0e15452f6af",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ce29791f-6ef5-4167-8d38-f2baaff1ad72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03edfe2f-4289-4f13-9745-1696c697f799",
        "cursor": {
          "ref": "00bf8f02-9f7f-4bbc-a04f-43c0daf4d1fd",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4d455354-7187-4340-a3b1-d2341a98a562"
        },
        "item": {
          "id": "03edfe2f-4289-4f13-9745-1696c697f799",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c209c5af-dd26-45d0-8c50-74ca87442ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b200fe-d078-455d-b431-84eac48a50c6",
        "cursor": {
          "ref": "b6f051f4-642f-453e-9133-029517ba8afb",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6afbd954-8668-4d50-8b68-13df6e16eb56"
        },
        "item": {
          "id": "69b200fe-d078-455d-b431-84eac48a50c6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5ad0c482-ae08-48bf-94f2-fd9001b4b321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77d71d8-fb69-4849-9dd0-e60a747c8493",
        "cursor": {
          "ref": "02974654-7b5f-44a7-8a24-00fb3c2b8fd9",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "00a10d61-7ef8-4bed-b659-ad59072d2060"
        },
        "item": {
          "id": "c77d71d8-fb69-4849-9dd0-e60a747c8493",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4de4dbe6-3a1c-4f48-ae01-4d74e6fecaa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab925e10-692a-41e2-a21f-76fd24c06f8f",
        "cursor": {
          "ref": "8db0f1c5-b8b0-4e4a-a2ec-6ae488ab825d",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3f62e69c-6a6c-4472-aaf5-1d11cd7e3bf0"
        },
        "item": {
          "id": "ab925e10-692a-41e2-a21f-76fd24c06f8f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7898be29-a78c-47bb-93e7-7df8b1443aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304fcedd-f9dc-41ae-a026-d8658ba14ae4",
        "cursor": {
          "ref": "31c25af3-eddc-4419-8553-52ff73f2f6cd",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0ebc0b0c-316f-4169-9f24-f34ea757a422"
        },
        "item": {
          "id": "304fcedd-f9dc-41ae-a026-d8658ba14ae4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "52c600ac-21fd-483a-a95d-f1b42c152d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12b13d9-bb46-44a6-b38a-1d73671156bf",
        "cursor": {
          "ref": "e13cfec1-ad83-4f4f-9318-bf10c0cd63d7",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ab95ebc9-ba12-4de0-aa64-8822b69c8761"
        },
        "item": {
          "id": "b12b13d9-bb46-44a6-b38a-1d73671156bf",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "30cdfce2-1a0a-49e1-b90e-5f297e17ba1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a209a6b1-a694-41e4-808a-eb90a9fac243",
        "cursor": {
          "ref": "80062a4c-8f32-4c65-be0c-f45479fabfba",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8e20cd1e-2e6e-41bc-8f0e-954abb3b8b5c"
        },
        "item": {
          "id": "a209a6b1-a694-41e4-808a-eb90a9fac243",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "19d1f466-4775-4bbf-8c38-15619d87677d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0505fd-e12f-4294-9315-3c451e82047a",
        "cursor": {
          "ref": "f926a8a5-788c-4e29-bb66-49c34cff89aa",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "422cdc90-20a7-4fc4-8768-1b6378ab100c"
        },
        "item": {
          "id": "3d0505fd-e12f-4294-9315-3c451e82047a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e56523b2-20d6-4da8-8eab-4a4801146f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c718aa79-3f70-4455-94cc-2bfd71d634b5",
        "cursor": {
          "ref": "fbd3e33a-d188-4622-9fe4-8005e7857444",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3c95f929-04bb-4f9d-af4c-d7e718ec33a1"
        },
        "item": {
          "id": "c718aa79-3f70-4455-94cc-2bfd71d634b5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f61320b5-2602-46bf-baff-aacd468d08d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf54c349-c0b0-475c-86be-f7a1849f8ce1",
        "cursor": {
          "ref": "7896ed00-79e7-40b2-a08d-87a02a2f127a",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5dbe9ecb-bc25-438b-a06d-fdc7f2c7ac7b"
        },
        "item": {
          "id": "bf54c349-c0b0-475c-86be-f7a1849f8ce1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "46065cc7-cb27-418d-90e7-47ce059a79c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cbf65a-7277-401e-aa46-f1c098422092",
        "cursor": {
          "ref": "0f52d409-8a06-4743-a78a-5b0fcf55f068",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e9b66fc2-5a2a-492c-bd6f-a85ebeb9807e"
        },
        "item": {
          "id": "22cbf65a-7277-401e-aa46-f1c098422092",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4c5c175c-33db-4845-815b-cee2e366bc5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fa3b8a-e9e9-4912-ab55-4a1d2b71b97c",
        "cursor": {
          "ref": "74ffcf89-57df-4713-aae1-4482c096ec13",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5a9508c1-927c-4011-85a8-37e38bbe68f8"
        },
        "item": {
          "id": "06fa3b8a-e9e9-4912-ab55-4a1d2b71b97c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b8783d7b-6afe-4b1e-beb3-30af2707dad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c94018d-e458-4028-a75f-ccddabbc6d50",
        "cursor": {
          "ref": "a2d87f3f-f04a-48ae-bbfa-272ba0183463",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a290704c-ed8c-4b9a-9d1b-3d66ca8acbae"
        },
        "item": {
          "id": "4c94018d-e458-4028-a75f-ccddabbc6d50",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "754713fc-7e12-4767-b368-c8c5ed13e045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bfd497-d1eb-4772-b69e-c2be0df5b6fa",
        "cursor": {
          "ref": "77c35160-3c01-4ef1-a461-f4917aca98ad",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "62101005-6e96-41e6-aebd-5ab00484f898"
        },
        "item": {
          "id": "d8bfd497-d1eb-4772-b69e-c2be0df5b6fa",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0abad099-5da0-41de-8503-76a42cad2882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c054996-3a8b-4468-ab17-d5a22c3ced0a",
        "cursor": {
          "ref": "a2e8b8bb-5a88-4363-9c33-ea2f39f42bfb",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fb8f5d96-54b0-4f84-bb20-dab8a37ccec8"
        },
        "item": {
          "id": "3c054996-3a8b-4468-ab17-d5a22c3ced0a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8f18d48f-55f5-4c5c-ac8f-90f9c9c3afb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09dc3345-a871-4bfd-bbf9-6013dad3a745",
        "cursor": {
          "ref": "7043f90b-a3b0-42ac-b0bb-31dc9946099d",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "83bbc6f7-b3c0-407a-806a-cc44a97aab54"
        },
        "item": {
          "id": "09dc3345-a871-4bfd-bbf9-6013dad3a745",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f5f962af-09fb-4982-939c-50b6b63f660e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 588,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c835afe1-785b-40b2-90bf-8dd49cc0ca24",
        "cursor": {
          "ref": "776920a0-8055-4023-a4f7-e0241969eec2",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c2936a45-e977-499d-8df7-ed0768a74614"
        },
        "item": {
          "id": "c835afe1-785b-40b2-90bf-8dd49cc0ca24",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "87cecfca-405f-445f-b497-b128a8c4b9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d368cf3-eee5-42ba-a9de-75f4bc9b5dbd",
        "cursor": {
          "ref": "8fe08a54-457f-405b-b19a-85732a27404b",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "16f3ba73-4144-473b-a2e0-43f4f6bcd2d8"
        },
        "item": {
          "id": "3d368cf3-eee5-42ba-a9de-75f4bc9b5dbd",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5133dbe0-7f27-427d-8975-d78d5fbb5b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2329a1-e731-4d63-9acc-55ef0ec670ab",
        "cursor": {
          "ref": "b2736eda-208a-44a9-8122-f89320118351",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c6cef2be-205e-452e-a955-3542d3a14bd4"
        },
        "item": {
          "id": "2a2329a1-e731-4d63-9acc-55ef0ec670ab",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d4ed2e1b-9a00-4758-9ee1-c8f920e6a758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f954af2-d8cd-4c5f-9c7d-8dad06875cbe",
        "cursor": {
          "ref": "be3eb050-2813-45d7-a1c6-8602f8e3ffcc",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e80c6b7e-5657-43bf-98e6-1783f27b1f3b"
        },
        "item": {
          "id": "9f954af2-d8cd-4c5f-9c7d-8dad06875cbe",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f72c94a4-8e96-4633-bc6c-2c6fb4bf35af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e2010a-8fd6-4bed-a46d-d02330494a34",
        "cursor": {
          "ref": "7c802fbb-cf90-471b-9c88-5d8f3a17b7f3",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9f33ce01-2768-4bdb-8b12-13e6df39cba5"
        },
        "item": {
          "id": "b0e2010a-8fd6-4bed-a46d-d02330494a34",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "95e10ed9-58fa-403a-839f-0921153fff50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd27187-2827-4879-a93e-218039f3cc91",
        "cursor": {
          "ref": "34284e8b-7e5b-45eb-9c15-9333fec98e54",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1b234aba-31cb-4834-8059-9a7b6b6655e4"
        },
        "item": {
          "id": "fcd27187-2827-4879-a93e-218039f3cc91",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9ca9e2f6-9082-4bb9-9976-89f1c2d32ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e25f2e-ecff-4e49-8c38-de8a49fef208",
        "cursor": {
          "ref": "27b2ff37-8d16-4af9-99f7-3b3b5c2f02ad",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4814eaa5-f641-4a07-92fa-299714998c9d"
        },
        "item": {
          "id": "98e25f2e-ecff-4e49-8c38-de8a49fef208",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7008e57f-aff3-4f2b-aa9f-e9f0ac6b9292",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 564,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d82513-f30a-477a-9045-f718643dca51",
        "cursor": {
          "ref": "34a94140-07af-47b7-93cb-187b205a452b",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f859a784-2e64-4081-8950-c8d1609c0a61"
        },
        "item": {
          "id": "d0d82513-f30a-477a-9045-f718643dca51",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9608a3fc-55e2-4096-95e4-ba22fa592515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2807160c-6c10-49ea-adb1-80a877719de9",
        "cursor": {
          "ref": "83e2ba5b-adb5-4c79-8575-94bfdda7ec05",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "553c5842-a354-455a-82c7-127c9c5d7959"
        },
        "item": {
          "id": "2807160c-6c10-49ea-adb1-80a877719de9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f988bf94-320d-42ba-ae34-561cc6885d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0147e80-fd3d-4669-a324-d56bf271a846",
        "cursor": {
          "ref": "3461cf3d-9683-477a-85f7-3b8be7ae384f",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "df1e58d5-eff0-4cdd-9077-ab3039bff6c2"
        },
        "item": {
          "id": "a0147e80-fd3d-4669-a324-d56bf271a846",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ebcb57e1-f430-42b0-b201-ebf587935ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6bdcb71-869d-46a0-a9e9-1a739b55c510",
        "cursor": {
          "ref": "63e1d551-64e3-4184-89f0-4d04edba6eb9",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "922115a3-2538-4e47-a956-d45beb75d767"
        },
        "item": {
          "id": "c6bdcb71-869d-46a0-a9e9-1a739b55c510",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f8b3ce55-9d8e-46ce-a893-45d0297f7bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4e2af1-5b61-4c64-a282-b4947f9b664e",
        "cursor": {
          "ref": "08da9df7-f4c3-4cfd-949b-f9410ddf77fe",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5d730248-7b36-49e4-83c1-a7737bcb6e01"
        },
        "item": {
          "id": "ee4e2af1-5b61-4c64-a282-b4947f9b664e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "35779bc2-10bc-4d7d-82fb-060bcfa35a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c643f9e5-09dd-428a-b336-7ff67c755862",
        "cursor": {
          "ref": "b4941902-c550-4f89-a49f-067140ff0fc6",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f6d5c8bb-7fbd-40a2-be76-d0713452869e"
        },
        "item": {
          "id": "c643f9e5-09dd-428a-b336-7ff67c755862",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6404ab73-18e1-40d6-a611-899d9f4f9784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeaec884-797d-4ef8-9266-ebe916c5bfdd",
        "cursor": {
          "ref": "ad3025af-af3d-44d9-a23c-0d2a03b97724",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7bd0031c-432c-4a40-a0ca-812db327b622"
        },
        "item": {
          "id": "eeaec884-797d-4ef8-9266-ebe916c5bfdd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1089ac84-4856-4de3-ab2c-acf9edf6b65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551be7cb-3c02-4139-bc03-b14e82bfbee2",
        "cursor": {
          "ref": "59a24fa4-3532-468e-ba53-24488b156715",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "152e24d0-a95a-48ce-b8b3-2a247f3f7dd7"
        },
        "item": {
          "id": "551be7cb-3c02-4139-bc03-b14e82bfbee2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "31402456-5552-4c5b-b823-3dc51e1cd1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6264e8a5-4578-4bd5-804f-2094341146f5",
        "cursor": {
          "ref": "115557c0-79b0-48c7-af50-a2e78965efa1",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3f52e9d9-42f1-4376-b17f-dbfbb14c1265"
        },
        "item": {
          "id": "6264e8a5-4578-4bd5-804f-2094341146f5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "97f66cac-a579-4f4a-8f43-05c80674b70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd6e9b7-9bbe-428d-a918-c5473080aa73",
        "cursor": {
          "ref": "0147c949-825b-4472-be66-8e1aeb47f980",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ebdd8427-3598-4276-ac52-a5af09228390"
        },
        "item": {
          "id": "8dd6e9b7-9bbe-428d-a918-c5473080aa73",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d3315afc-a597-4f13-88c4-77e8e814be16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46fcea1-f02e-408b-b6ae-b4a7acceaaa4",
        "cursor": {
          "ref": "2ab10b08-c140-4333-9f96-475a23c2228e",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "883a02ef-edbe-4bf4-ac69-4abd06fbef3a"
        },
        "item": {
          "id": "b46fcea1-f02e-408b-b6ae-b4a7acceaaa4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "63b8dac3-6138-48f0-897c-9f9e63ee1c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfc4d7d-2456-4ff4-bf10-21c8dabbc0c5",
        "cursor": {
          "ref": "0493381e-8981-43ed-b08d-ac149472df72",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "54eefd02-c42b-45f9-98d7-4c495bb69f7e"
        },
        "item": {
          "id": "edfc4d7d-2456-4ff4-bf10-21c8dabbc0c5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "11fcca43-15d0-4bd0-8bcd-2472e91ac95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1196c033-fd99-4e2a-9b9f-c95f31af2a0a",
        "cursor": {
          "ref": "76569d72-c532-4d4d-8921-4869e9586ade",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0a79e347-6238-4f03-97c8-c3a6cb26d282"
        },
        "item": {
          "id": "1196c033-fd99-4e2a-9b9f-c95f31af2a0a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e155ae7f-1003-453a-b31d-6d0f0e4646ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc549e89-e948-448f-bbe4-cf674c0b143c",
        "cursor": {
          "ref": "9156fda1-92ea-4a69-93cd-34ade4e08598",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3562d566-0878-4ec4-9a12-f3403a7ed99b"
        },
        "item": {
          "id": "fc549e89-e948-448f-bbe4-cf674c0b143c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "75f72cc9-ae3d-42ac-ae95-04ae0a6b3580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca048094-a072-4ab5-be1c-55ecf5943b30",
        "cursor": {
          "ref": "85308107-433c-41e5-bb7b-52dcb7b5095c",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "956ebc3e-854f-4152-b187-2491d7019758"
        },
        "item": {
          "id": "ca048094-a072-4ab5-be1c-55ecf5943b30",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "81348d2c-e0a4-4083-a532-61ced5e572ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97a46f4-7a3b-44c3-8f95-9b22e5b06f6c",
        "cursor": {
          "ref": "eae58642-5c62-4c9f-a15f-d78df2a6185b",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cb1e495d-bdbf-4a1d-940b-75d772a9aa08"
        },
        "item": {
          "id": "d97a46f4-7a3b-44c3-8f95-9b22e5b06f6c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d4d6020c-974a-4b41-83ca-d533e4ecb752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11dff60b-7ff6-4f7f-951e-04ce68bd3f06",
        "cursor": {
          "ref": "82c69e55-d05a-4cbc-9798-85fabd09e768",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "231f1cab-0606-4f45-8955-30b1e327d434"
        },
        "item": {
          "id": "11dff60b-7ff6-4f7f-951e-04ce68bd3f06",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4a52095f-35e4-4e3a-a4bd-9a0a5ddeabe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02bb41a-7034-44e6-b5ef-00f3d4269d90",
        "cursor": {
          "ref": "b2a2c064-0799-4f0e-a69f-dc35439962ad",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c3677e63-6a85-4f3e-91e3-3fb8677d58ab"
        },
        "item": {
          "id": "e02bb41a-7034-44e6-b5ef-00f3d4269d90",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ba518edd-e718-48c0-b033-40ceab33cbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91277825-3b2d-4994-a7bb-e84523409ab8",
        "cursor": {
          "ref": "432dbd1c-26af-4e71-bd6e-98f1f48d28ec",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d9d3dee6-50e2-49c5-ac00-ab3948af0182"
        },
        "item": {
          "id": "91277825-3b2d-4994-a7bb-e84523409ab8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "cd1bdc7f-d736-45b6-a688-5a9db7f2fcad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86ee835-6642-4118-b956-11f63e7ded7c",
        "cursor": {
          "ref": "44c091ba-ecdd-4c80-8004-7d8bff497426",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "99e39abc-1fe5-4c20-8060-c64a71a8a56b"
        },
        "item": {
          "id": "f86ee835-6642-4118-b956-11f63e7ded7c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "05346c99-0f67-4421-bb96-b7e28392d61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffca4bbe-b80a-496c-93d8-88a8d57680d3",
        "cursor": {
          "ref": "2680ab18-f8c3-429a-9c24-7dfe08ad8f0b",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "db22c080-eef9-40b9-bff7-9a44f2bf636f"
        },
        "item": {
          "id": "ffca4bbe-b80a-496c-93d8-88a8d57680d3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7ccb6204-9793-4650-a400-49e8fa95e7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe23318-78d8-465f-a1ac-5a10c8610055",
        "cursor": {
          "ref": "84563dd2-61fa-44ad-9d17-304e16b7aea2",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c445201f-a992-40ba-b869-04995b2bf272"
        },
        "item": {
          "id": "dbe23318-78d8-465f-a1ac-5a10c8610055",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f759ba9d-a297-4edf-9372-a3a76c2d93f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0df5333-7535-4603-baf0-aef248214d35",
        "cursor": {
          "ref": "71550ebd-434d-458a-8688-7b39c1e99587",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f4cb7a1c-46f5-4d7a-89f8-e6894dec36db"
        },
        "item": {
          "id": "a0df5333-7535-4603-baf0-aef248214d35",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "cad0ca35-4af2-464a-aae1-a860c13a5a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed70db95-91a1-49e3-8f5c-66d00bfff34d",
        "cursor": {
          "ref": "cdea92e6-f541-4f19-a88b-6e1b845855a4",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "60127dc9-9e12-46f3-bc5b-78cf8942ecd5"
        },
        "item": {
          "id": "ed70db95-91a1-49e3-8f5c-66d00bfff34d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1893856a-bd4f-4588-a78a-7f0948d8a4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eab4321-7c7f-4704-8d18-871602f67e43",
        "cursor": {
          "ref": "eb10edad-dcd1-46b1-b761-ff5105926ad6",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ab9a7951-7263-4edf-a8dd-6dd6356c10b7"
        },
        "item": {
          "id": "9eab4321-7c7f-4704-8d18-871602f67e43",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d47d680d-4414-4067-b098-278a5db2f9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b64b1e-1e98-447c-af89-793722997bd2",
        "cursor": {
          "ref": "5805636f-4b60-4e15-8680-40e67353510f",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "520a840c-b438-46db-b0c5-4572c8e15ec3"
        },
        "item": {
          "id": "56b64b1e-1e98-447c-af89-793722997bd2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f0f63460-b960-4678-9d89-acb02e4c224f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4bea32e-37bb-4d9a-b087-bff5ef48908b",
        "cursor": {
          "ref": "e54cec49-68de-4d30-9115-ce4c82ea1bfd",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "dfca76ea-0df5-4012-87b7-5aec3bd4ddf4"
        },
        "item": {
          "id": "c4bea32e-37bb-4d9a-b087-bff5ef48908b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "13b74aa5-475e-4dc6-8b89-daa5c2196379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044c332c-e4f7-4d7b-ad90-af54caeb6a46",
        "cursor": {
          "ref": "00220ce4-64e1-4546-9961-bfcbc7a49db0",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "94195b2d-bf4b-4ebc-9f02-47886acda6cb"
        },
        "item": {
          "id": "044c332c-e4f7-4d7b-ad90-af54caeb6a46",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "50970edf-78b9-486b-b80d-04c247cda0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 734
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f2c7b7-d73c-4fc6-937b-ba22563ad741",
        "cursor": {
          "ref": "f8ee35fe-a6ce-4b92-bc2c-a99fc027bcb6",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4863e556-001e-4a81-8fd1-c306a115e03d"
        },
        "item": {
          "id": "f0f2c7b7-d73c-4fc6-937b-ba22563ad741",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "251f808d-0b0b-4c78-8a4e-deb16d93b2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 736
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad2e797-cd51-4802-805f-69e462dfae92",
        "cursor": {
          "ref": "20459e52-f7c4-4d10-9e45-8e52758d8ffa",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "951ce9d5-1d53-46d0-9ace-fd6a8ec9c000"
        },
        "item": {
          "id": "9ad2e797-cd51-4802-805f-69e462dfae92",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c16c7015-792a-4afc-8ba3-c6e2e94db802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 734
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5726325-96cf-4e99-9dcb-d9929f5da3be",
        "cursor": {
          "ref": "b9ad7226-6ff1-4b92-b4f9-d85d0ee8776d",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6028be4a-b5bc-40e5-8669-c7ee6fbfc377"
        },
        "item": {
          "id": "f5726325-96cf-4e99-9dcb-d9929f5da3be",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d0931f5d-1414-44e4-909b-d5d882edcf41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0e5c75-1009-4b3a-8b4c-3c5118aa7331",
        "cursor": {
          "ref": "d2d657d6-4892-488e-a45b-330ccf5a07fb",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "142e0223-0492-4ba8-bc1b-479217cf8318"
        },
        "item": {
          "id": "dc0e5c75-1009-4b3a-8b4c-3c5118aa7331",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a210c531-d309-4741-944e-327d4be9cb71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31888d2c-91ce-41e9-8b5c-d314c8a1de88",
        "cursor": {
          "ref": "18dc95aa-1c6a-49b3-80ae-6087078b2cf5",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "90697e1c-d67e-4a4e-a574-3888acbb07ac"
        },
        "item": {
          "id": "31888d2c-91ce-41e9-8b5c-d314c8a1de88",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8293677a-df02-4f58-be77-219b6b335fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed97a36-62eb-4972-a10f-6ad6260878ce",
        "cursor": {
          "ref": "bc952458-eafe-4c1d-a585-f5ed338bea47",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4eb69218-3a9d-4066-b587-4dbd5935384a"
        },
        "item": {
          "id": "6ed97a36-62eb-4972-a10f-6ad6260878ce",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5626c009-e59a-4651-94fc-588ea33917a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e0844d-1868-449d-abbb-63261dbeacaa",
        "cursor": {
          "ref": "68294597-c6fe-4763-aaef-2b97d3d12592",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1acaf241-b850-4680-9b3d-39ba2f94d07e"
        },
        "item": {
          "id": "d5e0844d-1868-449d-abbb-63261dbeacaa",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "183a3cd1-5e9a-474a-a508-d56e61a1c451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f09c07-5bf0-461d-bcf3-71111890c9e4",
        "cursor": {
          "ref": "b9f9bc37-66a1-4932-abc6-e4939f94a0a4",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "35743791-5d0d-4862-b91f-ba6f8260314c"
        },
        "item": {
          "id": "c7f09c07-5bf0-461d-bcf3-71111890c9e4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "75f1ed40-345f-4d15-97e3-de97a3ea277e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca0fd82-3c11-42e0-a2fc-a07836cf8556",
        "cursor": {
          "ref": "3a8b075e-70f1-4de7-88df-8afcc7a7fc8d",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "074a1195-ded9-40d3-b647-62f0ac069454"
        },
        "item": {
          "id": "7ca0fd82-3c11-42e0-a2fc-a07836cf8556",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ab791da1-e8eb-4143-a739-9dc0cdd68353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3035b94d-5e3f-48e0-879a-b3e475a8961f",
        "cursor": {
          "ref": "9043fcaf-6567-4e79-acaa-5d0c9f091166",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ff95b9ef-1290-4959-a080-c5c45ee5ce4e"
        },
        "item": {
          "id": "3035b94d-5e3f-48e0-879a-b3e475a8961f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4992c673-2e7e-49ec-82a3-633e4deefcbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4accb701-462f-451e-be0e-4857e3b26150",
        "cursor": {
          "ref": "980c6fec-8499-49c3-8fa0-bf1a4e080c5b",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bbe830d5-a765-42db-b3d1-9fa69ca78cc7"
        },
        "item": {
          "id": "4accb701-462f-451e-be0e-4857e3b26150",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "33f11a5b-17d9-4a3c-b947-2daa277b97ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c998a436-1f8f-40e9-b47e-941ef44554b7",
        "cursor": {
          "ref": "7b8f6eba-2e5b-4f4f-97da-d8da2795a15c",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ce0fbf8a-1ffe-4793-b80e-ee1bcc2a3f4e"
        },
        "item": {
          "id": "c998a436-1f8f-40e9-b47e-941ef44554b7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "19299c46-c2b0-4686-bc14-8ae966bc3031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751dcd77-abf8-4884-a740-c49751d4fcb8",
        "cursor": {
          "ref": "b41200f1-606a-4245-938a-c5f5e130b811",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4145b69c-6e7b-48d4-af76-08d955297a98"
        },
        "item": {
          "id": "751dcd77-abf8-4884-a740-c49751d4fcb8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7b6d79f7-0ed3-4647-b85e-e46726ede319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d6a6eb-1493-482e-a6f4-29b583dd297f",
        "cursor": {
          "ref": "22402ffa-0a4b-41d0-8d92-c1ed35824ae3",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "af35cca8-586c-4268-a4c5-76f2ea2b98ef"
        },
        "item": {
          "id": "79d6a6eb-1493-482e-a6f4-29b583dd297f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e5ea2d44-11c5-46f4-82b3-223528c651fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02d8397-b842-4191-95e1-bd8aecd0e370",
        "cursor": {
          "ref": "771b5c1f-8733-4401-8d91-6dfe89b7c083",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "12b8ad31-fc9f-4480-93f1-14d2ed4a3197"
        },
        "item": {
          "id": "a02d8397-b842-4191-95e1-bd8aecd0e370",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "800e245b-2756-44be-9cd0-c92f83512e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a9da1a-6547-46c0-b624-c90866acc08f",
        "cursor": {
          "ref": "fe88d202-f0c2-4b97-959b-01806ce7b00a",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ea4f8137-380d-4216-b592-d542e219cbf5"
        },
        "item": {
          "id": "00a9da1a-6547-46c0-b624-c90866acc08f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ac6a51eb-137a-4028-adbc-9537e944e191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 873
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ec7445-21aa-48a2-9ba7-99af3bfd1d13",
        "cursor": {
          "ref": "89c50cd2-baf2-419a-98fa-11290d1551a2",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "040323ae-bfb5-488a-9db5-0a9ba53d12c1"
        },
        "item": {
          "id": "87ec7445-21aa-48a2-9ba7-99af3bfd1d13",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "aa2b937e-e824-441e-b2d2-616a5c680f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 850
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbfbd2b-85a9-4d27-9d1b-82d2a103f672",
        "cursor": {
          "ref": "033b7248-f013-44e8-a841-7329e9e80cc6",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bf70f2cd-0eae-4220-9357-4fc91dfada25"
        },
        "item": {
          "id": "bfbfbd2b-85a9-4d27-9d1b-82d2a103f672",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c7036690-6552-4365-905d-f282e8eea770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 847
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d112f9e-9651-46a0-a869-9df55c955241",
        "cursor": {
          "ref": "9704507b-3d98-4b47-a023-e9183c13994c",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "86655a85-de49-4f33-bd91-83c7e0ceb91c"
        },
        "item": {
          "id": "7d112f9e-9651-46a0-a869-9df55c955241",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "167a92fc-8b95-4d88-b07b-ddf08f2403eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 849
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79876e74-ef2e-4cc4-b62d-0c9f4da79162",
        "cursor": {
          "ref": "4bf22f71-f1be-4519-8d29-83bc56e5409a",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f7020352-43db-4cbe-933c-520074bb5d75"
        },
        "item": {
          "id": "79876e74-ef2e-4cc4-b62d-0c9f4da79162",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "dd29624f-6cae-4a78-996c-b15047d1b94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 847
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c5d684-df30-4c39-9744-1edac658e06c",
        "cursor": {
          "ref": "5e823081-1c8b-4f54-95f5-673bd2f0057e",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4aeb4d98-792c-4908-97a6-73e171985b6c"
        },
        "item": {
          "id": "69c5d684-df30-4c39-9744-1edac658e06c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "417e5580-2a58-4e88-8b07-9225432b7a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1deef28-d325-438e-9f2f-9d7f3727f8cc",
        "cursor": {
          "ref": "c4aa40e4-f726-429f-bf3c-d5ef84b3cb52",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "30fc7ae9-f2f9-4012-8fdd-7812fe655266"
        },
        "item": {
          "id": "f1deef28-d325-438e-9f2f-9d7f3727f8cc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "600917fe-8ee0-4e03-b563-a4f473b0df25",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96752e5e-9371-4383-b369-4e2d1b845433",
        "cursor": {
          "ref": "eb27e260-7ed9-44fa-8d20-07c144b9679e",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4f71f707-f934-471a-9bfe-8325cce02c84"
        },
        "item": {
          "id": "96752e5e-9371-4383-b369-4e2d1b845433",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "2e58de33-2283-4d6d-a85b-7ec1869cebee",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 596,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa18b5d-399a-4e4d-a748-1b38ca531be8",
        "cursor": {
          "ref": "2dbfa118-448d-4e76-9b93-b84dda29a4d9",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "927e218e-a55b-47da-aec1-ee4881048c1c"
        },
        "item": {
          "id": "7aa18b5d-399a-4e4d-a748-1b38ca531be8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5475961a-ead6-46db-a7b0-9f5244b8d6f2",
          "status": "Created",
          "code": 201,
          "responseTime": 3366,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "154ddb23-a8ad-4d85-98a9-0c07aa0bce97",
        "cursor": {
          "ref": "961fbccb-0428-4d7b-b4a1-2bdcbf859389",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f595da62-08ec-422c-9a05-bdc0a69f99a7"
        },
        "item": {
          "id": "154ddb23-a8ad-4d85-98a9-0c07aa0bce97",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "2d18a9f2-44a2-4004-9236-f8249d3be700",
          "status": "Created",
          "code": 201,
          "responseTime": 2790,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "a01ce9d5-7d26-425e-82ad-73bc3545fade",
        "cursor": {
          "ref": "15e7678f-ed01-49c5-a471-9370509291fd",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1a7571d6-2fec-4550-9e69-d84da4eef4bf"
        },
        "item": {
          "id": "a01ce9d5-7d26-425e-82ad-73bc3545fade",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "975c28f6-0587-4972-8d3b-eb47d2b2103f",
          "status": "Created",
          "code": 201,
          "responseTime": 4169,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "6faf96cd-6194-4fda-8eff-18c0cf425294",
        "cursor": {
          "ref": "09206df6-e9a2-4be5-a138-ead7946a95d1",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "78f06bc5-e63b-484a-a4bb-ffe7d4cc217d"
        },
        "item": {
          "id": "6faf96cd-6194-4fda-8eff-18c0cf425294",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "712da0a1-c636-4ed8-88bb-1803e1c15884",
          "status": "Created",
          "code": 201,
          "responseTime": 2361,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "bf48250b-2a7d-4a9f-b4f9-034d83cf0dde",
        "cursor": {
          "ref": "f36038a4-4ce6-42fe-919b-4ec9b29b87f5",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "bdbd8343-0453-4f0a-b4da-28a170f50930"
        },
        "item": {
          "id": "bf48250b-2a7d-4a9f-b4f9-034d83cf0dde",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "78ab7254-52a3-469e-b864-4b00ae1edb0b",
          "status": "Created",
          "code": 201,
          "responseTime": 2435,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "2109401e-23a7-44ec-b4e4-6665f666d11b",
        "cursor": {
          "ref": "2c2ee41c-461c-4c9b-88f4-8985f7cce556",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "64162f16-feca-4736-a626-d4fe1690ac12"
        },
        "item": {
          "id": "2109401e-23a7-44ec-b4e4-6665f666d11b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e4f3cd0e-7d5d-434c-9e34-4daeb66344d9",
          "status": "Created",
          "code": 201,
          "responseTime": 3252,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "33d47a1e-b0ba-4980-bd1a-5e26c5c1556a",
        "cursor": {
          "ref": "7908ae28-8695-4207-9593-6cd8854699e8",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "af00f36d-b790-441f-a2a1-3638f10bb2c0"
        },
        "item": {
          "id": "33d47a1e-b0ba-4980-bd1a-5e26c5c1556a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f941c7e1-81d5-41c0-8541-300f699d0d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d47a1e-b0ba-4980-bd1a-5e26c5c1556a",
        "cursor": {
          "ref": "7908ae28-8695-4207-9593-6cd8854699e8",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "af00f36d-b790-441f-a2a1-3638f10bb2c0"
        },
        "item": {
          "id": "33d47a1e-b0ba-4980-bd1a-5e26c5c1556a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f941c7e1-81d5-41c0-8541-300f699d0d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f23cb32-1691-4221-854a-b701b2c5ce76",
        "cursor": {
          "ref": "b9b9ed35-4008-4bd4-9497-0a31943dcfc6",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "532e75f8-ef32-4507-8a6e-569b81d63e1a"
        },
        "item": {
          "id": "6f23cb32-1691-4221-854a-b701b2c5ce76",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fd977946-4477-44c6-b2fa-5062def23f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362290f0-f24f-4ba9-92aa-164f7699eb19",
        "cursor": {
          "ref": "1330ebd1-4c5b-42a2-94e6-9830132248bb",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1f825a19-600b-4a7e-ba7f-343ba72048ee"
        },
        "item": {
          "id": "362290f0-f24f-4ba9-92aa-164f7699eb19",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ea86a90d-ef7c-4959-a969-7498b86d01fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97cafd6a-70b8-4bd9-9c35-c55f7d05d9d1",
        "cursor": {
          "ref": "ce6b5c7d-6d71-4446-9094-9ad34a560f94",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d8b9ea9a-189e-4e8f-aca7-3f6c11083306"
        },
        "item": {
          "id": "97cafd6a-70b8-4bd9-9c35-c55f7d05d9d1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c488e878-5280-4735-94ae-4852e2b61f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d712702-b8a2-4fd0-b0cc-69d289d047dc",
        "cursor": {
          "ref": "209a1304-eb5f-46fc-aed7-234b28665a6b",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a8f27c78-d4d0-410a-bd69-bda17111257a"
        },
        "item": {
          "id": "3d712702-b8a2-4fd0-b0cc-69d289d047dc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1cb77d5c-1030-4dde-83c0-d0f688f12efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc31ab25-cfb6-4104-bcc1-5b48957c0dad",
        "cursor": {
          "ref": "fde168d0-be38-43a4-a427-92e63683c3f9",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "332f6b0b-c602-4da3-be10-66c31138790b"
        },
        "item": {
          "id": "cc31ab25-cfb6-4104-bcc1-5b48957c0dad",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3b91019b-9d01-48ee-b184-d6f8114f8f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc456ee-2068-43b0-b976-9e8d4f522409",
        "cursor": {
          "ref": "98abfd48-77c2-491a-8eba-515fd82eed13",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b7ef3912-7bbf-4c40-8b7b-e0ac73601bae"
        },
        "item": {
          "id": "3dc456ee-2068-43b0-b976-9e8d4f522409",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ad17dbe8-7d25-472d-8fe2-82c4056142ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4daf32-867b-4420-b509-b283ed3367ff",
        "cursor": {
          "ref": "0231e56b-e883-41ac-8e8d-c5d558f3a00d",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "25f07369-e80f-4141-85fe-c5a52fdd704d"
        },
        "item": {
          "id": "9a4daf32-867b-4420-b509-b283ed3367ff",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b3f6b814-9259-4502-b68e-80fc0093127e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3013f41a-9592-41d5-8d9d-3b95c12e5be5",
        "cursor": {
          "ref": "e05f17f9-0686-4eb9-a729-8e1f5853cacc",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f191c20e-98d6-4830-b97c-ae2e43063e08"
        },
        "item": {
          "id": "3013f41a-9592-41d5-8d9d-3b95c12e5be5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c265ad01-35a5-4188-aeee-19a50eee7914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754a6dde-0e6b-4721-a960-db05632c3ceb",
        "cursor": {
          "ref": "71bdf892-6c8c-47f0-b310-ebd170c679c9",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c969b326-b7ce-4dc2-ba18-72172235d7c3"
        },
        "item": {
          "id": "754a6dde-0e6b-4721-a960-db05632c3ceb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2171b647-c4ae-4c06-bec5-297ca817c4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8640af9-4ea9-46e2-aa5d-a4a288e375db",
        "cursor": {
          "ref": "8c7c26ed-e1cf-4f62-b826-ce954cfa780e",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fc8179d5-750e-4d59-a578-58b285921339"
        },
        "item": {
          "id": "e8640af9-4ea9-46e2-aa5d-a4a288e375db",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9404acb7-31f7-4f48-8ead-aa5e24b7243f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7eb733-18a9-4671-8f41-ea3abd824e49",
        "cursor": {
          "ref": "517709f3-e247-49db-be09-c7777aa7c016",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "77b32eff-d0a5-4397-aad9-2658dfdbd625"
        },
        "item": {
          "id": "0d7eb733-18a9-4671-8f41-ea3abd824e49",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bd2e5e54-b2ef-4baa-98a8-18d0e907e50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807270bb-8c1d-41c9-a0b9-65cc631bf990",
        "cursor": {
          "ref": "6440bce7-bacf-44cb-b7a6-324fcb1cd65a",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d4147466-1954-4cd8-ad3d-d92944e176f6"
        },
        "item": {
          "id": "807270bb-8c1d-41c9-a0b9-65cc631bf990",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "64edadee-cc31-464b-bfb7-a74e6baaef92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee3ccb5-64c5-4b6f-91e7-13cae4bf59c9",
        "cursor": {
          "ref": "a06221a7-9f31-43a6-9031-6eece3ea2c5d",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8ecc4557-6b33-4032-aa16-5dff6f27a864"
        },
        "item": {
          "id": "4ee3ccb5-64c5-4b6f-91e7-13cae4bf59c9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7cd705a1-82c2-42c1-bcf6-ed2baee7f002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599f8029-c85d-4578-9320-dd156b264b98",
        "cursor": {
          "ref": "43529a6d-42a2-4ea9-8b98-ddd5f1ca66b5",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "445b1bcc-718f-4ef0-91df-8be4c270c083"
        },
        "item": {
          "id": "599f8029-c85d-4578-9320-dd156b264b98",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8c82df69-39b1-4a35-b6bc-71caf737b2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a614d503-3038-4397-860c-0a26471b0ccd",
        "cursor": {
          "ref": "42937717-09ef-416c-b5fc-a1278526e518",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e779f6fb-6f89-4a1e-8095-0a538f2133c2"
        },
        "item": {
          "id": "a614d503-3038-4397-860c-0a26471b0ccd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "14f2a4bc-a3c6-4210-bad1-faab6e691a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9150acf2-df50-44a2-910c-bbccb55418a9",
        "cursor": {
          "ref": "ad9e6a35-7717-4c27-b496-6e6c8f065850",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "17f496fb-1504-4459-9689-405794a81a87"
        },
        "item": {
          "id": "9150acf2-df50-44a2-910c-bbccb55418a9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "51a1ced1-d7e5-4c44-9117-41f51f5e5a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9a8c7c-c3ff-4f24-b0a4-0cead9d80b3d",
        "cursor": {
          "ref": "15573331-7775-46b0-bd93-30747b49cec5",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f5a44905-e0bd-4ff5-a253-24250552fcd3"
        },
        "item": {
          "id": "cc9a8c7c-c3ff-4f24-b0a4-0cead9d80b3d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "994e5fbd-92ba-4640-bf06-aa8210882f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 894,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd1a949-500c-44e5-a0db-3fb701e822c8",
        "cursor": {
          "ref": "beaf564b-11cd-4d56-ab30-7324da44b429",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f9b4da12-f904-4d01-b9af-2509b7f82e51"
        },
        "item": {
          "id": "ffd1a949-500c-44e5-a0db-3fb701e822c8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6feebffe-6885-4728-8ba0-f6a6349b9f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0249b5f9-14ef-4bf2-9b03-797d700db61b",
        "cursor": {
          "ref": "e9364b09-00f1-4471-8be8-faf3e197c82b",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4281a01e-f68f-4d39-97ff-93e04813067b"
        },
        "item": {
          "id": "0249b5f9-14ef-4bf2-9b03-797d700db61b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cf12dbce-9c49-43d8-b438-31861f3fce89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4822ace2-0561-42d7-8f2a-a8c471beac39",
        "cursor": {
          "ref": "8f5fe806-7282-43ad-aa2a-c15bffcf4d13",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f507f63b-57ea-45ba-91b1-d558dae3e7b7"
        },
        "item": {
          "id": "4822ace2-0561-42d7-8f2a-a8c471beac39",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "49b1ca8c-ab69-4c31-b2a3-eb52e14f9604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1120adfb-7152-4652-bad0-c57fb25e4ba4",
        "cursor": {
          "ref": "8e858583-07cd-4ed5-8214-9e2aa7bc6bd5",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "06805166-e020-4116-9b9b-a1e432621a20"
        },
        "item": {
          "id": "1120adfb-7152-4652-bad0-c57fb25e4ba4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d74421ac-4cad-4b7d-9891-1bb679682adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514f5497-935e-4b22-832c-621739b79195",
        "cursor": {
          "ref": "8b5a76e5-70ec-46c4-a100-7fef5e20ee86",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c4dcf8db-8a5a-4b62-b083-263b2549d7a8"
        },
        "item": {
          "id": "514f5497-935e-4b22-832c-621739b79195",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ae866c9a-017a-4354-9407-64f884e1dcbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18a6a8e-e6c0-4aa7-a1c3-28e0005bcf6f",
        "cursor": {
          "ref": "8d8e1fc0-b376-4f02-8b0f-770d78a48821",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e838d1bf-2faa-4781-9e32-5c9a0def03ad"
        },
        "item": {
          "id": "f18a6a8e-e6c0-4aa7-a1c3-28e0005bcf6f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "68f54f37-6197-4581-a040-c71fab262baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfd7d38-f467-46d5-b817-92af430ad5c9",
        "cursor": {
          "ref": "cdf33f3f-0a8d-400e-952e-0fcd63aeb8bd",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8d4e7777-242b-4987-ae93-f4f2aa9a4876"
        },
        "item": {
          "id": "4bfd7d38-f467-46d5-b817-92af430ad5c9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "80decb60-f6cb-4859-8c96-f0be859eab0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3f3875-7d04-4a5f-ac61-4db0b978f7d9",
        "cursor": {
          "ref": "79ed3dd2-e617-4b25-977c-683fb5df0014",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b5fb2d61-3d2f-4d10-87ea-eb391b52ece3"
        },
        "item": {
          "id": "bc3f3875-7d04-4a5f-ac61-4db0b978f7d9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "693497ba-9a3c-4ed4-a197-5b76edd2ac64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af377e6f-b81a-43fb-a3a2-f569306e9816",
        "cursor": {
          "ref": "89fd7948-55fa-47c8-a987-24fb4d9e3b59",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "cbb390ba-92d2-41fc-b223-d89860a32521"
        },
        "item": {
          "id": "af377e6f-b81a-43fb-a3a2-f569306e9816",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "41746b7b-20b6-4741-ace6-a2c233fb1717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2bdbf1-1135-4103-9227-34190498db5f",
        "cursor": {
          "ref": "5eb8359a-da96-4b00-8be3-b09a74d39208",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a1897298-7bf3-4608-a436-f6f0d9904fe8"
        },
        "item": {
          "id": "4e2bdbf1-1135-4103-9227-34190498db5f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e4bba93b-a9c6-4c1a-a504-d5ddb67cb337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22b8509-e5e5-4d79-a26d-f3979402be0c",
        "cursor": {
          "ref": "7a1e109c-0720-4ca7-8dfe-001861409662",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "400f7af6-bd4c-4f27-8d7e-c5894f002bfc"
        },
        "item": {
          "id": "c22b8509-e5e5-4d79-a26d-f3979402be0c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0d27406f-22e2-490b-828d-d798001301a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3593df68-d17c-413d-ac13-578873d44e90",
        "cursor": {
          "ref": "fbd54947-2dde-4a17-9dab-272c59962546",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e8d28064-f9f5-467c-ad96-655a4c0b3610"
        },
        "item": {
          "id": "3593df68-d17c-413d-ac13-578873d44e90",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bc3753ef-c4c5-4750-8754-5b9818491785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415c2cb6-2603-41e4-af12-dbca8c656679",
        "cursor": {
          "ref": "28964de1-cb58-426d-8e41-ae88b3e08ef4",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "26dbb612-ae58-458a-bf23-ed6e14639179"
        },
        "item": {
          "id": "415c2cb6-2603-41e4-af12-dbca8c656679",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "376e035e-db28-43df-b3d6-65a601fcb5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95f0ae1-4e96-40e8-9bfc-5cc8b048fa34",
        "cursor": {
          "ref": "4ae6ee58-3f58-4ef8-9e5a-e17b6936b5bd",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "724a11fe-311d-45d6-80b8-9f180857cc1b"
        },
        "item": {
          "id": "c95f0ae1-4e96-40e8-9bfc-5cc8b048fa34",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f9b51456-7e58-4323-920e-3f91f99f3954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4322d1e-7114-4032-ba0d-e1a92140ccbf",
        "cursor": {
          "ref": "858efc61-4881-4e53-8ec6-f4fb057e0a92",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7f347327-a004-4594-ba5b-173e605f10e5"
        },
        "item": {
          "id": "f4322d1e-7114-4032-ba0d-e1a92140ccbf",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "373e6878-db93-4ece-9f91-4e3a191d3ac2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27212ad-a418-45dc-ab26-7fed6c270f92",
        "cursor": {
          "ref": "eaaf1f6a-0d3d-4881-82cf-af58fd6187fa",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a36272ae-f727-424d-947a-0ed9b4e37a91"
        },
        "item": {
          "id": "e27212ad-a418-45dc-ab26-7fed6c270f92",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "ae19be33-fba5-495f-901d-ff13519c48ad",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 586,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c5305b-c649-4ab4-9d9e-3779e095afae",
        "cursor": {
          "ref": "4e7c6391-1308-4b8f-b11a-adb6f81d6bcf",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "978b57a2-d9c1-4931-9fcb-dc8fc9317852"
        },
        "item": {
          "id": "27c5305b-c649-4ab4-9d9e-3779e095afae",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3f91dea3-d5a0-4bed-9951-599e6c1c3dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c5305b-c649-4ab4-9d9e-3779e095afae",
        "cursor": {
          "ref": "4e7c6391-1308-4b8f-b11a-adb6f81d6bcf",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "978b57a2-d9c1-4931-9fcb-dc8fc9317852"
        },
        "item": {
          "id": "27c5305b-c649-4ab4-9d9e-3779e095afae",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3f91dea3-d5a0-4bed-9951-599e6c1c3dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2eb0b5-863e-441f-b307-2bcbcf5e054c",
        "cursor": {
          "ref": "58bb118d-e0bf-42b4-81d9-4b93f32e0548",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4bd1f7cf-c72a-45c9-8f39-65b423888625"
        },
        "item": {
          "id": "3c2eb0b5-863e-441f-b307-2bcbcf5e054c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a0f1ef9e-49bb-485e-b9df-f55969c0ce88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27eb2eb4-973a-486b-b67f-f681a6bfdf86",
        "cursor": {
          "ref": "fb1211ad-85b5-4179-82d5-d65bbb199976",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6f5eae02-ab40-4f21-9a49-3c7ce70bf802"
        },
        "item": {
          "id": "27eb2eb4-973a-486b-b67f-f681a6bfdf86",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3ef5c00a-3689-498c-b3a3-2af779606ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498ac07f-aea6-4e56-894f-299eef1df723",
        "cursor": {
          "ref": "3984554e-e20e-4214-a80a-ac95be4349d1",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e77472a1-f243-47a1-8fe2-3a77e0a00b0f"
        },
        "item": {
          "id": "498ac07f-aea6-4e56-894f-299eef1df723",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2c1d69e6-371f-4023-9280-7ed9a8ab3cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c77e779-dc16-4ce0-83d7-4fbe8ede2536",
        "cursor": {
          "ref": "7dba0f44-19ec-412b-af28-4fe579cb1ae7",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "079f7e7c-fdf2-420f-a653-7101bb27bd6f"
        },
        "item": {
          "id": "1c77e779-dc16-4ce0-83d7-4fbe8ede2536",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "074a44f6-d0c9-48a6-adf5-37e3d35aecb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2dd648b-0bf6-4f28-b895-2c70cc309f42",
        "cursor": {
          "ref": "5e844aa3-5abb-426e-a49b-81ef084c260e",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "95273991-410d-455b-97cf-0f76d9a66245"
        },
        "item": {
          "id": "a2dd648b-0bf6-4f28-b895-2c70cc309f42",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d71dc8d1-b2b4-435f-a2bf-096d1a43719e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679eca54-4ee4-448a-87f0-80bf8e1388e6",
        "cursor": {
          "ref": "76a0b786-9769-4872-90b6-96563436b503",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3940bbfb-b013-4a4b-81dd-6366546f6c41"
        },
        "item": {
          "id": "679eca54-4ee4-448a-87f0-80bf8e1388e6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "538246e6-0895-459a-bd89-d2d8440fb36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9bb1c3-6ad0-4dd5-86dc-29efe6ed4386",
        "cursor": {
          "ref": "c6deeeac-df9b-455e-b2d8-b6827ee48cd4",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "006eb5fb-c5ec-4604-af3f-4e8d746520de"
        },
        "item": {
          "id": "3a9bb1c3-6ad0-4dd5-86dc-29efe6ed4386",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d152360c-1135-46a5-96ab-62dad8debb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f8fb3a-1e0d-45e3-88f5-9e11da79d56e",
        "cursor": {
          "ref": "5433cb6a-26e6-4ddb-a92e-603f5efcb41c",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "71b29d85-220c-49e6-ad32-dfbffb5a1bdf"
        },
        "item": {
          "id": "16f8fb3a-1e0d-45e3-88f5-9e11da79d56e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7660ee0c-581e-4f6e-a8f7-43146ef994b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c58222-2859-42ce-af44-66cf2adbba93",
        "cursor": {
          "ref": "eb759301-6d6e-40af-9e49-6651af9410b8",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "69e2e84a-3c43-4abf-9476-94ae5560c29f"
        },
        "item": {
          "id": "42c58222-2859-42ce-af44-66cf2adbba93",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fb1e9afe-1985-472e-a36b-f2d7acc51ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496f6446-34b5-4c17-86c1-eb623ccc7c87",
        "cursor": {
          "ref": "54bb8abe-b989-4981-b1aa-f74ed3629f9e",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d6dfcc35-9460-4c9d-9d71-84bb7e12b4f6"
        },
        "item": {
          "id": "496f6446-34b5-4c17-86c1-eb623ccc7c87",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "64f0c793-dc04-4a94-9846-5cc4f36b5bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9c6867-45af-481e-ab7a-096cf656839f",
        "cursor": {
          "ref": "8eefb75a-b561-44e9-a148-3698f46c91c8",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "29a88006-03ed-4caf-9354-63c8781bec8a"
        },
        "item": {
          "id": "ef9c6867-45af-481e-ab7a-096cf656839f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "11625d10-d85c-44cf-a7e9-15a6af8b8863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755d62ad-01a6-4be5-8fb1-3a88fdc2aecd",
        "cursor": {
          "ref": "a9927e91-df1f-441f-9965-61e1698811ba",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "86f649c7-7cff-4b29-832f-b4ee8868d8d5"
        },
        "item": {
          "id": "755d62ad-01a6-4be5-8fb1-3a88fdc2aecd",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "56e0264c-bcd5-4926-8f4d-e5c42460a397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1843
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2dbd06d-37d5-42de-ac6a-35d023ba23e7",
        "cursor": {
          "ref": "1f5740dd-b79d-4cd2-a9cb-f299dfed36dd",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "02bc148b-7840-4b1d-96cf-6fac7143faae"
        },
        "item": {
          "id": "d2dbd06d-37d5-42de-ac6a-35d023ba23e7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "243f9ea4-2a11-48da-8183-3b50455f7e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1833
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a795c85-e09c-4919-95d7-5054c8651cc6",
        "cursor": {
          "ref": "3e4a7470-47ce-4d31-9c07-44f4f9798ce3",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "af71ab82-e7d9-4118-83bb-e4a32028001b"
        },
        "item": {
          "id": "4a795c85-e09c-4919-95d7-5054c8651cc6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "14bea3ff-16b7-4371-880e-067c836479a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1832
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e15a052-d93f-4472-bb38-64cc39b41cd9",
        "cursor": {
          "ref": "1a9c7ff2-1e8c-4f61-8a8a-ff5123e44f27",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e3c452df-5a17-4028-a70e-3237e4cd8d05"
        },
        "item": {
          "id": "1e15a052-d93f-4472-bb38-64cc39b41cd9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "39dbeab4-43eb-4449-8e2f-f8d4abde3cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1833
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be87f10-22ed-4b74-b14b-200d9475d04d",
        "cursor": {
          "ref": "49cda92d-021c-4766-b104-ba0c4f5a4289",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b5be4a71-1373-43d1-9310-cb2789a162c1"
        },
        "item": {
          "id": "6be87f10-22ed-4b74-b14b-200d9475d04d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "923656ea-ea1a-4653-b075-5a9756792e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24f67b0-ec76-4c92-bfd7-67d34ea3114b",
        "cursor": {
          "ref": "c795fe89-ee05-44f7-8cd5-9a10acd096c1",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "43064de5-a44c-406f-b969-d6a513063dbe"
        },
        "item": {
          "id": "e24f67b0-ec76-4c92-bfd7-67d34ea3114b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8c1772d0-e352-4cf3-a09e-d5d893d363fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6858717-24e1-45d2-81d9-4c8265112ed1",
        "cursor": {
          "ref": "be9fe93a-3673-401d-b5fb-4c0e85a233c2",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b237a34a-083f-4944-8bd6-f65f78e85c2b"
        },
        "item": {
          "id": "d6858717-24e1-45d2-81d9-4c8265112ed1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a834528f-f09b-44aa-88ba-1849f76c2dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a4acc7-9bff-47fb-a5ae-3d90190d9c4d",
        "cursor": {
          "ref": "6f4cd2c8-481d-46a8-a068-791fcea96cd6",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7193faae-29b7-4085-beca-9c3bb8488298"
        },
        "item": {
          "id": "60a4acc7-9bff-47fb-a5ae-3d90190d9c4d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d9d47c46-5fd3-4eb3-9712-f84d83812f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e294e8e-c025-4c66-a5c9-3d42f79685db",
        "cursor": {
          "ref": "82dc2c05-dfcb-4dc9-bbdf-dd2b24ad57d5",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ca9ea7ff-22f7-43d9-aa19-57d3bae7bf08"
        },
        "item": {
          "id": "3e294e8e-c025-4c66-a5c9-3d42f79685db",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "25b5f3ea-51bb-49f7-bf9f-b05c200880a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db47a7b0-1b2e-4b85-8fc0-0bebae55e272",
        "cursor": {
          "ref": "6d6765ee-63fa-4bc9-816c-41e22f8ce6b2",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ecf47ba4-3378-473e-adb0-1f406de5dcbe"
        },
        "item": {
          "id": "db47a7b0-1b2e-4b85-8fc0-0bebae55e272",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "23ff74c6-8c53-4684-ba05-c8db68614e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6aa87c-339a-408a-baf3-1205ba5b192c",
        "cursor": {
          "ref": "b8ca7b99-5a43-4852-bed7-01690aede4fc",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d9f40fe3-84d1-4e43-b6b4-441f7e22337a"
        },
        "item": {
          "id": "fd6aa87c-339a-408a-baf3-1205ba5b192c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b8b351c6-dfec-4ff5-8511-7d1c68c3dce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d6a1af-c2b8-433c-b4b1-93635bbd2105",
        "cursor": {
          "ref": "1cb2eae9-3ddb-4220-972a-a4cc4b4db022",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "481e64c7-3207-422e-b03b-ad31853caeee"
        },
        "item": {
          "id": "03d6a1af-c2b8-433c-b4b1-93635bbd2105",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "626d1a52-ecb8-4e92-aa97-40ea06232db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00466b2e-70f8-4254-a103-ce9cd8e2afcd",
        "cursor": {
          "ref": "56a9f8ca-917e-4d14-9a31-b0c375559c96",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dc0f4018-a0dc-4e97-9fc0-7795c710b906"
        },
        "item": {
          "id": "00466b2e-70f8-4254-a103-ce9cd8e2afcd",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7a2bb358-2ade-4ad8-b740-0cbc537d26a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09513a6c-e1ca-4470-9ad4-3f9459005659",
        "cursor": {
          "ref": "d9e0095f-4257-42f4-8fa9-297749cee6e8",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "38fecca4-d40e-4295-9448-6ba45477653b"
        },
        "item": {
          "id": "09513a6c-e1ca-4470-9ad4-3f9459005659",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "441444a2-381c-4acf-8fa2-849314cdac03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c546fa-322f-4a32-8453-045394d2805c",
        "cursor": {
          "ref": "050f530c-eb27-41be-9311-97d980c650d0",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0dd7cbfe-cb42-4b01-9742-18a214176487"
        },
        "item": {
          "id": "23c546fa-322f-4a32-8453-045394d2805c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8817d3d9-b17b-47e8-896f-bae9977e6709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3843d0-7c33-4ce4-9920-96f4789ffa78",
        "cursor": {
          "ref": "49c925a3-60d2-450b-be0c-12ef9d4bc15b",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f6ba7c9c-6895-4a10-acb9-764673c50359"
        },
        "item": {
          "id": "5a3843d0-7c33-4ce4-9920-96f4789ffa78",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6e5c1f99-763b-4e2a-9231-07b3fed66247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7610514f-5b35-44a0-879a-231bc475eb52",
        "cursor": {
          "ref": "3ac3ecb0-3b09-47aa-ac48-306e093ec664",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "88404edf-aa10-459f-a2ad-5930261ddb1a"
        },
        "item": {
          "id": "7610514f-5b35-44a0-879a-231bc475eb52",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a54f534f-ccdc-4556-9726-c10f2903d6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4598e2-96b8-4734-bb84-c55f540acfec",
        "cursor": {
          "ref": "6d89e35b-d75e-45b6-8f06-f694ebbd46b2",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e189ff46-2d5d-4dbc-abea-7cc927a3700d"
        },
        "item": {
          "id": "7a4598e2-96b8-4734-bb84-c55f540acfec",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9210f556-9738-4345-ae4d-7119e009ab69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159c8373-34d4-4327-b7b7-934683b894ef",
        "cursor": {
          "ref": "71e240a0-7b59-4fce-aab6-09b4f3856bb9",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9a2d9372-dac7-491e-81c5-e188a243b6f0"
        },
        "item": {
          "id": "159c8373-34d4-4327-b7b7-934683b894ef",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6b175a0a-2eee-4b72-857c-6c571535e0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5576e831-c119-4dfd-b914-13257b85e918",
        "cursor": {
          "ref": "2b138219-5b24-4e45-9e01-e9832bcf1094",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "83981574-1631-4cec-ac4b-a0f47d4bb514"
        },
        "item": {
          "id": "5576e831-c119-4dfd-b914-13257b85e918",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "aa71f9f6-c226-471e-8e7f-c11efdb08fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c73bb24-3d75-450a-8aae-3e05c2d648ac",
        "cursor": {
          "ref": "f7e6739a-5512-4e71-a66a-da05e9a91408",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f651d832-b46a-45b9-bc5e-2d9c78aec477"
        },
        "item": {
          "id": "6c73bb24-3d75-450a-8aae-3e05c2d648ac",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c0e6fa1e-7a3f-442b-a34b-94b69ccf957c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be80cd9e-a52a-4a89-897e-2c967471e74d",
        "cursor": {
          "ref": "48eeff14-bcbe-40fc-a810-8e3c22cf04ef",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c5eb662d-d505-4f4a-a409-70a81a18eb8f"
        },
        "item": {
          "id": "be80cd9e-a52a-4a89-897e-2c967471e74d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7350330f-206e-413c-a3a3-04c3c68ee3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb4b59a-77e0-4845-bb44-d33ef3849a26",
        "cursor": {
          "ref": "1a570736-6607-452f-ad60-eefb610e87ad",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "04d0eb38-3ee9-42af-8a65-0f63517a5fa1"
        },
        "item": {
          "id": "8bb4b59a-77e0-4845-bb44-d33ef3849a26",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "670350c5-3c5e-4e28-ba94-ac63b940308c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a308181-11ba-4067-83bd-079ea21ce62b",
        "cursor": {
          "ref": "19a2dcda-79c7-4894-8b9a-19b4184fa5f7",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "515b76af-07f9-4c28-ae26-5d0fe137cdcf"
        },
        "item": {
          "id": "0a308181-11ba-4067-83bd-079ea21ce62b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d3835d65-d948-4d13-a829-fbef69964e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e97a51-cb0e-4d78-8162-67b8746a0d94",
        "cursor": {
          "ref": "733a83a0-f6c2-487e-8380-c986431166d2",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "727911ae-5570-464a-9b4a-1eb058d80383"
        },
        "item": {
          "id": "96e97a51-cb0e-4d78-8162-67b8746a0d94",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8e0a499b-087f-4121-bec3-7edcb38c2fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0994a014-3505-476b-9fb3-176bb6a83b68",
        "cursor": {
          "ref": "40feab1f-1752-48fb-9e33-c839a1fb821e",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ae54bc98-4319-48fa-af6a-9d3505594c0f"
        },
        "item": {
          "id": "0994a014-3505-476b-9fb3-176bb6a83b68",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "178e28e4-92a6-467b-b7cf-835829ff9060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597de844-8cb3-4c44-84b7-37d4c952d625",
        "cursor": {
          "ref": "384c9c30-2c9e-460a-b478-173dd5525746",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0e0166ed-ca31-4fd7-8c54-c68806495c73"
        },
        "item": {
          "id": "597de844-8cb3-4c44-84b7-37d4c952d625",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b9fb992a-5125-4ffd-9f44-0c1d5c261a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87547645-d93a-463b-8834-eea1f56e11f7",
        "cursor": {
          "ref": "18ea30f0-2ac4-4cb9-a034-8b179d1a1b41",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "059d8ca6-be8e-4eea-bd4c-c0042780576c"
        },
        "item": {
          "id": "87547645-d93a-463b-8834-eea1f56e11f7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6992aef6-ec16-4953-b5bc-12f87fee2fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5c0154-d8e3-43e8-a746-6930fb555cdc",
        "cursor": {
          "ref": "9a8a61e1-0e20-468b-9731-9fd6c0c6472d",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7dd0e1d2-d39f-4004-8503-3c8faa0f35ec"
        },
        "item": {
          "id": "6a5c0154-d8e3-43e8-a746-6930fb555cdc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "95d3c3bd-6b1c-4719-b4be-72978daf9bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2b04d6-b527-4d7c-8e5e-2c39f494ee63",
        "cursor": {
          "ref": "9d87a0f8-7870-4e95-b910-b27c37f7e288",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e8933b22-6c1e-4c41-a56a-8a1bf3c406e8"
        },
        "item": {
          "id": "9b2b04d6-b527-4d7c-8e5e-2c39f494ee63",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4a658cfd-22c9-473f-aeb2-1368261d2465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa6c9fb-77b0-4707-8694-8ba1c97cff16",
        "cursor": {
          "ref": "e0dfea62-1ac8-4d7e-895d-fce2ee88d608",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "db599074-7f39-48be-b43d-f64b5ef5fbac"
        },
        "item": {
          "id": "1aa6c9fb-77b0-4707-8694-8ba1c97cff16",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "29c4d02d-ca7f-4e81-ab56-3d011854d42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c95efa-46c6-4a2b-aa34-02aae783ac58",
        "cursor": {
          "ref": "39dd1936-51d2-4aef-9e76-c93e20010e3d",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "24a02365-a986-4925-a2ed-e95271452bb1"
        },
        "item": {
          "id": "65c95efa-46c6-4a2b-aa34-02aae783ac58",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7bfed7b7-a171-48f3-b182-4166a335cea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1426572e-7dbc-4dea-9e8b-4343dfb37bfd",
        "cursor": {
          "ref": "ab28d088-e6b1-4055-b53c-98714a908bf1",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "106aba42-a170-4fb3-a402-f493c7d29bf1"
        },
        "item": {
          "id": "1426572e-7dbc-4dea-9e8b-4343dfb37bfd",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4902be1a-1e36-4dc3-83ee-ff9361f7119f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe4c929-0b76-4aa7-bcd6-1d4a2123c1d8",
        "cursor": {
          "ref": "f915453e-d877-4903-b0e4-4b80086806b8",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "02cabbcd-d036-4a55-925d-b9db7ce20b2f"
        },
        "item": {
          "id": "cfe4c929-0b76-4aa7-bcd6-1d4a2123c1d8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "75b5288c-32d6-465e-a531-fdc0b437802a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb35bf5-fa86-4af0-b279-ffeefff0f713",
        "cursor": {
          "ref": "fc8c78d2-580f-4b41-ba32-6c973f8d7eda",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6029f383-45bf-4593-8b2c-14da11fd2ad0"
        },
        "item": {
          "id": "4eb35bf5-fa86-4af0-b279-ffeefff0f713",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "edc54381-9c7e-4af9-89fb-93654e93b142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aaccce0-56b3-41b0-8955-93c3e301167b",
        "cursor": {
          "ref": "a2aff42d-c510-42e2-88a5-72e887933b84",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1d790899-2b43-47a9-b79e-ae878be5f49b"
        },
        "item": {
          "id": "2aaccce0-56b3-41b0-8955-93c3e301167b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "21f4c735-2b2c-4b06-bec9-b34e828fb9e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea622fd-49cb-4b33-b55b-50208577396d",
        "cursor": {
          "ref": "2b47f512-1eb6-4ed0-99cd-ef28762cf949",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "619259fd-015a-4a04-acce-9ac68d96ea8b"
        },
        "item": {
          "id": "2ea622fd-49cb-4b33-b55b-50208577396d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b2fcc934-477d-43a2-8e36-dec415ff6bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a024190-75e7-45e2-9efb-9d3efb2d5dd3",
        "cursor": {
          "ref": "de8d3005-c523-4705-aa52-3d065eaca0bb",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9a28ca59-6b70-4d85-8b7d-e182bf45552a"
        },
        "item": {
          "id": "3a024190-75e7-45e2-9efb-9d3efb2d5dd3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d8dd64bf-cba6-4e73-bdc4-66b650bcea7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c2516f-de23-4cf7-a728-c200841316b3",
        "cursor": {
          "ref": "88f0098b-821c-4244-a513-09cd081a5773",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3321c1ee-2d36-4ed1-8de8-94bf06cdde67"
        },
        "item": {
          "id": "99c2516f-de23-4cf7-a728-c200841316b3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1039f4fe-746e-4b40-a586-e9351edc2231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b093e60-e373-4f4f-bee0-7717d77932c1",
        "cursor": {
          "ref": "c283e422-e864-4cee-9d98-2d94c3a5edc9",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1891ed5e-7d92-4ad1-a609-e905b8f926d5"
        },
        "item": {
          "id": "6b093e60-e373-4f4f-bee0-7717d77932c1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "071c7b03-e9fe-453b-9934-9e904477332a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af6bed4-8b1b-48d8-9527-ec0656ffbb34",
        "cursor": {
          "ref": "0add50c9-3880-40e8-b1f1-fb79a8a6e07b",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f28274b5-3fe5-4328-aaf0-27a02f15b9ef"
        },
        "item": {
          "id": "7af6bed4-8b1b-48d8-9527-ec0656ffbb34",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bd6d1493-6ad0-49cb-9cb0-89dcd2dcd920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64178a3-d407-481a-a55b-5ab02de828fa",
        "cursor": {
          "ref": "3816fe83-c34d-4c2d-93a8-5af1033010a2",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2e131d15-c898-47fe-8217-26834d892478"
        },
        "item": {
          "id": "f64178a3-d407-481a-a55b-5ab02de828fa",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9045d1ce-19ee-437d-bd8d-6209e4946805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7176b7-3d0b-4641-b8e9-3551b9462a3a",
        "cursor": {
          "ref": "2840dfbd-d4d6-4659-9120-be0bcbdf836d",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "96f5ec24-3ca4-46ed-aca4-d356918313c4"
        },
        "item": {
          "id": "ba7176b7-3d0b-4641-b8e9-3551b9462a3a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f0500d22-a523-4304-a1b5-425e51c52139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7dff4e-906b-4b41-95ba-73dae2e0dd5d",
        "cursor": {
          "ref": "e41aa27f-f80d-440a-b625-992383d8c089",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4785458a-99cb-4463-924f-cd55681178ff"
        },
        "item": {
          "id": "0e7dff4e-906b-4b41-95ba-73dae2e0dd5d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f39a0c71-483d-4019-82f9-d1de7c09877a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc228e7-5466-44f4-8652-132703aa03cd",
        "cursor": {
          "ref": "09d42bad-d66c-4ee9-90c9-1357de4a37e7",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "76f23f2b-5a0a-45c3-9a29-506e7f69540d"
        },
        "item": {
          "id": "1cc228e7-5466-44f4-8652-132703aa03cd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "346dc405-e93f-4eb6-9f5e-460a7255b65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57048124-5f38-4c95-af03-c155037e9297",
        "cursor": {
          "ref": "ba58aedc-3d0c-4723-9271-12e89d628be4",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a7bf3330-9554-4352-af20-a39538f13e6f"
        },
        "item": {
          "id": "57048124-5f38-4c95-af03-c155037e9297",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "81d107a4-b57e-4750-9fab-610d9c873f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b75a4ed-8628-4a34-b79f-1f909b763286",
        "cursor": {
          "ref": "57812c62-1075-463c-805c-b99910af6f4a",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "535df3ea-18d9-4759-a633-b1147ff668c7"
        },
        "item": {
          "id": "7b75a4ed-8628-4a34-b79f-1f909b763286",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8b81a14b-85dc-4786-926e-3420ee241458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577c8fe2-3d94-4719-8b16-fb831c9f2b58",
        "cursor": {
          "ref": "6a3b29af-26fc-4309-a3d9-e75a1837f61a",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e74d9f0a-93c3-4ee9-ae9f-ea78ef35d221"
        },
        "item": {
          "id": "577c8fe2-3d94-4719-8b16-fb831c9f2b58",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ec316895-9863-4090-971e-c8ccb115ee69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13b94a0-7c72-4703-abd6-b60cf74425d6",
        "cursor": {
          "ref": "18df4998-19fb-48f4-bd22-4f922dd667a2",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "101d4177-5221-4e48-bf63-ffb4f46b7a22"
        },
        "item": {
          "id": "f13b94a0-7c72-4703-abd6-b60cf74425d6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "236d982e-850e-4996-8980-ca565835fd45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8539f8b0-0107-4c58-a662-56e2de3ae33e",
        "cursor": {
          "ref": "58f8ecf2-1183-437e-a6c8-a66418189dfe",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d9789fb6-5e68-4177-afa4-1bb74c886814"
        },
        "item": {
          "id": "8539f8b0-0107-4c58-a662-56e2de3ae33e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b5caf342-1b33-4f18-b25c-64f3f698da96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3432c0b1-dc02-49ee-8f47-661b925d54b4",
        "cursor": {
          "ref": "74288f2a-d978-4fdc-a7be-bd9e78cc2f5a",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0d89084b-27ef-49d5-8bbc-4aea40d09300"
        },
        "item": {
          "id": "3432c0b1-dc02-49ee-8f47-661b925d54b4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cbed3fd3-1381-45ae-bafe-428112ce3c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2266fa-e0f4-4667-8157-d79f508bfffc",
        "cursor": {
          "ref": "7cd9c9b4-e811-445b-8664-b1fd9ae29770",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "bf1d7833-34d8-4135-a44b-7f0c0ac8389b"
        },
        "item": {
          "id": "6e2266fa-e0f4-4667-8157-d79f508bfffc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ec26038d-5e52-4d25-ad40-92946169742c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afe421e-6eb8-48fb-9d2e-e1b22091b924",
        "cursor": {
          "ref": "44a26923-ffc0-4686-a245-8d33d37e7042",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "956bcd82-85af-491a-9f7b-6e7ea927d494"
        },
        "item": {
          "id": "9afe421e-6eb8-48fb-9d2e-e1b22091b924",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bc8ffb42-c5e3-4347-b5db-1f51725d36e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9669a253-0f4d-4a14-9dfd-b548456fef9c",
        "cursor": {
          "ref": "40dd049f-31ee-48ab-a924-c1cf9e970df7",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5f2dae5a-6ecb-426f-8653-1a77c821949a"
        },
        "item": {
          "id": "9669a253-0f4d-4a14-9dfd-b548456fef9c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "239fae9c-7c87-488b-a248-c0fac9b177f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585db110-2a2b-41ef-99e7-ce5f55b2b957",
        "cursor": {
          "ref": "e86ba978-6b39-4417-9bda-016a0035256d",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a90ee4bf-2713-4000-9364-d61544e00304"
        },
        "item": {
          "id": "585db110-2a2b-41ef-99e7-ce5f55b2b957",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "26703fcf-875c-46e0-af2e-2b3bc1259e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b920ab6b-8fae-43cc-a2d5-66ee8247b7e9",
        "cursor": {
          "ref": "414d7300-041f-4eb4-9dea-eff68ef05b10",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "63dd50ed-22db-400b-b047-cc929c2020b6"
        },
        "item": {
          "id": "b920ab6b-8fae-43cc-a2d5-66ee8247b7e9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "cf09f96d-d39f-47a1-894a-309636752554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874ef55b-ca57-4d82-807b-ae687f50b17b",
        "cursor": {
          "ref": "676b496e-a947-4878-ac9b-b201c25e097c",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "cff37ff1-af18-4b95-967d-54e45a9b7d02"
        },
        "item": {
          "id": "874ef55b-ca57-4d82-807b-ae687f50b17b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5b4385a6-b083-4df1-bf1a-836d88d66aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c069b1-ef6c-4e69-81ac-7fa3ede575d8",
        "cursor": {
          "ref": "a51e5f05-0013-4bff-9c4d-b4b0cd0702e4",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1154989f-198f-4d3e-b863-fdf6833e360d"
        },
        "item": {
          "id": "d9c069b1-ef6c-4e69-81ac-7fa3ede575d8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c7c718b9-bb8b-42ff-919a-edd383f908f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6c1cb8-e3d1-4e65-8d77-d39bda9be61a",
        "cursor": {
          "ref": "1bd7b0b5-8830-4a1e-8520-e85e7c3b7b85",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d4bbd9bd-f441-437e-8ccf-1511d09bb712"
        },
        "item": {
          "id": "eb6c1cb8-e3d1-4e65-8d77-d39bda9be61a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ebb1dd45-9466-4d7e-821b-e88d9230fb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4f3a2b-abc3-43cb-bb15-cd0e0b4e0d12",
        "cursor": {
          "ref": "6a901f74-70ae-4012-88c2-d80f53efcc66",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ce4e53b8-2b59-45d3-b1c6-dcb5cb9b0b32"
        },
        "item": {
          "id": "5c4f3a2b-abc3-43cb-bb15-cd0e0b4e0d12",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "cb152f2f-0cc4-4bd1-ab88-6964175c80d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d34e2ae-5674-4e45-8421-8b0921ccf8e9",
        "cursor": {
          "ref": "803fb6db-fe32-4e3a-abab-d74b0c741b13",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d162412b-248c-423d-a533-dc0b7ec28420"
        },
        "item": {
          "id": "7d34e2ae-5674-4e45-8421-8b0921ccf8e9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f5c2f0a8-3745-4474-b5aa-cff1fe127900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4fc75a-343e-4137-9fdc-8c14dc8e9ae1",
        "cursor": {
          "ref": "0d65f00d-aedf-48fb-b332-e4b1aee2c1be",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f01790d8-848b-4326-a2d3-26d52d7af5c7"
        },
        "item": {
          "id": "7a4fc75a-343e-4137-9fdc-8c14dc8e9ae1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "aa528fe9-cb49-4d15-a1dd-0f3471846490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be00b1c3-82bd-4be7-b1f2-3edccce34f09",
        "cursor": {
          "ref": "322a1ccc-a6b2-42bd-9199-f43e2457f5ac",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f016af52-a9d0-4c3d-8a70-b7d6f1d603e2"
        },
        "item": {
          "id": "be00b1c3-82bd-4be7-b1f2-3edccce34f09",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5624748b-da9a-4a9d-b795-f5938fc473b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e502ad-b18e-434c-842d-b91cd789b7df",
        "cursor": {
          "ref": "06eb7169-b41d-4f0a-bd39-b3848c601dde",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d84080ef-32e6-4073-b308-5b0ac047cdde"
        },
        "item": {
          "id": "98e502ad-b18e-434c-842d-b91cd789b7df",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1b1b7838-2bc9-413f-a2f0-7efbc7f8c023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c385f3f-b29d-4285-90a6-92a5b026e96e",
        "cursor": {
          "ref": "223bfa60-e6c2-4557-a7f3-329572adf221",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a91e8a38-aba3-4607-b799-4e61d573bf39"
        },
        "item": {
          "id": "9c385f3f-b29d-4285-90a6-92a5b026e96e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bff2e4a5-923f-4ab3-b86d-a62c6cc78fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4712cac-24d2-4a4e-a607-255fa40cd829",
        "cursor": {
          "ref": "2c5e1d3c-1c24-4906-a732-4fd8a74af1c0",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f376cbee-8e68-424f-a439-b6f92b983c60"
        },
        "item": {
          "id": "e4712cac-24d2-4a4e-a607-255fa40cd829",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fbab1132-5900-4f8e-a5c9-82ef890eee79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd28b6b6-342e-4d5b-9c9e-008d25140dbe",
        "cursor": {
          "ref": "bce3e663-869f-4c0d-a45b-c9363f06c711",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0845523a-b28c-415f-852c-cf958c74d0e9"
        },
        "item": {
          "id": "dd28b6b6-342e-4d5b-9c9e-008d25140dbe",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "809449a2-4e20-4138-8ce8-60c88dcda637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce53541-c8bc-45cd-8b48-a31e6f5168fa",
        "cursor": {
          "ref": "1b1ec406-0325-47a5-9899-5f53bde53b24",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "80250127-9f7a-4cac-bd06-69b62a272bf6"
        },
        "item": {
          "id": "8ce53541-c8bc-45cd-8b48-a31e6f5168fa",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4bc57392-4cc9-468b-a636-74382579d2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c511e0-c667-4f7c-8323-25d016022583",
        "cursor": {
          "ref": "b1295935-077c-48df-8123-0844f513f2dd",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d18d6fe8-58b5-4509-b27c-87104f0b9795"
        },
        "item": {
          "id": "b4c511e0-c667-4f7c-8323-25d016022583",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cd4160a5-ad08-4f67-b877-c17a4e48ac39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb194fc3-fcf8-47cd-a0d0-82e127dca7ee",
        "cursor": {
          "ref": "3f55779c-6f2c-497d-86af-f7a0b12fcd2b",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7ae4ab9c-5366-449f-8f02-248bc752776b"
        },
        "item": {
          "id": "cb194fc3-fcf8-47cd-a0d0-82e127dca7ee",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "22e10382-b971-41d5-8d3e-ae5f60799cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b0f0b6-c394-406f-a383-9e8d13ed9b84",
        "cursor": {
          "ref": "8f5d630f-18e9-49c8-b92a-b234f33cb962",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dd119da3-cc71-4f44-8d64-e154912d41eb"
        },
        "item": {
          "id": "95b0f0b6-c394-406f-a383-9e8d13ed9b84",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0cb9f10f-924c-4cc0-a0ff-54e01b7cb048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b5f033-ea5a-416e-bd17-2cb8e8a1e7ab",
        "cursor": {
          "ref": "ff7fede5-b74f-4a9e-aade-74b377727156",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e8196ac2-eee8-4d53-88ca-c66cf98acbf4"
        },
        "item": {
          "id": "79b5f033-ea5a-416e-bd17-2cb8e8a1e7ab",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1defb988-639d-416c-be5e-ff2b9133e117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf90d02-90c4-4286-80a0-e2442f2a93ab",
        "cursor": {
          "ref": "20591137-f4a1-4a69-83ee-605f49debf3a",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d4c9d229-e094-4475-9b7d-9715a421a9b8"
        },
        "item": {
          "id": "aaf90d02-90c4-4286-80a0-e2442f2a93ab",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "afb9cd57-b861-4114-9c19-854bdd16e3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a72f71-9a5c-4e17-98ef-5651f4196ef0",
        "cursor": {
          "ref": "274fd67c-c643-445c-9c49-dcff237e5f40",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "36227c34-d5e6-464a-ad3a-6065f2164fa1"
        },
        "item": {
          "id": "04a72f71-9a5c-4e17-98ef-5651f4196ef0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0dc210b5-b3be-4126-99e8-d00d044e7454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac0bb97-930d-4054-b2bb-38c1164b1e21",
        "cursor": {
          "ref": "0a3a5a0d-0f0c-4f2b-97a8-dd3de50a061c",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6123ff16-0628-48d6-be44-50a28ccdb99f"
        },
        "item": {
          "id": "1ac0bb97-930d-4054-b2bb-38c1164b1e21",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "90595762-88b0-46cb-91df-73a5c44e786b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92571a1d-da40-4473-84bf-a31b97c6e305",
        "cursor": {
          "ref": "987dad1c-6615-4332-8316-2c5afb2313e0",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ae6f0ba0-a6d6-4398-bcea-ddc7d5a281a8"
        },
        "item": {
          "id": "92571a1d-da40-4473-84bf-a31b97c6e305",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0e81c252-06f3-4779-9d20-545c80833183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e0882f-6557-49c6-ad7e-0bf84bee5e48",
        "cursor": {
          "ref": "d4555bb4-efa5-4728-9840-18b5bd7cf42c",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "96e7d27c-ad17-4af7-a4f4-a5e72be48841"
        },
        "item": {
          "id": "b2e0882f-6557-49c6-ad7e-0bf84bee5e48",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "126eea2e-1a56-4806-a50c-865db498ed8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92afdfa-25ec-43c7-a203-94bb58801bcb",
        "cursor": {
          "ref": "0ea2a9e2-fe12-47da-9571-7569208bbd78",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c1f1552d-28f5-4508-8648-9de267ba6444"
        },
        "item": {
          "id": "d92afdfa-25ec-43c7-a203-94bb58801bcb",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "29aa657a-7af8-4ea9-aa23-5dd7bdf235fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8c03eb-6b74-45e8-a5aa-216a80e8577c",
        "cursor": {
          "ref": "eecd5ef0-a12a-47c3-9a37-061fed55d5da",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2784c1bd-3535-4cf5-8dae-83fa9edd96e3"
        },
        "item": {
          "id": "2c8c03eb-6b74-45e8-a5aa-216a80e8577c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3b30c0a6-933c-4803-be59-82b9f90587d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0edf5b-6b75-435c-a92c-0a11fcc6ee05",
        "cursor": {
          "ref": "ea2a5d37-826a-47c3-a928-9dc78209386d",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6766bc49-d893-47c0-b55b-5060cc16af52"
        },
        "item": {
          "id": "7b0edf5b-6b75-435c-a92c-0a11fcc6ee05",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d238bef2-72da-43ea-89c8-09fe1e0f5d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4955178d-3c37-40d7-908e-f2e3464800de",
        "cursor": {
          "ref": "abdb8f3d-d05a-4e53-bd85-e9de4001f2a9",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7fe173d2-a670-482d-919d-7e6fc7f88f82"
        },
        "item": {
          "id": "4955178d-3c37-40d7-908e-f2e3464800de",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b50c2b4a-a6a7-4c13-8e75-4002259a6605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63667d9d-4b5a-4374-9ade-6ad54dbad178",
        "cursor": {
          "ref": "8c57e631-b503-45b9-852f-c329f5a9d47e",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7fefb02b-2d13-4d89-a994-93a4689fe445"
        },
        "item": {
          "id": "63667d9d-4b5a-4374-9ade-6ad54dbad178",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "59e7d4bc-2aad-439b-9ca4-0f51c8cf60e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8a6738-1752-4fd8-a1ed-9dfb8ef230c0",
        "cursor": {
          "ref": "70e8a481-4147-4900-b1b4-0b1dc9ae0337",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3a4c6af3-561f-4b67-b41b-5e88748e11e1"
        },
        "item": {
          "id": "3e8a6738-1752-4fd8-a1ed-9dfb8ef230c0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "51e9cd10-c870-46ba-85b1-5f6ed47162d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ada1b76-fc13-4d31-86b8-4481cc7c1306",
        "cursor": {
          "ref": "91a61b5f-adac-4e57-aa08-e1d6c8e27c78",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "27edec97-3483-4497-978c-ea51bef1c96c"
        },
        "item": {
          "id": "7ada1b76-fc13-4d31-86b8-4481cc7c1306",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "596f3bb6-e334-4ec8-9b80-6ed4b4cdf767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8799bf3b-13ad-4663-8ebe-aedb7ee90644",
        "cursor": {
          "ref": "e97d4304-20d5-4564-86e4-df270c13d556",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4cf68ccc-91e6-443a-bbd0-316179178a6b"
        },
        "item": {
          "id": "8799bf3b-13ad-4663-8ebe-aedb7ee90644",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0f62731b-3abc-4632-acf0-8e3c5de0b892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ed6648-ec1a-4ae4-8f6c-1581ae6807f7",
        "cursor": {
          "ref": "59163dc7-5fa6-4312-9514-13fce89cc735",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3cd39ee4-4270-4b32-85ec-64af010d1059"
        },
        "item": {
          "id": "18ed6648-ec1a-4ae4-8f6c-1581ae6807f7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b92d9958-3868-4026-aa9e-03a84c55011b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07cc90d-9826-4d47-b9b6-3b4aabfbcedc",
        "cursor": {
          "ref": "c4f8c63d-0a1e-46e9-896e-92761cd7db7b",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cb6c022f-0ea1-4a36-93b6-81128c7677c2"
        },
        "item": {
          "id": "a07cc90d-9826-4d47-b9b6-3b4aabfbcedc",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "44c79c4d-c1b1-45ea-9a94-470dc17d8687",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 314,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4deef75c-a67a-43bb-861a-e6504f120ffd",
        "cursor": {
          "ref": "bc2730ef-3b05-4446-ba48-f9429ad16af2",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "43ec3710-8b11-4268-a7f6-ba3c30248397"
        },
        "item": {
          "id": "4deef75c-a67a-43bb-861a-e6504f120ffd",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "68411486-ddcb-4b06-b981-cd711f83d4e7",
          "status": "OK",
          "code": 200,
          "responseTime": 493,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b1daf3-959a-4b35-9b3e-4856f3ce6a91",
        "cursor": {
          "ref": "12e62a73-4761-4d0f-a63e-7e6f55438c33",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "06e170ab-7754-4c82-865a-92fa4ffe64fb"
        },
        "item": {
          "id": "e7b1daf3-959a-4b35-9b3e-4856f3ce6a91",
          "name": "credentials_verify"
        },
        "response": {
          "id": "35a74bb6-5319-497c-aa3f-a0f537fa1e02",
          "status": "OK",
          "code": 200,
          "responseTime": 398,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20f7321-b5c4-4797-a7cd-aa98c2f333da",
        "cursor": {
          "ref": "79323747-8efe-4b1d-8f27-3eb9f9956f1c",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e2d67ed9-1963-4497-aeae-87e14e4bd3c4"
        },
        "item": {
          "id": "b20f7321-b5c4-4797-a7cd-aa98c2f333da",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "bcce600f-f853-4ac7-a6e7-3e206dc16d5e",
          "status": "OK",
          "code": 200,
          "responseTime": 474,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "20091b46-2bb5-497c-be64-caea1d46b009",
        "cursor": {
          "ref": "59f2b29e-6ee1-4e1f-a0fc-332e17c43c4a",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "48bc8612-af4a-4a96-b167-45412a00a830"
        },
        "item": {
          "id": "20091b46-2bb5-497c-be64-caea1d46b009",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1b25740b-ca6b-4fdc-a73f-7913d88aea1d",
          "status": "OK",
          "code": 200,
          "responseTime": 433,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce09d87-f5d4-44db-b906-530e0411ee6e",
        "cursor": {
          "ref": "6a43a782-5710-4af8-ad05-bf11ea7a6d73",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5477d989-be9a-401f-a2cd-94b5d4ccb5c1"
        },
        "item": {
          "id": "4ce09d87-f5d4-44db-b906-530e0411ee6e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c593d9e0-763c-4181-bf2d-386e83eb55b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce09d87-f5d4-44db-b906-530e0411ee6e",
        "cursor": {
          "ref": "6a43a782-5710-4af8-ad05-bf11ea7a6d73",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5477d989-be9a-401f-a2cd-94b5d4ccb5c1"
        },
        "item": {
          "id": "4ce09d87-f5d4-44db-b906-530e0411ee6e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c593d9e0-763c-4181-bf2d-386e83eb55b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce09d87-f5d4-44db-b906-530e0411ee6e",
        "cursor": {
          "ref": "6a43a782-5710-4af8-ad05-bf11ea7a6d73",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5477d989-be9a-401f-a2cd-94b5d4ccb5c1"
        },
        "item": {
          "id": "4ce09d87-f5d4-44db-b906-530e0411ee6e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c593d9e0-763c-4181-bf2d-386e83eb55b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773610a6-b606-4b56-9dff-f0c41ebe1cd6",
        "cursor": {
          "ref": "0cd3e9c9-eca6-4880-94ad-7bfa828eabe2",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f426ed83-324e-4cb7-9491-6578c3d4ad93"
        },
        "item": {
          "id": "773610a6-b606-4b56-9dff-f0c41ebe1cd6",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "e0050d08-b419-4107-99ff-57e6206c8750",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 339,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47add679-a215-4bff-b77a-151231d3d8b3",
        "cursor": {
          "ref": "6a6aa0e9-b77d-48c3-abcc-1f2af04222c0",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "697a59d8-3e69-433c-936d-7f15b44b9865"
        },
        "item": {
          "id": "47add679-a215-4bff-b77a-151231d3d8b3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "34a8db15-9b28-4cbe-b63e-0604adb4f9a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47add679-a215-4bff-b77a-151231d3d8b3",
        "cursor": {
          "ref": "6a6aa0e9-b77d-48c3-abcc-1f2af04222c0",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "697a59d8-3e69-433c-936d-7f15b44b9865"
        },
        "item": {
          "id": "47add679-a215-4bff-b77a-151231d3d8b3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "34a8db15-9b28-4cbe-b63e-0604adb4f9a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ddcd0f-f387-4521-a258-e4f4184bb4ce",
        "cursor": {
          "ref": "91aa4f25-7a2d-4568-b4bd-beeda364ecd0",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ffd6159a-bc35-4f97-9b2c-90f49d6fd677"
        },
        "item": {
          "id": "50ddcd0f-f387-4521-a258-e4f4184bb4ce",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "5a812d99-e203-4df9-973f-4a71af4a1ee3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 564,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c162e15-faeb-4414-9b19-e26ecc2faaa2",
        "cursor": {
          "ref": "daac89e4-ded2-4686-bfb9-2ec2cc15910e",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fff2b161-0b06-49aa-9674-36ee7f224532"
        },
        "item": {
          "id": "4c162e15-faeb-4414-9b19-e26ecc2faaa2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "25fb0d6e-a2f6-413d-8f4b-d8b693678342",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c162e15-faeb-4414-9b19-e26ecc2faaa2",
        "cursor": {
          "ref": "daac89e4-ded2-4686-bfb9-2ec2cc15910e",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fff2b161-0b06-49aa-9674-36ee7f224532"
        },
        "item": {
          "id": "4c162e15-faeb-4414-9b19-e26ecc2faaa2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "25fb0d6e-a2f6-413d-8f4b-d8b693678342",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c89eb8-49a3-4030-8816-f07b8fc5eb5f",
        "cursor": {
          "ref": "df8007ff-6414-4634-a315-46dbfda12dd8",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "dc4c2da5-51f7-4a73-a0b4-42b16c84b78e"
        },
        "item": {
          "id": "f7c89eb8-49a3-4030-8816-f07b8fc5eb5f",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "4fffb01d-8d89-4283-881c-5de386b58e4a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 550,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}