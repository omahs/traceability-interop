{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "56c7ddc1-6cf8-4556-859f-d42b9de7541b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b033051d-8056-42f9-b7a9-3703782afa2f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "62b02a5c-5709-4e63-a7bc-613f21d36076",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "58d8661a-0d55-4430-82a3-e3248f8e8643"
                }
              }
            ]
          },
          {
            "id": "d8e14128-7274-4fdd-88eb-8c274c032f90",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7c34b1f8-e46e-4d94-976f-3a62e8897069",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cee3132e-144b-4c5a-8865-ab6bafaa65da"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c57fd50d-3bd7-4ead-9550-27bdeab3fd88",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0d43364a-2bf9-44a1-8153-684b9ee0e62c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "238a29a0-01af-4b93-9dc5-96065b753ee1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1a30a8b-3fc4-442f-b8b1-9c6a47f24fa2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8378a9d2-a0b0-49c5-82c5-712d9bc426da"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9c73f19f-7bc7-41e2-afc3-eb42cc45be17",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "381951ba-e4d7-43f2-9034-2c955cdc1b12"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b2a889dd-9c9e-4f20-ac16-397a183282ff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "54e8294b-3b88-4426-9402-2285dd1986ba"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f52158e3-98d5-4976-bf68-22355964e452",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f8d059bb-cc24-4633-bdea-7f7a7c75c273"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9aceb99-35da-4434-a5e8-c7360f355906",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1d7417c7-69b2-4210-8acc-66fe9ddbe30d"
            }
          }
        ]
      },
      {
        "id": "68e89409-3339-44b3-808e-5b506d990810",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1910d400-ac52-44be-ae2a-b50eb6c8b08a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad397c00-cc0b-4ba8-b4c8-8c4cbb42e50f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b8f3b1e3-d114-4223-a90f-505c56474b7f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d26037-9da4-4aa6-99f6-1669027ebf9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0d46dbe-e604-409b-9cca-d91c1446d422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f1bbeb-bd0b-4064-8e86-c3dc229b6103",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2206977b-c909-4e03-b6e0-bbecb1178260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ad182ea-e157-425f-92f8-d5c3f16d5081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0ac0a8-d0b0-4b4b-96af-4ad39232d86d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd922b5c-ee66-412f-8a71-9253228d60f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d42bb904-b6b3-4627-bae3-dd6e7e67425b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6923e553-c0fe-4e9c-a107-8c65a86d19fa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e553258d-2b44-4714-8f17-41a71b25e2cd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f85593-0b3c-4584-83b5-7efefef504bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc219c77-2a5e-4d53-a59c-d1a296b2aca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3fc132-86e7-4b0f-86d0-2ce0fd36e22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be77aeb-1028-4d2b-be27-94c01bb16341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a290f5c3-d0d3-4bc6-add4-f1daa2cb03bb",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebee09e5-a79e-4e1f-aee1-f98972bdc202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2bc4c146-d0dd-4228-a2d9-e25f65d6c667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e56c7b9-ef56-4922-9630-7f14c730502d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "c75b07e7-42a5-432a-b640-79d246ce594a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "42ac5776-9ac2-47ee-88d9-b6ddb5537867",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3eca2d76-78c0-4e5a-b174-446e6f91b67b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c82f2c6-11ca-42ec-bd2c-3a234c7025f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9bb676b8-c316-4768-8083-a3ea71060323"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5bebd922-317e-4045-b1dd-67975ba7a59a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "da99d67f-f94b-45cb-b676-111607351faa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5308d58-6a63-4771-90df-6224c5bae166",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cdb478fd-e5cb-4663-b476-8836ffa3ee51"
            }
          }
        ]
      },
      {
        "id": "1834db38-6c8a-4f5d-bd82-a1a3cd445455",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0e4151b0-3b07-48ae-8df2-5781ab4b0490",
            "name": "Negative Testing",
            "item": [
              {
                "id": "103a8b72-46e4-4720-bbc7-30b3d274adfa",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b49f4d9d-c67f-4854-8a3e-cd0cd8fab69e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45278afc-d0fd-4df4-8ee8-76a0d98cbb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe52a6cd-f9dc-45f8-bc31-a1e114160370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31627774-ce0a-4707-ac2f-02cbfff2169d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1db8f7d-d66b-4281-bb8f-333a913fe8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5b63fc-60d2-4f8d-a8bf-ba2d0b8faa73",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67baf155-03bd-44a0-b2d6-4009b8e8ea58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4769626-55f4-4e78-be60-4507377ffeb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c9a549-ee01-4e9e-8b1d-3616cb18e61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7387bb5-7fac-4a6c-810c-03007bbb2e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ab59ae-1496-4d10-853d-11ed3901a3ff",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540bd5fe-20d5-4932-ad30-5ff1be14fb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0186ac-0fe5-4e6e-8419-36f580807719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fdc833-afec-4d91-bf19-74ae5d6a0967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f19adaf-c613-4159-bf82-dd10d90a3e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43de8ca7-b2ea-48e1-8db0-c459398e924c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d931ed0e-b949-464d-a4d4-c88a86aef370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31432fd6-c069-42e7-b63c-cd311b3542f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153d871a-951e-4833-b1b8-37ae7303541f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78471231-af94-4683-bf4c-37755357e24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656a5196-77c0-4a2b-8c88-ea29607ea85f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b43d7d-6902-410d-a10b-cb7fbb939453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a19cdf-ffe0-424d-8029-643049591fcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2844757b-b0ce-4d16-8147-225785f31cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8bc0fe5-69f3-47dc-88ab-fd34cc6b62d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d9d1c1-b2b7-46d2-9ce3-4abbd07c892f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a204d1-40a3-4794-8a44-03caacab4784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bcf843d-612f-40a8-888f-4920ae813619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681af3de-43a5-49fe-b304-969850706ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a602c868-fd9a-4aaa-8193-90eceee586fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0422921d-eb1a-4e9e-9023-1abe399e2c15",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e475a0-79eb-4e3e-859a-e2daa2402d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd47acd-8458-4588-a251-5466314ef833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11b70d2-e007-438e-8546-ca3e66722259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0b510e1-4eef-42e8-9dd6-f11575bf78b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6706f6cc-6c24-4575-859c-e05af1be6492",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3fb87c-9834-4949-aa23-f7c04a64923d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ad2b61-4706-4a59-8aca-684c7fe376fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c0c041-43eb-42b2-84c4-c38312a6355d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6066b5b-c25b-46b8-ac16-f0e47107cb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139e901e-ad70-44d4-bf5e-b98a4bd83871",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ef302a-9ec2-47ca-94bf-2df2380a2b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f96d6d3-0c81-4fa7-b3fa-29ede37035aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cbae1f-7cad-4ff2-abb4-cef0d2a0a52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9ecf9f3-56c3-44b8-b41c-c7322bb98757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa04b3a1-a585-453b-b7b0-e9a853f9372d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ffc205-8493-4807-a4cd-5234b9096276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e4ca557-eaf7-4612-9907-9d8cbc15c69b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca6d8e0-774c-4180-9c1c-1e389c29f59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37c3a8f0-f4fd-4867-b642-0c4cd90d60e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c708fb54-c8da-4f68-89d9-9584103a681b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbfdb9a-9483-4d03-9897-799b53df0925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "595f2fbb-8bed-4cf8-a901-722fd1d01ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88eface4-eaf2-41e7-9411-f18c99ae75c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "311b4186-78fd-4a74-bacd-fcb6da3e0e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82137ed3-7a0c-41e4-a0f2-ecaa220d76a8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4fc6f9-b9ef-43bd-8ff8-eb1ace9baa98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0951f6f7-b531-46ba-b9a6-dbf516e1118a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f5ee4e-f2a0-49b2-86e8-1ed0075126ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5177a1e9-51e9-4b72-9d5a-d60890c808d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29951ae1-8f76-471a-945a-1d1b65880dc0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5149ec80-8296-41d1-9a06-b50e69997acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940c7562-ff06-4a0e-84d3-176753ddad74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d157f93-017f-4117-917a-2151c78d0707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c4c466b-ca69-486d-8695-1ed2a9d119d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eacd587a-c7aa-4b1d-a0bc-4183cdd778f9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b809df8a-9da0-4182-a7d6-ff3dd5c54bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a31fe4bf-bc94-4e7d-8264-4377a37ccd71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1b15cc-f361-4ed0-a4a8-cacadf2086d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5d46e57-2d23-41c0-a9d4-7e70778246fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da50f93a-09a6-41b4-8db9-59824e1e781f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1724d8e-1ca9-4024-85cd-4b8699078930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68917a0c-c619-47f7-afbf-744651881d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870c8611-168c-4d7b-8bb2-2f293871fec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52445904-a844-48b7-b986-c3eedba34474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3f362d-5977-4794-ab3c-d8772b907bfa",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3164f940-522f-43f7-bdd0-6ec30ff07316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8385cf4c-e247-41f4-a5ca-98eee1894b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5bf8d3-1dd1-438c-8abe-294d238a0948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bdf48e1-ab32-4359-ad14-7e4074115c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63141bd8-7b38-41a7-91ea-c08873d57537",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc45455-52f6-4431-b4d5-1ce137e133bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95627898-6576-415a-8fe7-8fe6f94a1340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197be353-2462-4b98-959a-5cd9ee6ff40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77b2083b-245c-4cd9-b447-9a2b26339120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8252d9c5-b24a-4494-bfd2-253bf9af3ff0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "215eb648-a50b-489b-8c14-3953a9d23540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea779a8-4cd2-4c33-8289-b97d7958f37b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06b0e27-8d49-426f-9375-b84c47dd921b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "80229cc3-84cb-48c1-a51a-9f866ba366a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7b04d4-55ad-49bc-88d3-a68fab52e726",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b77918-1591-45fd-909f-5ca7de9bd425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39a03f4-9731-4aa9-bcf1-a761a870801e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647c29c8-5235-4997-a139-e8bc0d84b22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9e16e7-bf2f-4cf6-bfc6-9902285b5ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d47a140-be2e-464c-ad9f-e0632acc1e0b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a0f0ad-0982-4c94-a00c-21ba473d85d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be63c3f-4743-4755-a7f6-ff0a08a05913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f6f989-383b-4aa9-9e4f-b871bd87fa75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22caf4d1-8433-42e6-a9a0-d97bee96b410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e92720d-c74f-4d4f-9c18-dc92f454b997",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b2a329-43e3-46b6-8e69-85dffcae6306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a740bfb-c93f-471c-97c9-fbc8b89cd6fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46a9648-15f6-469c-8f21-91ae120f781a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33e12431-e30e-4e9a-9c8e-d2400e120156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc045f1-d61b-45e8-97be-ea628eaeda7d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7049416e-198b-47ce-b6d4-fac2c9fbbb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d466f7c-2517-4e54-8820-6c94cd9df6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7448c6eb-7b70-4a8b-9a3e-51545359d9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0803ee73-8987-4689-af5e-40ea782755c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca97110d-061a-4f53-a310-aa072cf0ec4b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0dfdf8-c049-4ea9-9509-573d434b480e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c781b470-fc06-437a-995d-9b89b36c0104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0268cc15-b74e-46a9-b41e-5df8b7032a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5be7f7e-c29a-48ce-8470-1cc333589735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be4276f-a118-4c2f-b80c-39e03acbd7ed",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44124513-929e-460f-9cf6-d4ef82fda288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576d31da-355a-4813-b3a6-c59f4a630480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2293fc1e-3b6b-4d3f-bf36-f7d08c61f40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed16817-2cbd-4f5a-ba35-19f165758502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd600d53-7511-41b3-a9b6-745e2d8001e0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca92eab-0339-4c36-9c81-c23ea46aa198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e97a5c15-fd07-4a5b-b762-2acfc58199fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13ecf2a-3fe8-4f07-a5cc-cfdc63f770ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b70a9da1-a095-4a59-af8a-c2a3f389f139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204941f9-f904-42fe-850b-78f8ce371003",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280c6c64-3391-4145-841a-109f8e80aa2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f079df-0772-46a8-b6a7-c5500acbdc49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700320dd-acef-4d23-a301-1ca7fce8bd28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f85ecfb-f25b-460e-84b0-4f57a0598680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d23a48a-d6a3-4c73-af87-1a24dadd304a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1709e9-82cf-4129-a748-0216f584fb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961d6e3b-52db-4ff2-ae21-60c7ca71ed62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22abea93-0d05-4221-8b96-e5df3ad44f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c694545a-34dd-4f9b-b4b7-124cfd985da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d5a9b5-d5d6-4170-b126-b9a91153c06f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57e556c-b11d-46ff-a8cc-76e9a7aca249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b962b0a-c08f-44a8-86d1-1cc87967dc49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55705f5b-9904-4702-b202-90731fcaf9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6007b240-9468-42cc-bf64-d3e209f117e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7aa70d-390d-4427-9eb0-27e1c9c3bebb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f533b1fc-bf4d-4d73-8017-cce17b9ea889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "960edef6-63af-4b02-b0c1-9c1e600e289e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd2c33d-635d-4e50-9143-f2d2ab67dbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e78a3a2d-aac8-43c5-be31-7ac71a14cb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59e55a4-60f3-4480-8280-e75e720b2171",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f316f78d-9769-4934-9112-7f0849e42846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad65e0f3-e5e3-4caa-afc1-39aa83e055d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb345397-35ad-4bd7-8e75-a826591f3006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c4c3de-9f3b-4eda-9e1c-1104494fb28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46610b2b-c807-4c83-a6d8-76b9ffe91b0a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b056c8-9f3c-4b96-931c-f07f84dda3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "743c6a8f-9d21-48b9-a740-8056f1b3c5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfe0ae5-b1f9-4bff-86c7-62b588dfc9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d5f9c1b-232c-4b54-b208-4687c9e0d039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768f07cb-2161-4e3f-a6cb-5b7a7acbe013",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "776ffa79-fc8c-4cda-b73c-f329e2400da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd753d0c-53ea-4bf8-9c8d-5c8fad20a08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962eacf1-1e23-4d35-b2b6-2cb532b398f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c367c7a3-8f93-47a5-9fdf-b981f1bc5401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541b5b55-c875-41ab-a5ed-3a474e2578a8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a42b784-1ca3-46d9-891e-a7d4aaa0bcd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f65aba40-8cb4-412c-8e3c-f0693220fe9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7608cc47-da93-4a2b-921e-7584e4e70636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f04d00-73b0-4640-b198-ccd7444aed3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0077199-7387-4ebf-ba2b-c4b7f9d59cf4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fbf67b-083e-4659-8f11-331fde78f419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d2904a-7c16-425e-b207-9020e07ae7fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f7a81a-fef8-4b22-a871-358f1b7cd0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc4a7f4a-7967-4629-9dc2-bcee2cb1a6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcac330-7130-465f-a657-41b8faa86ec3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c081331-3bd7-47bb-8f69-36c65c278013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d36ee56-4c5c-421b-861a-20c1372655e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38ecbc8-b752-4d56-ae05-c5c4be5760c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7b029203-027f-4147-aab1-6ef66dbdee6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e169654-7c8c-4979-a842-a2de2cd6e136",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1deb3e-20df-479c-8e01-4af9ee701cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5aa198d-a5b3-40f2-b490-41313e0d7e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c199a852-60f0-4a17-8595-14438cb2997e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4f503b-fbe7-4bc4-bdbe-981bf08ea6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170b2da0-5d07-4459-b730-d32914e2617e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af70c3f9-70e2-496d-b723-5202f5045567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb272e65-2391-48f8-98c5-49f8026be92a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358822a5-f1fe-45fe-aa04-8e868b21d28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2fb555d-9801-4740-9ab8-66b58e278862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d88b7e-d7a1-4f37-8220-f78acfef93cd",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae15adf-9119-410c-a5c9-b40a82408367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6192d7-b487-4edb-b14f-0f4d5f31e553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecb94a5-69a0-4833-bc90-2432dea60431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "90d39136-31a0-47b3-8451-5003c0013aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7248ee0a-dc3d-4ca5-95d6-e30d741d3092",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5f04ee-7796-4f92-a1f0-d3253e5ce2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6da0fa0-4c33-4846-8b76-1afded3b47a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e48d3e7-ae00-4d82-80bd-bebd8ff57017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "681c88c2-ed41-47f3-8852-7a14294bc355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28e18cc-9005-4858-91d7-b4097c2596ee",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cba2fb-c981-4a92-8324-fa6f3a61e48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8d0a86-d28a-43ec-84f5-9c289aa83c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b28614-0d5a-421f-95ac-d7ae667c183a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "37a3a600-ad52-4ab6-8774-1d2d1c961cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8eb6ef-f357-4103-b3a3-bb3486527eee",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb2de6b-e9ba-4c93-ba8f-0cdd152461dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d6cd26-4614-49d7-b6ad-c0879e7d3b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e068b35-c0b7-4ebd-916c-568ab6102665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff342b74-a46d-40d5-8ebd-105956e40099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce3a893-2f8f-4232-a5bb-85066ab03ec9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f826a329-4b26-4606-872e-ca2e2dc46ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a88920-1fba-4d6d-ae3b-64826f115373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed44cbf-1b67-40d2-afee-3dd36f9c8380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c34ea48f-3f75-4f4f-bdf8-e3a7eb9c0ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5ebada-812c-4a80-8193-e53682c1a129",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "046038cf-5673-464e-a14e-9753d14a22ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64d1883-6433-42c3-bd84-96e314cfb0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5587cd5e-fe00-452f-8033-6040b3c56be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "68c3a2e9-bd25-4586-ada7-abd4c1b47b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2119755-2602-4bc6-bb14-81683605c980",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1f48ef-8ef9-4751-8a91-4ae7f5cc2867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e40cb5-104a-45be-8c64-2e581f026d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18a50ac-baa5-44d2-9637-1c060a3583d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e56f9374-f447-48bc-9934-71f248b1f94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29180e2b-0084-4e57-8a00-cae343a8625b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14960994-65f8-45f4-973f-a5b50c68526f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c9b31e-c703-4e72-b809-16b65550814c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9601c158-def2-4004-9cc3-da2df4922a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "53d11170-945a-4967-a9e6-3a6f815c7bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6698f79-7594-441a-9066-3e77569b89fa",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee14e383-e26d-41f8-9d91-7ce2362d3ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0982be-c281-440e-9b85-fb84b5cb55c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8b7fc7-b70d-4309-83d9-2b7a1741f34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea235d09-5f44-40ab-bf75-ee2b74c091da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b815134e-f2d3-4881-8f05-24604feda72a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6994c5e-71a4-44d5-b74f-70d0ce68266a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113ec3f9-2eb6-4400-934b-03b1958d74d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf4f068-2840-428d-afb1-a3c270e50067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2dbf3f4-5a63-40df-8a99-dc074e1ccc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8652d6d3-e59f-408d-9f9c-76fdfd5c51cb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f35f32a-49fd-46a8-a4b7-daca645d5f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda3660e-d09a-4255-b214-68b667072c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e621471-929f-4a28-bd0a-143e90a8cf9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3313f17a-9957-4889-9359-d2f001b18441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f23f7b-dffa-4411-beb3-b92e65a1a30b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04528821-859a-4d08-a07c-259d2b2e84db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94e7605-53dd-4563-ba55-fb60d17c274d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e85af2-ceb9-498c-953a-15133a3c6a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5547863-57a0-4e71-89ff-a12b364f16ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab025cf-8a86-41e9-8096-9fe9a69ad857",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a87c08-c7e0-4eb0-bf65-fdbbdd65f17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13725483-a323-46e6-b7ff-b439012f18af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a004d8d7-d8e8-4dba-b1dd-3da8b3b1460b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1f5478-da4b-4aca-aaa9-c2b92a350942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4939725-c50a-4339-943b-07787733670d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a08e39-0d2f-46cd-baf9-e0b9fc1baac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72dd653b-8e1a-46ee-92e4-35cbf1e742cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeacea3c-7cee-49f4-90dd-342a5a9b27cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d449677-71ba-45db-ad03-4e3eb0e39839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6dbd6df-1764-4430-b515-4668544e7211",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb31949-891e-4c8c-b15d-1b3f1e926735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b767795-0438-4a63-b8b3-33aaa8136633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296b30df-b4c2-4a07-ba76-4bc39e429033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fff496e-235a-4fba-84a3-31c3882276af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1027a901-a4ce-449a-b12e-741fb4613d82",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aec9986-a49f-4a3b-89fe-cb5081820d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1500d1e8-a1fc-4930-a970-d065f2c19463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071d0aaf-5d03-40db-b992-c773b19a1cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0cfd1ce-3c8b-415c-9efe-7d579670128f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c49da8-5c94-4dbc-8b99-1175952214fd",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99bfdb5-caf5-4e04-b687-c8d95978624a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d63bc7-887d-4b1d-bbab-0d866c35fe64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa08aee-9ee8-4136-95a8-e4feb54c603c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49ea82f0-7700-4d9c-ba45-fc8c227ccb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8be6716-0f97-4c2f-8cf2-b53a7113ca64",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2583afb9-7344-4e67-8688-3cc4713d7da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c0f5fa-fc4a-41b7-815c-8fcac5d19b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9671a4-1cc7-471f-a11e-8156ffc5c544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d056d468-fec6-434d-b9ba-64d01eb17736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fb9bdc-13f8-401e-b607-a10c7e357817",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1b0b20-3b69-4a52-8db4-b8951b899771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d411c9b-e598-4793-8b81-0394f01297c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d390e270-290c-49ff-8802-e169236c1ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "61ae1518-8507-4168-856d-4410a94f8ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12df8020-85c2-48fc-9e35-18aac229183f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f713aa6-2f99-4b29-a23e-88d77acd99ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c53d067-3c74-4b5c-a45e-6611f80f2613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acda2d85-c825-45b7-b7d0-91c4a01788c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "87b0cb15-e67d-412d-9ac0-b5e5b4cafd45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a0efc2-6a0e-4f9d-833c-4f82ea2109b3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b3916f-9bd7-4a70-a52c-418fd14373df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc47afc-a830-40d0-b419-248e4acc7a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d234db21-5b67-4616-8d15-26f402979d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd2e175e-5e4d-4faf-a8db-0f25741f01cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60812d71-4850-4f0e-a588-4fa63e8682ef",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603b1b3f-84d8-47c4-80a5-709784bcf13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30aeeea7-c7b3-4366-821f-904767a62944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5a6d4f-11ac-4386-9d28-93e6b6a31742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5aeb1848-d850-4120-afc8-67860031c4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ab7128-6023-4716-835b-585762a4b005",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a3a410-5204-4693-9c2a-e7fd1fd320fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa8ae16-0a24-44da-8a7c-e5fb46130f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0908fd1-7347-43d0-b444-ef59f4ed3c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec88647-a505-4743-a839-7c3de54936e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba948c91-7963-44b9-af1d-ba0b9850ccc4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c2371b-2d8d-49da-867d-9419161a67c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0f2a39-acea-4ecb-8ccb-c82867825b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525c23b4-4a27-46a0-999d-b57a48df0d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "95052adf-677e-4d74-a6e3-13cb06267a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13916fe1-6fea-4dee-b360-78f352d1c0a7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f190f0-b142-4138-969d-70a0a14dbe63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a1b45c6-d1c5-4a6a-965a-bea1c41a5eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204fa689-7d89-4786-aca9-10999642aba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "88614643-24e1-4163-a2ab-a977e9ce1fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699d5849-e400-4580-8ac4-8250d23fecf0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37d01a3-03ec-48cf-a409-e59749006042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a649cc6-1223-4dc4-a536-e3d1d25543e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2850139-9f3c-4c2f-b182-79e4e7ec0866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f0a729e-5edd-4fc3-b404-4f4c93869c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7f0ad2-065d-4760-a445-a211c2c2d0b9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ecaaff7-381a-4312-bca4-b15c84a1888c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d8a5bc0-6846-4889-b8d7-075ef3a9b0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23979f0-f359-4fbf-bff4-5bc2247db911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d05aa0e6-e5ee-4728-b51c-53b22f9f69f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e446d5d7-f82b-4b7f-b0a3-6e0c551dbd30",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc7983f-6b2c-4447-ab02-40404918f04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da60435-890f-42fd-80d9-fe6fba462661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa53c52-80d3-4539-93b5-f8e66c12c22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2cca0cb-360d-4259-a1fc-47bd7f5517fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad65a35-bb35-4c61-b16d-c558832774fb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d72c20-cc7c-467b-af06-9e4fb214b8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f29c3e-de94-48dc-9254-4c4ad507a321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec739dab-e8f6-4c4c-8928-b75998783d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6459a479-135b-4d6e-9543-ff2f14284a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effc847e-d7f6-449e-a209-774ac6eaf0f8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72036f6-14a2-4e8a-b20d-0c2f4424b24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b09cd19-a080-4f82-b500-b0ed25788062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee06618-2702-494b-94d6-b7c5abb415ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce367030-10e2-4a29-915c-39b8a951102f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97fb967-dbbf-41db-b22f-49aece042824",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85097adb-254f-4c74-aca4-0f5f6fc771f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a3166c-436a-4e00-b47e-629c641d30a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2dfaef-ac4f-48c8-8c65-034439adb4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c45405-4848-42bf-981c-fb63d3c744f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4f12e7-646f-4fb8-9dc9-04c2d850e287",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b2d92d-f996-4bb9-9cf8-9576d0e1ec88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7443fb8c-1868-4c66-bbf2-fa6b68cf0a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3526387f-c5b6-4675-a6e8-de488120932c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "db7f8f8b-da5d-496e-97ff-2b72250d885f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf9440b-dc44-4058-83e0-67bc39a5b6ec",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "610d182c-b319-4b05-9bd3-bd407d2baa24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1060e04c-799e-4d1d-b36a-d2692740eae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970c6ac6-f9af-42d0-8b6b-a2efaf7c9643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f64e5061-8e00-4856-b766-7f13e1fcaebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37fd551-4f48-4edf-bfb4-7ab9faad8a3f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a372deb-f0f5-4fbe-9f6b-aab123cf5034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bba73f2-3bd5-4469-82c1-536ca6fdf18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4967bd6c-4f7e-4c4f-b688-5be79b8e14dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b44e86-6236-4165-9742-c03ea750606b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba73148-2722-4193-b1be-f771461e8b75",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cba35f-8573-4b53-9688-5ba95109fe45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be9b56b5-3f36-4f73-87f4-2ee04ee40d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa1b0c0-de19-47a0-87a9-74ffdfca9f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "974c16f7-4261-4fa5-aa1d-d962ced210c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e5cf05-d227-4132-8927-6342537bbcb9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a3dbdb-65da-48ab-851e-0f09166ffb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8279bdb5-a3a5-49fc-a16b-7165e5365341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3335ecef-96af-4c68-938a-b24b0766318e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "639543a2-9320-44c9-bb08-2ebeab0bc4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edce0e7-a2a0-4c0c-aaba-0764ccbcec68",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acc514b-959f-4448-9aee-59573255a1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea3d4e3f-e4b6-41c5-a35b-aa2738b6063e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f72bf1-09ed-4165-bf3c-46abfaa1b081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "efdf74a2-5b4a-488a-860b-e785cb124415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc98d8e-68d0-4cca-a654-48df0f91714c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e616e1bd-aac1-4e12-8e69-be6a189ae9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a2cdc49-93c6-4bc6-854e-74b5568b9f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc6214f-31d9-48af-902a-6f3719a67737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be010001-0b12-49d3-b5f2-9da34e01816b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8da216-7f3b-42b1-8916-dec1328b03b7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b752552-704e-4d42-b141-716f83f5db68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e707dcf-0643-412a-b8f1-7b2797d11149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedece84-636d-4cce-a394-452cbc872b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a135b56c-2bb1-48ac-ae03-cf7852c39d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3d672e-0b7c-4d33-9d8f-ed36875e56f3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82326c0-0641-4108-8e34-55f7a4fb3726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49317b00-daac-46a7-91f0-664a3fa4d401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20ecd9c-9bb0-4c4e-b834-5b571e0fc81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "145a094a-97eb-4c07-aec7-1ee4284f71c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960aecd1-6a71-41ff-9367-6197e2008d5c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a94827-6c94-4385-8da5-3ce5800e815d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced52af0-81a1-4519-9dfe-17747b857df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02c767e-8936-408d-a877-27c2e44d90d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "233e7980-49f5-40fb-84e8-7002384cd6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b96c174-6d6e-471d-9715-7588c3394f86",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537d5487-efc1-4ca9-9252-e99e7887817f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4442b68-32cf-4589-8a0a-265578b3516b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2512dd82-02eb-4adb-9bfb-1ec8c0a12c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c710a4a8-0d80-4ae6-b229-174b4c654e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f58d2e-a793-4961-a366-dcece55d4e9c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd1f35c-ad72-4974-80bf-968a8c755dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34251ca0-ca5e-4cfb-83dd-da524fc61911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102a7dae-99fb-45ca-b9f7-9e8bd55bd8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d879149-07b8-40b1-bef0-01f486402477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d39c92-a176-4cb2-b3ea-dd1362a55202",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4750d376-f1a4-4bff-be3f-3c324012476b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ca8267-b055-4e50-b893-77af8b2d98be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0824d6ef-73e5-49d2-9325-e35ce0293250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8707b44e-000a-493c-a437-9acd4d69c4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad645f48-7ae5-44d8-a7c9-fa0c42a079d4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9867637-047a-49bd-81e8-d5e15c5b9e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad88234-c101-45f8-9f41-90c1891c873d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67141720-e237-4a03-a119-712d404a48bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1dc3929-6970-4c42-8977-6111442ea2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926d5fbf-4185-4428-901c-3ee8d555b4d2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7154da-48ba-477e-b803-1594e55217bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d8b182-0956-440d-abea-94c1c0c9142f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d85454-b90a-4ba9-89a0-9a1aa78d58f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08a94f19-b6c0-4723-b4d3-502c9ac4aedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf17e63-80db-4e0b-bf34-538be0ddfd3f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9a17fa-3598-4a0c-8671-76236a8292fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198b1af0-4796-45a3-a1e6-4cbbe011451b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b3b54d-4505-4d70-876a-8e042f27004f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc8cbb6-6646-4a16-affb-7291e930d02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8e78ce-88cf-4946-85eb-24ca882916a6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36528271-66d4-46dc-915a-4a4afa2dcd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df3a6e3-fd4f-4efa-8709-b1ea4a9808ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803068f7-49c9-4290-b15e-5840da0b31cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff847f2e-8d66-439d-972e-da10ed3fac69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50cfbdad-ffe5-477e-b740-52b7932a08ab",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf1e83a-aa19-41d1-acd8-cee2db700fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea6ef64c-ebe8-4e9d-847a-8ae658c4735c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c0423f-a777-43e1-a708-8963cf184aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b901f76e-949f-4e00-b12b-30dc77ef2180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559a1700-0257-4cd0-acfe-878578bf657f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a034a990-f255-4309-bcba-455d2d7ad580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "843154a7-caf8-4087-961a-51be917beadd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4d60bb-165f-4a67-91eb-60cfbcbb1392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb22976c-20a9-4f96-94e4-86d051c47665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf41601-a958-4966-bc22-8ae8ba0fb044",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd0fec9-4ee9-4b8f-a396-28931aec2c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c2f919-299b-4020-8160-debd19f0a7da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82dbc528-d464-4941-9743-c466af7c6643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "18f07de6-c3a3-4779-8887-b811b67cad3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e4b486-7f7d-4d7a-a458-37736093a550",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce17efcd-98ca-4220-afb8-62e932f0c019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c095af8-5096-42ff-b151-86e9294a09b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a56fbf-fb78-428f-90d4-890a86ad7a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e7f8650-02a8-43a8-a604-0da6afa2514a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad91d9dd-0025-4ff8-9945-8f76ed60d02f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a0d209-618b-4d3c-aac3-cb88ebe2390a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "422eb2c1-875b-42d5-beaa-05a2ff0bde4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419878c5-7480-41d0-83d3-5621b31bc0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5196974-4445-441a-b22b-98f29a5afa2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729e9de8-b8c7-42fc-87a5-921f2c793b32",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b42a3f-8b55-46d2-8f7f-ad2574471477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d90d2a-9294-4d3d-b4e1-aa774affc2f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a16a44-d0f4-48b2-8a15-49cafe68f3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d94ae42-01d7-437b-af45-d8f3d0d4b6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197bee41-23c5-4355-8701-f7e900db54f6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3ff12e-5b83-45d3-bff6-b6d808996eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2a31a3c0-5f90-4ea0-b9cf-8988f443a674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb578679-b129-455d-b764-ae754d85f053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8614994-7788-40e8-8c35-a01a983635f6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6b031c11-fc46-4481-a34a-cd9e0bb11999",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c0b5e5b9-489f-4a33-a6d9-21716f079ce9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9faf0c9a-7320-4d62-8df7-c6e84488ff24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "591e7b02-f3bf-41a3-8c5b-053bab1d105f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c759e0c-6f5b-48a6-89d6-cab18793ee36",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "ea364131-3207-4fe1-8b07-dc6968aeb7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22aa3e66-1bca-49dd-b315-4c7070962abe",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab8c4f6-99df-4674-8c83-fe2b9d0422a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62b2dcb3-29f2-4383-bdf0-1ba61b5ee96e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70bf5b49-4b08-478a-a803-fc548a79fff1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "88a47643-7bc8-4b00-819c-3deb251bacd2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9750db72-8546-430a-ab9b-2646f2a9a9e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "468025f9-0d7f-4082-9c06-d7aeab778cee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "808f9c8b-d087-4026-ab42-acd39bb17fc9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e8c0ee2-3988-4647-a6c5-524fc0b3b3c4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a74241e2-f0f3-45a1-a5c0-3f61b368b5b1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5c4855e9-c8e5-4966-bcee-856791958813"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a6511682-cd62-4bb0-9829-b38d4ad4fbd4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e75bee68-2848-47b8-9490-53daf3ac336d"
                }
              }
            ]
          },
          {
            "id": "89353461-d89b-42ee-a157-a648d0839243",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0221705b-1420-4811-8ae6-8b4d790664ef",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b938aacb-98fb-414f-8a11-2430faa30c3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6727e431-dbf0-4222-b078-9c8c413ac046"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4cf99833-1aa1-4d98-923a-bacb98b9c0d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "077e7dcc-1239-4002-8632-fce2b168f799"
                    }
                  }
                ]
              },
              {
                "id": "8718556c-3cb8-4918-886f-bf877e55ba57",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "999df565-0678-41ae-aed7-a89358faee90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a177770-7adc-4b31-858c-f81e17a36005"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03c54e70-4f2b-41a7-a6d4-dfe87029cbd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "888a435f-2469-4def-95f3-9143f4c8f12e"
                    }
                  }
                ]
              },
              {
                "id": "4453f9a8-5236-4433-9e16-31dd0aa6230b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b3c4720-cd09-4cfb-a2f4-69190a494603",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb80cea9-d81d-49b2-9769-e47467c5335b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b5fbfb5-95ff-4f87-8545-2b3bc6aff060",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d74a50a9-bbe9-457c-85e0-03a1b00e5d14"
                    }
                  }
                ]
              },
              {
                "id": "bdd23c94-a21b-477c-8717-fcf0c5745792",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "360b1ea1-2b3a-47ee-8561-885c9128aaa0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5fbae0c1-282e-4c0f-bf85-753e4ed8a945"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd4f3e25-a4a7-40af-8ddd-c603414b1a0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "15038d2a-c038-4cfa-8b17-3d3e6e28edad"
                    }
                  }
                ]
              },
              {
                "id": "dbb1e0f8-73db-42e6-98eb-5cf80bad92ab",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc9a801c-c96e-4ade-80e5-6e21f07b29d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e95bf597-139f-4a4b-84d6-35fa16d29075"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6b584ee-c2e1-47cd-bb3c-95c3e3dd55f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "dbea6956-0e28-4ef7-ad5c-74975fc4b77c"
                    }
                  }
                ]
              },
              {
                "id": "9a42180a-5dfc-45c9-ac2a-0612a667d02c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7518952b-91af-4d73-a98d-c8e5ce684f68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "551521f6-b8d6-49b3-ada9-ef03af7042bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d5e91fd-59ee-4697-a501-cebfc0b209c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d141169d-9056-4170-ab5b-139eb7a402c2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c65bf1d-9d66-4766-a014-a816522bd719",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "780a9a29-cdaf-4f7a-a1da-af2de9ad7c4f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1214323a-9529-4b04-a664-2d2f5ec67854",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b5b7b4c-cc64-48d6-8752-4a0570ad7ca8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b7ab481-1d82-4cc8-803d-4aa38319ba7d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1f7eb2ea-7f3a-4f6e-91bf-52eacb207c6e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70873eb3-e3c8-4f8d-aae4-aa987c9c85d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56ca2dab-8e49-444b-994f-8383bfa06f13"
            }
          }
        ]
      },
      {
        "id": "bf96fc24-cfd7-4f66-8293-4affb9a6f514",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "88463830-9a29-4aed-a819-87e8d6a1ee05",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8ecf335f-bdbf-426c-bb79-c75df2dbaabe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3e2c1359-ed86-4755-90dc-f83fdd7ad204",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30065188-9a46-44fa-8eca-a63340bfe0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b23cf16-931e-4771-827d-bc4ca3aa40e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5977f5-af47-44eb-bc6d-d303e9d75f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "82523db1-a5e1-4aeb-b5e2-39e7b3967c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db156209-b8e4-4996-a580-a93f6343ff3a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21082011-32fa-4746-8d16-aab1de38eb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2191079-0f32-4db7-8ace-2ce08ac93610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477bd416-e73c-4537-b9b1-78efe1b8d7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f07188cf-f597-425f-8500-3d26881c6d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c634121-97d6-464c-9f40-0b1005279d94",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35abc5c-dc58-4809-a74a-3b9e46047b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "436b0f11-df42-4299-8657-6f8391771044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5a0aa8-d274-4b12-ada4-091c93f8a967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b273c1de-de3e-4b12-bc19-05450ae240b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a11665-f804-44ea-be27-6fc6497e2766",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89d84c0-1429-43de-a80d-8a21bce0668c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0388ab9d-6fb0-4436-be6d-310497b2764a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f46ad67-aa9f-4977-9f71-30d3feb291de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d38f10f-fb21-44ea-b98b-d9d29c6c9a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c731f2-abf8-43c8-afac-da985d419c6c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376e0241-c15f-4989-8437-621762bd9281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f766f936-c3df-49f5-a23d-ecb62e5ba8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead7a996-1480-4b5c-9682-0b5dfeeba0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14f72c2d-06cd-4530-8fa7-cd53fe2cf5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bc7779-5e2d-4c60-844d-b4ef4bbac806",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2436e57c-599a-46e3-896a-4000027f4497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5ec80c-cb57-4efc-b22f-eca2587d3702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3c67ab-ab82-420b-afd9-d8712a40ce0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e780e8e7-32c3-435d-bfcc-1765589a1433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f24cd1b-21fa-4719-805a-bf79b7e2600f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f265d62-791f-4545-829a-7e2e00033fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "156b997a-8028-4bd4-a7ed-f13b7e962c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9c73d5-d8a6-4385-b263-c0321faae0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "56871b26-a67f-4b88-9902-7eb7264ec3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a06803-938e-4bde-9d7e-363799216b0b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f877d92-988e-48c0-8e0c-78b6f6daba82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55615cc6-6bd4-4b2c-a33f-2c0e6a5f7530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8366b31b-c237-4c50-8847-e896413c2d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "985709c5-1371-4618-ba5d-b84351d0a532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2eefb6e-4156-4b28-afc3-7c62cf335f4c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83806d0b-174d-4e5d-9388-887f41c21d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cbfb0ac-b096-4d94-a809-1ad9673fe6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b08b2c-ec5f-4034-a57a-1b91a3a269ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04b8ad1c-becb-4492-8038-a228c03c9871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e46ca39-7db0-4d5a-b222-5f1c414b97be",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7697eb1d-b731-4fa6-b38d-cf0f29cf9dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18498fa8-02b3-417b-833e-ba4b02be460d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c89374a-5732-4aa0-bd2a-ae78100aea20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f816feed-f8c3-4921-980e-5cc776cc3371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf6c5ac-fb2b-4ccc-8bcd-c3d019744593",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf635f15-145a-4f8b-97bc-2ab41be52262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "813e29ea-248c-4aa9-b0a8-eb1699d35b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5023ab0d-0dd3-4ff3-a98b-3732e3eac5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b5095705-45f2-4c1b-9a05-5d01c786855f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb06c18-ae1f-4c29-906c-d0642e78bb4e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c02619-4c36-4a24-83ee-961aa7973266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bbbee89-a1c9-4bc4-9364-62d64cab9e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9dbc83-fa28-4ac8-874c-03bbf735a470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc8e5ca-0eb4-4a32-8169-538b2a7ff473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70bd286-37be-475d-9d0f-099313289dd5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb46b14-1a35-4972-b9d2-e663b4db13f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb0bc8a-3096-4515-8c63-d01874711d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3382f665-61dd-4c59-823f-dce99cc03324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3dd71ff-2fbd-47fd-9b22-8e6db739fdde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809311af-db23-437c-bb1e-ea9b2cf82e8f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c1fcb4-7589-41eb-9fac-00647a8b0d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2880c0bc-0841-4367-ab5e-9f0fb949e098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a386bc-204d-4247-af25-19894e7fa2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef3d548-464b-4e89-be53-a3a4542a73eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cafbf43-f85e-4219-9215-3ca8440488c5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b348b4f9-9765-43a8-a049-c08533cce984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "969b5743-e004-48a5-a7e5-1f90ece32e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a4f642-e917-4744-8813-582d4b4c61fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf46bde-4db8-4433-9172-cfcb9f367f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d71a6a-88d0-41a7-8886-aa1045bcc39a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9edb0927-b1d7-404c-a6c6-2eb897455a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955e51e4-8db1-4836-9755-181e26f8e71a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3e765d-e517-49d4-a469-796226ebc225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd2a97c-4da6-4c37-b558-5281289906f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e41c78f-ac9e-49a2-8b89-a13ebddc1a51",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501dbd5c-6f1a-45ed-8899-bb9ad34aa906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5958313-23df-4824-bb8f-6d0bcb95b739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ee57e3-ad4e-45fc-9dcf-0e6d94f3fa65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e5fcf7c-7db1-44c1-a109-177cdedd34b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3e633d-8505-4540-85da-c79ce73b8b88",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27c7f39-220c-403f-8172-3b8ee78ed530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "005aadf3-dc98-4b70-bf77-2c3d61884f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd6cb10-e938-4a45-9ef6-7bd05fe9e5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c76697a2-6eaa-48ce-a682-95aa67b7e47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90008a33-661a-4147-8567-59daa240e1fd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f47240b-9fe5-433e-a0af-a9ea18f9e501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6665ee-2de3-4b44-ab6f-67a105167354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d36f3c-6325-42f1-b607-4c13b4fb20ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4226020-7bd1-4b85-b70b-0080e5f5922f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34eb0256-9a45-4117-b91d-4f3bf08daebb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b387f4-f2fa-4f3e-a527-96cca7dcf1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122c821e-ecc1-4f29-9ee5-9989dcfd61be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd54925e-2060-49b3-9d94-cd471855b41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82137dae-b4cf-4bde-b585-b9a32fb9d581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3467a3b-5413-4f5b-a360-77bce643de85",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "862af544-9951-4ee1-b3b5-96c51321f7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5b9e46-5bb7-4859-8510-630610126f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501e96eb-d0cd-48ce-abe9-07d452d1631e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a1aa7e3-6fc8-4c7a-a564-545e71f20fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639223bd-55b7-45b8-b9ed-43d6b82c467a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd626a5d-119f-4b1d-981a-0c8987f29f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cfe0b7f-5e1b-414b-b219-91089bff9dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e0d723-c285-4749-8e14-48e2fe81191b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f84154-ab16-4bf0-8708-7e2616ea8add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a84d1f-e327-4198-a61f-f3a3381ef5aa",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5abf882-1271-43c0-8a72-715adf082aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e80efcd2-7fea-4192-b977-4b0434a6c7ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b998200c-b6d0-4e20-9952-0b8ce832fb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "885892c6-b8d3-4a56-ad53-014c5cd339c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92ce2d8-49cc-4c74-af30-f11223772fdd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd12110-15f9-49dc-8bae-60c0002dd010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2213951-9588-451d-a3e3-6cd422cc46f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607a0a59-6f03-4e13-a3f8-02bb22d45836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99a5c619-3868-49ec-b3ae-dcb03194eb13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5918e82a-0e76-4df6-98ce-314d56d9d5e1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d32d25f-aad8-4a07-9f25-4653ad681bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e85a95-f8e8-40be-ad03-38a1e1669fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc37d73d-83ce-4257-b722-5cb16b6fd199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a09afa2e-aeb3-45b6-8079-b7d3daf31a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115c2ab4-1e50-4833-b202-4d65da1067f3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e13af18-4065-4207-ab7c-fb14f4b8d146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de8dd065-22f4-4ee2-a29c-05855e0b7136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd9a5a2-b011-4b3a-827e-e411d73a1523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1120cee0-12c0-4777-a348-4351a3bb82e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b08ed8-5247-4382-a2e0-ac8ca0b28d9b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23dea1a-e48f-4ed9-b300-2062b3727f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216ec1f8-e618-4f24-87ff-cdd9f36f3f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db112ac-8fc6-44c9-93b5-a0bc65f452f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a128e0-e155-44cc-bbb5-b5d5b8b2af1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ee7430-26af-4283-9db9-26d01a6fc43e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3634201-aae7-47b0-899b-7f22867b7dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab3ecc9-06de-49fd-9016-6751a707a3a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b594343f-4e8c-4470-98b1-492e288d1c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61cd0316-6feb-4d73-a6ad-10e6609f14d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7fcff5-bc41-45d5-b37c-a5b63bdc219a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa10905c-8bee-491d-bde3-dcb7ca958d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5972be4-c619-4dd9-8569-b2f7622c436e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ee2a08-2933-4575-aa58-1d8b0bca7ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91136307-e4f3-4d7e-b832-8225bfaf0aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c38032-eed5-4770-9950-e28e82406f76",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1a4637-aa17-4b98-ab59-9fde145a8ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c39b90f6-489b-4aad-b2b9-84c80ae29c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c369a0-138a-4f9d-8d6e-9c3433a823f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7000516e-c6c6-4306-b462-7f48ee5a273e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80342bc0-eaf5-413c-8ef3-35ab7fb5b5af",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615b700a-ce44-40a1-9f71-af6e8d314dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dbe33ab-1ab2-4822-bb8b-b5c4ebddde12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d7657a-601a-4af2-87b7-481590a18983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5577ae04-eb30-45b3-bf46-e85675b6bd7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee6fc23-dc1d-46f7-b70b-210ad9f71e11",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64f57a3-83be-4523-be8a-b041458ed942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e7a831-1849-4dd1-97bb-02dd771f1f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c16e0ca-6f8f-45dc-b2ff-6e24c785741f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae18419-1de9-4de1-9e65-57bff88f2b8f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3593d655-8ae1-4472-91f3-039c3c460a84",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6fef453d-6f2a-4b86-afb7-2883722c7a63",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a613b2c-bd89-4ca2-96c2-952f433122cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26eeae91-f4b9-4e05-9e2e-b0f0da37cc7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26626fed-be9a-4757-b495-e6d7e3941857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0a920c1-3a0f-4ce9-b405-07812ee2a370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5774cd3b-0c71-4fb0-b233-e2308c16dd6f",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce11cf16-97aa-4422-8851-3bb9f8ccf485",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "228ae43b-74fe-4330-a2a3-49e9d2518342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7431b1ba-a312-4cfa-8c26-2292ce486abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72a92916-184d-414a-9dc4-f444405ea809"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99beb294-12b6-4982-9f05-06ce4c13dcf9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efd4895d-8261-4682-bbdd-3d7218df3ce7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84708a02-b617-4976-84a2-3b3a34764658",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c21ec5f5-2d7c-436b-b466-0265afa1d1aa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63ce897b-5831-46fc-acab-6ad980b102a5",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1fc956dd-9ce9-4d4a-960a-97e96f46afc1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4cc77c32-5cb8-45b7-97f0-7f9927de3182",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "591cc573-ffb4-4e9f-ab2e-a02148eefeb2"
            }
          }
        ]
      },
      {
        "id": "27324f32-50ff-4fe3-9db7-980a2fd3b788",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c0f7aa53-9603-4152-8a5d-e76296ec8e65",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2eeb85fe-65a2-476c-bbf9-16366f0b50b2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0446961a-fdbb-46f6-8af3-c39712655989",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0899351-da95-445b-85fc-378c618efe06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293c5219-6a77-40cb-9634-57ec9a2de973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375dec79-a498-4f00-be7e-bb31199710c9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30112955-3ec7-4d04-a53d-1970d97671d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aebff620-bd63-4c9e-afa6-ab333c2fef98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79a3c79-e970-4f2d-8754-234503e4d63a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8caf8fac-1bd0-41fe-af44-ded4dcdcaadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea528773-1556-4061-80f3-8f73b28a5e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6f1981-63ad-41b8-85bf-ccb893cc4212",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0845b14-cd38-46fb-b4a7-235842ca39b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee0d19b-69e8-4b0c-936a-7112ce4edac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edead08-c648-4751-bb27-5e90cf52fc4c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f150ddb7-23f1-4d48-9057-f532234bb3ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb30d057-c93a-4cb9-bcbd-ca2b5c062341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72cee618-11c3-4e21-8755-fdd7c6989463",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4e93a1-f080-4992-a5df-649a0e7d173c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b270b3c-0bc4-4e02-85ed-03fc4101d691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d50b54-77b7-401c-aa4f-7275f009f688",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71341574-d750-445f-bfc1-ab151f582502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ed3b0a-36e1-4d67-a12b-5d3ab1dda8c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b44205-4e69-4114-8bdb-c9cdcf72ea9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b69ef6-36c5-48fa-83ae-78e9590a9b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbb4587-7a0d-4902-a4f4-c0b858906ec3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58381c9-342e-4ec9-ad37-a1f956b1038c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffb26e14-38e5-4957-95ce-de4454d37afc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85fd20d-4ace-45d3-a0eb-171f5e94d9c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b31071-30ce-4bfc-8db1-89bbfaf767cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3d0bb4-4c70-4dc3-842b-9696a76ac7d0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c678bf-b608-471d-8cb1-58abd58a62c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9fa82e8-75b4-45f1-9a90-f1995bd8993c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8166588-df4d-48ee-8746-1c1a645cac12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9be8d5d-7d50-46ef-8da7-af56a2799128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd78d6a-0e2e-480a-ba21-731692aa497c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b156d8-579d-4f4c-a95e-c37190c175f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e723d6f-96a8-4538-9d1f-d93bb8f4cb1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4699b404-60c0-4329-a522-e5234845e2d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb2a00e8-5d7c-41fa-817c-76edc6b2849d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f231fd-d76a-431b-a2cc-a6e15815511b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194330e3-4127-4e95-afed-b04f567f74ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535c6614-de52-49e0-936a-83634b87e935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac5d8eb-6c9f-4527-a26d-403d46f62922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af16d30c-77b1-4958-8ed9-a7002f068261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38caa089-86ec-466d-ba17-c1a191274575",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c602b824-84e4-406c-af1a-2854bf01a9b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0979f74-46f3-4f85-a996-63dea80a0a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9fec2a-be93-4984-94ce-5a442abf8c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a12ad3-e46c-4c6a-83dd-005d4e26f974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5373ec3f-6c63-4908-9c73-888676208739",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8800023-24b9-46b3-b50c-02667e793864",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "679ce613-19ea-4f06-ace9-36ad5a7ae3c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eabd3b3-aeb2-40ed-a4c7-d95845701b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7a3861-5249-4245-ae2e-9eae6f87fb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44867bd1-407c-45b4-bee1-047927a38840",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801bb74e-9eec-47e7-a426-2043a9eb30f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "832c631a-bf0a-4ec1-be27-4184fd732eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f80cef-b6a9-4e59-95fb-b01604fe5731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fd5911-6156-4506-bbb5-6a5237e848d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd22fdd-ff70-4f5b-93ef-831da4ac3a04",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5cab6d-ee99-40af-a39c-d111ede77013",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "016b15c6-7593-4d3b-8f9e-9ec78b0995b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf19cd2-2d25-4f7b-afbc-c6646993c750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f668876-5686-43c9-b14e-fa7ee27bcb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad199de-c71c-4e39-9b8c-ef9e95c4006b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515be531-5f41-4b8b-8a59-e502f13cedc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "657c0a88-4610-4391-90f5-7d760a87b17b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ffd5ec-c207-4584-be33-7bb9eb404f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21453a74-01b1-4d5f-8376-79e653abc66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fd2c31-fee5-4777-aef2-d4bac579caf4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3104085d-fb0f-4606-9f04-6bab96c80a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8de119-1d58-4a3a-8a31-2268dba543a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "829b85f0-36c8-4a74-b8a0-59ea42029887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c54f4879-d249-4fe7-8693-102c06bda907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815a49df-9f7b-4b43-a6cb-94a3c813088e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc77d8c-f5b5-45c9-8aba-3b4296e3c6ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41aae014-e0ac-41b8-a5df-9afb581182b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "250cab8c-fdf8-47b6-a652-f77df215c655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a5f0d1-7c01-447b-a481-d451ea58a631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33951d5-0f66-477d-8b08-c1ddb015c0e7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c80e47-a6ae-4a29-a4c5-b8a5f3fecc16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27477dff-238e-4ab9-87b4-e5ee2b030cfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b75236-a3b6-4ec5-a722-e6f877214b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "348e6a41-b9ae-4b68-ba78-1a050e87116c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a9d767-a541-40af-b1af-e9c274e8b3ea",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14866f2-8aee-4c84-bcbb-cd4bc2654018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a238e69-1e63-4e70-b48b-d5159f54c09e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef3b6e1-b97a-41e0-8018-2cad96148c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "522b0d47-df88-4ccf-bb15-341d97fa88ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf967a7-c9b1-4e41-add5-42c137ae5086",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f36eaf3-55a4-4e52-835a-4f6c09c9d25e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1bebf1-884c-480e-8d1a-d8443113ce5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d923288-523a-409a-8f41-b28e069aa697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc92d4ae-8f5a-46b4-b88d-a00b07357c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f191cdd2-18ca-4a8b-b063-d6fdf925fd48",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74a2e74-1ffe-4e98-93a2-a9ea009259e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3eac800-1162-4a5c-8815-d3c9a2afb0ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45bff311-1110-4290-87c3-b66f7fa9eab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d765f1-d0e5-4bf0-9a3d-df39efc0bca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208769df-e664-430e-9bd9-1582633df80a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747558a2-f4e9-4338-a346-4cc4a958f4c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6832a237-ae96-4de9-a313-5c7bbe1cae42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfad425d-136d-448b-9143-7bd296c32ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe05ea8-29df-4de3-a8ec-71fb1c642634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a287bf-c565-44cb-ad89-a9a4336931e1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900c22f2-fdca-45ea-8f16-d934206ef413",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a750c1f5-a8fb-4b45-87e0-511ec5bb6cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12b6906-ab73-453d-b66c-9341bd074396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88646619-e344-4168-9aaf-26a6bedf0884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3919c5-5d6c-40a9-93d7-006746453e46",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4703d367-28f3-4f05-81e4-c5c452a964e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8bd353e-84ee-4e34-abed-a0f046e99962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b87a2fd-d85f-4f54-883f-2bd283d732e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ea6e92-4708-45f7-8280-c408e680f902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af51bcf-2c21-445a-b721-9c05b633a26f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd34b262-1b30-4103-9085-6ef93d3e4498",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f586cc5b-8391-4754-ba2b-673871d2f215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2edddd-0182-4504-8c57-2f148ea4e162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2878af4d-3d5d-4995-b321-9f594666482b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec54f4d-a47b-4820-9b16-072b63374f44",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d806bb6-c1d2-4bc9-ab13-1b056b42b549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4134218-9cfb-4b3a-86cb-fdd6c8b7457b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50432a31-11fe-44c0-ab1f-aa5f9fb14d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340adb53-4957-4449-af64-938d6cfe78b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8984839-7ca0-40f0-83eb-009483eeca83",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa41ba87-7b49-4268-b377-69fea5aa2832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42736083-dbcc-42ca-929b-cb373bb9be01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53371d1a-d665-4c07-8db1-79a3bae905d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c678c04d-51f5-4e9e-986e-8418efef24fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6307352-216f-4a74-86e8-919bca0b12d0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eace0dd-0f62-4a1f-bda1-1ecfdd3f2fb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ab2da73-979c-4495-ac07-6677eab46825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f823af-a123-4a80-8768-34ef2a8a0192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a15dea-b4e7-4eb6-aadc-029a9d58c5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963c1517-bf3a-4e21-9157-5b71e1726063",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ec5d4b-d098-4f75-bd43-e4b8fe45d7a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12cb39cc-3756-43f5-8a0e-35aa3f714ae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd1541e-6662-40a1-869e-ffca746c0ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29438631-4132-460e-9e51-0c14295b8931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b3c54c-a420-4bd8-b30e-20d54502a88d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf86ba6-b52e-4d61-a1f8-1829f8c7cf1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdebab19-492d-49ef-b0ee-50299825d24c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ac2d1c-8e79-41ff-ac32-a165a50ed281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42bb7582-9a2e-423f-9351-9fa7af92c63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcb15e8-5687-4350-addd-88d218fa6040",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea4dd01-6ef4-4f6e-974b-0e36e386c258",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca5c5075-1184-407f-bc03-38ce7ddaca8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1eba2e5-c4b9-49d8-84b8-070269a23f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735da1d4-c17c-48da-8e4a-9968fc7e1c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7b10e3-4950-4250-ae44-ee829b9813f7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed13942-33ef-4ecb-b68d-1abb016c8ffe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4613fe1-c8d6-4428-8c58-3a4dd407f084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79b4811-d8f8-45fa-bd92-966e9329ae24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f7dec48-f777-4d68-b711-74ef584b766b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acda475c-50e8-4fd1-ab63-6ee80baaeb83",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac70247d-99bf-4d3b-90ef-24eac468a6fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60c949f5-0a06-4b64-b217-16714bee10f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd670994-80e5-45b1-b451-e4775f632953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "360817d7-0db6-4015-9669-933d482dd305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74e2a36-bde0-4db2-a2ab-91f64a9af6dc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20391c4b-2892-48d3-8bdd-2aae4359832a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "843917a0-d152-42ad-974b-e38a8ee5632e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5184512-8193-420e-86f4-45ad5acc7caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d33b35-7066-4994-ac33-d9e8019e65f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b6e450-c42e-4781-9605-ed0de2a49b4a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8ad5ac-fc3c-4b94-b8e0-494d4ffca382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b610e5-3f39-4902-a4ae-8791e4d7917f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6860ce58-c1d4-4885-baa5-243d82aa66ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7801fa-845b-45a7-be6e-1afcbae81ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6567ad63-f897-46ed-a6b2-780471fa011a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5fc889-c886-4d39-a304-86c9a9441ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6038e6bd-8392-417a-9577-627d1aa0b35c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5930c465-308f-43fb-8f9e-3d744655b3f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5694bb05-e373-415b-9532-103c47e178ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223965d3-7aed-4800-ac17-06c38c631cae",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a900609-7b13-4a54-8bc0-8257fc6ab7d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269e88f1-7b70-4b58-a338-437cb028e36e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7b4dfe-a79e-48f3-9bb3-d2bd2c0064d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1789f64b-07c1-4c84-8d82-80e6ea1fda30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf2930a-80d1-4f4b-b0df-8e81528602e3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3bb8ea-0c74-414c-89ce-20ffe8428eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02c88b0-1836-40b6-8402-94c3ef7029a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ce4986-4d31-4a6e-be76-9b7087405fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4646445-356c-43d5-a374-b37f006c8386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fd8360-8caa-4e66-9bae-81c0dafd6054",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bdd956-f5b9-4e5d-8976-114d8be62fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b056cf3c-0c79-4dba-9ef4-819fdb7cc66b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aeaf45f-6d33-470a-a01b-0bfbea1a83ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e2b828-143a-4c3e-a3e5-9e893d1b7d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b9fd93-e0d9-40b8-860c-684d52c53c35",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474d91a3-53a7-4771-b3f9-948f17c9a078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ef0ea1-8959-4dbc-830d-0def3ef39188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "834a02a0-2306-4e48-b8b5-9f71a7e4cbd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5296f752-06fa-4861-bf71-1c19d3ac584c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b648ec-7f04-4f13-8f28-a365b6f4f75b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c1db47-91c2-44c5-a75f-2ee74127be46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5522b9ad-8c6e-4e82-90ce-3cfc5a18d92f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25425a73-de4b-4ce7-9f29-2880c4739aec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6442cd82-5534-4ecf-88ef-b18e6091e077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436b9cc0-bf45-4ef9-ac43-c5aef238acda",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3662214-5be0-4f03-a38e-3e8ecdf8e5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5266171-d4d7-48a6-be30-c9772d64235a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98b2a66-2403-4900-9f6e-57366e96da98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32ccd5f-261c-46ed-8677-082d1d521ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ae772b-2d24-4bff-80ac-44d2089adc84",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902f247b-3e04-47ec-be1f-40da0176d342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2efec0d9-017f-4ccf-97e7-457c70cac4b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8593be5-fb7e-45e7-8e8f-c8d2a1369407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef56201-e086-4161-837c-048b4cecf395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9ae838-f628-43b0-84ca-b377b11329e8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44f048f-ef67-40a0-ad95-9928c784e00b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ee88ad-85ac-47eb-aeba-762191921bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d3be72-6f81-47b3-933f-2fbc3bab6822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89377bf2-5202-4f97-a846-bd6b6f08aaf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449a6103-4ad1-4d5c-aebf-7bd8a7ca5f94",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe202d0c-8a96-409b-a539-68ca2283a1ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949e24c7-45bf-4fc0-948c-6a737b263ac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46f05c6-3648-48cf-a29d-db1508764dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc2a3ad-c04e-46ec-a2de-b8905962a993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52c534f-b8d1-42bd-b1b1-63751f834e0c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc09298-de7f-4139-8580-78fc3653a5d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a522bc-41b1-44fe-9b8f-fcc35d7d3189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe8111a-d479-46ca-a765-bb969459461c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0ee46e-321e-417e-a9f3-d186c2cb2e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94ecbf5-dda4-42fc-899f-3c933f14def8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3489fb0-5375-4839-8e63-bed61ed86c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48bbec73-e393-46c4-a7a4-1c2fdf71fa0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b96e58-16b1-4dd6-b9d8-c7e8a2e87245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ff4ba4-832f-470f-8f6f-f200e6b90552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0c4f62-d1b6-43cb-a322-58954593823d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839b7ace-b5be-4b01-b090-893bcda9ab70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b05b92-96bd-43c5-b637-4c3e84483cb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac1c4e3-3711-40b2-bab0-c3c137028084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e9b9ddf-19a1-4671-8692-362950a85049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2491f2-2b73-4e49-a41f-ffd6fd81560b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce09b82d-4c2f-4d11-bbe1-c3a75fbf4dc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b8ac9d-529f-4b2e-89a9-d7a05befa9b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d720f43-7c61-4d87-b50a-5f0398fda4c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f11220-efa3-4ba7-9644-c90689e1c097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438da99a-1d64-449a-b403-eee895a48cd6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8d7266-42e9-49af-b4b6-082b10371cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb700b14-abef-4e10-8a82-30d238d2bbae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf2f835-19f7-47c7-9bbe-ac868e4167ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54cb1adb-b6c8-4cba-9e5f-e14bc6e198b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52fb477c-00c8-4a2b-bf9b-2bea4405040d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43fc27e9-0855-4a04-9521-f1a4fe78e6b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232e83a2-1018-47c8-b8f0-0f6e7ebe6b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1abba8-5db4-43a3-b7e6-1a8ef652683b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbcf6500-d7cd-4e19-82f3-454af21d122b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de71c1a-5fc3-4591-965e-b67e9aa8ac59",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ed9a36-fc84-45c6-a35c-dfa58f7d367f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dedf1f06-b3c4-481a-a386-73489613c4bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f063dc-56e0-4b9b-a939-d088307a7104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff918538-3dc4-44ce-8f8d-aadcb72cb111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1793f582-4bed-4a04-aaa6-45b2b449d760",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f4a85e-92dc-4943-b450-bcf9f333c6be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e094443f-16e4-4345-b8ca-cc53340eeea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2261af90-48fb-4629-b91a-a9e0875f86b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df68dce1-232a-4131-828a-4485b3aa1886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d662faa-5931-432d-95d2-984a0eeae095",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319bb6cf-1705-432e-bb58-2ecc108d115d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cd0404e-aa2a-4d4b-84da-54d8b718c943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "077eba23-0a7b-409a-b857-fa632b7fb627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7964f803-617d-421f-a8a9-59ace2681f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ec0d82-0bee-4535-8f9c-1c2c41337cc2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533c868c-52b8-42ea-8b11-f4e519894ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23103dcf-6076-4190-9600-ffc2aaf4247d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f0194a-20b8-4ec6-9319-b821b7b0d9a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21257691-2267-4398-8e3f-57654c7b2baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af8a876-92b7-47b2-b93b-4f5a820f2cfe",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9612980f-1ade-4627-ae4a-f5eda15b892f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c75f60-9c0f-4c0f-bc54-f7d2b52dca6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63766344-b94d-4bd7-8809-8f4c772e9207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e4ebab0-6174-4d1c-ac7a-6be469ee8388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7dbf2a-e697-4ac8-9740-612f61b5a245",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c566a0-c611-4839-9a89-26695b113405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa6b65b-4468-405f-a540-7bb689d2abd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0938915b-2896-454a-8441-8fbe2c7eb661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c8d3c4-a72b-4331-8ee2-0414c2fa9678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e58586-cf40-4289-9758-b285b5a8e140",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8212e8-80f7-4489-b109-faa4abec469a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d89d4e-5d73-47b2-b08c-470d2c94ebc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d945d0e4-731e-441a-8871-e0dc2bf93900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7054f55-fff9-45de-a828-b3168f65b555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8f18e3-6d52-4f88-8cd9-f19964fb15b1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15d6488-0a50-4d88-afa1-bc4af6f850f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62f85ec5-8c42-45f7-b245-c0db0f0049c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f151838a-d81a-4ab1-bdec-9930af5fab13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b55cb0-42b3-4b74-9f28-812b7de53788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e73b0f2-027d-4992-a5e5-74a13d2b4614",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da79eb5a-b3cb-4779-93b7-08b6af261e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc544ed-db25-4082-96f4-39565580157e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bbfc69-2c68-4917-9349-dc539266d858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f837b7dd-fce4-4f39-a91a-96cd678f2e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80f329f-4f78-4462-9d07-a6288aedd832",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f182cbd-bb9f-4f97-b380-990adcec9114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c552fbfe-3106-4849-b0d0-124a1001a998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "549a1a38-9399-47b8-a1d4-518127ed767a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a244d55-5e59-47e2-9601-88a30c422cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e19ff9-66f7-4d0c-9ba9-0c6f43db00b2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb74f1cf-7c8d-4673-8b1f-b7d1884a35a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "410d1b6f-f78d-47fe-a80f-5bc5cd84c55e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07142fa2-d2cf-407c-9c91-1e7a915ba1c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce3f21a-33e1-4c11-a2c7-c35c8102d7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5c2805-d5a8-4f24-97ef-45daca3ed897",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337186a6-5666-4c29-a330-d5ac8cafb885",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7090e63-2bc8-4e57-a825-db832e3b39f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c68a4a8-216a-40be-ae3c-092dc8786b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fafae2d6-e84e-4205-b5bf-42c53c79ad04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6262896e-c542-48e4-8f36-fd691b40b072",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06922bd9-701f-4ba2-a4be-3f2211a9498c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09396325-88d6-4e9f-9a81-91d09c5655c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bacbc419-21bb-4d33-bee5-0b1b491bc253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0585d0f8-750b-457a-ab3e-b248616e2996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763f2809-1857-4bc0-82cc-20c222a29a5b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c193b882-3044-415e-95be-3738df4d6fe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09a798a0-4d2b-483b-b134-99f1bfa13c15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eece1f6e-e1dc-4656-8d09-602aae60bb72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97b99d45-2562-4683-adb5-9b0338fe02ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f730973-f5a9-45d7-915f-2398b3d2efb4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5518bdd3-a8a6-4bfc-86ac-22e181926d02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aa6ebcf-0c63-47ae-8297-dc3bba5dc01d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95dc497-2a6d-4e2f-8d37-d49bdca0c075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83fde01b-11c9-451f-8d3d-55fbdbf9a4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e794ded9-4a15-4d69-9d26-d66f8c630bc9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1236f324-ac05-4817-aa87-2243a9b35ece",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4652eaa5-24db-47b1-b70b-9168f54f155f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e13aa1-8877-4743-bcb0-f1c0af736869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3089555-6ee8-4097-99a7-5aa4e0609df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eada5de5-9d1a-4847-9f53-df3471642cc2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f780a313-c0dc-46c6-b730-d17d47614dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "767275d3-e6f0-4b66-ae54-c3809764fbd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06046c7d-6389-45e5-aa4c-9b6734dec349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "104e171f-85b4-4f23-b0fc-b1c54c5db579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29964f26-1f8e-41df-9e80-9140f944d0ea",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87443db1-2150-4fc8-8b2e-43080dbea41f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f680da0e-186e-4405-90ad-3449e5178c96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be82049-cca7-4d51-8a21-6a83da42177c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed01431-bea1-4e5d-899e-79af7b0a49f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a5ea0d-02f4-485b-892c-70ac71245b1f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2f7596-eae3-4033-9448-c04427239ba5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d096eee2-c64e-45b3-acff-d2551f593d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ac5443-5b97-46b3-9e17-a4a1a30a4fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd586413-0d39-4237-b608-e2eb9fdb46bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3f773e-11af-4f93-93ad-8e341d40aec9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f895630f-417c-455e-8697-e51e794c841e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f458d45-aac6-4827-aa69-e24f5ff0ddbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07acd227-35cf-4a51-b4bb-5b035399fe94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ae699a-aa40-4c3d-8ca8-9defd005d908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ccc7a0-007e-4cab-a117-11b58730c3a4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a24d742-97f4-42dd-9622-0ffbb2f57394",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e4fde19-8b23-4b00-8cd3-eeab9cc7ee09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ab1e46-b10e-42bf-8c9d-4f031b590d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd092c71-2702-4e08-9546-5494d9c275e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4c5bb2-7ea4-4336-a20b-2776feb58328",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41ef815-f569-4574-a624-aea86557e7b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e81a532c-7226-4716-b070-b342a8f9e8fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4036b98e-199a-41fd-921b-734357788683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d02e9a6-a405-40d5-8dc5-233b6a046ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59743c4-dbc1-4b3d-81be-3312d3321d98",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b87e62f-bdbe-407a-8d03-c2d62e4d507c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84abfdcf-96a5-4d9e-899a-397969258ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe380f4-8202-4f4a-91dc-dfa973578dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e97d91-e369-433d-b81e-99008516fab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5506f3ec-1928-4fd3-aa3a-6634121159a4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517710be-a12f-440a-9b53-e1898ecac0de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3ad04ec-5ad7-4971-880c-5bbacc24da33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "740b7dac-4b3c-414b-8ca9-b6b4da0d9102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96101d88-4176-4b56-a257-ec641bbab350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d70b83-6686-4b78-bbe4-b06a24ddd089",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8c1d98-605c-41ed-a471-60f9523882a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "881a9757-87f3-493d-82dc-58cfbd230d61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a728c60d-4143-4fea-9b30-23455f9beba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e23b2d0-d326-4686-add6-6037b20a7298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f9c8dc-edef-4eb4-9542-acfba35a2f3d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99605a68-7404-495f-9182-933e86263482",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a90dd6b3-9da1-4458-b21a-93163799390c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcfa3b8-7bd0-4764-b763-dd7e28fdc8ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147916de-19d0-43b8-b830-fd43bee0365b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f465ac88-7aca-4c2e-b510-c71b5194780d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb9f2a5-0b7c-446f-b629-6d7589b0c5bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87ad8d12-14f3-4572-ab6d-31913b1f8785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff0361b-3ceb-49ed-865c-85a87f8d06b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b1f836-9bb4-43f8-9217-b3a9c7815c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814b3726-38d0-4b5a-86a6-466f4f6e089b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c32de2-121f-4e99-8954-a91de8313440",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d84c97b9-d495-4cf4-81e1-ae8183ac8797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd02dee-5cdc-4960-956b-0d043e2ac7a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "881006a6-d3b9-4775-9b7d-d658ae1e3744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e69a640-b296-47a3-be61-07d396544d63",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff979d3e-c154-4302-8065-0f5c7d413c3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca62249c-a321-4337-9f22-2a464f86a3f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc054897-1724-4083-abcf-b21163cdeb8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f52f912-34c6-4fae-99e6-131b971edc1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e941cf7-5316-4493-834e-23a536821386",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fdb504-c4cc-42d2-aa72-634b104bcd89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3946e789-1711-435c-9cf6-618ac50a909f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d25273e-b6f7-400a-b92b-83c5975a3612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f7fd21-1f2f-4f16-a9f5-d97cfd08b216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53c005a-16f2-4eed-abec-b81ce0572bca",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38150d8-e2b7-4ab2-9da0-c65d4f175df3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70cd21dc-4eda-4f09-ab65-b741d062a672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "011a979e-af5f-4d74-bf75-b0a5cfb2dc53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e3de03-d35f-4c01-9a23-5fb865f6410b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1722b8-d39d-4688-8ae1-5a4c3750bbbc",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5af236-56ef-4d75-8d09-ca6b222ee2c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e095dc20-5715-4f72-ae94-98265fb6f192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1aff91-aacb-43a1-8573-99f35261bc89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de238e42-25b3-41f2-a2f4-80eee1853174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0fc9c0-e054-4969-970c-5f27373b0b85",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fa55b8-2127-4d10-a7cb-1ee427114664",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2651ad7-e4ab-4f10-887e-c0d7cb019612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d754a58a-e89c-4650-92c2-0a74bc0be9ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b64b518-87da-449a-9e38-ceb9139d5640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd06e88-ed9e-4203-a1d0-8dcd151fef16",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db48c3a1-b71f-43ad-84d3-c0e0194f4976",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22be9374-0f9f-4e87-9fed-2eb636959c65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7511982-3f71-43ff-943f-da4e57f30eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0aa0ba3-ca05-455c-b671-cbf4a501eb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd3a79b-c710-479c-a583-95d61c0d5b52",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6dcb08-e837-4fa6-8c3e-9012a76555bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6dede4e-d102-4d00-a413-790bc7607cf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79bde40d-8392-430d-ba0c-a55596ff3086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "144195a9-2e77-453f-9217-f8168c5d14fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da38981-af5e-4118-b3d9-4490be268491",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04f1188-59d7-4928-925b-b526e71d539f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "412da100-0705-466d-883f-b7bed400209a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60e05bf-0858-4fab-aa94-5b020e0a0776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d75d36c7-833d-479f-8fcf-f23c92bf0d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bc16b1-33f4-4faa-ae16-1c80847b0a4c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b7cc89-5057-4839-9869-959b4f12083e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5867248a-c5e4-4fa2-a95a-fdbc3f795f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f14677-0bd4-45eb-9218-edb93ce5b5e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c146d51-c9dd-4fad-8567-04d18dc2dbcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91123f6b-786d-4568-86ff-b2652ff1a107",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc37215d-a178-4686-b268-e39e4cf45ad5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb6289fe-d9a7-434c-8910-8fd3978f9832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a411957e-e47e-4142-8b26-8cca6d12db8d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60d9ff5-8688-4f5a-a928-2229696078d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93373ae-cad9-4b76-bb6a-5e30fbd1808d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75277ab4-9262-432d-8eb2-20200231db4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7c8f35d-0009-4ec5-a7a7-8ba41e4d6338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1d5509-e217-4edb-ac6d-6a2482303325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60667096-f71c-4eb1-9129-d2b1fa6eb1f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794832a0-cec5-4adc-b993-ce654ffa764a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefa036a-3d6e-48a7-9fc6-131c34968cd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93e30d63-2b94-4971-abfa-58f7cb0ba78f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d783cf2-1828-4613-a514-8b9f2a803e47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9fd6fcf-65e4-44ec-b3b3-a5299f5e3582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b132ff38-b54d-4d66-a385-e4d2d78a4186",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7a0caa-b9ba-40c9-b6e4-6692ae8ab0e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "260c6b32-4a99-4041-8f57-507ce938e043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "091e5de5-808f-487b-9a11-30d8e1028b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20757ced-6d9f-4dc2-952b-699938e60839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b65d251-d661-4f08-8dd2-4e734bffe0f1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9046428-03a2-4e89-854f-58103ddfcdb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaafcefa-847b-426a-82b4-61f9c6858822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e612af-012c-48e9-9856-1af9e633cbab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b093bcff-638e-4c89-b189-9002f6c955bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e681fa99-6282-4d01-b6f2-d9487fa1aa0a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98cda471-3a06-4a09-b87e-8bb5d9153552",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cfe5877-702d-4752-99f1-fbe945bebc1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45531dbd-a3bc-47f1-93e9-055089a0abde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec5327e7-97fe-4bc6-8cd6-f4f997addb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6bdee5-db71-4e8e-bb9b-48aa2659a6d1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030bf3e4-6ab3-4ed6-b36e-8465918eb2df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "141cc150-3091-4b62-86a6-eb79ed8d2fe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84578a67-1afa-479a-9d4e-e804830df10b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5adb8bb-8a9d-4940-b341-b0645e11687b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e7d1fb-c9e3-45a7-b567-47cb729d9b61",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7a7c31-35de-4c9b-9a54-4ffc17047b1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "131f9960-7510-4149-83a0-aac39dd62bcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcb2257-5e70-4c7d-98f4-62d12fb79cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "843ae46d-e90e-4243-962e-c8eb0d771137"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb0516ba-16d6-4fea-a172-f1189f895fab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea6eb64c-fcb8-4f82-950a-55451bea58d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9608c9b1-fa74-4964-90be-eabb4543f6ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13d05a31-9e26-402d-89dc-1a7f18f62050"
                    }
                  }
                ]
              },
              {
                "id": "93e03bcc-9d7a-40c6-94a4-3bfafba20923",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "825f5d8f-b9bc-4792-99ec-ab635b1b4f50",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d03315-c976-4a8f-81b6-8d0002167d1c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a614c29f-c5ec-43e8-b649-c55cfa28052e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "371ec779-9180-4e02-85ca-da69da03c350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cca0b877-65af-4838-ba7c-51c54825f870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e50f69-75a9-4ad4-b4d8-b5b402dcc036",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11511e2b-d2a2-4adf-a5d6-8a23b760b5ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ffd01c0d-85a6-471a-af9d-c1a35829f510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe8a2f8-c7ec-495c-b5fc-78086d84605f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92a006e5-c6d7-4d0d-a94d-1718cb9dee46"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf0e2b87-ef0a-450f-9b61-b4d37e51e1e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec39543c-5f5f-43db-9fed-5c90a96f2657"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ada8536a-75cd-453f-beee-36cd7e6eda42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37ae84e4-5db8-475c-acd6-578d3e1fc545"
                    }
                  }
                ]
              },
              {
                "id": "7ebd8bb5-347f-447a-b857-e36cebcadc76",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fc40b5fa-e530-4036-bb9f-b4165ff4787e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37a8328-c78e-4e6d-8980-7c9bb8e2c6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b8364113-32dc-42b8-98e5-eb2b8ca40f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd640d7c-d547-4511-8500-95c067ee5a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82e6da1-1abc-4e59-87a5-c1c390f4dd44"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1cfb69af-6c43-47ba-8160-3e18ccd080f4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b99a9cf8-3cdb-4301-bd7c-4aedff9940dc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c90ad28-bac9-4157-ad9e-c773e870db43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6ddbb2eb-3743-45bf-bdca-249a1ebe7974"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1690596-c13b-446a-8b89-0f5fcff7e0ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2019d3dc-7d67-4e4f-8666-e61c85407834"
                    }
                  }
                ]
              },
              {
                "id": "2f17be0e-9a84-4479-ba00-8f30766474d6",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "312893f5-d298-4c5c-9df0-6a90aa6dd23c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0abad58a-f800-4442-b6e1-2161ed68d440"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d46ea84b-05ed-4ec1-a5ad-36bffc2a7e58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6670d6c-6be1-4989-8083-000e87d26c44"
                    }
                  }
                ]
              },
              {
                "id": "9e994183-ab2f-42d0-bb49-8ad81934e13c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "962bcded-8d8f-47c2-b4b3-637c7101b0ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e89a71f0-a9a7-4bc7-a90c-d1d42d9938bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c480fd31-d9de-4a4e-81dd-a57e3dcfb50b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a78055fd-e273-4c37-985f-dc9338eab943"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93abbfb4-ccb0-4538-aa4b-5ed13482a3ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3f3ab19b-e7e1-4632-837a-e812b1917978"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2f6ffb9-50ab-46f7-b57d-c7134d35850d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "47af6202-3deb-44d7-8f4a-3ece329ff8c0"
            }
          }
        ]
      },
      {
        "id": "9a9cddd5-678b-4065-89ec-22c065ec7cf9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "10d77ae8-ba10-43f0-9fc1-afb08b57674a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25b9456c-c2e4-4cfc-944d-ceb4b51cd62d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ee1ed41-f0d8-4e04-9776-f76a38aa70fa",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba09c33a-952a-4e98-a0c4-688364f6e648",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c5cd7349-e1cd-46d5-8b7e-d3060fa9e407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df6ee12-8d28-4d05-9d90-684279e903c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27b99a96-a853-4b68-8de3-ae0d33482669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5de794-1c21-43ea-9678-8bd890c2903a",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3136cd3-a638-49e2-bbdf-0000559d1329",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1816afdb-b0d9-4a47-8030-2fb5be90ba90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e4e5b4-de1b-4068-bd9b-c05d056eca88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4dda3c9-ca23-427a-b459-ddbb26153ec7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54285717-d589-4dca-9227-bfe6a78a50bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97e07546-1c9c-49a4-a959-c0a5fe84632a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "177d01d1-ccaf-40cf-a3c3-e5e0bc87a283",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7550ece7-e8b2-44c6-990b-5243e487534e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8cd28326-9ab9-48b9-bd75-0f194c6e8ea7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fdfe91fd-24a3-46f7-80fd-8102fe1223e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "207b0838-92bc-4aef-9557-bfc9b2ae8024",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4f7e3c3-4ac1-467a-a334-e22f5be4297e"
            }
          }
        ]
      },
      {
        "id": "20b7f2b8-b973-47d9-9380-0147fd39bcab",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "91436db9-eb33-4a81-86ac-722c80579066",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ece9b614-1565-45ec-af5a-feabbf030d6a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a99c4f2e-fc44-46ed-bc92-8d8ac3939a9f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24cd8d04-0f86-4795-8cc9-b98389cfeb15",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3a660a35-a059-4df8-84cf-16ebe1e30fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a97dfb8-7c60-42c5-ba35-0ae40b6ec72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1bc366d2-31e3-4e56-990a-af8244f89e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f76475c-a4ca-4827-b1c8-fe6c3817fe6e",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35c27b1-8d24-4af4-a920-97d9135b6d67",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "49e30cdd-c912-427d-8167-d24c51e54e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0852d46-4258-450d-9740-34f56c7669cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c9aaab4-365b-4a16-975d-c604efce7673"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24e515c6-e374-4091-9705-625c36d0961c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d07089a-4727-4116-b5a8-4aea9778a546"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "af6f6fb1-f9cd-4c59-aebf-19f2f25014a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd83a481-3112-4433-8467-a30b33a6c799"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1b4a8a1b-91ed-48e3-bfa6-3a060b070e0e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d79bc01d-76c2-40c9-b5e2-2195ecdff5fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70356f15-b6ad-495b-972c-e096ee4be0ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ceea7d40-13ac-4d81-819b-47000889e902"
            }
          }
        ]
      },
      {
        "id": "3d8232fc-790e-4215-9c72-5126d06668c7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fd0a8e2e-8c83-4c51-b277-a532951a5c13",
            "name": "Negative Testing",
            "item": [
              {
                "id": "73b74bda-c301-4bd1-a7b5-22b0fe6060be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b315065-2f1a-43c4-a837-806887ed5fdd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c493d26c-a567-493d-b2b1-f94c70cef3a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9bc35e37-83e9-4c5c-bf5d-f5e891adbe1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7070a82-488e-4a3c-b9bf-0e8587b36a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0dff548-89f2-434f-9677-0a73242560d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b21b51-d05e-48b2-8abb-7ac31894058a",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b0a8b6-bbf1-4c59-b431-a881e065c135",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "812fe06c-ac1a-442e-8642-31e000b51fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8baeba-97ce-45c7-bf45-3356e7d05afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8c8d886-0eef-4e67-a5fa-0c582a8a47f1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef34efe1-e39b-4e42-ab09-b3c0f82a4133",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82512d6f-10b1-4e9a-8080-9f98794fb76b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0763e08f-eb25-4bfa-a503-a270b714ea4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e484351e-c750-4be2-9e0f-d18ba63362cd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4a6b05d-36c9-4187-bc40-39881edbdd1f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "91599406-c0bf-4f01-9269-4b30d9eeeec2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d8ebc1d-7f59-4b5d-9fef-a10a18de4ea3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6b15cd5-4e5d-4d9c-ac53-07e9897d5186"
            }
          }
        ]
      },
      {
        "id": "296e973d-f095-4ce0-8276-d73065b23c06",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "001d1d1e-8251-4e6d-8f08-e371a6c96f99",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0eba3c88-3d5e-4eba-89fb-890d0259d634",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9efa8137-6be6-4058-bee2-6dc5baf9d082",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2fb634a9-cc8d-4260-b933-6531c709e6d8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17a7c23c-ef94-4ef3-84cc-67993bef0842",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 493.94252873563164,
      "responseMin": 14,
      "responseMax": 4064,
      "responseSd": 422.400792668818,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1670027784444,
      "completed": 1670027923851
    },
    "executions": [
      {
        "id": "b033051d-8056-42f9-b7a9-3703782afa2f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "09950661-8c65-4ab3-90bd-a50d598e7679",
          "httpRequestId": "c1b7f9e7-2190-40a9-a4fd-e5964cd0f31b"
        },
        "item": {
          "id": "b033051d-8056-42f9-b7a9-3703782afa2f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a12246a9-5665-4bc8-ab09-26605d8981b2",
          "status": "OK",
          "code": 200,
          "responseTime": 96,
          "responseSize": 0
        }
      },
      {
        "id": "d8e14128-7274-4fdd-88eb-8c274c032f90",
        "cursor": {
          "ref": "b820d562-24bb-48ed-b662-8553c8a1de14",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "561281f7-ec94-45bb-8b7b-c6e6c4b8620b"
        },
        "item": {
          "id": "d8e14128-7274-4fdd-88eb-8c274c032f90",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3030db28-6d5b-4a55-b83f-04f7c9e29f7a",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "238a29a0-01af-4b93-9dc5-96065b753ee1",
        "cursor": {
          "ref": "cba47c4a-b1f2-4855-82e2-9cfd0c8e4bd9",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d444bc9e-592e-4d80-a25a-bb7f3fcb710f"
        },
        "item": {
          "id": "238a29a0-01af-4b93-9dc5-96065b753ee1",
          "name": "did_json"
        },
        "response": {
          "id": "e357c667-b39a-47fb-ad9e-50aeb8aab538",
          "status": "OK",
          "code": 200,
          "responseTime": 712,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f3b1e3-d114-4223-a90f-505c56474b7f",
        "cursor": {
          "ref": "3e8b2880-dc19-44b2-9307-b703b4b0efdb",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "17e80c8f-2748-41bc-a478-6e385cc31c15"
        },
        "item": {
          "id": "b8f3b1e3-d114-4223-a90f-505c56474b7f",
          "name": "did:invalid"
        },
        "response": {
          "id": "cca19c26-4180-403e-a568-88cf00c239d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f3b1e3-d114-4223-a90f-505c56474b7f",
        "cursor": {
          "ref": "3e8b2880-dc19-44b2-9307-b703b4b0efdb",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "17e80c8f-2748-41bc-a478-6e385cc31c15"
        },
        "item": {
          "id": "b8f3b1e3-d114-4223-a90f-505c56474b7f",
          "name": "did:invalid"
        },
        "response": {
          "id": "cca19c26-4180-403e-a568-88cf00c239d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f1bbeb-bd0b-4064-8e86-c3dc229b6103",
        "cursor": {
          "ref": "4c42dc6a-339b-44b8-aa50-27fd5e6277f0",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "304ab454-c677-47b7-8b17-3b7247061fe0"
        },
        "item": {
          "id": "f7f1bbeb-bd0b-4064-8e86-c3dc229b6103",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fff9666c-ef82-48bd-ab7d-a6488e0a7dc0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 643,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0ac0a8-d0b0-4b4b-96af-4ad39232d86d",
        "cursor": {
          "ref": "e1ddfd54-9418-4cec-b958-86afcb854ae6",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "210cfd1d-f493-40c1-b818-d1749016fb07"
        },
        "item": {
          "id": "9a0ac0a8-d0b0-4b4b-96af-4ad39232d86d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3a71ddc3-05e9-4f9c-9fdd-056b8185e504",
          "status": "Not Found",
          "code": 404,
          "responseTime": 525,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e553258d-2b44-4714-8f17-41a71b25e2cd",
        "cursor": {
          "ref": "f1b67a0c-cd8b-47c4-aed7-8caa0358b258",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9461ba9d-b066-4aa4-a6bb-433a46aa85e9"
        },
        "item": {
          "id": "e553258d-2b44-4714-8f17-41a71b25e2cd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8fda805d-972b-449e-ab48-0335a7a4f7f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a290f5c3-d0d3-4bc6-add4-f1daa2cb03bb",
        "cursor": {
          "ref": "5d3910ef-69bb-4862-a68d-e0d7f5fcd34e",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f833df4b-502f-47f8-9af2-f5b9b347d1be"
        },
        "item": {
          "id": "a290f5c3-d0d3-4bc6-add4-f1daa2cb03bb",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f0d2a5d6-dc47-4b15-80f5-f4e85a5f6dfd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 518,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a290f5c3-d0d3-4bc6-add4-f1daa2cb03bb",
        "cursor": {
          "ref": "5d3910ef-69bb-4862-a68d-e0d7f5fcd34e",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f833df4b-502f-47f8-9af2-f5b9b347d1be"
        },
        "item": {
          "id": "a290f5c3-d0d3-4bc6-add4-f1daa2cb03bb",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f0d2a5d6-dc47-4b15-80f5-f4e85a5f6dfd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 518,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eca2d76-78c0-4e5a-b174-446e6f91b67b",
        "cursor": {
          "ref": "98372b57-289a-402c-b2a0-e7b14a707fe6",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b25a8c8c-544f-4561-aaf3-bb9fb58c364b"
        },
        "item": {
          "id": "3eca2d76-78c0-4e5a-b174-446e6f91b67b",
          "name": "identifiers"
        },
        "response": {
          "id": "898204a2-c0a3-4da5-a739-8df4c008e1fa",
          "status": "OK",
          "code": 200,
          "responseTime": 777,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49f4d9d-c67f-4854-8a3e-cd0cd8fab69e",
        "cursor": {
          "ref": "41f48315-06a8-443b-90cc-e90e6bba5e4b",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5e3ff6be-c84c-4e74-9ab7-79ef07be0139"
        },
        "item": {
          "id": "b49f4d9d-c67f-4854-8a3e-cd0cd8fab69e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a4fac1de-1577-46a1-ac2e-75eee64d8944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49f4d9d-c67f-4854-8a3e-cd0cd8fab69e",
        "cursor": {
          "ref": "41f48315-06a8-443b-90cc-e90e6bba5e4b",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5e3ff6be-c84c-4e74-9ab7-79ef07be0139"
        },
        "item": {
          "id": "b49f4d9d-c67f-4854-8a3e-cd0cd8fab69e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a4fac1de-1577-46a1-ac2e-75eee64d8944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5b63fc-60d2-4f8d-a8bf-ba2d0b8faa73",
        "cursor": {
          "ref": "62622aa2-9c73-4318-9ffc-9a23cf983cf1",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e740e1d0-75d3-40d6-aae9-170df19ce749"
        },
        "item": {
          "id": "2b5b63fc-60d2-4f8d-a8bf-ba2d0b8faa73",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "957f9fd9-d0ee-4a71-b3b2-4973239f4cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ab59ae-1496-4d10-853d-11ed3901a3ff",
        "cursor": {
          "ref": "e9ca2215-3b58-4497-bc52-989095ace113",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c3a819d6-76a7-47ee-8caa-f08b1ca01933"
        },
        "item": {
          "id": "29ab59ae-1496-4d10-853d-11ed3901a3ff",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "65c846a5-44b9-43de-961e-d18828be27cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43de8ca7-b2ea-48e1-8db0-c459398e924c",
        "cursor": {
          "ref": "7af89de5-b61f-4ca8-bb71-9f67c3f49b55",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "25723d5c-2326-448a-9469-5e98b58f638c"
        },
        "item": {
          "id": "43de8ca7-b2ea-48e1-8db0-c459398e924c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6bb1597e-7603-496e-89b0-02b51116031f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656a5196-77c0-4a2b-8c88-ea29607ea85f",
        "cursor": {
          "ref": "8e6cbf49-af43-4f8b-bf1b-93c664737094",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "49764083-bc94-4c36-b993-d5db9051d735"
        },
        "item": {
          "id": "656a5196-77c0-4a2b-8c88-ea29607ea85f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3a425831-002e-453a-ae5b-db7bed71d193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d9d1c1-b2b7-46d2-9ce3-4abbd07c892f",
        "cursor": {
          "ref": "156660b9-9217-4c02-96d9-df7c191a4728",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "35572e86-1f0e-4cf4-8d82-d2ade207a32a"
        },
        "item": {
          "id": "d7d9d1c1-b2b7-46d2-9ce3-4abbd07c892f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "35e37016-902b-4463-aefa-177513d35807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0422921d-eb1a-4e9e-9023-1abe399e2c15",
        "cursor": {
          "ref": "84e3daef-3431-4f01-a7c1-59e3f1bd9912",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0d929ec8-4c8e-4432-90f8-f7ad2856570e"
        },
        "item": {
          "id": "0422921d-eb1a-4e9e-9023-1abe399e2c15",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e18523c2-1bf1-4ad4-aba6-5a63b70c1e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6706f6cc-6c24-4575-859c-e05af1be6492",
        "cursor": {
          "ref": "19de0feb-cd4b-4c8b-bac3-52f4206aab25",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "64c11488-bde4-430a-9a1d-e9af48335207"
        },
        "item": {
          "id": "6706f6cc-6c24-4575-859c-e05af1be6492",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8edbc6ca-0c05-4b9c-aec2-3b086eb722cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139e901e-ad70-44d4-bf5e-b98a4bd83871",
        "cursor": {
          "ref": "55f80d03-f389-49d8-b256-b94a3eb9c932",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "631e5ee8-eb80-4b66-bb1e-8e03eb2dcd64"
        },
        "item": {
          "id": "139e901e-ad70-44d4-bf5e-b98a4bd83871",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "867b90da-f0b6-4b49-97ff-f0b08113897a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa04b3a1-a585-453b-b7b0-e9a853f9372d",
        "cursor": {
          "ref": "eca8fb0b-dde8-43bc-9bce-13c0d87cd707",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "03fb0d8a-91ea-4a4c-b23b-3c17bf3e3f93"
        },
        "item": {
          "id": "aa04b3a1-a585-453b-b7b0-e9a853f9372d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5804dd7c-91b1-460e-98a3-61b6ef0f9813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c708fb54-c8da-4f68-89d9-9584103a681b",
        "cursor": {
          "ref": "00472213-83fa-4572-80b6-9e308c3ef1e7",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "18c70346-956e-4517-b026-89b0b27d900a"
        },
        "item": {
          "id": "c708fb54-c8da-4f68-89d9-9584103a681b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "58c35984-4ddf-4b92-8b29-31d0554b5122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82137ed3-7a0c-41e4-a0f2-ecaa220d76a8",
        "cursor": {
          "ref": "f82c2f75-3d85-43ca-aa40-c94eda5f56c5",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c3001a7c-f8a4-4468-b0fe-6a42f6ca424a"
        },
        "item": {
          "id": "82137ed3-7a0c-41e4-a0f2-ecaa220d76a8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "542961cd-9054-416b-b7ed-64956050bb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29951ae1-8f76-471a-945a-1d1b65880dc0",
        "cursor": {
          "ref": "1f088bf1-20d6-4647-a866-4546fbffea02",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6a06698f-1656-49e3-bdb5-574ae1b3a4ef"
        },
        "item": {
          "id": "29951ae1-8f76-471a-945a-1d1b65880dc0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3036047c-58a1-4a96-afbe-219448116bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacd587a-c7aa-4b1d-a0bc-4183cdd778f9",
        "cursor": {
          "ref": "e8ea88e7-8257-47fe-ac2c-b3a5dab56731",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fe880c0a-d080-4b9e-a150-2733ee0e0f61"
        },
        "item": {
          "id": "eacd587a-c7aa-4b1d-a0bc-4183cdd778f9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "13c66c54-dba2-4540-ab5d-2c4849dfb4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da50f93a-09a6-41b4-8db9-59824e1e781f",
        "cursor": {
          "ref": "b62bc229-0d25-4986-922f-42eba750ebf4",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ac7ad61f-0c7d-497b-aefa-e261aac8d59f"
        },
        "item": {
          "id": "da50f93a-09a6-41b4-8db9-59824e1e781f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "662cd53e-b77f-48be-b85f-33add03c406b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3f362d-5977-4794-ab3c-d8772b907bfa",
        "cursor": {
          "ref": "6f8a553c-7056-42ac-a43e-30a63e6c9fed",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "99e49ad2-9749-4f97-a044-8dee3d5f8ebf"
        },
        "item": {
          "id": "cc3f362d-5977-4794-ab3c-d8772b907bfa",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "102e9e69-7546-495e-a69e-835cca4502c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63141bd8-7b38-41a7-91ea-c08873d57537",
        "cursor": {
          "ref": "b742a987-9ae3-4758-b030-e3c28267ac3a",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "449c51ab-ef1a-4a21-a6b7-bd6435992783"
        },
        "item": {
          "id": "63141bd8-7b38-41a7-91ea-c08873d57537",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "57135a87-5d02-41b6-87a5-e0f9399e6281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8252d9c5-b24a-4494-bfd2-253bf9af3ff0",
        "cursor": {
          "ref": "4312760d-8b1b-48a1-9f87-0e0f2e4abb09",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "68b74a0d-ab3f-4b8e-8608-54185ce2f4ca"
        },
        "item": {
          "id": "8252d9c5-b24a-4494-bfd2-253bf9af3ff0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2d1e99e4-7fad-47f7-99f1-6bdb9921771d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7b04d4-55ad-49bc-88d3-a68fab52e726",
        "cursor": {
          "ref": "13de3bb2-d1be-464c-88dc-498ede558aef",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "81ac8a9e-4434-4c20-9d5d-985c5c452a5c"
        },
        "item": {
          "id": "8a7b04d4-55ad-49bc-88d3-a68fab52e726",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b5fd2179-b0f6-4abb-8fbf-bf748c122989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d47a140-be2e-464c-ad9f-e0632acc1e0b",
        "cursor": {
          "ref": "53c09f78-b740-4ab0-9d34-7e97ca631b09",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a11c2c5e-0977-492f-9c4a-f159bd604292"
        },
        "item": {
          "id": "2d47a140-be2e-464c-ad9f-e0632acc1e0b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "604463ed-f18a-4e69-8bc5-385f640ea0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e92720d-c74f-4d4f-9c18-dc92f454b997",
        "cursor": {
          "ref": "6dfe1b12-6e5a-4550-a70f-84e9c28f33f5",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "54eddafb-a7ac-413e-a752-1b69a54cc8f6"
        },
        "item": {
          "id": "3e92720d-c74f-4d4f-9c18-dc92f454b997",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7faf7c3a-d932-4153-9530-0a8c5de2affc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc045f1-d61b-45e8-97be-ea628eaeda7d",
        "cursor": {
          "ref": "412cbd9e-b46d-48df-80f1-43491bf9062c",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "309182ae-408b-4e13-8938-9a5ada45816b"
        },
        "item": {
          "id": "dcc045f1-d61b-45e8-97be-ea628eaeda7d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c889c403-74dd-4f56-99f2-5bdf38dff9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca97110d-061a-4f53-a310-aa072cf0ec4b",
        "cursor": {
          "ref": "ccdcabd4-c1ff-4ed1-b262-84be482fd3c4",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "847b22e7-48d1-4ce1-a9dc-5527377a02c1"
        },
        "item": {
          "id": "ca97110d-061a-4f53-a310-aa072cf0ec4b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e97decfd-1443-4191-9171-086c6aef355c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be4276f-a118-4c2f-b80c-39e03acbd7ed",
        "cursor": {
          "ref": "ee63c59d-d5ac-494c-9677-de1c44bdcd3b",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3e79f55e-27d4-4ada-ad71-41eafdcd78ba"
        },
        "item": {
          "id": "1be4276f-a118-4c2f-b80c-39e03acbd7ed",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e8617669-1069-44c6-bb84-6a87491be197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd600d53-7511-41b3-a9b6-745e2d8001e0",
        "cursor": {
          "ref": "9d9cef4b-b10c-40b2-92d8-782b2dc5a6c0",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a151e7e4-8063-4123-a07a-c90af758964e"
        },
        "item": {
          "id": "cd600d53-7511-41b3-a9b6-745e2d8001e0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "824fe496-26da-4036-adb5-b8d43eef4262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204941f9-f904-42fe-850b-78f8ce371003",
        "cursor": {
          "ref": "c3a9b808-92c0-4e1e-9692-deb15cba8224",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9d660e94-f025-48d7-92a9-ba8050a10b94"
        },
        "item": {
          "id": "204941f9-f904-42fe-850b-78f8ce371003",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5e9f2510-548c-4e38-80e4-cc700a1504b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d23a48a-d6a3-4c73-af87-1a24dadd304a",
        "cursor": {
          "ref": "6d432f55-276c-4ae8-9b17-6e17ff96e291",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "69992aba-3d13-4b3c-839a-d390050b7f3b"
        },
        "item": {
          "id": "8d23a48a-d6a3-4c73-af87-1a24dadd304a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ef4a54af-5977-4b3b-9119-ef6b2ca68c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d5a9b5-d5d6-4170-b126-b9a91153c06f",
        "cursor": {
          "ref": "f8d21684-28b7-426a-ba15-4b5d6944fb29",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1f48b00d-2e5b-4bfb-be34-fc2ef428633a"
        },
        "item": {
          "id": "a6d5a9b5-d5d6-4170-b126-b9a91153c06f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c01da088-5054-4b79-bd18-71fb646c1281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7aa70d-390d-4427-9eb0-27e1c9c3bebb",
        "cursor": {
          "ref": "e00488de-edbe-4430-8d51-f01ce358f2a1",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0d27ce9d-c53a-40cb-9910-85cd827ba3f4"
        },
        "item": {
          "id": "1b7aa70d-390d-4427-9eb0-27e1c9c3bebb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "87e1fa74-90af-43ee-88e3-6b0ff2c17852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59e55a4-60f3-4480-8280-e75e720b2171",
        "cursor": {
          "ref": "b86ad64f-c943-485f-a761-a8c6178dc55b",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "41c4418d-4629-4661-a038-2f7fb7938175"
        },
        "item": {
          "id": "c59e55a4-60f3-4480-8280-e75e720b2171",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4d28980c-5e1e-4df1-9de5-a977e5e4062d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46610b2b-c807-4c83-a6d8-76b9ffe91b0a",
        "cursor": {
          "ref": "82c70ccd-ad8f-4c10-883e-c21d1c8f0c5c",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b7b97f20-6b3b-472f-acc0-a2bf474e6eb6"
        },
        "item": {
          "id": "46610b2b-c807-4c83-a6d8-76b9ffe91b0a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "22233d2d-b39a-4248-b887-5e254839f0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768f07cb-2161-4e3f-a6cb-5b7a7acbe013",
        "cursor": {
          "ref": "9f340986-af9f-455c-8973-7083a970dc8a",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "85263179-4908-4c9f-8505-526b9ccf2fe5"
        },
        "item": {
          "id": "768f07cb-2161-4e3f-a6cb-5b7a7acbe013",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "aca5348d-655c-4eca-b463-1bcbab2ed1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541b5b55-c875-41ab-a5ed-3a474e2578a8",
        "cursor": {
          "ref": "c722a4ca-041c-46ab-9338-a191c9308929",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "93819353-a9b8-4aba-a328-6f4e00b2a36b"
        },
        "item": {
          "id": "541b5b55-c875-41ab-a5ed-3a474e2578a8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "110f1663-17cd-4dbc-b974-d85167e0cc2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0077199-7387-4ebf-ba2b-c4b7f9d59cf4",
        "cursor": {
          "ref": "8722d172-457c-4300-a5ca-212700e45696",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7a76761b-cc19-4d93-bea2-79c62d076532"
        },
        "item": {
          "id": "b0077199-7387-4ebf-ba2b-c4b7f9d59cf4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "759e77b1-f28a-40db-aa3e-af6762636a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcac330-7130-465f-a657-41b8faa86ec3",
        "cursor": {
          "ref": "134fafd9-23c2-4182-aa0b-9d09a07b9688",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e8a24797-cf86-4c7b-acf5-4d1c1db17e9f"
        },
        "item": {
          "id": "4dcac330-7130-465f-a657-41b8faa86ec3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6c5ecd1e-81ba-4ef0-8042-842b83a3430a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e169654-7c8c-4979-a842-a2de2cd6e136",
        "cursor": {
          "ref": "4ca1cca0-6ec8-4d83-bb5e-db13a5163ea3",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f9ede315-fcf6-49f6-8ed0-ada422e9452a"
        },
        "item": {
          "id": "8e169654-7c8c-4979-a842-a2de2cd6e136",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "85a3be13-684d-4baa-abbd-1fe993a4e57e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 579,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170b2da0-5d07-4459-b730-d32914e2617e",
        "cursor": {
          "ref": "41a3272f-4725-4355-b5b3-e54adb6585b8",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fc34a3f5-a19d-4c6a-895e-db1864b27b98"
        },
        "item": {
          "id": "170b2da0-5d07-4459-b730-d32914e2617e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "56fc175c-be73-48b5-b14d-017e31e3f9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d88b7e-d7a1-4f37-8220-f78acfef93cd",
        "cursor": {
          "ref": "3e2ff8e0-2ea4-4b55-a563-11c9e7983fc1",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "32d4f8be-3734-44c8-bfde-0bd1028cbdb4"
        },
        "item": {
          "id": "77d88b7e-d7a1-4f37-8220-f78acfef93cd",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "af6e90dd-6857-45f4-922e-691d47a792c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7248ee0a-dc3d-4ca5-95d6-e30d741d3092",
        "cursor": {
          "ref": "c3b529b6-4619-461d-983d-eafa989bdce7",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "848d70d3-90bd-4a78-ad3f-36f0c36a570d"
        },
        "item": {
          "id": "7248ee0a-dc3d-4ca5-95d6-e30d741d3092",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6a02a198-743b-4b5d-898c-f84674f1f29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28e18cc-9005-4858-91d7-b4097c2596ee",
        "cursor": {
          "ref": "dd9f07f5-70c4-4242-a16c-c5ce8fc92a44",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "72e6af8a-13b7-4266-a6bb-f8de8e368c14"
        },
        "item": {
          "id": "b28e18cc-9005-4858-91d7-b4097c2596ee",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e70d9798-b64e-46d9-a00b-2fdb0794b410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8eb6ef-f357-4103-b3a3-bb3486527eee",
        "cursor": {
          "ref": "7f9ef02b-c3d2-493b-bdb8-9053211e0ce7",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "85fa6943-f242-464b-af0d-6c2d4ea2aac5"
        },
        "item": {
          "id": "ee8eb6ef-f357-4103-b3a3-bb3486527eee",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "64ed3496-1004-48fd-b44b-1bafcedc94de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce3a893-2f8f-4232-a5bb-85066ab03ec9",
        "cursor": {
          "ref": "61573bf8-24ff-425f-986c-ce6750ab71dc",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "97016036-5369-4d21-a05f-2a2f6821b38f"
        },
        "item": {
          "id": "1ce3a893-2f8f-4232-a5bb-85066ab03ec9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "60b83600-0ad3-4aab-ae93-c91d47b72bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5ebada-812c-4a80-8193-e53682c1a129",
        "cursor": {
          "ref": "918a6a35-fee1-49a5-8ec7-6fb81c1cd880",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0c5b346b-2cd0-4a88-94dd-ff763d6f7d8c"
        },
        "item": {
          "id": "6f5ebada-812c-4a80-8193-e53682c1a129",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "870e4585-98c2-4675-8d1c-8f16fbfc518d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 570,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2119755-2602-4bc6-bb14-81683605c980",
        "cursor": {
          "ref": "d3d67797-c61a-46ec-8af3-0f9369ae2c58",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1ea054e9-3889-4750-9f40-3e47d95795a6"
        },
        "item": {
          "id": "c2119755-2602-4bc6-bb14-81683605c980",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7eec846b-8c0c-4130-93ef-c3e29a36a89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29180e2b-0084-4e57-8a00-cae343a8625b",
        "cursor": {
          "ref": "7ffc6140-dc22-4147-b018-af62ef2cf8e1",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "81cc6d6b-9997-4cbc-a3a1-2455e28d0b61"
        },
        "item": {
          "id": "29180e2b-0084-4e57-8a00-cae343a8625b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0add7a7d-40ea-4bc1-adb7-fdc50db6a7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6698f79-7594-441a-9066-3e77569b89fa",
        "cursor": {
          "ref": "314335ef-814d-4472-a7c4-e52cc37228f0",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f1a7e346-141e-4b9a-993c-a0c4498da8ec"
        },
        "item": {
          "id": "b6698f79-7594-441a-9066-3e77569b89fa",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1d5404dc-47a9-4d1d-bd95-699316b8c040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b815134e-f2d3-4881-8f05-24604feda72a",
        "cursor": {
          "ref": "18d55cfc-0104-4bca-b2b5-e8183329ed95",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "394382c4-0214-43dc-beec-345cdf2e94fd"
        },
        "item": {
          "id": "b815134e-f2d3-4881-8f05-24604feda72a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "440d02c4-c94b-4858-89fa-b772dfdad6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8652d6d3-e59f-408d-9f9c-76fdfd5c51cb",
        "cursor": {
          "ref": "559c7cf3-1820-402d-89ad-849d4c750841",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1afa304a-e951-4333-9536-8bb326f0ecd1"
        },
        "item": {
          "id": "8652d6d3-e59f-408d-9f9c-76fdfd5c51cb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ae8553d1-f72d-4504-94f5-97abd13a9e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f23f7b-dffa-4411-beb3-b92e65a1a30b",
        "cursor": {
          "ref": "98241750-f92e-4722-826b-931bbaf4683d",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5ab33372-0efe-4aeb-af3a-0d88abb3a837"
        },
        "item": {
          "id": "e3f23f7b-dffa-4411-beb3-b92e65a1a30b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "dbab1c35-6c31-40a4-b7ad-b33b3e75d29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab025cf-8a86-41e9-8096-9fe9a69ad857",
        "cursor": {
          "ref": "1f032382-90cb-4d7f-9147-8af0f2a123ad",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c800a39b-9857-4845-ace7-58bb8878c084"
        },
        "item": {
          "id": "5ab025cf-8a86-41e9-8096-9fe9a69ad857",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9d5225f0-5c8b-47da-a8b2-b71d2c3194fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4939725-c50a-4339-943b-07787733670d",
        "cursor": {
          "ref": "ecb82099-23af-4127-99c6-c063cd47e05f",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "22314640-8d97-4c10-818c-64085487b4f8"
        },
        "item": {
          "id": "e4939725-c50a-4339-943b-07787733670d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d7c6aa60-ee32-493d-8611-0fe652a1d560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6dbd6df-1764-4430-b515-4668544e7211",
        "cursor": {
          "ref": "e6d01f04-21ab-4018-be16-8204d51ca17f",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "838ec846-efd8-4b68-ac13-5f51abac16d2"
        },
        "item": {
          "id": "c6dbd6df-1764-4430-b515-4668544e7211",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b104bc17-7657-473a-92ec-40ad2c52e844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1027a901-a4ce-449a-b12e-741fb4613d82",
        "cursor": {
          "ref": "c3e5d0d7-6406-4b22-9629-3d47c5f41fbb",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a0e46c46-d7de-404a-afbf-afcff6ea10ba"
        },
        "item": {
          "id": "1027a901-a4ce-449a-b12e-741fb4613d82",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "57ea426b-92e6-475e-9951-c4a3d696b9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c49da8-5c94-4dbc-8b99-1175952214fd",
        "cursor": {
          "ref": "8ee77610-f48c-4e97-82d1-1be39b520e11",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "238ba0f0-8c4e-432f-8902-3ce8a81252d1"
        },
        "item": {
          "id": "e3c49da8-5c94-4dbc-8b99-1175952214fd",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1f4bbe9b-7bc4-4d37-805c-114fc0dc2b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8be6716-0f97-4c2f-8cf2-b53a7113ca64",
        "cursor": {
          "ref": "392a4a34-6c49-4de7-a997-82624854d95a",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7c0d158e-18a0-4d1f-a767-5e6d579337a6"
        },
        "item": {
          "id": "f8be6716-0f97-4c2f-8cf2-b53a7113ca64",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "13d4d1a1-1796-4018-9a50-b7928c463367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fb9bdc-13f8-401e-b607-a10c7e357817",
        "cursor": {
          "ref": "ed1a784f-dc76-4094-ae2b-02cea026dbf8",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2a30954b-4f22-428d-a171-874a69114120"
        },
        "item": {
          "id": "59fb9bdc-13f8-401e-b607-a10c7e357817",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7cb7d8f4-be53-4b2e-b910-f6c0a999b19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12df8020-85c2-48fc-9e35-18aac229183f",
        "cursor": {
          "ref": "f8ee7e2b-f4e4-44c3-9661-bf12404cf564",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "be926fa3-67cf-420e-878f-5413da31a05f"
        },
        "item": {
          "id": "12df8020-85c2-48fc-9e35-18aac229183f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "80b38bc3-8627-4e00-896b-f7ec1200f1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a0efc2-6a0e-4f9d-833c-4f82ea2109b3",
        "cursor": {
          "ref": "620b6d19-28f1-469c-baed-c418a03ae84b",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "550b1a00-fa6b-43c3-a152-23c32f56cad3"
        },
        "item": {
          "id": "d6a0efc2-6a0e-4f9d-833c-4f82ea2109b3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2e6c044a-223b-4957-9838-6dbd6b4ca414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60812d71-4850-4f0e-a588-4fa63e8682ef",
        "cursor": {
          "ref": "3f1ea2de-5253-4f06-96c3-3e7ca02b8628",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "464d085a-2117-41bd-849f-a73f8fb2374d"
        },
        "item": {
          "id": "60812d71-4850-4f0e-a588-4fa63e8682ef",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "97e74bc2-03f1-44e0-b676-981ab6140db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ab7128-6023-4716-835b-585762a4b005",
        "cursor": {
          "ref": "9d1374e3-ed4f-4e8d-b189-8fb43b00cbb5",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8712385a-6423-4190-967d-63a3b1bd1cf1"
        },
        "item": {
          "id": "45ab7128-6023-4716-835b-585762a4b005",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "fc017c66-c0f9-423a-bf38-07b9e63f1c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba948c91-7963-44b9-af1d-ba0b9850ccc4",
        "cursor": {
          "ref": "73f2eef7-88e8-46c2-8b66-8f9875ac8d75",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d5ea50bc-0595-45d1-8639-f23a1a09e76b"
        },
        "item": {
          "id": "ba948c91-7963-44b9-af1d-ba0b9850ccc4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2347c624-9f15-4d7b-8997-b34f59b7f4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13916fe1-6fea-4dee-b360-78f352d1c0a7",
        "cursor": {
          "ref": "035d8e20-139c-4902-b37c-e855c39f2df6",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "87c8433a-4e18-4d0e-8e26-6171002d2d10"
        },
        "item": {
          "id": "13916fe1-6fea-4dee-b360-78f352d1c0a7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "90dcb6a7-a484-4594-ab1a-bc877250fc3b",
          "status": "Created",
          "code": 201,
          "responseTime": 4064,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "699d5849-e400-4580-8ac4-8250d23fecf0",
        "cursor": {
          "ref": "ccc43f66-14b6-4674-90ca-e8de770aa118",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0435105c-5237-4654-a42c-125f598b6bce"
        },
        "item": {
          "id": "699d5849-e400-4580-8ac4-8250d23fecf0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d1d834a5-3636-44b4-b3e9-eb0f50cdfa23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7f0ad2-065d-4760-a445-a211c2c2d0b9",
        "cursor": {
          "ref": "aec7d2a8-682f-4f29-a20f-4f2b75d3f822",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5abe3637-2742-4ec0-8a49-4aea13e1f573"
        },
        "item": {
          "id": "ce7f0ad2-065d-4760-a445-a211c2c2d0b9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "52788502-83e3-4f27-8115-2a12a2264a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e446d5d7-f82b-4b7f-b0a3-6e0c551dbd30",
        "cursor": {
          "ref": "9abcdd29-1196-49c8-a7c0-76f58aecbd75",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "222bce3f-6de5-4270-b3f8-f40e76551875"
        },
        "item": {
          "id": "e446d5d7-f82b-4b7f-b0a3-6e0c551dbd30",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "558283d6-52d2-4402-bf30-786b7b83486f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad65a35-bb35-4c61-b16d-c558832774fb",
        "cursor": {
          "ref": "a512a792-b926-4f99-9bd2-9223157f8cd5",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0a90e19a-0750-43af-9bb0-3cccb26079c4"
        },
        "item": {
          "id": "3ad65a35-bb35-4c61-b16d-c558832774fb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "55c5fc01-812b-4905-adfb-882546cc124a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effc847e-d7f6-449e-a209-774ac6eaf0f8",
        "cursor": {
          "ref": "8e1f8fd6-5bb2-46e7-9a61-b1b0e5b20ee2",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7c44d3be-2cbb-4e80-8ca1-57b59d05cfa5"
        },
        "item": {
          "id": "effc847e-d7f6-449e-a209-774ac6eaf0f8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "88c28018-129e-4d6e-994f-c5557ed263db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97fb967-dbbf-41db-b22f-49aece042824",
        "cursor": {
          "ref": "879b71b3-7744-4717-81e6-af3214ee3de4",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8562f68e-4114-4307-9206-fe13713c9a3a"
        },
        "item": {
          "id": "e97fb967-dbbf-41db-b22f-49aece042824",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1b8120cf-760e-4a7c-8549-1939a9f45b8e",
          "status": "Created",
          "code": 201,
          "responseTime": 2292,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "1c4f12e7-646f-4fb8-9dc9-04c2d850e287",
        "cursor": {
          "ref": "4a02cabe-5ff2-4154-b044-82bd4252b306",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7b5ce479-90cc-4fa5-9649-1167659b0111"
        },
        "item": {
          "id": "1c4f12e7-646f-4fb8-9dc9-04c2d850e287",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "63ef3bac-1e75-4344-9cf1-662161ce8732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf9440b-dc44-4058-83e0-67bc39a5b6ec",
        "cursor": {
          "ref": "9fa48cbd-ce53-4bef-9036-682a3c05207e",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5c150c2b-7f38-4034-9120-5e1f665344b8"
        },
        "item": {
          "id": "adf9440b-dc44-4058-83e0-67bc39a5b6ec",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "85fa726a-339e-416f-8e87-f0bd9d519b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37fd551-4f48-4edf-bfb4-7ab9faad8a3f",
        "cursor": {
          "ref": "9a267a36-6648-43b2-9042-2c1c93f323a2",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7cb772b4-4e03-459b-8fe4-fb674685cc0f"
        },
        "item": {
          "id": "f37fd551-4f48-4edf-bfb4-7ab9faad8a3f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2b4bee35-772b-4207-93e2-fa384764faff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba73148-2722-4193-b1be-f771461e8b75",
        "cursor": {
          "ref": "0c17a085-42d1-4a80-8e49-ebc258a104de",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bf62634c-e5a8-443b-8215-f0dd66ed11e6"
        },
        "item": {
          "id": "2ba73148-2722-4193-b1be-f771461e8b75",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0f20781f-93eb-4d4d-8134-90910523db5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e5cf05-d227-4132-8927-6342537bbcb9",
        "cursor": {
          "ref": "9c43e4f9-34f3-435f-aebc-713cd9dec130",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3904112c-7902-416e-b471-97f4529b8d49"
        },
        "item": {
          "id": "d6e5cf05-d227-4132-8927-6342537bbcb9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0e7e7127-c7d2-426b-b050-74eb20b777cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edce0e7-a2a0-4c0c-aaba-0764ccbcec68",
        "cursor": {
          "ref": "d8d57a4d-8749-4eed-bdcb-36131f4e8e1e",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0dc8ee25-aa55-4ce9-992a-ddb08ffc1ff5"
        },
        "item": {
          "id": "1edce0e7-a2a0-4c0c-aaba-0764ccbcec68",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9536c422-b98f-455f-a2b2-7b4f5c326766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc98d8e-68d0-4cca-a654-48df0f91714c",
        "cursor": {
          "ref": "d68f4c47-1ed6-42ce-b9d6-1e0e861dbf31",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ffaaa4e6-b80f-472c-a29f-feee174823c7"
        },
        "item": {
          "id": "dbc98d8e-68d0-4cca-a654-48df0f91714c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cfba0c90-8c21-405e-b2c2-53e19db5146d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8da216-7f3b-42b1-8916-dec1328b03b7",
        "cursor": {
          "ref": "6ad45374-51a0-4947-b326-be21430d181d",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e1589975-4e3d-4923-92df-82c562d15088"
        },
        "item": {
          "id": "ea8da216-7f3b-42b1-8916-dec1328b03b7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2eb10493-e632-4841-8e09-09394b5cdea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3d672e-0b7c-4d33-9d8f-ed36875e56f3",
        "cursor": {
          "ref": "4750bbc0-4ded-4652-a9e5-13a822febbbc",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "96264442-a6c4-465b-98d3-386a61d6e79c"
        },
        "item": {
          "id": "6b3d672e-0b7c-4d33-9d8f-ed36875e56f3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4fa1bdd3-afdd-45a9-99e7-53ae47a6d14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960aecd1-6a71-41ff-9367-6197e2008d5c",
        "cursor": {
          "ref": "f06ca431-4660-4d36-8472-c69c7cfb24ac",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "fb402d28-b493-4992-8a7c-046870cf0654"
        },
        "item": {
          "id": "960aecd1-6a71-41ff-9367-6197e2008d5c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6b9de8b8-72c2-4357-b541-0e9e2c059de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b96c174-6d6e-471d-9715-7588c3394f86",
        "cursor": {
          "ref": "496db82a-d3c8-4d51-aa70-52c170201743",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "076cc873-1fa4-43ff-a0ab-e19dd3a52ce6"
        },
        "item": {
          "id": "1b96c174-6d6e-471d-9715-7588c3394f86",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9da53bf2-6fd2-473f-84bf-0b8cec4c80ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f58d2e-a793-4961-a366-dcece55d4e9c",
        "cursor": {
          "ref": "16ccdd16-fd8f-4030-9bd1-8b3e13390acc",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0dec8ea0-7676-4ea3-8205-b623cff7cde6"
        },
        "item": {
          "id": "35f58d2e-a793-4961-a366-dcece55d4e9c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6aad0d05-ae82-410f-99d1-bc77717aed3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d39c92-a176-4cb2-b3ea-dd1362a55202",
        "cursor": {
          "ref": "e8009fa2-aadf-4cb2-9a1b-65c2495978f0",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3b52a3af-5196-49ad-b0fc-683c08968d0a"
        },
        "item": {
          "id": "61d39c92-a176-4cb2-b3ea-dd1362a55202",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ff0708fe-abcb-4ab1-b2cc-a672bedcfdb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad645f48-7ae5-44d8-a7c9-fa0c42a079d4",
        "cursor": {
          "ref": "c40ec86f-ef97-4cb0-841b-062f5075bbbe",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b6bf4d6c-8e38-4fea-a416-9a8b7f1dafe9"
        },
        "item": {
          "id": "ad645f48-7ae5-44d8-a7c9-fa0c42a079d4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "aaccab27-de62-42c5-818b-6f0b8535568f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926d5fbf-4185-4428-901c-3ee8d555b4d2",
        "cursor": {
          "ref": "666be5a4-e235-4327-9411-0923483c001e",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "df37addd-9401-4eee-acc4-1b9107a3895b"
        },
        "item": {
          "id": "926d5fbf-4185-4428-901c-3ee8d555b4d2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "feb9a989-fa5c-4c60-b43d-ecd60ac6f534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf17e63-80db-4e0b-bf34-538be0ddfd3f",
        "cursor": {
          "ref": "01b317eb-d4f8-4210-adb8-30ff83f7fcf0",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3c4d5ab5-6945-41ee-86b7-3d34626eb169"
        },
        "item": {
          "id": "0cf17e63-80db-4e0b-bf34-538be0ddfd3f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "37cb3c3a-bdc9-4ef2-95c7-d9d60f3f8723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8e78ce-88cf-4946-85eb-24ca882916a6",
        "cursor": {
          "ref": "13f760f5-e693-4a0d-a7f2-a54a489b884a",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2f3c7fff-c3dd-402a-9bdc-c839a2c39b90"
        },
        "item": {
          "id": "cc8e78ce-88cf-4946-85eb-24ca882916a6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7600429f-4353-41e6-9c67-a24fc7c6dc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cfbdad-ffe5-477e-b740-52b7932a08ab",
        "cursor": {
          "ref": "0a5c630b-c96b-4ee0-8023-dcb826cec45a",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cae8576a-adca-4608-89f8-ee7a163c39b0"
        },
        "item": {
          "id": "50cfbdad-ffe5-477e-b740-52b7932a08ab",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bad64380-7a44-47ae-ac8e-3ba42d3160ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559a1700-0257-4cd0-acfe-878578bf657f",
        "cursor": {
          "ref": "81087f76-da9e-4624-9586-4dcade5e07be",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5558b322-a6d4-46f9-bc5c-33dcbb1db7a8"
        },
        "item": {
          "id": "559a1700-0257-4cd0-acfe-878578bf657f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c212ce23-7760-4f22-b9ff-fc0d403398ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf41601-a958-4966-bc22-8ae8ba0fb044",
        "cursor": {
          "ref": "9cb8849a-a08b-49e7-afbf-427a5a2057ec",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b2ff771d-ed82-4646-9ef8-073e683943bc"
        },
        "item": {
          "id": "baf41601-a958-4966-bc22-8ae8ba0fb044",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2516440e-c647-42bc-b506-8e8e2eb60004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e4b486-7f7d-4d7a-a458-37736093a550",
        "cursor": {
          "ref": "51f7c1dd-6896-48f7-86ee-66b041b9170a",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "826c91d0-9ea0-4f3c-a9d7-a9ba9e90e024"
        },
        "item": {
          "id": "38e4b486-7f7d-4d7a-a458-37736093a550",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "18543f8e-b4b2-4b54-81f4-6575f7276620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad91d9dd-0025-4ff8-9945-8f76ed60d02f",
        "cursor": {
          "ref": "ccc72be2-daaa-4c5d-8317-3c5449100865",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b039a8aa-0b47-4be7-b83b-20e0c06ae84c"
        },
        "item": {
          "id": "ad91d9dd-0025-4ff8-9945-8f76ed60d02f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2f1fd732-6628-4e6d-bf2c-192d9106aa02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729e9de8-b8c7-42fc-87a5-921f2c793b32",
        "cursor": {
          "ref": "5f3edd9a-1fad-4ddc-ac2a-52e527113ba7",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "75f5af00-fce8-435c-b651-02ddc73d32c2"
        },
        "item": {
          "id": "729e9de8-b8c7-42fc-87a5-921f2c793b32",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3f4e8325-e9c6-4cea-adb8-baedea196cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197bee41-23c5-4355-8701-f7e900db54f6",
        "cursor": {
          "ref": "da23530a-cba6-4989-a672-437542ea8f3c",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c560367f-6914-4c63-bc39-c6ee64ed2366"
        },
        "item": {
          "id": "197bee41-23c5-4355-8701-f7e900db54f6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b75b552d-d7b9-42dd-9075-c80ed778ba2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b5e5b9-489f-4a33-a6d9-21716f079ce9",
        "cursor": {
          "ref": "d406218b-7e7f-47cb-87f4-253b92b44c56",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "455c15cc-a279-427e-a3c5-d19b4ff97d4d"
        },
        "item": {
          "id": "c0b5e5b9-489f-4a33-a6d9-21716f079ce9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ac181513-5281-408a-ace3-6b8d52f085de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22aa3e66-1bca-49dd-b315-4c7070962abe",
        "cursor": {
          "ref": "585f7e68-d794-43b4-a397-9b69b2e25baf",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6ded77bb-5b93-4903-bb3c-4e122aa5e23d"
        },
        "item": {
          "id": "22aa3e66-1bca-49dd-b315-4c7070962abe",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "3e4aec0d-4c9f-416d-84b8-33ee474e01d3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 545,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0221705b-1420-4811-8ae6-8b4d790664ef",
        "cursor": {
          "ref": "facff68e-919a-4f9d-b6cb-cad864424ab4",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0849e57b-65f1-4c31-9df2-fb60290d1de8"
        },
        "item": {
          "id": "0221705b-1420-4811-8ae6-8b4d790664ef",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7c064745-a9b8-4124-9ae7-d24d88fd8c4d",
          "status": "Created",
          "code": 201,
          "responseTime": 2628,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "8718556c-3cb8-4918-886f-bf877e55ba57",
        "cursor": {
          "ref": "2962687a-9305-44d4-85c5-07ef584e6cc7",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fe358a03-85ee-4cc7-8218-4f263e074718"
        },
        "item": {
          "id": "8718556c-3cb8-4918-886f-bf877e55ba57",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "b70de7b2-ff82-4fed-b13e-cb967df6e018",
          "status": "Created",
          "code": 201,
          "responseTime": 2359,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "4453f9a8-5236-4433-9e16-31dd0aa6230b",
        "cursor": {
          "ref": "54fd390c-3268-4909-8638-8ad7d8cf0bf8",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9b38af31-9b8a-4fec-a682-541e5e9c8ad2"
        },
        "item": {
          "id": "4453f9a8-5236-4433-9e16-31dd0aa6230b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c05bccf6-f3d8-4067-acb0-a506c0f73032",
          "status": "Created",
          "code": 201,
          "responseTime": 2406,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "bdd23c94-a21b-477c-8717-fcf0c5745792",
        "cursor": {
          "ref": "1122c9e9-2342-40d9-a914-eafec99178cb",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "26a11a6d-138c-4645-a658-83f6f49d912e"
        },
        "item": {
          "id": "bdd23c94-a21b-477c-8717-fcf0c5745792",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cfaccd83-910a-40ef-98b6-b208186790c6",
          "status": "Created",
          "code": 201,
          "responseTime": 2301,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "dbb1e0f8-73db-42e6-98eb-5cf80bad92ab",
        "cursor": {
          "ref": "8f0df1bf-612c-48b0-8923-7c915fb74b3a",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d57ddc3b-bead-463f-b1d9-2e5762bbb0ca"
        },
        "item": {
          "id": "dbb1e0f8-73db-42e6-98eb-5cf80bad92ab",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "58e9fe2c-cfcd-4f73-ba29-b8bf55dc2d0a",
          "status": "Created",
          "code": 201,
          "responseTime": 2142,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "9a42180a-5dfc-45c9-ac2a-0612a667d02c",
        "cursor": {
          "ref": "e3f399fb-de66-4614-8048-01dc15236288",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9e7c2fb1-aaaf-43bc-90ad-6f95f7ac6f3e"
        },
        "item": {
          "id": "9a42180a-5dfc-45c9-ac2a-0612a667d02c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "34a211b6-dee2-423a-bc5d-c8222ee1f007",
          "status": "Created",
          "code": 201,
          "responseTime": 3097,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "3e2c1359-ed86-4755-90dc-f83fdd7ad204",
        "cursor": {
          "ref": "1d096cb2-eeaa-4bdd-b75e-71782f09decd",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b51ad746-119c-427c-b37b-5828f8dd5f01"
        },
        "item": {
          "id": "3e2c1359-ed86-4755-90dc-f83fdd7ad204",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "93628986-2b52-450a-b2a6-cd5c17d5f6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2c1359-ed86-4755-90dc-f83fdd7ad204",
        "cursor": {
          "ref": "1d096cb2-eeaa-4bdd-b75e-71782f09decd",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b51ad746-119c-427c-b37b-5828f8dd5f01"
        },
        "item": {
          "id": "3e2c1359-ed86-4755-90dc-f83fdd7ad204",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "93628986-2b52-450a-b2a6-cd5c17d5f6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db156209-b8e4-4996-a580-a93f6343ff3a",
        "cursor": {
          "ref": "5519bdba-cc6e-456b-a91f-8dcd29b7117b",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d0236bad-5fa7-4c9a-b2ac-8b3d889783f2"
        },
        "item": {
          "id": "db156209-b8e4-4996-a580-a93f6343ff3a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "61588281-a471-4b44-b12f-9b557b73e940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c634121-97d6-464c-9f40-0b1005279d94",
        "cursor": {
          "ref": "3e696f89-9f75-4642-b015-6cd7e2d043a5",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "60837c6e-cce0-435c-8b07-109dcc846c5f"
        },
        "item": {
          "id": "8c634121-97d6-464c-9f40-0b1005279d94",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "15b8126d-9994-466a-8a41-ae7bcca6360a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a11665-f804-44ea-be27-6fc6497e2766",
        "cursor": {
          "ref": "5eab0a2a-ef4a-46d9-a12a-c569f5f01d20",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bfdc6365-30b8-4acb-b1a7-01739e534330"
        },
        "item": {
          "id": "76a11665-f804-44ea-be27-6fc6497e2766",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5c9b9f10-04cf-4cf5-9c30-4318d7ff7b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c731f2-abf8-43c8-afac-da985d419c6c",
        "cursor": {
          "ref": "1c38e6e3-4543-4c20-aeae-dbf712ace869",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a3a5cc2a-6ae6-40f6-8d40-7017151255ad"
        },
        "item": {
          "id": "39c731f2-abf8-43c8-afac-da985d419c6c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "843dce8f-4b34-420e-9f6a-6a02a76fbb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bc7779-5e2d-4c60-844d-b4ef4bbac806",
        "cursor": {
          "ref": "0194ee35-908b-414b-a148-9f096e229226",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1352d38e-a0ac-443f-9f44-4a481bf0fa77"
        },
        "item": {
          "id": "76bc7779-5e2d-4c60-844d-b4ef4bbac806",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d430320c-e4bb-45ea-92d4-0142fe8537b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f24cd1b-21fa-4719-805a-bf79b7e2600f",
        "cursor": {
          "ref": "4b69e9b4-d0c0-4c79-b3ee-0082e7dc712e",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c3526182-1b83-4a68-affb-6d518fd81760"
        },
        "item": {
          "id": "8f24cd1b-21fa-4719-805a-bf79b7e2600f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9db5423e-6d1f-4303-a2d5-109c626dc666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a06803-938e-4bde-9d7e-363799216b0b",
        "cursor": {
          "ref": "63923fa7-6e3c-47a0-8f84-643e72f22b01",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "97c032b4-8651-428b-bb62-cc4da32813da"
        },
        "item": {
          "id": "96a06803-938e-4bde-9d7e-363799216b0b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "217d9fc6-f981-42b0-8933-2e9d29b70a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2eefb6e-4156-4b28-afc3-7c62cf335f4c",
        "cursor": {
          "ref": "f75c5f06-e17f-4173-ba5e-0b474cca61e2",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ccd12ee5-c22f-4481-8099-a9501b075b3a"
        },
        "item": {
          "id": "f2eefb6e-4156-4b28-afc3-7c62cf335f4c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "408fbd19-3497-4d87-823f-bbffde5d77f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e46ca39-7db0-4d5a-b222-5f1c414b97be",
        "cursor": {
          "ref": "e8ac10fa-a826-4689-8ab9-6513569a9786",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "74af91d3-fa86-4648-b9d4-29a078f9ec69"
        },
        "item": {
          "id": "2e46ca39-7db0-4d5a-b222-5f1c414b97be",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "28a74037-2743-44b5-a6d9-aa2a04582143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf6c5ac-fb2b-4ccc-8bcd-c3d019744593",
        "cursor": {
          "ref": "09a1d99d-df1d-4726-971b-9ba1a84b3ee4",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "659ed6f5-7feb-4a94-a40c-62a8e9b4aef4"
        },
        "item": {
          "id": "ecf6c5ac-fb2b-4ccc-8bcd-c3d019744593",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "41f276cc-3a61-4a3d-a08d-6295b4530238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb06c18-ae1f-4c29-906c-d0642e78bb4e",
        "cursor": {
          "ref": "c7be0fe5-b7fa-4671-90d3-36331265653f",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "50fe4841-5c70-4a65-9327-8bce895907db"
        },
        "item": {
          "id": "ffb06c18-ae1f-4c29-906c-d0642e78bb4e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4b2173d1-1afc-449e-92ea-f86b990c10b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70bd286-37be-475d-9d0f-099313289dd5",
        "cursor": {
          "ref": "def9c573-9869-435c-9263-04318ed81511",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f1bae585-ffa1-41f7-8d3c-83b09de54537"
        },
        "item": {
          "id": "f70bd286-37be-475d-9d0f-099313289dd5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "60884701-3403-4060-864a-b797c4bacb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809311af-db23-437c-bb1e-ea9b2cf82e8f",
        "cursor": {
          "ref": "458f7eb8-ba2c-4bfb-a4e6-4487c4b0ecfb",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6de72640-db3d-4064-8f76-3b13c62db2a3"
        },
        "item": {
          "id": "809311af-db23-437c-bb1e-ea9b2cf82e8f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c6195b64-8a0f-454e-b508-8ff2cc8baa6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cafbf43-f85e-4219-9215-3ca8440488c5",
        "cursor": {
          "ref": "87461922-b045-4cfd-8e21-09c147cb6afc",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "420b8e8e-0fc2-4228-a876-5eff8df657cb"
        },
        "item": {
          "id": "0cafbf43-f85e-4219-9215-3ca8440488c5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f8f21457-62c6-46f1-8bb4-12971d28be8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d71a6a-88d0-41a7-8886-aa1045bcc39a",
        "cursor": {
          "ref": "997c5505-5d45-44b1-ad20-1234f4ea8893",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "77080d86-9b02-4c99-a6a0-f6d71d896096"
        },
        "item": {
          "id": "72d71a6a-88d0-41a7-8886-aa1045bcc39a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c500b1bd-f8c3-41b7-a9bb-e076da678d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e41c78f-ac9e-49a2-8b89-a13ebddc1a51",
        "cursor": {
          "ref": "c5c68fb6-ee53-42d3-8af4-c8ad5c0483cc",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "dd2da1d9-9f5c-42f7-8289-f0f3333c904a"
        },
        "item": {
          "id": "4e41c78f-ac9e-49a2-8b89-a13ebddc1a51",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9fd9cd8c-5c3b-4026-b321-70b172519cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3e633d-8505-4540-85da-c79ce73b8b88",
        "cursor": {
          "ref": "8d5bb7cb-14b3-4bc8-b401-9906836b481b",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "986b7d60-b49e-48c9-b063-25553bae87e2"
        },
        "item": {
          "id": "ba3e633d-8505-4540-85da-c79ce73b8b88",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "653ee1c1-1c35-47bf-8cde-c592d1f9e295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90008a33-661a-4147-8567-59daa240e1fd",
        "cursor": {
          "ref": "a92b74d4-5950-44a0-bb11-94c9f023ffe2",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e7453966-ba6d-4e14-9d16-e1e21256318f"
        },
        "item": {
          "id": "90008a33-661a-4147-8567-59daa240e1fd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "345c838f-9d39-4d3b-ba06-607b538b83cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34eb0256-9a45-4117-b91d-4f3bf08daebb",
        "cursor": {
          "ref": "51525286-32e7-4ad1-b18b-21fcefd80ae5",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "02d9fd6b-5c34-48b5-82ba-713001124064"
        },
        "item": {
          "id": "34eb0256-9a45-4117-b91d-4f3bf08daebb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "19b9af08-0166-4fdf-9f5c-21f069e109a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3467a3b-5413-4f5b-a360-77bce643de85",
        "cursor": {
          "ref": "85679343-05b4-4e8f-8c35-3be7d4bc4569",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "16f672cd-e650-45c7-a00c-413dfb6f3706"
        },
        "item": {
          "id": "c3467a3b-5413-4f5b-a360-77bce643de85",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d254456c-638b-43e4-9450-3e7c0b877645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639223bd-55b7-45b8-b9ed-43d6b82c467a",
        "cursor": {
          "ref": "9ef13d7f-2e3f-4e51-909a-a819da11f5ed",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d11cc0e0-0fe0-4d10-86da-e211e061c59b"
        },
        "item": {
          "id": "639223bd-55b7-45b8-b9ed-43d6b82c467a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "02346092-955e-4c76-a819-b4c76353c217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a84d1f-e327-4198-a61f-f3a3381ef5aa",
        "cursor": {
          "ref": "72c5420a-ba5d-4128-b097-4584fdf53e2c",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "cbae03f2-70e5-4794-a410-057aca666e37"
        },
        "item": {
          "id": "e9a84d1f-e327-4198-a61f-f3a3381ef5aa",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2045ed6e-ca44-4d38-87fe-d596324ceef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92ce2d8-49cc-4c74-af30-f11223772fdd",
        "cursor": {
          "ref": "91703c2c-9618-4893-8eb8-dfbb60b42228",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b9be4737-ccd2-48f8-8a53-b65b9b0682ff"
        },
        "item": {
          "id": "c92ce2d8-49cc-4c74-af30-f11223772fdd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "558c6ad1-44f0-4dde-9356-29b6404bd32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5918e82a-0e76-4df6-98ce-314d56d9d5e1",
        "cursor": {
          "ref": "e1b92304-00bc-40b2-8e53-314980400fd6",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e0a458ab-3764-479b-a30f-8c7c4c224018"
        },
        "item": {
          "id": "5918e82a-0e76-4df6-98ce-314d56d9d5e1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "91a081e2-82b2-40c9-8f08-5a059e483eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115c2ab4-1e50-4833-b202-4d65da1067f3",
        "cursor": {
          "ref": "2433e3a0-adbc-4c3b-853e-458bd91c9746",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "05e45a28-cfdf-41ae-8618-78115af2ce48"
        },
        "item": {
          "id": "115c2ab4-1e50-4833-b202-4d65da1067f3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "17715abf-3997-4832-8cd6-a0086faf6c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b08ed8-5247-4382-a2e0-ac8ca0b28d9b",
        "cursor": {
          "ref": "d8aeabc6-d42a-439e-b9b7-9c5b5973f5df",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2cc89711-cef4-410c-9e81-92521a44dddb"
        },
        "item": {
          "id": "85b08ed8-5247-4382-a2e0-ac8ca0b28d9b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "23dd5ce3-7efe-4f79-ac7a-40302bc8e98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ee7430-26af-4283-9db9-26d01a6fc43e",
        "cursor": {
          "ref": "d8a1c46c-ee32-4773-97df-242f09441d86",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2ca62531-53ec-4594-8464-219b08e2afa5"
        },
        "item": {
          "id": "a6ee7430-26af-4283-9db9-26d01a6fc43e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9f141a63-6a11-4ac3-8c76-94ce77eb0f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7fcff5-bc41-45d5-b37c-a5b63bdc219a",
        "cursor": {
          "ref": "1b8a6ead-dfcd-4115-8311-db6939480617",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b1c58384-c92b-445f-b465-1b63a575bee4"
        },
        "item": {
          "id": "0d7fcff5-bc41-45d5-b37c-a5b63bdc219a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c826b637-5bb4-4dd8-acbf-8f5419835211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c38032-eed5-4770-9950-e28e82406f76",
        "cursor": {
          "ref": "608c4e48-4e51-47be-a86c-5569b1b5ef05",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "90b2293a-e9b4-4359-b029-8cb99ae01eec"
        },
        "item": {
          "id": "28c38032-eed5-4770-9950-e28e82406f76",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e4fce6ff-5a09-446b-85a5-c149d7965bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80342bc0-eaf5-413c-8ef3-35ab7fb5b5af",
        "cursor": {
          "ref": "c85ddd9a-db0f-48d5-83b0-14e15ed30ffd",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7dc253e8-7039-4e54-b555-814e55ba0c4c"
        },
        "item": {
          "id": "80342bc0-eaf5-413c-8ef3-35ab7fb5b5af",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "af4efb95-f6c9-4157-bbb4-37bcea99f825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee6fc23-dc1d-46f7-b70b-210ad9f71e11",
        "cursor": {
          "ref": "77ea09ca-86c5-470c-b45a-fcc6566af349",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1d0a4e28-0cca-4b87-a2f1-b4cd68824b14"
        },
        "item": {
          "id": "eee6fc23-dc1d-46f7-b70b-210ad9f71e11",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a6cfb630-3a35-4abb-9ab8-ec6f8cc002ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fef453d-6f2a-4b86-afb7-2883722c7a63",
        "cursor": {
          "ref": "bfca8875-99b2-41b1-95cf-26acb8f67532",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "918c6d93-f6e8-410c-9069-018889dc8dc3"
        },
        "item": {
          "id": "6fef453d-6f2a-4b86-afb7-2883722c7a63",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d1e4b97c-cdab-4a4d-b45a-21cb1e36dbd1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5774cd3b-0c71-4fb0-b233-e2308c16dd6f",
        "cursor": {
          "ref": "fb4d7a81-d05f-4108-bcf0-78edbe7f1f3f",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b5104630-17b9-49cd-a056-8aad56fc3456"
        },
        "item": {
          "id": "5774cd3b-0c71-4fb0-b233-e2308c16dd6f",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "5eb9b420-ae23-4aa9-a69e-6dabee09f921",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 549,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0446961a-fdbb-46f6-8af3-c39712655989",
        "cursor": {
          "ref": "d3764f97-7fd0-49fc-8025-67d920588747",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "898b39a4-9978-4d69-b971-caaf6c6befdb"
        },
        "item": {
          "id": "0446961a-fdbb-46f6-8af3-c39712655989",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4a47a911-2f5e-4b95-b29d-b26d3ad2485d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0446961a-fdbb-46f6-8af3-c39712655989",
        "cursor": {
          "ref": "d3764f97-7fd0-49fc-8025-67d920588747",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "898b39a4-9978-4d69-b971-caaf6c6befdb"
        },
        "item": {
          "id": "0446961a-fdbb-46f6-8af3-c39712655989",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4a47a911-2f5e-4b95-b29d-b26d3ad2485d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375dec79-a498-4f00-be7e-bb31199710c9",
        "cursor": {
          "ref": "c8643653-c3f3-4512-8578-803c755998bf",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f73eb42d-fb0f-4dfb-bf0d-acec8d0ebc38"
        },
        "item": {
          "id": "375dec79-a498-4f00-be7e-bb31199710c9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8375062f-a042-4b34-9d34-c88b97b6f75c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 306,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "c79a3c79-e970-4f2d-8754-234503e4d63a",
        "cursor": {
          "ref": "22138895-33f0-4068-a23c-04805f927b94",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5e992194-4bec-4156-b621-d4ea59c95906"
        },
        "item": {
          "id": "c79a3c79-e970-4f2d-8754-234503e4d63a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "692dfa12-047f-4b3e-b49c-fe726982f0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6f1981-63ad-41b8-85bf-ccb893cc4212",
        "cursor": {
          "ref": "e4338dd3-9a8b-4b56-981c-a4cdf88171e8",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fc7f8600-f6f3-4a84-88ec-0b1871827b25"
        },
        "item": {
          "id": "dd6f1981-63ad-41b8-85bf-ccb893cc4212",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "aef5991c-df84-42e3-a032-5cd59bc447ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edead08-c648-4751-bb27-5e90cf52fc4c",
        "cursor": {
          "ref": "0fcb05b6-245a-4517-a141-b56566e82834",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "40a0a5ac-aa7c-4277-8e27-e210e533b505"
        },
        "item": {
          "id": "6edead08-c648-4751-bb27-5e90cf52fc4c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a2ac58e0-59bc-4786-8c89-8a0d8baf145a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cee618-11c3-4e21-8755-fdd7c6989463",
        "cursor": {
          "ref": "6971566e-58bf-4ef6-81ee-7f8a878c5520",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0624d63d-0c11-407c-9393-696fcbf008aa"
        },
        "item": {
          "id": "72cee618-11c3-4e21-8755-fdd7c6989463",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c72e8256-0036-436f-b3dd-fcecc379e7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d50b54-77b7-401c-aa4f-7275f009f688",
        "cursor": {
          "ref": "2ddedb6a-7cb8-4264-9044-087de7574357",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "078a7780-767f-4839-8927-5204038ef10e"
        },
        "item": {
          "id": "70d50b54-77b7-401c-aa4f-7275f009f688",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ddd3f839-38b9-4541-9735-7b298bcb9a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbb4587-7a0d-4902-a4f4-c0b858906ec3",
        "cursor": {
          "ref": "9b0ae432-5255-4e27-9ce2-a6fcd1207fac",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "39aa23d6-bd55-438f-9a39-138fd6b82a2d"
        },
        "item": {
          "id": "bcbb4587-7a0d-4902-a4f4-c0b858906ec3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7e9e3efb-11a3-4763-8b82-ce2875ffe0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3d0bb4-4c70-4dc3-842b-9696a76ac7d0",
        "cursor": {
          "ref": "339f1b8a-1d97-4959-9523-c07cfcc1f978",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5535420a-bca3-4dfc-9ee7-9eec5711857f"
        },
        "item": {
          "id": "ac3d0bb4-4c70-4dc3-842b-9696a76ac7d0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3234f9d0-4443-4523-8656-baad7dbf3fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd78d6a-0e2e-480a-ba21-731692aa497c",
        "cursor": {
          "ref": "7d273794-c45c-4577-9e37-f47d8d05f98f",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c120f923-c5a0-4759-b40c-88de3fd9f1a5"
        },
        "item": {
          "id": "bcd78d6a-0e2e-480a-ba21-731692aa497c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "de98719f-6228-423a-801f-2feea64fa4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f231fd-d76a-431b-a2cc-a6e15815511b",
        "cursor": {
          "ref": "acdb151e-49b9-4847-895f-05662b485e6d",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6a6310b6-d366-4adf-8432-cf430e54a7e1"
        },
        "item": {
          "id": "b8f231fd-d76a-431b-a2cc-a6e15815511b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "fab18134-45ff-495b-80f4-a7218f3f6d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38caa089-86ec-466d-ba17-c1a191274575",
        "cursor": {
          "ref": "25965d74-2348-4316-9a1e-275ab3868a0a",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7e46ae71-8f3e-43bb-ade0-80ed1b5d0411"
        },
        "item": {
          "id": "38caa089-86ec-466d-ba17-c1a191274575",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ebddfda2-59ab-480c-942c-a60fb894d673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5373ec3f-6c63-4908-9c73-888676208739",
        "cursor": {
          "ref": "6f7cdd3e-157d-49b9-aa4c-2a1162240777",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2295a1c5-4311-480d-b783-6a97dedd013e"
        },
        "item": {
          "id": "5373ec3f-6c63-4908-9c73-888676208739",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "66638ad0-5579-4c5e-8aab-02d4e6f9aa49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44867bd1-407c-45b4-bee1-047927a38840",
        "cursor": {
          "ref": "545a607f-21ab-497d-b7d6-d273f10915dd",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5335d06e-6851-4ae0-bbf5-06bb04ab3a36"
        },
        "item": {
          "id": "44867bd1-407c-45b4-bee1-047927a38840",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "90c5670e-aa99-47e1-a5ba-9f4d05effb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd22fdd-ff70-4f5b-93ef-831da4ac3a04",
        "cursor": {
          "ref": "487a40a3-fa73-4aa6-bdb9-4fa6f26b64f7",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "49115d35-cca0-4a0e-9a58-f1d22f62a8d6"
        },
        "item": {
          "id": "dfd22fdd-ff70-4f5b-93ef-831da4ac3a04",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ba1b9c03-c7cd-4aac-bdde-d152cb216494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad199de-c71c-4e39-9b8c-ef9e95c4006b",
        "cursor": {
          "ref": "8903e65d-c78e-4b6e-a7b6-16b2912210c5",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "01725225-c5c0-447c-9734-5dc6abe4e1f9"
        },
        "item": {
          "id": "1ad199de-c71c-4e39-9b8c-ef9e95c4006b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fbb556de-bdcf-4319-a976-e30ea00e9502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fd2c31-fee5-4777-aef2-d4bac579caf4",
        "cursor": {
          "ref": "b2a8dd55-4c92-4867-bec1-556d92d39b3f",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4720d2ec-190e-4455-85ba-f11f6cbe4cfe"
        },
        "item": {
          "id": "29fd2c31-fee5-4777-aef2-d4bac579caf4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "70006561-e1bd-4f02-bd88-292b1024245f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815a49df-9f7b-4b43-a6cb-94a3c813088e",
        "cursor": {
          "ref": "a66d2e4c-a0a8-4b70-9ade-7d0f67d26e38",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "90637232-72e6-4d4b-a88a-2a615133ba61"
        },
        "item": {
          "id": "815a49df-9f7b-4b43-a6cb-94a3c813088e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b3d36a0d-ef52-4e5d-b22c-82dfd5cd2493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33951d5-0f66-477d-8b08-c1ddb015c0e7",
        "cursor": {
          "ref": "7ead8d17-0f1b-466d-bbe3-ddcddb35402d",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e243f59f-214e-43b0-88a5-155e5b24282c"
        },
        "item": {
          "id": "f33951d5-0f66-477d-8b08-c1ddb015c0e7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4523cf6a-2ca7-4485-80a1-7b09548157a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a9d767-a541-40af-b1af-e9c274e8b3ea",
        "cursor": {
          "ref": "041897fd-39da-4c9d-8b40-c513ff8f03f1",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7c00ac29-4d0d-496d-a56b-541a02978eb9"
        },
        "item": {
          "id": "01a9d767-a541-40af-b1af-e9c274e8b3ea",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "215277a1-77c8-46d3-a93d-0e0e1566b46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf967a7-c9b1-4e41-add5-42c137ae5086",
        "cursor": {
          "ref": "fb11d4db-6537-4d55-bec7-c1507a555e4b",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "610e91ca-7249-4f5b-bab8-48fa2fcd92ea"
        },
        "item": {
          "id": "8cf967a7-c9b1-4e41-add5-42c137ae5086",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a4a8b19d-07e2-4d50-8d0a-ac6e7dbdf945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f191cdd2-18ca-4a8b-b063-d6fdf925fd48",
        "cursor": {
          "ref": "2128c43a-c9e0-46b6-b20e-bc5a11e9f55b",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2e1a7a29-8ec0-434a-93d9-ad9e30ff3544"
        },
        "item": {
          "id": "f191cdd2-18ca-4a8b-b063-d6fdf925fd48",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ba72d51b-1607-4f51-931b-f65ef31e2f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208769df-e664-430e-9bd9-1582633df80a",
        "cursor": {
          "ref": "8266de3d-5b51-4b18-b745-b24a68134588",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ab38c48f-ca09-49d8-8a14-372fcbc61e00"
        },
        "item": {
          "id": "208769df-e664-430e-9bd9-1582633df80a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3448bea1-41e4-4c76-9463-778cfc8f3c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a287bf-c565-44cb-ad89-a9a4336931e1",
        "cursor": {
          "ref": "fd244b24-e446-41c6-ba62-237d7d7077f2",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b167e2ef-bab4-4d3a-9939-98c824829ad8"
        },
        "item": {
          "id": "63a287bf-c565-44cb-ad89-a9a4336931e1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "22aeec8d-c310-4ea9-afec-6b2adca5b8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3919c5-5d6c-40a9-93d7-006746453e46",
        "cursor": {
          "ref": "a72f4fc0-8f29-44b1-8309-67774c162167",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1dab5c1f-fba0-4899-b6d0-0890c0b7eda1"
        },
        "item": {
          "id": "1b3919c5-5d6c-40a9-93d7-006746453e46",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7234992b-f288-401a-b3c4-4342188c94d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af51bcf-2c21-445a-b721-9c05b633a26f",
        "cursor": {
          "ref": "6ba47f55-22a7-49c8-a636-2c8726a3ccb0",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1866c2f0-109d-4f3e-ab3d-f804f2967503"
        },
        "item": {
          "id": "7af51bcf-2c21-445a-b721-9c05b633a26f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5f82aa96-dec0-4216-aba9-de870ee287f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec54f4d-a47b-4820-9b16-072b63374f44",
        "cursor": {
          "ref": "e9834b90-4c53-4104-a397-7ed1a16ba5e3",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "26e0590f-92c1-4714-a8b5-d40bd12dede9"
        },
        "item": {
          "id": "5ec54f4d-a47b-4820-9b16-072b63374f44",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b5516d6e-b27d-49eb-bdfc-2f01b71fecad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8984839-7ca0-40f0-83eb-009483eeca83",
        "cursor": {
          "ref": "8ddd0495-3f20-47b7-83b4-4532ea1a4ef3",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e3620966-6317-4d42-a7f7-0f7d5130798a"
        },
        "item": {
          "id": "a8984839-7ca0-40f0-83eb-009483eeca83",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "45b1410d-3e9c-4f73-a80e-1cc137e80262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6307352-216f-4a74-86e8-919bca0b12d0",
        "cursor": {
          "ref": "8c854b09-ee73-41e7-b074-e81ba13ac20b",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8e36d78a-7dec-4fd9-9e26-d5b1b474e941"
        },
        "item": {
          "id": "d6307352-216f-4a74-86e8-919bca0b12d0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7d81ab4e-3b17-4045-8ce4-d64d8f75af20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963c1517-bf3a-4e21-9157-5b71e1726063",
        "cursor": {
          "ref": "0e99e32f-045a-4dd4-92b1-e06e1a077ece",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "18ddb5ed-1f13-44f5-b014-94f95dee0809"
        },
        "item": {
          "id": "963c1517-bf3a-4e21-9157-5b71e1726063",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "063adb5c-afd9-4bbd-aa50-39e6af776437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b3c54c-a420-4bd8-b30e-20d54502a88d",
        "cursor": {
          "ref": "90c38c14-f32d-457d-8750-a793c848c912",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7e8750f6-94fa-41f3-98cc-30748359cb5f"
        },
        "item": {
          "id": "b4b3c54c-a420-4bd8-b30e-20d54502a88d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5428593a-7e41-4495-a9fe-dd62dd2b6b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcb15e8-5687-4350-addd-88d218fa6040",
        "cursor": {
          "ref": "9233cbd9-32aa-4a5a-a41c-a43d3f9d5018",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8537f97c-597e-4293-a389-82a6ec70d9cb"
        },
        "item": {
          "id": "abcb15e8-5687-4350-addd-88d218fa6040",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "98fc0547-8497-424b-9fa6-2a8038c5b740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7b10e3-4950-4250-ae44-ee829b9813f7",
        "cursor": {
          "ref": "9e79a0cf-d079-492d-bc1a-cecfd19b37ec",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "18569405-d0b9-4f8a-8da1-18475e32a732"
        },
        "item": {
          "id": "ea7b10e3-4950-4250-ae44-ee829b9813f7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "07a95c6d-ac1b-48f9-b4db-32bd4e6fbb46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acda475c-50e8-4fd1-ab63-6ee80baaeb83",
        "cursor": {
          "ref": "fd20c9ed-b763-4906-b412-210c97a4cdd2",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3162de15-a534-44fe-ab19-853aae041148"
        },
        "item": {
          "id": "acda475c-50e8-4fd1-ab63-6ee80baaeb83",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1c88eb61-0ea1-492d-a8b5-d9e0060248a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74e2a36-bde0-4db2-a2ab-91f64a9af6dc",
        "cursor": {
          "ref": "fd585d43-396d-4ff6-9bc1-717c24fa6334",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ba2a1941-26ff-4cf0-9fde-14b4d0f784dc"
        },
        "item": {
          "id": "c74e2a36-bde0-4db2-a2ab-91f64a9af6dc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "598bc356-abf9-46fd-8d79-755d09b13d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b6e450-c42e-4781-9605-ed0de2a49b4a",
        "cursor": {
          "ref": "6e8f62f2-f82e-4b46-845f-68ca4d93395e",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ce9402c9-342e-4100-a746-dccb9f13e660"
        },
        "item": {
          "id": "26b6e450-c42e-4781-9605-ed0de2a49b4a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "15b71f1c-5a57-44e9-bdd6-5c91cac7e56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6567ad63-f897-46ed-a6b2-780471fa011a",
        "cursor": {
          "ref": "f9e8f3d8-43c3-41f5-b3cb-9cd2a7338dae",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5b8f6217-27b8-4a6b-b6fe-87c2d55b5743"
        },
        "item": {
          "id": "6567ad63-f897-46ed-a6b2-780471fa011a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1a606861-f315-4a2c-98c1-c1046b87b3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223965d3-7aed-4800-ac17-06c38c631cae",
        "cursor": {
          "ref": "d2b7dcef-863d-4731-9f1e-a13a675b9a0e",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e5ff38d8-9800-4de1-9ae6-20c0ae30a480"
        },
        "item": {
          "id": "223965d3-7aed-4800-ac17-06c38c631cae",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e1764328-37d9-4379-8e8b-1af8163f167c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf2930a-80d1-4f4b-b0df-8e81528602e3",
        "cursor": {
          "ref": "0bacd4c5-3bd3-4fa6-8ae3-82deb6667a32",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "da609c0f-02ca-44ef-8ee6-176f36bb3135"
        },
        "item": {
          "id": "ebf2930a-80d1-4f4b-b0df-8e81528602e3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1094c252-eb21-4a94-a06c-d5d88c716aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fd8360-8caa-4e66-9bae-81c0dafd6054",
        "cursor": {
          "ref": "9050a490-b854-41e6-b903-30e347b97821",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "604196f6-7f06-45c8-8710-cc1a26cf812d"
        },
        "item": {
          "id": "f6fd8360-8caa-4e66-9bae-81c0dafd6054",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "953adbd9-116f-41d7-993a-513465953395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b9fd93-e0d9-40b8-860c-684d52c53c35",
        "cursor": {
          "ref": "028d5d61-6955-4f96-b068-ac7a2aa87d39",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e8b507a1-a00e-4ad1-8a65-d6c52ca47429"
        },
        "item": {
          "id": "70b9fd93-e0d9-40b8-860c-684d52c53c35",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6cb548c3-ff3c-4cd0-a4a6-9dc65a13f9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b648ec-7f04-4f13-8f28-a365b6f4f75b",
        "cursor": {
          "ref": "7d1a37c7-aa3b-42c2-9e19-323194d65942",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6aae1626-e830-41d9-82ee-d3c285a70deb"
        },
        "item": {
          "id": "b4b648ec-7f04-4f13-8f28-a365b6f4f75b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "80fcb93c-e9d9-449f-9e05-f5a10089830c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436b9cc0-bf45-4ef9-ac43-c5aef238acda",
        "cursor": {
          "ref": "9faadea4-19b8-472f-b892-3ab13a67195d",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "824ba69b-c1ff-40c3-9e23-47217a9242bb"
        },
        "item": {
          "id": "436b9cc0-bf45-4ef9-ac43-c5aef238acda",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8d3827fa-74b6-4ff2-85a9-0cba0c193b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ae772b-2d24-4bff-80ac-44d2089adc84",
        "cursor": {
          "ref": "d9d763bc-acb0-4ea0-a05d-60f07576b0fd",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "05e7c0ad-a3a8-4388-9893-c05b61b2203c"
        },
        "item": {
          "id": "c2ae772b-2d24-4bff-80ac-44d2089adc84",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ce7a1b3b-defa-47b3-9f1b-8c3a01dae0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9ae838-f628-43b0-84ca-b377b11329e8",
        "cursor": {
          "ref": "dcd3aee0-c394-433b-9262-a6b4e16b984b",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "371d4de9-2e56-4ab3-bbec-909e9cdcc839"
        },
        "item": {
          "id": "cf9ae838-f628-43b0-84ca-b377b11329e8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d72d9d2a-265d-4759-b25d-755e5741c7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449a6103-4ad1-4d5c-aebf-7bd8a7ca5f94",
        "cursor": {
          "ref": "a196d1b6-5fc8-4e26-bcc3-686f42f569c8",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "810f20ff-de41-4ded-b842-38e1483c65ae"
        },
        "item": {
          "id": "449a6103-4ad1-4d5c-aebf-7bd8a7ca5f94",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8db4097a-3611-40d2-a712-39b6e44b4755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52c534f-b8d1-42bd-b1b1-63751f834e0c",
        "cursor": {
          "ref": "61a747c1-9b25-448a-930d-73bd54232f57",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6a55a7ec-8444-4491-a65b-a1320f57b779"
        },
        "item": {
          "id": "e52c534f-b8d1-42bd-b1b1-63751f834e0c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0da068cc-53d0-418e-bd7e-272c269049ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94ecbf5-dda4-42fc-899f-3c933f14def8",
        "cursor": {
          "ref": "f86d14d1-0c4a-48cf-86e6-c91941dd88cf",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4031efcd-0be6-4401-95dd-93512faa2091"
        },
        "item": {
          "id": "e94ecbf5-dda4-42fc-899f-3c933f14def8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "12c12aee-08e1-4492-b9b7-2d74fe766ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0c4f62-d1b6-43cb-a322-58954593823d",
        "cursor": {
          "ref": "ebf75344-e958-4b58-8906-b11da7dd8c29",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1624caa7-b159-42e8-aebc-c5cbca903a6c"
        },
        "item": {
          "id": "2f0c4f62-d1b6-43cb-a322-58954593823d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0a2fe84b-8149-42d3-9b83-25f9d6247448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2491f2-2b73-4e49-a41f-ffd6fd81560b",
        "cursor": {
          "ref": "0bdd89fd-da50-4e23-af62-4d9d8c45f838",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0c227573-c933-484f-9351-12354a2484d1"
        },
        "item": {
          "id": "9c2491f2-2b73-4e49-a41f-ffd6fd81560b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "898f7895-fd6a-4297-ae44-ae7f5298268c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438da99a-1d64-449a-b403-eee895a48cd6",
        "cursor": {
          "ref": "a7f5b27d-40a2-4f06-95ec-d013ae1c3b58",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "85144d03-502b-4138-b123-646fed130df7"
        },
        "item": {
          "id": "438da99a-1d64-449a-b403-eee895a48cd6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "84ac2cac-f1e3-4342-9699-ebd5d56ee7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52fb477c-00c8-4a2b-bf9b-2bea4405040d",
        "cursor": {
          "ref": "ae5412e4-082a-4b2b-94bf-6de78150213b",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "35072944-50b0-4576-93f5-8fe9add56b45"
        },
        "item": {
          "id": "52fb477c-00c8-4a2b-bf9b-2bea4405040d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "06cb9fdf-c0f0-4910-8978-c8b8216fc08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de71c1a-5fc3-4591-965e-b67e9aa8ac59",
        "cursor": {
          "ref": "42514d5b-cb05-4252-b1e4-e55226201210",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bf40e044-9d31-4d3c-8f03-b7f7eb573fb9"
        },
        "item": {
          "id": "1de71c1a-5fc3-4591-965e-b67e9aa8ac59",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "62834ebd-2d81-4cde-b351-fbc4d15402f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1793f582-4bed-4a04-aaa6-45b2b449d760",
        "cursor": {
          "ref": "c4b589d8-61ed-4ea1-adcf-c197488e3848",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1dec4d63-2282-42d5-9f2b-89c683af818e"
        },
        "item": {
          "id": "1793f582-4bed-4a04-aaa6-45b2b449d760",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c3e1afbc-bb33-4117-b411-91fbebb9f320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d662faa-5931-432d-95d2-984a0eeae095",
        "cursor": {
          "ref": "93ffb423-7890-49e2-8b59-588535a605c4",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "43a94c9c-11be-49fd-9f2a-04da936d12eb"
        },
        "item": {
          "id": "2d662faa-5931-432d-95d2-984a0eeae095",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4a97f1ac-3b4f-41fc-8eb4-a629c8758445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ec0d82-0bee-4535-8f9c-1c2c41337cc2",
        "cursor": {
          "ref": "e5e280b2-98c0-49f6-b0ac-775a9fc02781",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f9e68802-29df-4ca7-a221-f290316bcdb2"
        },
        "item": {
          "id": "68ec0d82-0bee-4535-8f9c-1c2c41337cc2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b9cf401b-5322-4dee-b459-e2bd772db9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af8a876-92b7-47b2-b93b-4f5a820f2cfe",
        "cursor": {
          "ref": "86e03634-5810-4845-ad19-18cc4a3c9e38",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c67f2fa1-47a8-4403-9905-3073c08e6874"
        },
        "item": {
          "id": "0af8a876-92b7-47b2-b93b-4f5a820f2cfe",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d7a71c44-fe6f-4d50-a100-a374d71366a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7dbf2a-e697-4ac8-9740-612f61b5a245",
        "cursor": {
          "ref": "0f04d09a-6150-457e-8e18-eda38e150134",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "120bc7ec-103f-4cd3-a733-71e270dc2cff"
        },
        "item": {
          "id": "cb7dbf2a-e697-4ac8-9740-612f61b5a245",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9145f6ba-97d8-4471-bbb4-28bbd7e311c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e58586-cf40-4289-9758-b285b5a8e140",
        "cursor": {
          "ref": "f893e0c2-0d09-4209-9447-a26a4d4b9cf0",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9505f862-f5e7-4993-8e46-72684ecb7348"
        },
        "item": {
          "id": "39e58586-cf40-4289-9758-b285b5a8e140",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5a7ee2e3-833a-4fa4-ac22-fe79dcf57b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8f18e3-6d52-4f88-8cd9-f19964fb15b1",
        "cursor": {
          "ref": "4e4bc5fd-8cc2-4512-a5b3-dea3e07e6919",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a73d63c1-0733-473e-8981-46efc3cde149"
        },
        "item": {
          "id": "5a8f18e3-6d52-4f88-8cd9-f19964fb15b1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9e9e330c-afef-4f3f-a930-44990e734068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e73b0f2-027d-4992-a5e5-74a13d2b4614",
        "cursor": {
          "ref": "4e424b58-62fd-441a-83b7-24e5d9514f11",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "51bb39f0-c283-4bf3-818a-7f3203baa24c"
        },
        "item": {
          "id": "0e73b0f2-027d-4992-a5e5-74a13d2b4614",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "88f0b586-1ae0-4e98-9863-26ef68ac6b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80f329f-4f78-4462-9d07-a6288aedd832",
        "cursor": {
          "ref": "0a286429-abb5-432b-8489-b43e48d60221",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d08f4b33-f335-41f4-8871-10d0cfce5a1a"
        },
        "item": {
          "id": "c80f329f-4f78-4462-9d07-a6288aedd832",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "85a2be6b-7739-46a0-b947-a7648bd9b6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e19ff9-66f7-4d0c-9ba9-0c6f43db00b2",
        "cursor": {
          "ref": "2953007c-5b35-40a5-b430-b4d6a873c1bb",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6ab66b85-1a48-4f91-b87e-2b12b4ea8420"
        },
        "item": {
          "id": "10e19ff9-66f7-4d0c-9ba9-0c6f43db00b2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "03b20175-3eeb-4749-9f43-0275a8af89e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5c2805-d5a8-4f24-97ef-45daca3ed897",
        "cursor": {
          "ref": "1039626d-e9b0-44af-80f8-7a0899436178",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f7aeb7bf-7dc9-4af5-bf84-bb499f8c41d6"
        },
        "item": {
          "id": "cb5c2805-d5a8-4f24-97ef-45daca3ed897",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "820baee4-2a12-4125-b632-bdcc29a19141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6262896e-c542-48e4-8f36-fd691b40b072",
        "cursor": {
          "ref": "a7539ebe-21c9-4d45-8ffb-f54939175df1",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "14dfabfb-bbf9-4a78-988a-b2d1152c4996"
        },
        "item": {
          "id": "6262896e-c542-48e4-8f36-fd691b40b072",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e27b9a0f-3cb0-4ef3-a16a-8869c4e1a978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763f2809-1857-4bc0-82cc-20c222a29a5b",
        "cursor": {
          "ref": "7add9147-94ad-4764-8bb1-ca88a6b74690",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "50f33627-b59a-4c0a-9d87-dc9f0f64fea7"
        },
        "item": {
          "id": "763f2809-1857-4bc0-82cc-20c222a29a5b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "43209459-1b43-4575-8e4c-90b16c555124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f730973-f5a9-45d7-915f-2398b3d2efb4",
        "cursor": {
          "ref": "bdbcf985-76ca-41bb-9da4-02b52e93d9b2",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2188abaf-af5f-48f6-9fd1-1ac762f23164"
        },
        "item": {
          "id": "9f730973-f5a9-45d7-915f-2398b3d2efb4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d520b4aa-3d7b-4491-8254-c36861a83d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e794ded9-4a15-4d69-9d26-d66f8c630bc9",
        "cursor": {
          "ref": "65d43740-06f5-4fbc-83d5-cce12d532964",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "61c8c9b4-e778-43c5-bc3e-ce752a0ffdaf"
        },
        "item": {
          "id": "e794ded9-4a15-4d69-9d26-d66f8c630bc9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "608f05fc-b382-4b30-9a7e-1ff12f65e71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eada5de5-9d1a-4847-9f53-df3471642cc2",
        "cursor": {
          "ref": "c523746a-9275-48c7-8f5f-e41ea0fddbf7",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c99bf541-9825-4dbb-8ed8-91d7b64edb3a"
        },
        "item": {
          "id": "eada5de5-9d1a-4847-9f53-df3471642cc2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a7a355df-17ad-4d9c-bfe3-66427b62c786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29964f26-1f8e-41df-9e80-9140f944d0ea",
        "cursor": {
          "ref": "47ac4bfd-1652-41f6-b729-7b20928cc212",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "93dddfc9-8c6e-4e18-85ab-319958f5a07b"
        },
        "item": {
          "id": "29964f26-1f8e-41df-9e80-9140f944d0ea",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e347e024-3a2f-412f-9cdd-b9bdb2160106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a5ea0d-02f4-485b-892c-70ac71245b1f",
        "cursor": {
          "ref": "a79d5739-54c5-48ea-9c9a-5bb3593bd0c8",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2b49f63c-d0a3-486b-8259-641d7d2dc6f9"
        },
        "item": {
          "id": "c6a5ea0d-02f4-485b-892c-70ac71245b1f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a9bd16e6-472e-4d79-a3f9-5535cf31bc98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3f773e-11af-4f93-93ad-8e341d40aec9",
        "cursor": {
          "ref": "01808ddf-db6a-4668-872b-7f8d162ebcc6",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7c94acbb-c11a-4966-9996-778db110bc52"
        },
        "item": {
          "id": "6e3f773e-11af-4f93-93ad-8e341d40aec9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "79fecd84-5495-4a94-92dd-76b71cdab29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ccc7a0-007e-4cab-a117-11b58730c3a4",
        "cursor": {
          "ref": "90389f4f-c89a-451d-801f-ec26890e47b1",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3791d33b-41c7-4b7b-ae5c-39728106fe4e"
        },
        "item": {
          "id": "90ccc7a0-007e-4cab-a117-11b58730c3a4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a06f3f77-a3bd-4fca-9c51-781ca2eab2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4c5bb2-7ea4-4336-a20b-2776feb58328",
        "cursor": {
          "ref": "2cc47230-fbae-4a8a-9e36-de28286e94ef",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "29ae6c42-2c15-4a13-a8d3-a76891ad8169"
        },
        "item": {
          "id": "7d4c5bb2-7ea4-4336-a20b-2776feb58328",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0b1baf58-ea28-4fd1-99ef-a2bd56b15cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59743c4-dbc1-4b3d-81be-3312d3321d98",
        "cursor": {
          "ref": "54a108ff-f991-4c50-a766-a3fa3b14ba17",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "eacbce07-4f26-4a11-a831-0416274463ed"
        },
        "item": {
          "id": "b59743c4-dbc1-4b3d-81be-3312d3321d98",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "62e37a1d-ac50-41e2-975c-fcb48c977170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5506f3ec-1928-4fd3-aa3a-6634121159a4",
        "cursor": {
          "ref": "0b0ab778-aef5-495a-b867-7838f9d1fd88",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5a215af8-1dad-423c-8c89-7cab7d743907"
        },
        "item": {
          "id": "5506f3ec-1928-4fd3-aa3a-6634121159a4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b1104e13-b537-4d45-8ee8-16852f567294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d70b83-6686-4b78-bbe4-b06a24ddd089",
        "cursor": {
          "ref": "b6ead753-f7d5-4c82-b809-3e23e58c7c96",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a0a8519a-b582-475a-a76e-0d8667d992ef"
        },
        "item": {
          "id": "74d70b83-6686-4b78-bbe4-b06a24ddd089",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7cdffefc-4f71-4045-9d71-fb261d1e5e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f9c8dc-edef-4eb4-9542-acfba35a2f3d",
        "cursor": {
          "ref": "f46fcca1-df08-4a94-a897-9ced4142d9f3",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "13c6e73c-35f1-4066-b884-722a6216b35b"
        },
        "item": {
          "id": "e9f9c8dc-edef-4eb4-9542-acfba35a2f3d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "30a71f55-4d05-4a7f-b1a7-280e6f88fc3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f465ac88-7aca-4c2e-b510-c71b5194780d",
        "cursor": {
          "ref": "9baf69aa-4feb-4e68-b3ba-8a8cb89f70a3",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "25322a47-29e4-491d-8759-29ba2d1147e6"
        },
        "item": {
          "id": "f465ac88-7aca-4c2e-b510-c71b5194780d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5e7d3bb1-10c2-4706-9dd3-c44767e588a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814b3726-38d0-4b5a-86a6-466f4f6e089b",
        "cursor": {
          "ref": "f53e6af0-6698-47c6-a5ba-95aded092c40",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b0a41954-173d-4dd3-bb7e-2735e7177c9e"
        },
        "item": {
          "id": "814b3726-38d0-4b5a-86a6-466f4f6e089b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a9a11db4-da89-4c50-8f0c-f227efd97729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e69a640-b296-47a3-be61-07d396544d63",
        "cursor": {
          "ref": "faf0a30f-06ed-4027-8b98-26826653451d",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ca71f323-41b0-47c0-baf5-03e2e20a72cb"
        },
        "item": {
          "id": "9e69a640-b296-47a3-be61-07d396544d63",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ebd53b95-6dc2-4554-a450-6a9df4c756c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e941cf7-5316-4493-834e-23a536821386",
        "cursor": {
          "ref": "163ea2fc-c401-46e4-a7ea-9a2f2ea86509",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "63275b71-37dd-4435-808f-c67f7055d692"
        },
        "item": {
          "id": "0e941cf7-5316-4493-834e-23a536821386",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6f88af37-7e4f-4879-84e5-15e17c1cfbee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53c005a-16f2-4eed-abec-b81ce0572bca",
        "cursor": {
          "ref": "958d4afb-570a-4047-9f7e-d6352208f99d",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "42b42e61-eb5c-4f26-9ead-6fc8d7b1e152"
        },
        "item": {
          "id": "e53c005a-16f2-4eed-abec-b81ce0572bca",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ce22e691-20ce-4f72-a407-87a1c4f0abfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1722b8-d39d-4688-8ae1-5a4c3750bbbc",
        "cursor": {
          "ref": "b1a78931-bf64-4278-a7c2-312841235b2a",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "48135548-92ee-4ec3-812e-db38feb668c7"
        },
        "item": {
          "id": "ba1722b8-d39d-4688-8ae1-5a4c3750bbbc",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9d4778f9-15c6-4bcd-8543-da528fded640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0fc9c0-e054-4969-970c-5f27373b0b85",
        "cursor": {
          "ref": "351501b8-39f4-463e-a7dd-060568f18f1f",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4629585d-f330-47a0-9d47-9abdf3ae2a8c"
        },
        "item": {
          "id": "bd0fc9c0-e054-4969-970c-5f27373b0b85",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6edfa175-1b04-4171-ae11-eb5c76902fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd06e88-ed9e-4203-a1d0-8dcd151fef16",
        "cursor": {
          "ref": "b88cf201-efd3-4e2a-9bcb-e2b4f320d728",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4576bbb6-fb9b-4702-a4d2-d958ee8a59f7"
        },
        "item": {
          "id": "8cd06e88-ed9e-4203-a1d0-8dcd151fef16",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "47e4e1e2-2e1d-4326-b2dd-65db995d1a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd3a79b-c710-479c-a583-95d61c0d5b52",
        "cursor": {
          "ref": "f791f890-a554-4f3d-8bfc-565d9f451505",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f42cb4a8-65d7-403f-8e6f-4037ed8c5f75"
        },
        "item": {
          "id": "fbd3a79b-c710-479c-a583-95d61c0d5b52",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "723d043d-2f53-4d7b-b5f7-95410459a6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da38981-af5e-4118-b3d9-4490be268491",
        "cursor": {
          "ref": "72fdfbba-6b6d-4cde-8b0a-503628b8d6aa",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "67f275fc-6fe0-4d3f-9ab8-32fc95cdcc12"
        },
        "item": {
          "id": "3da38981-af5e-4118-b3d9-4490be268491",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "adbe1375-a551-4368-8c2f-2235fb0062da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bc16b1-33f4-4faa-ae16-1c80847b0a4c",
        "cursor": {
          "ref": "a2601811-095f-4a2d-9bc9-b6a67d560562",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d055811f-3801-4cc5-83b5-bb141aa02978"
        },
        "item": {
          "id": "b2bc16b1-33f4-4faa-ae16-1c80847b0a4c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2e6d3fcc-a5df-4288-8850-680a387d0ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91123f6b-786d-4568-86ff-b2652ff1a107",
        "cursor": {
          "ref": "62d89768-5425-493d-a6f6-1f79069de24b",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f5586eac-1256-478b-a32c-46a3ae4f7656"
        },
        "item": {
          "id": "91123f6b-786d-4568-86ff-b2652ff1a107",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5905c97c-2651-41e2-a7b0-37105155c8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93373ae-cad9-4b76-bb6a-5e30fbd1808d",
        "cursor": {
          "ref": "2046ef3c-87d2-4cb7-b5c1-f178668217fb",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b87547b4-37d6-475b-a9b2-0781504d6809"
        },
        "item": {
          "id": "d93373ae-cad9-4b76-bb6a-5e30fbd1808d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6decef9d-5a44-48d7-98ad-6617ad8ece28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794832a0-cec5-4adc-b993-ce654ffa764a",
        "cursor": {
          "ref": "bbb20a5c-cb3f-4693-a851-1e09235024cb",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a4af5a9a-c598-4706-a21d-3d291aadadc5"
        },
        "item": {
          "id": "794832a0-cec5-4adc-b993-ce654ffa764a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "bbf72657-7a30-4519-bc21-33ba2245a541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b132ff38-b54d-4d66-a385-e4d2d78a4186",
        "cursor": {
          "ref": "5bd6543f-71ae-48fa-9dfc-e9b502a59d07",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1e0be5d2-acc6-41df-b9c0-a6152a950f83"
        },
        "item": {
          "id": "b132ff38-b54d-4d66-a385-e4d2d78a4186",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "99a56cf5-0d31-46aa-8d4f-5b4724384f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b65d251-d661-4f08-8dd2-4e734bffe0f1",
        "cursor": {
          "ref": "9cf5297e-20a8-4a09-ac1b-27b165a888e1",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4622c84e-ede7-45f9-a9a1-4aa5c5b9e544"
        },
        "item": {
          "id": "9b65d251-d661-4f08-8dd2-4e734bffe0f1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ca92db26-44f7-457c-bd75-a103d5ebc282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e681fa99-6282-4d01-b6f2-d9487fa1aa0a",
        "cursor": {
          "ref": "475f7a7d-8678-498c-a3e6-6d2fcbebe6be",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1920378b-bdaa-4ee9-af5b-c458b6a7692a"
        },
        "item": {
          "id": "e681fa99-6282-4d01-b6f2-d9487fa1aa0a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e2c7ade9-07ad-42d3-8126-065b7f48d20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6bdee5-db71-4e8e-bb9b-48aa2659a6d1",
        "cursor": {
          "ref": "777c0dc2-a2b7-434a-9305-4dd11eab621d",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "04065e34-1e2d-49df-857d-4dc8e1ed194e"
        },
        "item": {
          "id": "2b6bdee5-db71-4e8e-bb9b-48aa2659a6d1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0cb5b14b-0339-4be6-b1a2-5fe4982d67a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e7d1fb-c9e3-45a7-b567-47cb729d9b61",
        "cursor": {
          "ref": "0ba3d09b-f425-4288-bf15-3e9e20978b63",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "474b4363-6af8-4a37-8473-294206d72535"
        },
        "item": {
          "id": "52e7d1fb-c9e3-45a7-b567-47cb729d9b61",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0e279888-8e54-40cd-a71a-0fa4f83e412e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825f5d8f-b9bc-4792-99ec-ab635b1b4f50",
        "cursor": {
          "ref": "b250ddc0-b41a-41ef-a8b9-e56529641305",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "56222758-4584-4626-a3ff-f657f606e0b8"
        },
        "item": {
          "id": "825f5d8f-b9bc-4792-99ec-ab635b1b4f50",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ca233e65-480b-4a34-938b-83ede2f7d6fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e50f69-75a9-4ad4-b4d8-b5b402dcc036",
        "cursor": {
          "ref": "530076ce-3d3a-434b-875b-5b20485c0e30",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0ebfdeac-d824-4dc7-9c06-590ea143156c"
        },
        "item": {
          "id": "e6e50f69-75a9-4ad4-b4d8-b5b402dcc036",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "05621839-9488-4ed4-92e8-abb150a458bd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 268,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc40b5fa-e530-4036-bb9f-b4165ff4787e",
        "cursor": {
          "ref": "543e0154-ce5c-4a55-b480-4c388866320a",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5051577c-3ad1-4c2c-82d8-df03ffb67b60"
        },
        "item": {
          "id": "fc40b5fa-e530-4036-bb9f-b4165ff4787e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6bb3d815-8fdb-47b6-bbf2-5fe80bb7c26e",
          "status": "OK",
          "code": 200,
          "responseTime": 352,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99a9cf8-3cdb-4301-bd7c-4aedff9940dc",
        "cursor": {
          "ref": "7257367b-e989-432c-b4ad-90891f2afc51",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3dfbd4b4-31c9-4c43-a12a-79e12f6751be"
        },
        "item": {
          "id": "b99a9cf8-3cdb-4301-bd7c-4aedff9940dc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3f4c1286-947c-4ca6-a88f-ae0ef5b22e0e",
          "status": "OK",
          "code": 200,
          "responseTime": 339,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f17be0e-9a84-4479-ba00-8f30766474d6",
        "cursor": {
          "ref": "a37b927b-1b19-4edf-9611-cd11e10a8800",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4a744f45-f38f-4380-bb54-8d84952dffcc"
        },
        "item": {
          "id": "2f17be0e-9a84-4479-ba00-8f30766474d6",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "a000e310-f901-43ca-827b-93befd8c07a0",
          "status": "OK",
          "code": 200,
          "responseTime": 360,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e994183-ab2f-42d0-bb49-8ad81934e13c",
        "cursor": {
          "ref": "32ea385b-e5d0-44a7-bf36-d1928635c818",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e991c2c4-05a8-40cf-a33a-d302efc23d4e"
        },
        "item": {
          "id": "9e994183-ab2f-42d0-bb49-8ad81934e13c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bfa455e7-3157-482c-8167-ec82bb2abc36",
          "status": "OK",
          "code": 200,
          "responseTime": 344,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee1ed41-f0d8-4e04-9776-f76a38aa70fa",
        "cursor": {
          "ref": "9130239a-9951-471f-b197-251ed0ddadd5",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8dd0d179-164a-453b-a859-3bc63c8695b2"
        },
        "item": {
          "id": "2ee1ed41-f0d8-4e04-9776-f76a38aa70fa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "70945e86-615c-45d6-a9e9-a2ad3256791b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee1ed41-f0d8-4e04-9776-f76a38aa70fa",
        "cursor": {
          "ref": "9130239a-9951-471f-b197-251ed0ddadd5",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8dd0d179-164a-453b-a859-3bc63c8695b2"
        },
        "item": {
          "id": "2ee1ed41-f0d8-4e04-9776-f76a38aa70fa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "70945e86-615c-45d6-a9e9-a2ad3256791b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee1ed41-f0d8-4e04-9776-f76a38aa70fa",
        "cursor": {
          "ref": "9130239a-9951-471f-b197-251ed0ddadd5",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8dd0d179-164a-453b-a859-3bc63c8695b2"
        },
        "item": {
          "id": "2ee1ed41-f0d8-4e04-9776-f76a38aa70fa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "70945e86-615c-45d6-a9e9-a2ad3256791b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5de794-1c21-43ea-9678-8bd890c2903a",
        "cursor": {
          "ref": "a800b85f-7b26-4c7f-854b-2abff47824f1",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2e570ac0-ba4c-4d63-b796-c1399b48294f"
        },
        "item": {
          "id": "8b5de794-1c21-43ea-9678-8bd890c2903a",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "8cec40eb-e071-4d5a-aba7-b0944f03b35a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 260,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99c4f2e-fc44-46ed-bc92-8d8ac3939a9f",
        "cursor": {
          "ref": "36b0bf53-b0c0-47f5-8d27-c1da1d2272e0",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b49cf995-1fc9-4f89-9d97-0854f061fd95"
        },
        "item": {
          "id": "a99c4f2e-fc44-46ed-bc92-8d8ac3939a9f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "99d08ee3-2353-4e31-b547-5f6e068c9841",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99c4f2e-fc44-46ed-bc92-8d8ac3939a9f",
        "cursor": {
          "ref": "36b0bf53-b0c0-47f5-8d27-c1da1d2272e0",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b49cf995-1fc9-4f89-9d97-0854f061fd95"
        },
        "item": {
          "id": "a99c4f2e-fc44-46ed-bc92-8d8ac3939a9f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "99d08ee3-2353-4e31-b547-5f6e068c9841",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f76475c-a4ca-4827-b1c8-fe6c3817fe6e",
        "cursor": {
          "ref": "acc7d1d8-f8b7-4dcf-828c-b4bcd8937736",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a4a4bf99-a2e5-4c7b-afe0-f9e9075920a2"
        },
        "item": {
          "id": "8f76475c-a4ca-4827-b1c8-fe6c3817fe6e",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "f49cadaa-1806-4507-8a26-2e11ae04962b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 569,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b315065-2f1a-43c4-a837-806887ed5fdd",
        "cursor": {
          "ref": "44c0f28d-acf5-4a7c-b502-f41e7b05025b",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e3f2e1d0-c551-4df0-a00d-88cec8a68115"
        },
        "item": {
          "id": "2b315065-2f1a-43c4-a837-806887ed5fdd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e3d3fa0c-3760-4144-91cd-3e57e86be81a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b315065-2f1a-43c4-a837-806887ed5fdd",
        "cursor": {
          "ref": "44c0f28d-acf5-4a7c-b502-f41e7b05025b",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e3f2e1d0-c551-4df0-a00d-88cec8a68115"
        },
        "item": {
          "id": "2b315065-2f1a-43c4-a837-806887ed5fdd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e3d3fa0c-3760-4144-91cd-3e57e86be81a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b21b51-d05e-48b2-8abb-7ac31894058a",
        "cursor": {
          "ref": "db46cc87-1be6-41ff-b6a8-ac11f36b54df",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "913a0dae-e97b-46dc-9d58-be66fef5c423"
        },
        "item": {
          "id": "24b21b51-d05e-48b2-8abb-7ac31894058a",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "d19f48a0-8c4b-4da6-bece-cc03497dec5c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 510,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}