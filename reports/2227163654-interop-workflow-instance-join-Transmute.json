{
  "collection": {
    "info": {
      "_postman_id": "6f3afe3d-f721-48df-82f7-eb3d3936f320",
      "name": "eCommerce - Workflow Instance Join",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "180f5353-6d4b-41a4-b65f-ca3fb1f14eb4",
        "name": "00 - Importer Access Token",
        "request": {
          "url": {
            "host": [
              "{{ORG_1_TOKEN_ENDPOINT}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"audience\": \"{{ORG_1_TOKEN_AUDIENCE}}\",\n    \"client_id\": \"{{ORG_1_CLIENT_ID}}\",\n    \"client_secret\": \"{{ORG_1_CLIENT_SECRET}}\",\n    \"grant_type\": \"client_credentials\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "0f59c8ef-d282-4ee8-90df-ee794eae347d",
              "type": "text/javascript",
              "exec": [
                "pm.environment.set(\"org_1_access_token\", pm.response.json().access_token);",
                "",
                "pm.test(\"Importer application has access token\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "04aa5a83-e2e6-4879-bf68-5dee505dae8a"
            }
          }
        ]
      },
      {
        "id": "3b42c7d0-2948-4c51-99ee-c67ae947bce9",
        "name": "00 - Freight Forwarder Access Token",
        "request": {
          "url": {
            "host": [
              "{{ORG_2_TOKEN_ENDPOINT}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"audience\": \"{{ORG_2_TOKEN_AUDIENCE}}\",\n    \"client_id\": \"{{ORG_2_CLIENT_ID}}\",\n    \"client_secret\": \"{{ORG_2_CLIENT_SECRET}}\",\n    \"grant_type\": \"client_credentials\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e49be5b3-18cf-4746-bbc5-9e34e9c44150",
              "type": "text/javascript",
              "exec": [
                "pm.environment.set(\"org_2_access_token\", pm.response.json().access_token);",
                "",
                "pm.test(\"Freight Forwarder application has access token\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "b8bff2c6-0ff0-41cf-8c9f-fac549f4d347"
            }
          }
        ]
      },
      {
        "id": "65001515-768c-4ec2-b8c1-594d1e24a5a3",
        "name": "00 - Customs Access Token",
        "request": {
          "url": {
            "host": [
              "{{ORG_3_TOKEN_ENDPOINT}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"audience\": \"{{ORG_3_TOKEN_AUDIENCE}}\",\n    \"client_id\": \"{{ORG_3_CLIENT_ID}}\",\n    \"client_secret\": \"{{ORG_3_CLIENT_SECRET}}\",\n    \"grant_type\": \"client_credentials\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "7b1c9bc8-8bcd-44e1-994d-43c96733c71b",
              "type": "text/javascript",
              "exec": [
                "pm.environment.set(\"org_3_access_token\", pm.response.json().access_token);",
                "",
                "pm.test(\"Customs application has access token\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "a5d31dac-1ed4-4397-9800-7ec5cf592f79"
            }
          }
        ]
      },
      {
        "id": "9056582f-d025-4e86-a207-960dfff90d2b",
        "name": "00 - Get Importer Exchange Endpoint",
        "request": {
          "url": {
            "path": [
              "identifiers",
              "{{ORG_1_DID_WEB}}"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "44a40392-57f9-4e99-9d40-fb905a520152",
              "type": "text/javascript",
              "exec": [
                "const { didDocument } = pm.response.json()",
                "pm.environment.set(\"org_1_holder\", didDocument.alsoKnownAs[1]);",
                "pm.environment.set(\"org_1_tenant_url\", didDocument.service[0].serviceEndpoint);",
                "",
                "pm.test(\"Importer has holder DID\", function () {",
                "     pm.expect(pm.environment.get(\"org_1_holder\")).to.not.be.undefined;",
                "});",
                "",
                "pm.test(\"Importer has service endpoint\", function () {",
                "     pm.expect(pm.environment.get(\"org_1_tenant_url\")).to.not.be.undefined;",
                "});"
              ],
              "_lastExecutionId": "369ddd0d-1743-44d7-9042-df10c24fed82"
            }
          }
        ]
      },
      {
        "id": "d674584d-4037-4e6c-905b-7bd38f30cfad",
        "name": "00 - Get Freight Forwarder Exchange Endpoint",
        "request": {
          "url": {
            "path": [
              "identifiers",
              "{{ORG_2_DID_WEB}}"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e3f0f949-cba5-4614-9588-9b679ae17ca1",
              "type": "text/javascript",
              "exec": [
                "const { didDocument } = pm.response.json()",
                "pm.environment.set(\"org_2_holder\", didDocument.alsoKnownAs[1]);",
                "pm.environment.set(\"org_2_tenant_url\", didDocument.service[0].serviceEndpoint);",
                "",
                "pm.test(\"Freight Forwarder has holder DID\", function () {",
                "     pm.expect(pm.environment.get(\"org_2_holder\")).to.not.be.undefined;",
                "});",
                "",
                "pm.test(\"Freight Forwarder has service endpoint\", function () {",
                "     pm.expect(pm.environment.get(\"org_2_tenant_url\")).to.not.be.undefined;",
                "});"
              ],
              "_lastExecutionId": "474af363-9512-4404-9509-7739fc0e055b"
            }
          }
        ]
      },
      {
        "id": "464620dd-098c-4e50-a5f5-0413cd801fcb",
        "name": "00 - Get Customs Exchange Endpoint",
        "request": {
          "url": {
            "path": [
              "identifiers",
              "{{ORG_3_DID_WEB}}"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "dd6fef2e-e104-4072-b386-3ab90cc271cd",
              "type": "text/javascript",
              "exec": [
                "const { didDocument } = pm.response.json()",
                "pm.environment.set(\"org_3_holder\", didDocument.alsoKnownAs[0]);",
                "pm.environment.set(\"org_3_tenant_url\", didDocument.service[0].serviceEndpoint);",
                "",
                "pm.test(\"Customs has holder DID\", function () {",
                "     pm.expect(pm.environment.get(\"org_3_holder\")).to.not.be.undefined;",
                "});",
                "",
                "pm.test(\"Customs has service endpoint\", function () {",
                "     pm.expect(pm.environment.get(\"org_3_tenant_url\")).to.not.be.undefined;",
                "});"
              ],
              "_lastExecutionId": "15d58103-c62d-4e30-942a-7a3f33478aab"
            }
          }
        ]
      },
      {
        "id": "312f675e-470d-4906-8aa7-4fbc57b7acb1",
        "name": "01 - Importer - Issue Proforma Invoice",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\",\n            \"CommercialInvoiceCertificate\"\n        ],\n        \"name\": \"Commercial Invoice Certificate\",\n        \"issuanceDate\": \"2022-02-23T11:55:00Z\",\n        \"issuer\": {\n            \"id\": \"{{org_1_holder}}\",\n            \"type\": [\n                \"Organization\"\n            ],\n            \"address\": {\n                \"type\": [\n                    \"PostalAddress\"\n                ],\n                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                \"addressLocality\": \"Tsubame-shi\",\n                \"addressRegion\": \"Niigata-ken\",\n                \"postalCode\": \"959-0215\",\n                \"addressCountry\": \"Japan\"\n            }\n        },\n        \"credentialSubject\": {\n            \"type\": [\n                \"Invoice\"\n            ],\n            \"portOfEntry\": {\n                \"type\": \"Place\",\n                \"unLocode\": \"USLGB\"\n            },\n            \"destinationCountry\": \"MEX\",\n            \"purchaseDate\": \"2021-02-21\",\n            \"seller\": {\n                \"type\": [\n                    \"Organization\"\n                ],\n                \"address\": {\n                    \"type\": [\n                        \"PostalAddress\"\n                    ],\n                    \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                    \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                    \"addressLocality\": \"Tsubame-shi\",\n                    \"addressRegion\": \"Niigata-ken\",\n                    \"postalCode\": \"959-0215\",\n                    \"addressCountry\": \"Japan\"\n                }\n            },\n            \"buyer\": {\n                \"type\": [\n                    \"Organization\"\n                ],\n                \"address\": {\n                    \"type\": [\n                        \"PostalAddress\"\n                    ],\n                    \"organizationName\": \"Generic Motors of America\",\n                    \"streetAddress\": \"12 Generic Motors Dr\",\n                    \"addressLocality\": \"Detroit\",\n                    \"addressRegion\": \"Michigain\",\n                    \"postalCode\": \"48232-5170\",\n                    \"addressCountry\": \"USA\"\n                }\n            },\n            \"shipToParty\": {\n                \"type\": [\n                    \"Organization\"\n                ],\n                \"address\": {\n                    \"type\": [\n                        \"PostalAddress\"\n                    ],\n                    \"organizationName\": \"Generic Motors of America\",\n                    \"streetAddress\": \"12 Generic Motors Dr\",\n                    \"addressLocality\": \"Detroit\",\n                    \"addressRegion\": \"Michigain\",\n                    \"postalCode\": \"48232-5170\",\n                    \"addressCountry\": \"USA\"\n                }\n            },\n            \"itemsShipped\": [\n                {\n                    \"type\": \"TradeLineItem\",\n                    \"product\": {\n                        \"manufacturer\": {\n                            \"type\": \"Organization\",\n                            \"address\": {\n                                \"type\": \"PostalAddress\",\n                                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                                \"addressLocality\": \"Tsubame-shi\",\n                                \"addressRegion\": \"Niigata-ken\",\n                                \"postalCode\": \"959-0215\",\n                                \"addressCountry\": \"Japan\"\n                            }\n                        },\n                        \"description\": \"UNS S30400 chromium-nickel stainless steel rolls.\",\n                        \"weight\": {\n                            \"type\": \"QuantitativeValue\",\n                            \"unitCode\": \"lbs\",\n                            \"value\": \"16500\"\n                        }\n                    },\n                    \"itemCount\": 5,\n                    \"tradeLineItemWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"value\": \"82500\",\n                        \"unitCode\": \"lbs\"\n                    },\n                    \"priceSpecification\": {\n                        \"type\": \"PriceSpecification\",\n                        \"price\": 5200,\n                        \"priceCurrency\": \"USD\"\n                    }\n                },\n                {\n                    \"type\": \"TradeLineItem\",\n                    \"product\": {\n                        \"manufacturer\": {\n                            \"type\": \"Organization\",\n                            \"address\": {\n                                \"type\": \"PostalAddress\",\n                                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                                \"addressLocality\": \"Tsubame-shi\",\n                                \"addressRegion\": \"Niigata-ken\",\n                                \"postalCode\": \"959-0215\",\n                                \"addressCountry\": \"Japan\"\n                            }\n                        },\n                        \"description\": \"Galvalannealed ASTM A-653 zinc-iron alloy-coated steel sheets.\",\n                        \"weight\": {\n                            \"type\": \"QuantitativeValue\",\n                            \"value\": \"12680\",\n                            \"unitCode\": \"lbs\"\n                        }\n                    },\n                    \"itemCount\": 20,\n                    \"tradeLineItemWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"value\": \"253600\",\n                        \"unitCode\": \"lbs\"\n                    },\n                    \"priceSpecification\": {\n                        \"type\": \"PriceSpecification\",\n                        \"price\": 4400,\n                        \"priceCurrency\": \"USD\"\n                    }\n                }\n            ],\n            \"totalWeight\": {\n                \"type\": \"QuantitativeValue\",\n                \"value\": \"336100\",\n                \"unitCode\": \"lbs\"\n            },\n            \"totalPaymentDue\": {\n                \"type\": \"PriceSpecification\",\n                \"price\": 9600,\n                \"priceCurrency\": \"USD\"\n            }\n        }\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "dd5ed417-b85f-4be4-b4ef-66425179046d",
              "type": "text/javascript",
              "exec": [
                "  pm.test(\"Proforma Invoice VC issued\", function () {",
                "      pm.response.to.have.status(201);",
                "      pm.environment.set('importers_proforma_invoice_vc', JSON.stringify(pm.response.json()));",
                "  })"
              ],
              "_lastExecutionId": "2be73ec6-5735-4117-9e61-faaf59bbf1c5"
            }
          }
        ]
      },
      {
        "id": "b4bc119f-4fa9-4fb9-868a-65169e510868",
        "name": "02 - Importer - Present to Customs - (1/3)",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "434f62f7-00b6-4710-9d47-fa802073d9b5",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.environment.set(\"org_3_domain\", responseJson.domain);",
                "pm.environment.set(\"org_3_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Importer has authenticated to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "184123df-bfcd-40aa-949d-f194f4e0d446"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "9e554fcc-77e0-4c8c-844d-bc06d1b440bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d438311-0eda-47ed-b1a3-f7de6826a11b"
            }
          }
        ]
      },
      {
        "id": "0f985486-e24e-4467-a39f-f5b4a9688519",
        "name": "02 - Importer - Present to Customs - (2/3)",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_1\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_1_holder}}\",\n        \"verifiableCredential\": [\n            {{importers_proforma_invoice_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c75d9afc-79cf-405a-bd62-c2657c170829",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.environment.set(\"importers_proforma_invoice_presented_to_customs\", JSON.stringify(responseJson));",
                "",
                "pm.test(\"Importer VP of Proforma Invoice with workflow instance 'instance_1' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "2fa638df-1faa-4cb0-b6be-44149fe51214"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "026a069f-25f7-45cf-8269-6feb53b74307",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d94cb9ee-9664-4846-9b24-e7a18d9296b8"
            }
          }
        ]
      },
      {
        "id": "f59a4343-90c1-407b-9636-c9d595105449",
        "name": "02 - Importer - Present to Customs - (3/3)",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{importers_proforma_invoice_presented_to_customs}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "88b9a13f-c133-40d3-9b08-fa9e15eb86a0",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Importer has successfully presented Proforma Invoice to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"Proforma Invoice VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "1b2fdeae-7351-4108-9ab1-d27a5f8bdd90"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "fd50a1d6-b5a1-4d98-99e2-e83ea3086ca4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b27782c-2eaf-4e65-b892-846aa26bd4a7"
            }
          }
        ]
      },
      {
        "id": "7cedf29e-c53c-4afb-a8ef-6866ecc5fe4b",
        "name": "03 - Customs - Verify Proforma Invoice",
        "request": {
          "url": {
            "path": [
              "presentations",
              "verify"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiablePresentation\": {{importers_proforma_invoice_presented_to_customs}},\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "3aaa3c7c-e638-4e8b-9d1f-b1e9d5eab00c",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Customs verifies Proforma Invoice\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "var workflowInstances = JSON.parse(pm.environment.get(\"importers_proforma_invoice_presented_to_customs\")).workflow.instance",
                "",
                "pm.test(\"Customs stores first workflow instance id: \" + workflowInstances[0], function () {",
                "    pm.environment.set(\"customs_first_workflow_instance_id\", workflowInstances[0]);",
                "});",
                "",
                ""
              ],
              "_lastExecutionId": "128097be-25fd-42b0-b756-248540faf5e1"
            }
          }
        ]
      },
      {
        "id": "6606eee9-754f-4e4c-850a-91413ad2fbd7",
        "name": "04 - Freight Forwarder - Issue House Waybill",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"did:key:z6MkmbqKc6KncFZUbVJwUppttTkiMAtnVJ5wzC5oVBWci3pc\",\n        \"type\": [\n            \"VerifiableCredential\",\n            \"HouseBillOfLadingCertificate\"\n        ],\n        \"name\": \"House Bill Of Lading\",\n        \"issuanceDate\": \"2022-03-04T13:40:00Z\",\n        \"issuer\": {\n            \"type\": \"Organization\",\n            \"id\": \"{{org_2_holder}}\",\n            \"name\": \"World Forward, Inc.\",\n            \"address\": {\n                \"type\": \"PostalAddress\",\n                \"organizationName\": \"MCL Multi Container Line LTD.\",\n                \"streetAddress\": \"Well Fung Ind Centre\",\n                \"addressLocality\": \"Kwai Chung\",\n                \"addressRegion\": \"Hong Kong\",\n                \"addressCountry\": \"Hong Kong\"\n            }\n        },\n        \"credentialSubject\": {\n            \"type\": \"HouseBillOfLading\",\n            \"billOfLadingNumber\": \"FF873363210A\",\n            \"bookingNumber\": [\n                \"FF873363210\"\n            ],\n            \"shipper\": {\n                \"type\": \"Organization\",\n                \"name\": \"Espresso Italiano Co.\",\n                \"address\": {\n                    \"type\": \"PostalAddress\",\n                    \"streetAddress\": \"Via Vico Ferrovia 5\",\n                    \"addressLocality\": \"Goro\",\n                    \"addressRegion\": \"Ferrara\",\n                    \"postalCode\": \"44020\",\n                    \"addressCountry\": \"IT\"\n                },\n                \"email\": \"sales@espresso-italiano.example.com\",\n                \"phoneNumber\": \"+39 0351 9067195\"\n            },\n            \"consignee\": {\n                \"type\": \"Organization\",\n                \"name\": \"Prosumer Coffee Supplies, Ltd.\",\n                \"description\": \"Coffee Machine Imports\",\n                \"address\": {\n                    \"type\": \"PostalAddress\",\n                    \"streetAddress\": \"3934 Spinnaker Lane\",\n                    \"addressLocality\": \"Joliet\",\n                    \"addressRegion\": \"Illinois\",\n                    \"postalCode\": \"60432\",\n                    \"addressCountry\": \"US\"\n                }\n            },\n            \"notifyParty\": [\n                {\n                    \"type\": \"Organization\",\n                    \"name\": \"Prosumer Coffee Supplies, Ltd.\",\n                    \"description\": \"Coffee Machine Imports\",\n                    \"address\": {\n                        \"type\": \"PostalAddress\",\n                        \"streetAddress\": \"3934 Spinnaker Lane\",\n                        \"addressLocality\": \"Joliet\",\n                        \"addressRegion\": \"Illinois\",\n                        \"postalCode\": \"60432\",\n                        \"addressCountry\": \"US\"\n                    }\n                }\n            ],\n            \"carrier\": {\n                \"type\": \"Organization\",\n                \"id\": \"did:key:z6MktHQo3fRRohk44dsbE76CuiTpBmyMWq2VVjvV6aBSeE3U\",\n                \"name\": \"World Forward, Inc.\",\n                \"address\": {\n                    \"type\": \"PostalAddress\",\n                    \"organizationName\": \"MCL Multi Container Line LTD.\",\n                    \"streetAddress\": \"Well Fung Ind Centre\",\n                    \"addressLocality\": \"Kwai Chung\",\n                    \"addressRegion\": \"Hong Kong\",\n                    \"addressCountry\": \"Hong Kong\"\n                }\n            },\n            \"mainCarriageTransportMovement\": {\n                \"type\": \"Transport\",\n                \"vesselNumber\": \"MS Seven Seas\",\n                \"voyageNumber\": \"Atl-W0425\"\n            },\n            \"portOfLoading\": {\n                \"type\": \"Place\",\n                \"unLocode\": \"ITMIL\"\n            },\n            \"portOfDischarge\": {\n                \"type\": \"Place\",\n                \"unLocode\": \"USLGB\"\n            },\n            \"totalNumberOfPackages\": 2200,\n            \"transportEquipmentQuantity\": 2,\n            \"includedConsignmentItems\": [\n                {\n                    \"marksAndNumbers\": \"Espresso Italiano\",\n                    \"commodity\": {\n                        \"type\": \"Commodity\",\n                        \"commodityCode\": \"851671\",\n                        \"commodityCodeType\": \"HS\"\n                    },\n                    \"packageQuantity\": 220,\n                    \"netWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"unitCode\": \"kg\",\n                        \"value\": \"1460\"\n                    },\n                    \"grossWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"unitCode\": \"kg\",\n                        \"value\": \"1590\"\n                    },\n                    \"grossVolume\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"value\": \"85\",\n                        \"unitCode\": \"cmb\"\n                    }\n                }\n            ],\n            \"freightAndCharges\": {\n                \"type\": \"ServiceCharge\",\n                \"chargeCode\": \"basicFreight\",\n                \"paymentTerm\": \"collect\",\n                \"chargeText\": \"Negotiated ocean freight\",\n                \"rate\": {\n                    \"type\": \"PriceSpecification\",\n                    \"price\": 225,\n                    \"priceCurrency\": \"USD\"\n                },\n                \"calculationBasis\": \"Per container\",\n                \"appliedAmount\": {\n                    \"type\": \"PriceSpecification\",\n                    \"price\": 450,\n                    \"priceCurrency\": \"USD\"\n                }\n            },\n            \"declaredValue\": {\n                \"type\": \"PriceSpecification\",\n                \"price\": 24000,\n                \"priceCurrency\": \"USD\"\n            },\n            \"termsAndConditions\": \"https://terms-of-shipment.freightforwarder.example.com\"\n        }\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "83352e58-72a9-430c-b43c-fe4a6632d401",
              "type": "text/javascript",
              "exec": [
                "  pm.test(\"House Bill of Lading VC issued\", function () {",
                "      pm.response.to.have.status(201);",
                "      pm.environment.set('freight_forwarders_hbol_vc', JSON.stringify(pm.response.json()));",
                "  })"
              ],
              "_lastExecutionId": "d1ea687b-ca70-4755-bd61-1382c99b4a18"
            }
          }
        ]
      },
      {
        "id": "73154145-19d9-4adc-a3e4-acb401520c84",
        "name": "05 - Freight Forwarder - Present to Customs - (1/3)",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "2e57bdf4-9312-4482-a780-a106dffad596",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.environment.set(\"org_3_domain\", responseJson.domain);",
                "pm.environment.set(\"org_3_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Freight Forwarder has authenticated to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "fc678edc-80f6-4bde-b93b-89f19468d1f7"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "d7107886-8898-4f32-83fd-594dda7a12a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0c2e7c7b-bee1-49af-910c-1c745061536d"
            }
          }
        ]
      },
      {
        "id": "34d4f49f-6ec4-40a3-a920-8d819d689dfb",
        "name": "05 - Freight Forwarder - Present to Customs - (2/3)",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_2\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_2_holder}}\",\n        \"verifiableCredential\": [\n            {{freight_forwarders_hbol_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f47d81a8-7d67-4d83-a82c-3f8e23af95e4",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.environment.set(\"freight_forwarders_house_bill_presented_to_customs\", JSON.stringify(responseJson));",
                "",
                "pm.test(\"Freight Forwarder VP of House Bill of Lading with workflow instance 'instance_2' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "2505454c-a043-4a2b-8e83-96e4ea514e31"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "cb177d5c-b080-44fe-8451-1e44024a3da7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d1d66fa-1f90-4d8f-87e9-6872b890941f"
            }
          }
        ]
      },
      {
        "id": "747bd66d-0570-4d36-9849-934db41c3cea",
        "name": "05 - Freight Forwarder - Present to Customs - (3/3)",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{freight_forwarders_house_bill_presented_to_customs}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e17bf116-cc28-498f-8140-969e0054541d",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Freight Forwarder has successfully presented House Bill of Lading to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"House Bill of Lading VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "880518f6-1873-417a-a911-f6fce02ff671"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "9b46e32a-c591-476f-a822-62ee1eccde96",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19d248d2-4ddc-45c0-a8ea-4263c803769f"
            }
          }
        ]
      },
      {
        "id": "800e16dd-f29e-45a6-9dba-fd1913ccb5fb",
        "name": "06 - Customs - Verify House Waybill",
        "request": {
          "url": {
            "path": [
              "presentations",
              "verify"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiablePresentation\": {{freight_forwarders_house_bill_presented_to_customs}},\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e589d381-aacb-48e3-9012-dd1c1d337d37",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Customs verifies House Bill of Lading\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "var workflowInstances = JSON.parse(pm.environment.get(\"freight_forwarders_house_bill_presented_to_customs\")).workflow.instance",
                "",
                "pm.test(\"Customs stores first workflow instance id: \" + workflowInstances[0], function () {",
                "    pm.environment.set(\"customs_second_workflow_instance_id\", workflowInstances[0]);",
                "});",
                ""
              ],
              "_lastExecutionId": "882b582b-1347-4b34-94b5-5dce026f6308"
            }
          }
        ]
      },
      {
        "id": "56e47876-81fe-4bc9-9703-7d662e5cdf0e",
        "name": "07 - Importer - Issue Commercial Invoice",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"credential\": \n      {\n    \"@context\": [\n      \"https://www.w3.org/2018/credentials/v1\",\n      \"https://w3id.org/traceability/v1\"\n    ],\n    \"id\": \"did:key:z6MkhNsCYEQQWJdyAbfaMZHz4UG6UZoQUGot7z7tBNsbz1JG\",\n    \"type\": [\n      \"VerifiableCredential\",\n      \"CommercialInvoiceCertificate\"\n    ],\n    \"name\": \"Commercial Invoice Certificate\",\n    \"issuanceDate\": \"2022-02-23T11:55:00Z\",\n    \"issuer\": {\n      \"id\": \"{{org_1_holder}}\",\n      \"type\": [\n        \"Organization\"\n      ],\n      \"address\": {\n        \"type\": [\n          \"PostalAddress\"\n        ],\n        \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n        \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n        \"addressLocality\": \"Tsubame-shi\",\n        \"addressRegion\": \"Niigata-ken\",\n        \"postalCode\": \"959-0215\",\n        \"addressCountry\": \"Japan\"\n      }\n    },\n    \"credentialSubject\": {\n      \"type\": [\n        \"Invoice\"\n      ],\n      \"portOfEntry\": {\n        \"type\": \"Place\",\n        \"unLocode\": \"USLGB\"\n      },\n      \"destinationCountry\": \"MEX\",\n      \"purchaseDate\": \"2021-02-21\",\n      \"seller\": {\n        \"type\": [\n          \"Organization\"\n        ],\n        \"address\": {\n          \"type\": [\n            \"PostalAddress\"\n          ],\n          \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n          \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n          \"addressLocality\": \"Tsubame-shi\",\n          \"addressRegion\": \"Niigata-ken\",\n          \"postalCode\": \"959-0215\",\n          \"addressCountry\": \"Japan\"\n        }\n      },\n      \"buyer\": {\n        \"type\": [\n          \"Organization\"\n        ],\n        \"address\": {\n          \"type\": [\n            \"PostalAddress\"\n          ],\n          \"organizationName\": \"Generic Motors of America\",\n          \"streetAddress\": \"12 Generic Motors Dr\",\n          \"addressLocality\": \"Detroit\",\n          \"addressRegion\": \"Michigain\",\n          \"postalCode\": \"48232-5170\",\n          \"addressCountry\": \"USA\"\n        }\n      },\n      \"shipToParty\": {\n        \"type\": [\n          \"Organization\"\n        ],\n        \"address\": {\n          \"type\": [\n            \"PostalAddress\"\n          ],\n          \"organizationName\": \"Generic Motors of America\",\n          \"streetAddress\": \"12 Generic Motors Dr\",\n          \"addressLocality\": \"Detroit\",\n          \"addressRegion\": \"Michigain\",\n          \"postalCode\": \"48232-5170\",\n          \"addressCountry\": \"USA\"\n        }\n      },\n      \"itemsShipped\": [\n        {\n          \"type\": \"TradeLineItem\",\n          \"product\": {\n            \"manufacturer\": {\n              \"type\": \"Organization\",\n              \"address\": {\n                \"type\": \"PostalAddress\",\n                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                \"addressLocality\": \"Tsubame-shi\",\n                \"addressRegion\": \"Niigata-ken\",\n                \"postalCode\": \"959-0215\",\n                \"addressCountry\": \"Japan\"\n              }\n            },\n            \"description\": \"UNS S30400 chromium-nickel stainless steel rolls.\",\n            \"weight\": {\n              \"type\": \"QuantitativeValue\",\n              \"unitCode\": \"lbs\",\n              \"value\": \"16500\"\n            }\n          },\n          \"itemCount\": 5,\n          \"tradeLineItemWeight\": {\n            \"type\": \"QuantitativeValue\",\n            \"value\": \"82500\",\n            \"unitCode\": \"lbs\"\n          },\n          \"priceSpecification\": {\n            \"type\": \"PriceSpecification\",\n            \"price\": 5200,\n            \"priceCurrency\": \"USD\"\n          }\n        },\n        {\n          \"type\": \"TradeLineItem\",\n          \"product\": {\n            \"manufacturer\": {\n              \"type\": \"Organization\",\n              \"address\": {\n                \"type\": \"PostalAddress\",\n                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                \"addressLocality\": \"Tsubame-shi\",\n                \"addressRegion\": \"Niigata-ken\",\n                \"postalCode\": \"959-0215\",\n                \"addressCountry\": \"Japan\"\n              }\n            },\n            \"description\": \"Galvalannealed ASTM A-653 zinc-iron alloy-coated steel sheets.\",\n            \"weight\": {\n              \"type\": \"QuantitativeValue\",\n              \"value\": \"12680\",\n              \"unitCode\": \"lbs\"\n            }\n          },\n          \"itemCount\": 20,\n          \"tradeLineItemWeight\": {\n            \"type\": \"QuantitativeValue\",\n            \"value\": \"253600\",\n            \"unitCode\": \"lbs\"\n          },\n          \"priceSpecification\": {\n            \"type\": \"PriceSpecification\",\n            \"price\": 4400,\n            \"priceCurrency\": \"USD\"\n          }\n        }\n      ],\n      \"totalWeight\": {\n        \"type\": \"QuantitativeValue\",\n        \"value\": \"336100\",\n        \"unitCode\": \"lbs\"\n      },\n      \"totalPaymentDue\": {\n        \"type\": \"PriceSpecification\",\n        \"price\": 9600,\n        \"priceCurrency\": \"USD\"\n      }\n    }\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e9677a51-867b-45d1-809f-e4566b5b5dae",
              "type": "text/javascript",
              "exec": [
                "  pm.test(\"Commercial Invoice VC issued\", function () {",
                "      pm.response.to.have.status(201);",
                "      pm.environment.set('importers_commercial_invoice_vc', JSON.stringify(pm.response.json()));",
                "  })"
              ],
              "_lastExecutionId": "025d3ca6-73f8-4efd-ae07-6783aff13792"
            }
          }
        ]
      },
      {
        "id": "051a53fd-6682-484b-91ee-cb2de01fa0d0",
        "name": "08 - Importer - Present to Freight Forwarder - (1/3)",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_2_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "99ae216c-3a68-4992-9386-12db16031cdc",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.environment.set(\"org_2_domain\", responseJson.domain);",
                "pm.environment.set(\"org_2_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Importer has authenticated to Freight Forwarder\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "dce4eba8-0049-43a3-a9f2-2d7ead32d565"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "5b04bc05-bd91-4344-aabc-bfd8aaad8e6e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "28b5ee1a-9f6c-4b71-8d3e-a7960ce9907e"
            }
          }
        ]
      },
      {
        "id": "fa588add-3c75-400f-b2cc-3b0fd00b05c7",
        "name": "08 - Importer - Present to Freight Forwarder - (2/3)",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_1\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_1_holder}}\",\n        \"verifiableCredential\": [\n            {{importers_commercial_invoice_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_2_domain}}\",\n        \"challenge\": \"{{org_2_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "19e0b23a-e30d-4faf-b590-0b17363950bd",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.environment.set(\"importers_presentation_of_ci_to_freight_forwarder\", JSON.stringify(responseJson));",
                "",
                "pm.test(\"Importer VP of Commercial Invoice with workflow instance 'instance_1' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "0175694f-3a7c-4b80-b4c9-24e3a29f9453"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "7cb444a9-6182-49a6-b083-244adee323e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ca22c56-6fc9-46de-99fc-cfa6bd36c323"
            }
          }
        ]
      },
      {
        "id": "a71bd3e5-ed75-4e42-961c-a416b1b03615",
        "name": "08 - Importer - Present to Freight Forwarder - (3/3)",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_2_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{importers_presentation_of_ci_to_freight_forwarder}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "1a4d3ad6-7de9-44ae-9b7d-791543b37645",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Importer has successfully presented Commercial Invoice to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"Commercial Invoice VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "beba9438-265c-4bf9-ac37-2241c316c516"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "26111784-76d5-4870-9b80-b53ed3ce871d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ae64a427-86ac-4db5-8b4e-5d3507f8dfb1"
            }
          }
        ]
      },
      {
        "id": "20d9c71c-55ac-4bc5-8c79-57f65fb9cd30",
        "name": "09 - Freight Forwarder - Present to Customs - (1/3)",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "17c1e8e7-3411-488c-a240-9866e01867aa",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.environment.set(\"org_3_domain\", responseJson.domain);",
                "pm.environment.set(\"org_3_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Freight Forwarder has authenticated to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "0c1c3e36-8549-4377-8387-3ac57d803134"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "91831149-18dd-4c7f-86a1-72a3bc32ea54",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46a88ea6-291f-4c70-9987-72cacaa7fe7d"
            }
          }
        ]
      },
      {
        "id": "387eab63-32b4-4534-a487-ed0f39d1f56f",
        "name": "09 - Freight Forwarder - Present to Customs - (2/3)",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_1\", \n                \"instance_2\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_2_holder}}\",\n        \"verifiableCredential\": [\n            {{importers_commercial_invoice_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e962b892-a31a-4d9e-b9a7-631bc42e1ec2",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.environment.set(\"freight_forwarders_presentation_of_ci_to_customs\", JSON.stringify(responseJson));",
                "",
                "pm.test(\"Freight Forwarder VP of Commercial Invoice with workflow instances 'instance_1' and 'instance_2' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "85477de7-035e-4afc-b9fa-f919a35aaf72"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "df0085be-8b9c-47f5-89df-00ee6339592a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff3e4e59-16d5-45de-985d-d75d46460723"
            }
          }
        ]
      },
      {
        "id": "30363956-2777-47af-af87-23055bc74f9d",
        "name": "09 - Freight Forwarder - Present to Customs - (3/3)",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{freight_forwarders_presentation_of_ci_to_customs}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "399d3147-433f-427c-bb48-fb6091107676",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Freight Forwarder has successfully presented Commercial Invoice to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"Commercial Invoice VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "f0ebac1d-4861-447d-b750-65e234a5c545"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "abb01014-a696-4283-a07d-5eb8eaf3b8ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "841eca80-0120-47d2-b67a-bba906f5064c"
            }
          }
        ]
      },
      {
        "id": "02dddd4e-3ab3-44cc-8c40-bd5375fde81a",
        "name": "10 - Customs - Verify Commercial Invoice and Join Instances",
        "request": {
          "url": {
            "path": [
              "presentations",
              "verify"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiablePresentation\": {{freight_forwarders_presentation_of_ci_to_customs}},\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "712f4df1-3d45-4b27-8d12-b9b30b3f28dd",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Customs verifies Commercial Invoice\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "var workflowInstances = JSON.parse(pm.environment.get(\"freight_forwarders_presentation_of_ci_to_customs\")).workflow.instance",
                "",
                "pm.test(\"Customs checks known workflow instance ids and join the workflows\", function () {",
                "    pm.expect(workflowInstances[0]).to.eql(pm.environment.get(\"customs_first_workflow_instance_id\"));",
                "    pm.expect(workflowInstances[1]).to.eql(pm.environment.get(\"customs_second_workflow_instance_id\"));",
                "});",
                ""
              ],
              "_lastExecutionId": "a07065b5-0cb0-4864-8896-e8e3ae861810"
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 36,
        "pending": 0,
        "failed": 1
      },
      "prerequests": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 33,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 24,
        "pending": 0,
        "failed": 1
      },
      "prerequestScripts": {
        "total": 12,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 3643.5416666666665,
      "responseMin": 43,
      "responseMax": 13258,
      "responseSd": 3733.7913593197127,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1650982025521,
      "completed": 1650982113554
    },
    "executions": [
      {
        "id": "180f5353-6d4b-41a4-b65f-ca3fb1f14eb4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 24,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "35f7fd48-26e0-49bc-9c76-50ee9db51317",
          "httpRequestId": "ad52277a-38a1-45d4-92cf-089c234f6541"
        },
        "item": {
          "id": "180f5353-6d4b-41a4-b65f-ca3fb1f14eb4",
          "name": "00 - Importer Access Token"
        },
        "response": {
          "id": "91d9bd93-6f16-470a-b3c5-63519548e341",
          "status": "OK",
          "code": 200,
          "responseTime": 638,
          "responseSize": 852
        },
        "assertions": [
          {
            "assertion": "Importer application has access token",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b42c7d0-2948-4c51-99ee-c67ae947bce9",
        "cursor": {
          "ref": "bfa54f88-a1c0-44fa-b2e0-15e53dbac4ee",
          "length": 24,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "28d28314-9fb4-4a0b-aac7-b591eb470333"
        },
        "item": {
          "id": "3b42c7d0-2948-4c51-99ee-c67ae947bce9",
          "name": "00 - Freight Forwarder Access Token"
        },
        "response": {
          "id": "361819fd-72c7-417b-98a1-c077e7d75eba",
          "status": "OK",
          "code": 200,
          "responseTime": 13258,
          "responseSize": 852
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder application has access token",
            "skipped": false
          }
        ]
      },
      {
        "id": "65001515-768c-4ec2-b8c1-594d1e24a5a3",
        "cursor": {
          "ref": "706e80eb-685d-4aa7-bdef-2f5f947450db",
          "length": 24,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0862b9b7-9946-4914-aebf-050067f2d345"
        },
        "item": {
          "id": "65001515-768c-4ec2-b8c1-594d1e24a5a3",
          "name": "00 - Customs Access Token"
        },
        "response": {
          "id": "bdfb222c-5347-4941-9c3a-d98ce4e0d63a",
          "status": "OK",
          "code": 200,
          "responseTime": 417,
          "responseSize": 852
        },
        "assertions": [
          {
            "assertion": "Customs application has access token",
            "skipped": false
          }
        ]
      },
      {
        "id": "9056582f-d025-4e86-a207-960dfff90d2b",
        "cursor": {
          "ref": "b98077df-c223-4eba-aa2e-42999f4f772c",
          "length": 24,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "794eb037-f40c-483c-b200-b4a91889d8bc"
        },
        "item": {
          "id": "9056582f-d025-4e86-a207-960dfff90d2b",
          "name": "00 - Get Importer Exchange Endpoint"
        },
        "response": {
          "id": "f4c9b434-330f-4ab2-a76f-74f43faa5ad3",
          "status": "OK",
          "code": 200,
          "responseTime": 737,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "Importer has holder DID",
            "skipped": false
          },
          {
            "assertion": "Importer has service endpoint",
            "skipped": false
          }
        ]
      },
      {
        "id": "d674584d-4037-4e6c-905b-7bd38f30cfad",
        "cursor": {
          "ref": "c771ecfc-7a09-4144-83ca-ce919ff72247",
          "length": 24,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4272e144-05e4-4acc-a153-e34593d0acd5"
        },
        "item": {
          "id": "d674584d-4037-4e6c-905b-7bd38f30cfad",
          "name": "00 - Get Freight Forwarder Exchange Endpoint"
        },
        "response": {
          "id": "f3b5a62b-41f5-4923-a602-da29c8e50274",
          "status": "OK",
          "code": 200,
          "responseTime": 776,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has holder DID",
            "skipped": false
          },
          {
            "assertion": "Freight Forwarder has service endpoint",
            "skipped": false
          }
        ]
      },
      {
        "id": "464620dd-098c-4e50-a5f5-0413cd801fcb",
        "cursor": {
          "ref": "a2dfd32a-7bdc-4d6b-a9d3-8c7802f87e5a",
          "length": 24,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7b3a9a5d-cf04-4a0d-ab55-54b9e3b31f2e"
        },
        "item": {
          "id": "464620dd-098c-4e50-a5f5-0413cd801fcb",
          "name": "00 - Get Customs Exchange Endpoint"
        },
        "response": {
          "id": "40ba94e7-e4c5-4f76-93f9-95bd00ab3e40",
          "status": "OK",
          "code": 200,
          "responseTime": 1122,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "Customs has holder DID",
            "skipped": false
          },
          {
            "assertion": "Customs has service endpoint",
            "skipped": false
          }
        ]
      },
      {
        "id": "312f675e-470d-4906-8aa7-4fbc57b7acb1",
        "cursor": {
          "ref": "161f86b3-8960-492e-954d-00c0f17d6dc5",
          "length": 24,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "745b4f19-c741-4b35-b118-b9a65129a25f"
        },
        "item": {
          "id": "312f675e-470d-4906-8aa7-4fbc57b7acb1",
          "name": "01 - Importer - Issue Proforma Invoice"
        },
        "response": {
          "id": "19dd17cc-a2a2-4863-8fb0-3d56ce72768d",
          "status": "Created",
          "code": 201,
          "responseTime": 3530,
          "responseSize": 4
        },
        "assertions": [
          {
            "assertion": "Proforma Invoice VC issued",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4bc119f-4fa9-4fb9-868a-65169e510868",
        "cursor": {
          "ref": "b9bc0aa1-722d-45dd-adfd-684630f0d08a",
          "length": 24,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d1ad6023-21d6-46e3-95c1-6cf506823447"
        },
        "item": {
          "id": "b4bc119f-4fa9-4fb9-868a-65169e510868",
          "name": "02 - Importer - Present to Customs - (1/3)"
        },
        "response": {
          "id": "199594a3-802e-4e92-b5a8-6f5a58b93c72",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Importer has authenticated to Customs",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f985486-e24e-4467-a39f-f5b4a9688519",
        "cursor": {
          "ref": "f7968b36-5df5-4f1b-adef-8071223159ae",
          "length": 24,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "83444d9a-c567-48c4-bc44-96a06677d5bf"
        },
        "item": {
          "id": "0f985486-e24e-4467-a39f-f5b4a9688519",
          "name": "02 - Importer - Present to Customs - (2/3)"
        },
        "response": {
          "id": "3d3c2088-7d6e-42e1-9279-7cbe3917e6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 630
        },
        "assertions": [
          {
            "assertion": "Importer VP of Proforma Invoice with workflow instance 'instance_1' proved",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Importer VP of Proforma Invoice with workflow instance 'instance_1' proved",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:9)"
            }
          }
        ]
      },
      {
        "id": "f59a4343-90c1-407b-9636-c9d595105449",
        "cursor": {
          "ref": "eb2894c3-a6ae-46a0-8590-a937b1c083af",
          "length": 24,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "48936823-0f3d-491e-a392-d4ce809511b2"
        },
        "item": {
          "id": "f59a4343-90c1-407b-9636-c9d595105449",
          "name": "02 - Importer - Present to Customs - (3/3)"
        },
        "response": {
          "id": "57a12cdb-0164-481d-b96d-5707ce38e17f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 56
        },
        "assertions": [
          {
            "assertion": "Importer has successfully presented Proforma Invoice to Customs",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Importer has successfully presented Proforma Invoice to Customs",
              "message": "expected response to have status code 200 but got 500",
              "stack": "AssertionError: expected response to have status code 200 but got 500\n   at Object.eval sandbox-script.js:1:10)"
            }
          },
          {
            "assertion": "Proforma Invoice VP verification returned 'true'",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Proforma Invoice VP verification returned 'true'",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:2:10)"
            }
          }
        ]
      },
      {
        "id": "7cedf29e-c53c-4afb-a8ef-6866ecc5fe4b",
        "cursor": {
          "ref": "86a6472c-2cf5-4c46-a814-2679886c77fb",
          "length": 24,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6bcb78a5-7a91-48e3-a7db-494960e3ed79"
        },
        "item": {
          "id": "7cedf29e-c53c-4afb-a8ef-6866ecc5fe4b",
          "name": "03 - Customs - Verify Proforma Invoice"
        },
        "response": {
          "id": "92119467-3c11-44da-80b9-93c984c2aa82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 987
        },
        "assertions": [
          {
            "assertion": "Customs verifies Proforma Invoice",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Customs verifies Proforma Invoice",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:11)"
            }
          }
        ]
      },
      {
        "id": "6606eee9-754f-4e4c-850a-91413ad2fbd7",
        "cursor": {
          "ref": "90538f88-d1ab-497f-b1e9-76d2d4aea4db",
          "length": 24,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0c143518-886f-4350-b0ad-43ec118bf3c8"
        },
        "item": {
          "id": "6606eee9-754f-4e4c-850a-91413ad2fbd7",
          "name": "04 - Freight Forwarder - Issue House Waybill"
        },
        "response": {
          "id": "0e4819cd-4d34-44b2-a1e4-6bf98997da49",
          "status": "Created",
          "code": 201,
          "responseTime": 3718,
          "responseSize": 3507
        },
        "assertions": [
          {
            "assertion": "House Bill of Lading VC issued",
            "skipped": false
          }
        ]
      },
      {
        "id": "73154145-19d9-4adc-a3e4-acb401520c84",
        "cursor": {
          "ref": "495ef192-387a-4644-a4af-216396fd92f1",
          "length": 24,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "49b67ec0-1058-4a17-9252-8b2ea97f9ce9"
        },
        "item": {
          "id": "73154145-19d9-4adc-a3e4-acb401520c84",
          "name": "05 - Freight Forwarder - Present to Customs - (1/3)"
        },
        "response": {
          "id": "a4a93a61-74ee-42b9-91b6-4f34deae9267",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has authenticated to Customs",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d4f49f-6ec4-40a3-a920-8d819d689dfb",
        "cursor": {
          "ref": "3959592d-ee81-4679-9cb7-0717f9866044",
          "length": 24,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5223d1c1-3c23-494f-9449-36ff1757224d"
        },
        "item": {
          "id": "34d4f49f-6ec4-40a3-a920-8d819d689dfb",
          "name": "05 - Freight Forwarder - Present to Customs - (2/3)"
        },
        "response": {
          "id": "2348c871-fb2a-433b-9cfc-ca4b7baa7907",
          "status": "Created",
          "code": 201,
          "responseTime": 5054,
          "responseSize": 4305
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder VP of House Bill of Lading with workflow instance 'instance_2' proved",
            "skipped": false
          }
        ]
      },
      {
        "id": "747bd66d-0570-4d36-9849-934db41c3cea",
        "cursor": {
          "ref": "f12653ae-99f8-450e-a976-efec1a2df801",
          "length": 24,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9f5804cf-9579-4616-847c-40d1f1f739cf"
        },
        "item": {
          "id": "747bd66d-0570-4d36-9849-934db41c3cea",
          "name": "05 - Freight Forwarder - Present to Customs - (3/3)"
        },
        "response": {
          "id": "0b51e29b-948e-4d3a-b780-eca36eb7da40",
          "status": "OK",
          "code": 200,
          "responseTime": 8043,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has successfully presented House Bill of Lading to Customs",
            "skipped": false
          },
          {
            "assertion": "House Bill of Lading VP verification returned 'true'",
            "skipped": false
          }
        ]
      },
      {
        "id": "800e16dd-f29e-45a6-9dba-fd1913ccb5fb",
        "cursor": {
          "ref": "15279e66-a231-4d10-a580-72baaa67b520",
          "length": 24,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "910160ee-9e6e-4bb6-ada1-6282a44e9d85"
        },
        "item": {
          "id": "800e16dd-f29e-45a6-9dba-fd1913ccb5fb",
          "name": "06 - Customs - Verify House Waybill"
        },
        "response": {
          "id": "d2c28e55-6e3a-4627-8f0e-932e40b41a92",
          "status": "OK",
          "code": 200,
          "responseTime": 7967,
          "responseSize": 2874
        },
        "assertions": [
          {
            "assertion": "Customs verifies House Bill of Lading",
            "skipped": false
          },
          {
            "assertion": "Customs stores first workflow instance id: instance_2",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e47876-81fe-4bc9-9703-7d662e5cdf0e",
        "cursor": {
          "ref": "a5f9a7e4-48f6-4e0c-b45f-333382cedc1a",
          "length": 24,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2551fcd3-f851-477c-9557-8ced42700e0b"
        },
        "item": {
          "id": "56e47876-81fe-4bc9-9703-7d662e5cdf0e",
          "name": "07 - Importer - Issue Commercial Invoice"
        },
        "response": {
          "id": "7d9418dd-67d7-4842-ba25-64d9ae1c9efd",
          "status": "Created",
          "code": 201,
          "responseTime": 3664,
          "responseSize": 3447
        },
        "assertions": [
          {
            "assertion": "Commercial Invoice VC issued",
            "skipped": false
          }
        ]
      },
      {
        "id": "051a53fd-6682-484b-91ee-cb2de01fa0d0",
        "cursor": {
          "ref": "4e889d76-784c-4ac0-97e9-718b56c316a3",
          "length": 24,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "dbb63548-27a3-4e78-8083-637858263209"
        },
        "item": {
          "id": "051a53fd-6682-484b-91ee-cb2de01fa0d0",
          "name": "08 - Importer - Present to Freight Forwarder - (1/3)"
        },
        "response": {
          "id": "26b5ea5f-9170-4450-b654-406fcb76325f",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Importer has authenticated to Freight Forwarder",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa588add-3c75-400f-b2cc-3b0fd00b05c7",
        "cursor": {
          "ref": "2ba11332-1597-49f0-b89c-cc1044f9172f",
          "length": 24,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "18dd57cd-283a-4694-a0c3-4b58bfb778f8"
        },
        "item": {
          "id": "fa588add-3c75-400f-b2cc-3b0fd00b05c7",
          "name": "08 - Importer - Present to Freight Forwarder - (2/3)"
        },
        "response": {
          "id": "bf07d5a7-52d1-4fd0-bd85-c22005060536",
          "status": "Created",
          "code": 201,
          "responseTime": 6057,
          "responseSize": 4245
        },
        "assertions": [
          {
            "assertion": "Importer VP of Commercial Invoice with workflow instance 'instance_1' proved",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71bd3e5-ed75-4e42-961c-a416b1b03615",
        "cursor": {
          "ref": "8150c249-7bbe-424a-813b-77da9ac732a6",
          "length": 24,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "20dfff83-b3b0-4fc9-bf44-aafea09261f2"
        },
        "item": {
          "id": "a71bd3e5-ed75-4e42-961c-a416b1b03615",
          "name": "08 - Importer - Present to Freight Forwarder - (3/3)"
        },
        "response": {
          "id": "e93ad061-a96f-48a3-9275-fc5bcf0afca5",
          "status": "OK",
          "code": 200,
          "responseTime": 8090,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "Importer has successfully presented Commercial Invoice to Customs",
            "skipped": false
          },
          {
            "assertion": "Commercial Invoice VP verification returned 'true'",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d9c71c-55ac-4bc5-8c79-57f65fb9cd30",
        "cursor": {
          "ref": "721741ad-0dc1-4015-8742-b16ac60dac4b",
          "length": 24,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "05d955c3-70f9-48a8-a706-869d4904b194"
        },
        "item": {
          "id": "20d9c71c-55ac-4bc5-8c79-57f65fb9cd30",
          "name": "09 - Freight Forwarder - Present to Customs - (1/3)"
        },
        "response": {
          "id": "488ee3cf-1cc4-4057-801c-0b6cff72e94f",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has authenticated to Customs",
            "skipped": false
          }
        ]
      },
      {
        "id": "387eab63-32b4-4534-a487-ed0f39d1f56f",
        "cursor": {
          "ref": "bc8522ad-d8c3-44a9-8050-a63f21ea50c9",
          "length": 24,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "54b94d87-5bd0-4b31-a9a1-9163fa558bf7"
        },
        "item": {
          "id": "387eab63-32b4-4534-a487-ed0f39d1f56f",
          "name": "09 - Freight Forwarder - Present to Customs - (2/3)"
        },
        "response": {
          "id": "4e54e26b-7997-4db0-b8b9-05e7399241c7",
          "status": "Created",
          "code": 201,
          "responseTime": 5832,
          "responseSize": 4258
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder VP of Commercial Invoice with workflow instances 'instance_1' and 'instance_2' proved",
            "skipped": false
          }
        ]
      },
      {
        "id": "30363956-2777-47af-af87-23055bc74f9d",
        "cursor": {
          "ref": "bfa75a76-6e64-488c-ab97-de65f82721c5",
          "length": 24,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4a367ccd-6635-49f6-85eb-7839292d6efe"
        },
        "item": {
          "id": "30363956-2777-47af-af87-23055bc74f9d",
          "name": "09 - Freight Forwarder - Present to Customs - (3/3)"
        },
        "response": {
          "id": "356b68e9-595c-4218-95bd-027e780d2459",
          "status": "OK",
          "code": 200,
          "responseTime": 7634,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has successfully presented Commercial Invoice to Customs",
            "skipped": false
          },
          {
            "assertion": "Commercial Invoice VP verification returned 'true'",
            "skipped": false
          }
        ]
      },
      {
        "id": "02dddd4e-3ab3-44cc-8c40-bd5375fde81a",
        "cursor": {
          "ref": "38927a1c-49d0-4bce-8288-2150562ef451",
          "length": 24,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d08ff307-68cb-4e9d-a6ec-4239ce64ad3e"
        },
        "item": {
          "id": "02dddd4e-3ab3-44cc-8c40-bd5375fde81a",
          "name": "10 - Customs - Verify Commercial Invoice and Join Instances"
        },
        "response": {
          "id": "2d6caa5c-3d7a-47c4-8e1a-084dd29e255a",
          "status": "OK",
          "code": 200,
          "responseTime": 9258,
          "responseSize": 2874
        },
        "assertions": [
          {
            "assertion": "Customs verifies Commercial Invoice",
            "skipped": false
          },
          {
            "assertion": "Customs checks known workflow instance ids and join the workflows",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Customs checks known workflow instance ids and join the workflows",
              "message": "expected 'instance_1' to deeply equal undefined",
              "stack": "AssertionError: expected 'instance_1' to deeply equal undefined\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      }
    ]
  }
}