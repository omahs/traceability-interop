{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6dd813f7-8fc0-4db6-818e-108bf50f376c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "173f3449-d622-4abb-8624-460cedb05f7d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a3b2317d-68a4-4646-b13a-ea0c90f039e6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8b860616-c6f2-4e60-9139-81f54505582b"
                }
              }
            ]
          },
          {
            "id": "7b742ecd-207e-4c8a-b75c-dc3986fe86b4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3ab3a4ae-94cd-47ff-9cde-ce6c5f275eba",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "675276fa-259e-46b6-9d7a-ebf1e215a0a7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e2d7d155-d2aa-467b-958c-53742afd9279",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "dde5bde4-79f6-42c8-9664-d69955c5c19f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ae3dac93-436f-4647-a499-13a7557e17f7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d889908-1903-4c4c-bf5b-487d705f6508",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "468e1e7d-dbc3-4135-8cee-4efef2d3d29f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba448e55-eb86-4bd4-ace6-66c92e5560b9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce44f146-db37-49b6-aba0-bb81f47bcaca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d2c4ecd9-3ca2-4f8b-9206-1da61f79025d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4feded08-bdb9-4ded-88ec-8bc15633b471"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71783f9c-f33d-4690-801a-258aebb4d4fb",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "38bd9f6f-fc5d-42a2-a2cc-412ec820c130"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cdc2efb8-e7b3-489b-a301-a21725bc524e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ec3e4a9a-9bd6-45dd-835d-1da45262579e"
            }
          }
        ]
      },
      {
        "id": "97cc6926-26ff-4df2-a479-35bf6b172f7a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f8dcee94-279b-489b-b748-47e547690a10",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eaf06352-c700-4441-891c-904d7b2f83bc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fd86af2e-4d62-4cb7-9574-b5399b2fde34",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc03f169-c4fd-4cfe-8826-654e2f9b99d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b799918-4cae-495a-9dfc-c50866329b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b312a0c4-7a06-41b0-8513-1d3313a8d54c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8953b63c-c645-449f-ac89-b2b679ed8be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "519fd71d-dec0-4218-8765-61a5389538c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8afb420-1572-4c1d-ade0-91c1fcfe1960",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e49db1d-b746-44a5-a209-3f82645df82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64b8c426-ae3a-4667-aa86-97a8f554aadb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5f7dc45a-9786-4877-85b1-fcada9ae9af6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1228e05c-e969-4b2a-8144-f0d9172c121a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d70741-1299-41e1-9c06-ef1d38ca7b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d405281-f358-4afe-9d7e-b9fec560e342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc64ec04-380c-40f7-8605-7e21aa000715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "832404c2-8ffd-4be7-9885-ada127ad08d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633517cd-7b15-4f32-a995-c355c6b31f76",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdba4aad-5be7-4609-9601-ce92ff42d2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6020537e-6703-42d0-b9f4-33f93866eb30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975c0dc4-52c8-4c33-ae97-f68daacba5fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "95fff1dd-d3b6-45e7-8a01-5ea18e7b2374"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dcf2f121-4370-44be-8cd2-316c926155aa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f5d2a249-f3c1-4610-bba6-94554c11100b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c128e88-b541-4afe-b410-b02dbc3d1dc4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2f694a87-4356-4ec5-8932-303c38f0a6d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c60a69d0-c2db-4ef8-905f-d52c1e1cc2b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "fdc641f7-4bad-4c7b-baa6-2a673b47029b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eea7f781-a203-4a71-b43d-0385f2c67827",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f0d7c384-146a-4e36-91b9-361e734ef464"
            }
          }
        ]
      },
      {
        "id": "c2c00120-2e86-4231-9c7e-d141c507f8d2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "83999b5b-b527-40e3-8122-7e4c54806cc9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7570a24a-ffd5-409c-b09b-589253e46229",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c39afb30-c8a4-4e7e-8d15-fb5437b1b1dd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d7c5c1-17a0-4015-92d6-426fa36deb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df7f6cdf-bc98-479d-b349-efe88a554f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e5ff72-670b-41fa-a7dd-d2e711c3631b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4ee5d58-f619-43a6-959a-2b63367fa250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755038e3-376f-4ece-a9db-adecb4817181",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf26ecf-3df7-4d11-8db1-fae3dd786b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7717d963-6f89-478e-a19e-30d6abab91f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa319de-e835-4eeb-8da2-f6305ac164e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7af77538-633d-4b21-8b02-c7c40358480a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5454e19-7057-49e5-91f2-d1ff459a6dad",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6b0914-4016-4e7f-963c-962c75025c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c8b049-a28f-4224-a88c-6a62f1ebe54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a709710d-e03e-49f0-a238-967f2a700701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "672f8930-e735-4388-978d-d935230f832b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b3a227-a4c1-417d-a42d-6330897b2c04",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9ec172-cfed-499f-853a-f39daba87e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c00a18c0-c1c1-46bb-8779-48cca2cd1f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8f20b0-0d1f-427f-aa0e-07e501721f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67d24cbc-c5c0-4a47-a642-61bf43cebb3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2fa7aa-3272-4088-8210-225ce988d8c2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b70f1b-b1d0-4051-af20-55f576394a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0cecfb-a765-4c70-a3c0-837e4f731b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a265bcaf-f9ee-4e69-834d-bd1864618da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8ea61d2-5df3-4b9c-894b-5dd0ec37b464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e543114d-58ae-4a68-b419-557e8db2a11f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abeb273c-df77-49d3-b371-6fa7b9c50f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c654465b-5744-4857-afc9-a5d0ede27639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844234b0-847d-4a09-94aa-67bc510c1171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72054ea2-03ec-4dc2-93d9-12e537d20eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d223bad2-5382-4cbb-a343-2d93a264c817",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce2592e-a5ea-4f86-a726-9efa19c8eaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9daee261-8754-47c4-acf0-7c682a6e0c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a64410-fa7a-4c99-bf20-d274d0cc907f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5841d03-9a3c-4b6c-8d73-19f0dc70577a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e11351-3d5c-42c8-a166-9f4a53262e7e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3948b6e8-996f-4988-8b7b-041cd912374a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1984f484-a66c-4193-9ecb-09b20334b21f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd34ecd-12bd-41ea-b3c0-448625134dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7618a89-f98b-4d4a-af63-72ec7dc79685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c063f9-421b-4d83-b53e-8ccd01d459e0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0c770c-4e5c-452c-b38c-e5612a63cf82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a50033-dead-4915-b400-4f5f18f4dc7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e79c7a8-0b03-4e05-8661-93d173a405c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48d9c313-55ef-47ea-bd32-ea644d9543e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7ec2d1-2451-4702-ae18-137cefd57b09",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2f85c9-439a-4b0f-a2c1-f0a366c90655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a6338c-1a87-4301-a4a0-2b530aea764e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9442ce93-eb94-4018-b564-30a38f318cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e46cdc5-b327-4f75-aebb-bf99293ae83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87384b9-a486-4476-a55c-c0914ee12d8c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3d817b-3ea0-472d-8406-47241d8cbe72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7f93dc-0daa-4c1e-bbdc-f863951a0b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f80cfa-d77e-47ca-bcd4-025ec3f4882f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "372991ae-a259-4d7c-9f0b-4be0bafe5c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d060b78b-c354-4dfb-853c-73e9884c577d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ae61e9-f73b-4303-a6c2-46a6cb7e9a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3143558-ac37-45cf-ba90-b9beb0dce6cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a5ac1b-a425-4204-8519-8df16163c4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f103013-fe77-4adc-8afa-5663e0bc52af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4359cbd-8d4b-49ea-9eb7-02d0a4d829ab",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e7c435-7df0-4403-87ed-b7fdc3493ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "757acd82-2abd-407b-a5d0-309323b3b9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe21ae4-aad7-4870-8adb-9112b0e2c4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca206026-2cde-4d32-a677-49c84b37f995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3368666c-2b2a-4bda-ad93-efabcb7e1c1e",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598e1794-83d4-4898-907c-3a4e6d5e4650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c5108c-3884-4aed-86b2-3f1a09a95048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac31acf-a193-4ee5-8fca-975597810679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "99a4da39-fb33-445c-8c78-e0b87c58d6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0492a0d-0cba-4933-828b-623c77ca7e2c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76756996-72ea-4ec6-b685-f9c40f7454f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e969e40-b482-42c7-9985-3e9bdf428ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cc32d8-e573-42dc-af09-e6cc35f3d91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24b4aca7-cd79-4ad1-9a49-f00d0d3c357d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bde5604-9935-4829-9576-25dabf694908",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1015624e-a375-4f67-af07-98ecb27df241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56f8e1a-6812-4768-bb97-4b2e991fef2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd4a72a-4028-42fb-a384-58d831dee1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd8a2c96-4437-4fcd-ae0b-15c24b293cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4f2a07-6b9a-4554-a370-a1d9f23051bf",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d3439a-a28c-4430-8a7d-cefba2364d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c402d81-2bf2-42da-809c-4da02d95bf22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c33f8f8-1dde-4a07-9f60-dfaa241d0ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3db96977-9e23-48d2-81d7-4d70f31eeb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33dab664-6f74-49c9-90c7-51c9b3cf235e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549cf209-7e49-43b6-9af1-6a624370eeef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762cfb1f-1e2a-41cb-a114-026df0f6efef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdb4c8a-24c6-4ff3-bd23-d98788128704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "423b2400-bbd9-46a5-b83c-1e16f3362a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2470d73c-2bd8-40be-8fa0-528e9486aab8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b505b34b-4582-4226-905d-33fae9fbe754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2424515-3a61-42b8-98e0-caf71599da9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1da969-a763-4a47-bc2f-5080d85b0654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6422fc5b-000c-4dab-a0e8-0aa00a36fd63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08a8212-e4f5-448b-b7f5-00d3452af7ed",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b9fbbc-3961-4d2e-b313-af6ea9e35922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07ae3da-df2f-4bb9-8df7-8f8b7ffb73d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a798a86f-3e35-4336-af93-317f1f529615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a109147-67be-47bf-ab7b-8c0d2ecab76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debeaf1b-fd0f-4e93-8bef-36c6f351eddf",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc15ef12-93f9-4bcb-8f4b-c47d6c522c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53aef8ae-055f-48e8-bfb7-4c4c2d218759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b161239e-87b9-40f5-a6a0-d58354dd448a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3995efd6-196c-4213-947c-a8706e7ecab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c970882-2d1a-4820-94ca-43260ac267f7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1accc6-4bca-4996-9142-75b32962d4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c575a90b-e22b-4d67-a27e-8409e6eee9db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b65f4f7-4545-4186-8f06-434bb0781719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eadd808e-89ed-4d19-b397-eb451fa62669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5f9cf1-ba58-4fd1-bb94-f369d0cff273",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f1ae85-84c0-434e-9e1d-2d989c8d6fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d824de-5c20-447d-bb92-29fcd65458db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945407bd-5d77-4e76-ada3-ae4dbdd42a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91862e40-ff48-4d58-94eb-452a8a018206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434fb012-35cb-4ed0-a636-52032033e120",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf2a518-4972-4f11-b559-32d67ff022f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "460a0d96-fa3d-4849-a8ce-c0b5771acb4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9f3966-5833-47ff-aa5c-84d70382ab71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16b9b1b4-50e3-42a2-9204-edb3afa8da83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91b05bc-8255-4154-b6e2-819574dbe76b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa416a49-1252-4fb9-bc98-914ca24ee727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31e55a5-1308-473d-947c-39128425d134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c550df1e-ca9a-473d-9d0e-f34f8e9835ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d121cd55-70bb-4a59-93cf-e4b5228c444d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3a33ca-161b-490e-a94d-c542f2452a17",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30636a54-08f3-40ac-81fd-34a22259e508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19a0aba-1bac-4b01-b665-4b799d62621c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc12df08-0ec6-40a0-bbe1-704fd459d2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3155143-8a10-4c36-8650-f394f5ea0a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8068d1-bba7-4bb9-998a-01c142485dcf",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbd6108-f6a6-4b05-8323-39e9c0c249aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4a944e0-1860-44ca-8fd8-22fc3333c749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c95ef6e-d70d-4cbd-a76d-af43b2fbab7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e42ad5a3-086d-4fe6-8cd7-3d03468b8b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294b39c1-f9ad-4f84-863e-c1c97cc0c116",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b86eba-3470-4de1-b7e5-3f5abc0ce407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71872f95-3788-4ca2-95a1-b5ab08542f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d620834-9a2e-4a61-85d8-830d2dbd6a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b06746f7-d81a-4c57-bdae-ef14fd2fdc73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a8f181-0370-4c73-bf7c-e67ad0442706",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0666832-9434-4101-8f84-566dd53d5252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac594ec2-773e-4392-add1-8301537fd6eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b5113b-0c67-4f2f-8681-04bb6359be19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "34587ffb-2f25-4429-a2a2-35beea0ea9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b35b55a-7627-4530-b935-9591a7adb458",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b456f4e8-c62c-4063-b0e8-d0cfcf24f3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1558050-a25b-4459-829d-8a438f353c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd29bc9-b6b7-4242-9010-369cc9328a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa36a0a2-7979-45e9-8ccd-d863f8acda76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e31ea8-befb-47df-a57d-0ce1cb97cf4f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08760996-49cf-4000-a81a-ebce58b8c45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b95b16-fd74-4b5a-9d91-b3d7873c7f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb81e4eb-434c-4ddc-9ce7-4b2c8a1e7ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8c251c-cabb-4e9c-b8a8-835e7baaa63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb587b95-9660-4e98-a6a7-23409401f277",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a324eb-768e-4581-bafb-25c5a1eba6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd12ecb-6c8b-41b6-8e46-cfdfcb0a5da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d007ed9d-9a4b-48d5-ac5d-a41499999ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "683aa9ef-6028-433e-9ccb-9235deba3b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9ad5cf-b242-4bc4-8d11-aec58d087f1d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086dd524-c248-4b3d-add5-fa64d38fd680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "836d3721-d351-4e1a-a3a9-2552056f5da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f9bf64-e121-4b35-b0a3-ed9d2959eaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "037e7104-7dcc-4a19-8a47-53dfef533ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5560587f-5c64-47dd-9796-ecc1a9089088",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a63d1c0-a698-4218-9e2e-cfaea14da889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3561c037-bfa7-4390-bb3a-f2874895e189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebfcf5e-81eb-49a7-866f-3baec7fcd526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e08392-6061-45e7-b09c-76eb64a149ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7633baa8-4571-4412-872c-e92d58ac890e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d138ae37-34ac-4dac-aec7-ea2c9ee9f22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e92ea5f-fcfb-4b43-8d60-a0509291e149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2e9c58-3f54-4a35-a490-42cd32eac12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b775623-cb6a-467d-97ee-4c468e86e880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd69e86-bc56-4cb8-9284-c0e2f3882c49",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e922b10-133b-4960-a35c-5a755c51b3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788ab517-c599-4640-807e-985ccdeebdbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06e7cad-dd8a-4392-a4af-d06e97675ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00b6f4de-b01b-43a4-b023-b5601f370ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12513fec-4bb6-4c57-9be2-f4d40d3baa7c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357d3559-26a6-4e1c-9dc6-27ec27141ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4083b26b-615d-4359-bac8-4be113bfe23a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a758628-728c-4ecd-9656-cfd8fa7b57ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "60ac0a74-4d7e-4390-b239-4b6045d912bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425b19cd-1175-46fe-a006-a503d043de8a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e5b2f9-c336-4548-a6dd-3cac644bd43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22d06a79-fd3e-4de9-a5bf-7b91c988a6b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eaad73e-54c5-4667-8390-fa999fc71f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f658df-67ac-4a87-b35b-8b5985f7c12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d78f7fe-2da3-45e4-b2bc-1231fb44f594",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042614e8-16d4-47c5-95fc-c0ec55808954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593ad1b1-bc67-4f6b-9ca5-a73e5d464cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72eb06ce-9f70-48de-ad67-3ef2c64b7559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b293f22-b211-45b9-bf5c-111168e74207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b385932-9e67-4277-846e-689fd53318ce",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb6b6b3-3425-4dfd-b1c1-257543cb0685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f969b29e-9020-4b69-be5c-576ae0101161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3321baba-09fa-4d69-b489-c4cd3d8b96a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1905d1-65a5-448f-a360-234840cab245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95510025-4f41-4b76-bc78-2a4fc7dcf8e2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549c555d-7b54-4a04-944a-217d5638d7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53717b2d-c144-4af5-bffb-907fadd6d481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6537eef8-59dd-4e45-8209-3ea253b474f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bdcf0db-0e81-420f-b8b2-d02ce0ac1d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a50a83-8488-4538-931a-26bae01b6c10",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4195c131-0100-4bee-85a1-fbedfaa752cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b02518-f445-4873-80ad-ef2dd585a002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daccc9d6-6647-4218-bd88-3c6d64aa171f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "46d07a2e-f62f-487f-9ab4-ed269b819ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee531b9f-3466-4391-885d-f8de0c4443fd",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d4bb70-3998-46c8-9e63-a361e5386a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2dc84b-3643-49b9-ae28-ab77d502fa48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9923bac-39fa-48ff-be80-5e388228857e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5e5366a-6507-4d55-ad1e-24112f9e8c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed43889c-379c-4f14-b6f0-f01f70543cbc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba57fae3-aef2-4efa-a58a-d7191d736959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2878e8e4-d428-4bf3-8df4-94412c9c491c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c9a9aa-ee4c-4149-90a4-9904bf235133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9ba32b-c003-4f3e-a1e0-dcb5dce69048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e4554b-d496-4dc2-9708-132d6bdf2e1b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92388ff3-54c0-4933-b0a8-09d2e93d3026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5243c8b5-d023-4300-ae57-c1d43a0d61c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2947c8ad-c37e-473a-8ad2-4861871e6d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e30284b-861b-4bc2-8595-a6758293c4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae7621c-6816-47ce-8569-48da7eae8306",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "726a11f1-8464-47d5-8cde-da607aa2415d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4306646-3148-4f03-aae7-4902effd23b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecd70f9-9dd4-422d-82e6-1e9c0c9bd2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2eb959-565c-4a73-8677-3ecf5452cbee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c1ef53-91fe-476d-a570-faa788ea6427",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585e1dfb-d8d6-45bb-a267-b17e6b016cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28fcde30-e1ec-4ba3-b858-790cd5e71815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a7021e-75da-4726-8455-dd62f101d0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9af52f05-a39f-4bee-a328-f81dbb2a6c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720e1ad1-b86b-427b-8c82-db386290bd96",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007a7c2c-dc79-4464-b7d9-3597809a6edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2b2da8-3a91-4231-9470-a2b32dc1999e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae38d28-7d54-43f7-99df-63f9a9978eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f15217-5d2e-47a0-92ea-eea637fdcda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5eebff7-635b-4965-8e9f-7dc6dfe58fa6",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64073f88-6868-4876-9eb4-5baffce56c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b57947-d93e-4e19-9664-91f7e45bcea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1feb13-5a34-4772-88b1-656fd578bb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c5412d-3076-451c-ae84-acd30fbb203f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14fa824-2c60-4b83-a9b3-3ae0398bebc4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba64abe9-9e04-46ae-bd33-43b67a51e05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a50344-60c3-4835-b642-0623c7ea3b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103c5942-140f-4fff-a390-4487cf06ff6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f7cd0cd-5928-4dae-951a-43fcf8eb05e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afad0508-fa15-4c2a-8dc0-fa8e6c518333",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e60b67-fa7e-4b8a-9845-596a5d8c1feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22d5709-ba00-47a1-93bd-76926cb8c7bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3458cdf-7536-463c-b0a1-a0a040b95e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32203c27-a22f-4722-871b-297c5c1f0de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6362deb5-cfda-42a7-bde0-d49ab7355d7c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a11410c-78d5-452c-8e46-d8390b87b367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d1b5c8-0a14-44c8-a930-4bf0305c1dfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f8352f-c2fb-44e3-a25c-a97f46b9698a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73105fb4-c252-4a80-93d7-7aece48ec285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cceb8b6c-414d-48f9-a5ed-5b5468bbf2aa",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f80294-b0d3-4ff7-bfc9-77a426d6bb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce31d27-d8f8-4752-b1fe-738e55ef5b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5c3225-d438-410b-8f87-d46b577b1bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c1ec1d5-0b1a-45a8-9dd9-467aa6991534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f3a373-091a-4077-a1c6-aeddc4ac86f9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463b823e-06c1-4dca-8828-1901af4482a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a0ccf6-175d-47d0-8e6a-b51f2166626c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9d6a02-8bd6-44a7-a7b7-15ceeb309c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb176411-fed6-4bfa-b0b2-48f4e334e379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a292505-5f61-481f-82f9-0f68f257927f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ad92dd-b20e-40e4-ac56-4362980db7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2689fe9-2218-4396-ae23-017268dbc400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e1a34b-0746-47ea-b7c7-bd72cd698c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8efdf42-290c-4890-8d4d-556aa8dadb39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95096ff-71e5-4b7f-be9a-f74da0e63cbd",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c395cf-a6fb-4a40-b939-10951e7c3e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dba6a1b-264f-4f0d-bba8-7dbd591f8b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbec19d-f9bd-4361-98e1-52025fe89bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2bb517-ef79-4a4f-8e7e-cc188a62e5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6c47fc-35c5-4ff3-b7d7-07d273857eb2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7ad261-24ed-4fac-baa8-cec5acd0ab9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c80935dc-913e-4eff-9a8c-38b150a323fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b86182c-ce25-42df-ade8-20775148472c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42be007b-1064-42d6-9125-f9f5306a2d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d927478a-be50-4f91-a25f-f83090943b48",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42e3343-a6ce-4ea1-85fd-311b5cd78f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ce2d57-1e7c-4a42-ad09-786b735f0e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267c7894-16b5-4a58-b79f-5048cfd100d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "44e3c900-ec53-4967-9133-50ce807ae3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2296cf37-1827-4c05-883d-06c714ff5c42",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b95b409-f6c5-4a7b-be3f-5556ee1a532d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "583d5ac5-6ac0-4afb-bfa2-010f824258d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af699ca3-380b-4779-94fc-2fb134d9c510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc4f38f-68c3-41a2-8365-294baac736f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c40864-c58c-4923-b79e-8ef9e3c303f8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "441c7422-574e-49cd-99d8-77d4da6a89fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b1c4fd-20b1-40b3-95e1-386570f12292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76bf9d83-6efe-4478-9ddc-4722843fc258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0e04418-0ea2-41f4-ad82-4238d485f916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e102b4d-fbe1-4e5c-af07-e2f5a7ce3dfb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6283d5e-cbb1-4432-93d7-ef1eec79372b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b06c7c68-3116-4596-85db-4782bf83513e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cf2e50-c974-4d3d-9db0-22b41111f51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "156461ff-1375-4c68-bc83-d68174e659cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40beed76-6150-4820-9d7f-88542cbf61eb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26eacd1-d9f2-4251-a6e4-b00079718534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d296d86c-a6b3-4c6e-b3dd-0348e7101049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a72fbf7-b4fc-4079-b108-377652044334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c632d88b-97e8-4110-943b-5e73879ad3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9d720f-af0a-4b10-b320-eaae6990b728",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c302f35d-af74-4630-a31c-2a955dcaed3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "928a5e29-6069-42b6-b34e-6ee32e6107fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5fce30-25a0-479c-8b08-dc29959ead30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a39a366-294d-4c8b-878a-de828e1e43f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea4c983-d4ef-4e2d-b8a1-9023d404132b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae115d6-729b-42a3-946b-76cfbf1ad42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd91e4ad-6a77-46a1-ac15-ef39c09f4eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10b1b9f-2f08-4c88-b033-2e44d90f5370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fed961de-7bed-42a0-9814-03daeee7f03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808a3367-f494-4549-8930-0250f048d51d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf6c96b-47ea-4971-8c6a-9b6c8d398fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4173f1af-e5a5-45b5-9f1c-05ef76e44cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590f50f0-c087-48da-add6-8d5309b8e6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf00dedc-5569-4512-aa87-5a1d2e08a1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40318b78-86ea-4ff3-856b-b7f8e13b4223",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe17d028-51da-44fe-8d24-e121e9ab9722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51beb901-a21a-4408-a3aa-0d7e980742db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc16ac5-e6c5-4a44-84fe-41edb0b650cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb03ebc4-c0bd-415e-903e-423e124d22dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f7c739-4742-4994-9a0b-5cef8c068ac4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f14a120-86e0-445d-96fa-05a9be54f2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e19bb5-d8c6-4dd8-8df5-75cd0d8630d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa88b276-7d6d-445a-9524-6a2a5a3a1008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "996e955b-da77-4fee-a5b6-8c32f0953d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6f4cc0-1b01-4f20-9e4d-5ef8d80b9f9a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ddb86b-aa9e-40d3-b0e6-c1b96d64ab1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87486b0-979f-4fd3-9d75-e738eec9ddec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca78da31-6790-4411-ad95-e229b3fad962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bec7e56c-8947-45ca-91c9-07f1975329f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ddfdeb2-b08f-4e84-9a78-147d0636d059",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a71125-8a15-4dae-8e3d-4614665dd9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c1d2b7-b71e-421a-9798-6fed4ede68e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77bfdd5-ab66-4e40-a1c5-ce6cbb5dcf3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a656a57b-781a-4d3e-ba98-fe6d6a6d5062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7173333-cb53-40ff-9203-0183d8981993",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f043327-3e7a-4033-9e83-0d9b7fc93a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c00b15-fe7a-41e5-be38-76ccedf37823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24bd35c-576f-4e55-b861-4076f37639b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3401154c-aa5e-4e14-a2fd-44fb7a0f5589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6918ffc-934d-4b52-a3b4-74953d0076ed",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a561f36c-16d1-459c-9e28-ede76df858fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37da4ce-0f25-4e94-a844-b764b846ab88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fb9844-5ce2-407d-b444-9f797f94e555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b46e3731-f50c-4139-841f-4dd82e1131a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11865fab-0d99-49a0-8f61-6234781fc5e8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "771a0686-edf8-43f3-9e34-a58f2f06730d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01b0794-ba83-4276-ba80-4bbc7e066494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12aaf759-e9b4-4a0a-a0bc-0e933c05046b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56f7eeb7-cc44-4d2f-ace4-a0499b8c8479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd634f66-e9c6-4de7-b7e2-cff1c7c8a6f2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219d1ed2-330b-4914-88e0-bfc220fc9d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87fc556c-e05b-4c6a-8a10-6d1c30f57ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b7cb9c-61d9-4a7d-acc8-f79d6359ca03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c843e2e-423b-4ba0-8db0-5130c9c6a34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3023d4-d3dd-4376-baac-506c348f48ff",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd8090c-c7d9-48ae-89b3-958d5abf422c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d899fe23-7ede-4fa3-a6b7-6de34d01b243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fd10d5-b660-45b6-8597-e29d24fc7d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c322458-de3b-4dfb-8542-2b03ab75530e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3405778-d319-40ff-b3c6-d21d32cca9e4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858a2dbb-c572-4f0a-b4de-fb1b1724049e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e38db7-c57d-43ab-b9d3-064d2fcc0738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced2cb47-4d76-4da4-a913-3ed24601b575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c58271-3773-4a7b-ab66-d871c4f56995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee9271c-6a38-4d93-a93c-a41dba437657",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "031aff1b-b1f8-49a6-81f3-1bff83b4169a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cbe9a46-f83f-4767-83ae-7e44de9739f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8524d1e-15d9-4862-a4d5-f406b8394884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c74305cb-49d4-4c84-9d61-fa24f2ab4203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb79efbf-2483-4c0e-9b8f-3ce7a236887a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad1d20c-cd97-4abf-a204-d0c51224b652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9f0e2bd-8176-4c48-ab4d-ec8008293c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f613b4-0640-471b-a3ad-6470f1b50096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "86196693-dbf8-4ad7-aaf8-369eb6a76d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedd8a85-b7a7-4b53-8906-c2ba07071d57",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f479c5-2f8b-44af-91e2-932a75d1d7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e9b924-0137-49ed-8bf2-2ffff1ccab04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0078df-026b-43bc-a1ab-dc47105c4821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08f0489e-6ebb-4fac-9ad1-6d3d38f006a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb374f5-b97b-49e9-b863-8a0944dcbec9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc45ad1-1233-47c9-9482-f5209b41e575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "974b39a6-e10e-4865-86d5-43cce4c9e36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e052f1c8-b55d-42c7-9f37-10f1c1032cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a70df92-fb93-41ac-8709-a6ef14d328ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37bcd1ee-698d-4bd0-810f-32460aaabd5e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35a385b-0e20-4531-b158-75860801416e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8c7010-b1a7-4d41-b4be-85285a9126c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcc7c52-2f87-4ce4-89f9-1c341b9669cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17104635-3913-4876-a0d9-47cd35c35755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ccb317-7509-47cb-91d2-200bf4fc4f8b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae746f11-e98e-4f6e-8c83-7421abd47411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529cc34c-d42b-4787-870d-3d5065428ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6d6396-58d6-4c27-85b8-41d9c96c4802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d21deb19-64f4-4034-a00a-4a76ec7b9bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b0e26a-2d9f-4ea0-bf8d-6c70ea3a4df5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6262cf44-c2ab-4c24-b523-702479b8b11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e9f906-0da4-4db9-bb57-597e8b87e842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9fc13b-a08e-4657-811c-607399aaf2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "214dfa98-0c57-47bf-98f4-14433db920da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4a59cd-acc8-45f2-af89-6d85346c1aa3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "721d7268-d783-45e6-8a43-b3d7a9b2ce9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94872653-b703-40e2-807a-5e07162b33d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ef0116-d476-4a30-bc0b-8c45e4a0d8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "49c20678-33a1-45a3-8224-edd85480e5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372017dc-d4a5-4068-9fb7-bbe06800dec2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e526dafd-f6f6-486a-be79-86387dd435f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dab90ae-1e31-412d-9e52-a2a16cdb031d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d045a48-e66a-4d94-9429-0facd8fbdbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "326c6fc1-eaaf-49cb-bb98-89ecbd007cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db58d0e-10a3-4282-af4b-c264c4c2a743",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50743914-00bd-418c-b636-429d1cb14fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f94eb86-2a2f-4cde-9295-c28dfc94cc09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25371c98-9490-46ca-853c-fa8b8354274f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4119c44-7b74-4d9b-9df2-551f75452547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb583c6-e9b2-4982-abdd-c5abca7dd9bb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca233b5-e4ef-4846-b380-b9b52615afe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c1e4fa-0349-4dfb-ac06-7513d48f0667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2075c66e-4388-4716-92a9-47212ac9d69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86b3621e-9889-4935-a0d7-ded36ecdb809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80d2ae8-9a5c-43a4-875e-e9c205efe954",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1051428c-a0dc-4c81-84b0-f9343928cc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7664a7df-5e08-4862-ace3-4574ab578394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f59b50-baf3-47b1-bd07-2878cedcaf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35fc1f33-e939-4f63-93b9-a678eeec8e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0ef532-a5f2-4072-a3c4-e0ff1dfef4da",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4155662e-673b-4420-b8ca-8a326799c7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104d88f4-316b-4be9-a13c-855fc6321c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbf95dc-807d-47b7-97cd-7442e1cd46d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d3de34-6588-409c-8be5-a1fa9f41acab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0927281-7b50-486d-9a87-270963ab4b00",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a121dd62-5770-4a61-808b-b29e8829fc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20beafc-39e4-493d-b998-7a50b33fb800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63806ca-535b-4809-91ea-37a34489af82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d21385fe-b015-45ac-ab5b-89dee97b6788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddfa0c53-7d6f-481c-b857-51e90788bf73",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25767a21-c4d9-4752-95c0-7a8a1ec22599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99badbc0-e300-46a8-bac7-d78ef00a6f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc96b9b8-3a79-4a09-84d2-411e0038022c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5345a19-c56a-4bc0-93a2-f8dd9a3334c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1f0408-68b0-4eb0-ae61-be2f1827b11d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3bf71b-5119-441a-8c76-4d75448e0502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4196988e-b16d-405f-b937-5e2bf29b3cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67693e9-df6f-489d-b244-0f1389340d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "55399275-06aa-48ca-930b-2f79a81d7045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9529a2d9-932d-4527-803d-2566861eb61a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b8c860-886c-45c5-90ec-defd94465a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45c45ac-59ee-4b0c-90ff-f141cc22213a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86243e4-376e-440a-9a4f-78eeaa901c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c25904ff-54ce-4348-965d-92814d374f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93465e7e-b66e-46e2-9571-d0e933e7d119",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f04010-b0b6-45f2-b4cc-37f8e64b2543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89706e0c-1a8d-4d19-9fca-f59afc85a903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90611481-9547-40b9-b78a-2b7a073249eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "99b02d9a-bd61-44d6-96e6-8b8fbf592b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a09fd33-2edc-4b56-889f-ea85938adcc8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea3b62c-5d73-40e2-bece-25a20270411f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6179f19d-c921-4861-b3f9-00fd80288dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969f0107-497f-481c-8a00-36ec533ab208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b5094b1-8944-461b-8b00-ce9017e551ef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4baf773d-7f1f-426f-a089-dce1cb34734d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4fd7d526-f03a-4ac9-b8f0-5f5ac02a01f3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b529162-11c9-4d6b-8b59-fbe612042f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81b66281-e419-4b04-b803-96bd38d85e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d649df0a-6913-4d8a-8d24-ae3683b65f84",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "b6ca870a-29e9-4dc7-9dfb-2c7e52a0eb30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0145a9b6-611c-4b21-91a6-287bdf6f8dc9",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f697a40-9523-45eb-a03d-1f5d2f1f35e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f0be8af-d717-4525-bfe7-d097d882979c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99e149b-5ea1-49b0-89ec-fde8a1ee021a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "5a58ddc7-36fb-462d-9732-dcac445b8b9b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6655db18-baad-4e8c-8d93-28b39aa70349",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b09aef88-60c9-4280-9966-933df0a44696"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f99bb2a1-a456-4608-80a9-137e1299786d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b1f56e6-2c48-4436-afc0-bfd2dc7e977a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c483c18b-d591-41e4-88a9-d0c511a4713a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f437f1b0-b2c2-4d16-b325-78b3ffa2001b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "37bbd13f-84da-4b6a-ae7f-073cd4296aaa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fa7c525b-757a-4059-b8e6-7c11bb8b73b5"
                }
              }
            ]
          },
          {
            "id": "788bd28a-a794-4ce6-b475-43b8a3dc2142",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0c48bd0c-8162-4f45-8331-ebd2489cbc67",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86d7f512-f085-4a09-b04d-3c41828457ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c0ab5ae-d1a9-4ad7-bbd0-b97ed0711674"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7eba2e36-71ec-42df-a547-1f096b9b7640",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "42e5f614-06ec-48e6-93f4-51fc129bb1b3"
                    }
                  }
                ]
              },
              {
                "id": "9b429b70-c0ab-4c12-894f-36fd19e87369",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "715bd8c7-e89a-4316-9fd6-524f5be97477",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ce3a0ab-130e-436e-b010-3368fbe44fb7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85b894f5-7446-42e1-9c0f-b04f36ad1656",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "84bb0865-5ab1-4de1-a10b-1d872e81fd2a"
                    }
                  }
                ]
              },
              {
                "id": "39021e03-1aaa-4ddc-bba0-2f5a7e52b74d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a5fcc7a-e8b9-449f-83fe-82f2597e6f5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "66079403-ac99-4361-9163-b1f7c913c5bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04a048e8-b488-44a7-a3a3-836dc518b08d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4bfc6744-f970-411f-96af-5fa6cdaef3ce"
                    }
                  }
                ]
              },
              {
                "id": "6901fad9-4475-44d1-9fcf-b278c7b1b960",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f905ab7-fb70-4079-84d1-b2832aaeb2b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "08ab4d3a-2168-4d27-b4fb-552c25411c08"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d49e53b-5975-4ff3-b235-be0ccaf9f602",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c9c8ae22-8140-4871-a682-0997364c771c"
                    }
                  }
                ]
              },
              {
                "id": "71a4a9e8-be7e-4c1e-a5bf-5464bd19a5ea",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48015b66-f32b-4dbd-91e6-5c3312a26830",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7784943-b5eb-4499-bca8-7e74832e723b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0d75f6f-15f9-4fa7-9f10-c50b1f4ebcc4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c5f4368e-5a46-4d2c-848e-08785ee26c34"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "da79ce8f-9d30-49bf-980e-36089c5a8105",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9fa37003-fd02-4663-988b-baf3b344fcb5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "01a3a5db-90e9-470b-8334-1f8a03cc513a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1c2707df-3be1-4bde-b410-5bac80dce34a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8e35c31-e850-4c35-9480-8757362dbede",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9581d79b-f86e-42b1-b697-9e612966f326"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e3d6385-43f9-4d09-a1fa-feeb6234b9d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e397801-6ec1-4644-8951-7e5587d61323"
            }
          }
        ]
      },
      {
        "id": "d56e8d24-3ac1-4767-ba94-5e5dbe8d62b4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c41191e6-d7d8-49e8-bd5b-9838b9d9b2e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "257efb6a-191d-485c-bc11-8370fa1992af",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "839677e3-caab-445b-b16e-d22fea0e9719",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f117e923-1032-420f-964a-bdcc4c14a721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd5235f-a497-443a-8522-d871bb6b62ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392a394a-d787-4be7-8b7e-377288b23664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0c5c02-76ea-47e9-ac93-6a5ed52ff82a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b9d0da-a559-4348-8899-16c16a8727e6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c3e3f0-8c6d-4874-ab17-49d319d590f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aabd7823-bd52-4f26-bc95-fbb2ab9045e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e513317-6371-49b4-9402-0ccde9f7487b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d513727-8c00-409d-8038-0d3ec5acf8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cba0a8-9424-4c98-8430-6fb3f4dc8123",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9cd927-eb75-4f8c-a813-1b355487b1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e247d2f-67d9-44b4-a0dd-1fa0f2a75f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d22cdee-88fd-4c4a-8d61-a1bc0dedd7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da563465-36a1-4208-b306-f4f9d7f5ab45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803986b9-0a34-44f2-a5b5-35fa921c84b6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360c11e1-af2e-4293-9458-b7d58c35c5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea99fe9b-0bfc-4622-b9f3-8b704e5589f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a3a947-d438-4d48-9dfc-4aad0622b464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e275d3e-2712-45a0-9bf0-f858c751a453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5007b6b-7adc-4d91-8474-75d73bad4a1a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc4fa88-7695-4e50-b8c0-b219617d13b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0caa1d03-e3f2-4afb-ae4a-9a642734b0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1e04f8-a8fa-4f83-bd40-bda1e1c25e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ddd427e-0aa8-4791-831e-4dbfb6672ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b008e7-56f0-4739-83be-d03c5d44ad39",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d5451b-3614-4fb3-bb2d-d5f5ee3f8f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5885e17-a812-4af9-b87b-3c66df00c5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4b1d4d-2972-433b-aaee-1672e4ab1704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "620cbd9d-4de1-45ce-878e-f016ed76e9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ac15d9-44a0-495e-99ad-94c3273387f3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa024a7-3477-48a7-8c93-409eb39253ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb2a5c7-f56f-48d4-9c34-fe0fcc4e7b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647abf12-5cb5-45d9-8619-3028bea2e433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "13bb506a-f89c-4257-871f-b1710e872ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b794299-78c3-41a5-894e-75d118e3db36",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d423abf-0bc2-4173-bcd4-d4bec4ec30fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "352417bf-2f12-4ec0-afed-ae7227884334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190caa35-43dc-4905-b8cb-d3eeada157ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "881df706-2267-4366-9ff3-8e6506e09e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bcd603-633d-488b-abd1-e17bb2fe1e44",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e752e1b-fbd7-4710-8646-9e4bac41dbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f48aa3b5-de7d-4db3-a100-7df1f6c718d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa4e45f-17d7-4937-ae72-f6645c18be15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4bd595-74b8-41a0-9907-16ec0efd15f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41569ec-a11b-42c1-a88b-e1edbbf84390",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22069b9f-789e-4942-8fa9-60c86d9801b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e000b28b-4e11-4ab2-a789-cf2f0221f963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e507e52-fd82-4955-89f3-e3186686778d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4817ec38-d98f-46d5-b986-3d6e30123b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dcb7819-ed3b-4478-a532-16c843455b98",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c15d9b-9b78-4cc4-bc15-b95fcad0daaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65236633-9875-4c11-945c-d660bb80da64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d647510-b2e8-4192-a582-d75ad100ac00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a49e80-8c42-4f64-ac61-b30e0ccd7097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47c1bdd-ff92-4b31-bb0c-a600365fe599",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af97127-9ab0-4d26-8247-8e608d5b9871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd95657-012d-4dbe-93a1-3ab1dbaecf6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4e17ee-1f3f-4e66-a3bf-7a55053dff8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dec7359f-6e50-46fc-bb4c-c8e675ba4dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26f85d7-78e2-431b-9aae-742a8a1062fd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096276b6-e247-47b6-895e-af58283e00b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de5ee90-ae07-4ba6-8a26-321b4f766b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9d9739-94cb-4844-9335-ac772cabebb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e210b2a5-08f4-4864-9d28-f3075704c100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e195c0-7d5e-4bd4-bbe5-0f7146483c86",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617bdd4a-4934-4817-8819-cc3070261602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f8e8d9-3d44-4e26-a47e-c39901e4fb9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749ceb73-a9f8-45e6-8d5a-a2f29240e206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cff73e39-7f03-4e96-bd40-34fecbed90a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e579183-964a-4f9a-8f35-b7d8c058c8e4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53cc3ef-bb31-4bcf-90a9-4966245a287b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b111663-5247-4511-810b-dbdd384a86e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4afe7be-5958-442b-afad-5eeca0e9ffa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "18d95aab-2c88-4047-83e3-febcf87b814f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e12aca2-04ae-41ba-b566-c824ba933b4e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "349d561f-c35e-425a-9bda-88ae9a7cb047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27bd3be3-16c8-4fc9-9e9a-dd3a5ca2cb24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19da341d-591a-4e02-9a8d-2fd3af3f974c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "341a3407-baa8-46fc-a52a-38bd639660fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107c6198-67d6-48ca-b301-9d10d786cdd4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf688ab-ac97-49fb-9d32-3a1086d73b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d501b82d-c20d-4299-9cb2-8e653ba615a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aefe78f-7311-4692-8350-b4f98d8ffe0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3806e54b-c3d0-4755-8ef9-2b57f7604c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65ce82b-baae-4b50-b031-395a30ea88f4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2341faad-fbf9-49f4-bdb5-95143ce82d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6fe17f-c97b-4ba8-9aa2-7e3a90e8cc8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09ade6b-b247-4053-821f-57f758db613a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e09ee46-27fb-4811-b835-e5e2a0a6b351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd115d7-0a13-421f-9fcf-cf810705d6fa",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014f84f3-11cf-4185-ba0c-39141f9e1ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac765a27-f6f2-4ab2-8b57-134e9311f673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0623d1d-211e-4545-a919-1ef821928704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ecaaeea-f679-43dd-ac98-09db9879437b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5712ca5-08c5-4246-83e0-1791a55127d8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870428c8-978e-4c9f-bef1-73993f6ad2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1665fb7a-fda6-4a3e-8034-b441e041d08d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394c36e5-1ae9-400c-b0a7-3d7ebf562b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cef3984-21fd-4df2-bddf-4a72a7f4812a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27be989-1259-4d9e-88f6-c780b869a82c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7381d6d-5db5-4d1d-a5c6-c475edec621b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4bc12fc-d0d1-4ad7-b040-8a6ec442fef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ab19a5-68c2-4eb1-bec4-021c6327ee65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d54129ca-1815-4e75-8bec-f5133f80a5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e99b6d3-5634-4ec6-a822-e79a598f6a15",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027837fc-cba4-4f7b-8dda-b7af1cce8bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d86d2cc3-2a2e-40d7-8ba3-2c13afe74828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933c8e56-cc54-4c27-bf33-595a6d9b22aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "633532fa-3fc9-4c9e-b65f-70747db31e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d72cb5b-cba3-400c-872c-92805bff5897",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c956abd1-207a-4324-aa1f-1f447476e831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "941482fe-88a8-4cc8-bd2b-83302c8a0fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4dfc19a-fab5-4671-83e8-9faaed75566a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a554393-1d15-4f23-99f7-161d9823a6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787207c0-7770-44a6-9465-d14e0d93c9ad",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefb4245-5233-4bb5-9817-b2a91d161162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef5b638-c698-492d-8060-f2017e43c536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6373123d-05c1-4131-a5b3-5f7a325d0e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7214465c-db2b-43d1-9b40-3eab272da830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8edb9c6d-6d9f-4464-a068-85c5d509fc8b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5614c3e1-37fb-4d46-b352-a69a1ae6b3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41eb2d9-3215-4aed-b951-1b7fc43fda37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f5c4aa-0806-4faa-baa2-0605618d1849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf0e71cd-dbe1-4ba8-be5e-f1e63649bed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fb9bae-99a5-4939-b022-6cd309885948",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17380a92-6cb9-42b0-9890-4cb7c1789d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b644ed6-44ae-44cd-bdae-4eabedb18bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b04a0bb-7cc7-443b-8605-9c74b3dfe70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e6fd2b-c64b-4146-ada9-cd5e0561f8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338aa033-5d8f-458e-b1f1-5581cad1ce14",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0f0654-dae3-44a7-ab91-2bc5bb2fe471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef76f948-dcc6-447d-89b9-a6554ee7b5cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8c40dc-a802-482a-ba33-87f137ea090d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9738dced-b094-4118-81e4-6c5caa7fbc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d285cda4-00ea-4f4f-9b39-1f19ef5593bd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121736ce-2157-4cb8-9b05-af780ffcb65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b92a283-cd04-4677-988e-fea10a2c10e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a4dc9d-aadb-42bf-b57a-0945a7ca59e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d1f908e-0898-47d1-91a6-b2a6e9d9308d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6f7b77-0ff8-4ed1-b0c3-793331584094",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325acb1a-5b17-4cc2-97d3-1aa3c1332d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc3f66d-b51c-4c1c-ba9e-2968eb192a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e85e369-4ce7-4edb-a957-b8ddb58b75c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "452a3a58-af84-4daa-9bbf-6f5c4f1da3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b44966f-a867-4bd2-8660-0549139db8cb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fcb705-df72-425e-ae57-099dbf2eaa23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e32816-c949-453b-a4d2-f3d74503ac75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44561738-f160-4dd8-a35c-91bada90d26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41dd2ba6-4831-444d-9b5c-6e1860eabc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c098e78-a891-468c-ab12-bc3157cd82aa",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57097cd8-5985-43ce-a6d1-0eb75af9338b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef9a5d0-135b-41d3-8e8c-fe8d07287b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098bb5a8-7552-487d-9c1f-0963f62ca65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b042a15b-f985-4415-a82c-f287fab12051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d545c1-e296-4e08-954d-f728a50defb2",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf5f09b-0415-4762-af41-42c59f6a11ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39450762-a921-4373-ba34-73fd9d0665ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77732fa-d144-4a93-9b53-c14e8b3ec894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a561388-ec2c-4d7a-bc17-9e6bc355b391"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "67d978de-6394-4390-9b2f-4e11aee940a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "71bd9def-7b76-4e5b-809c-3a7fc7b24547",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94505c55-9979-4bd4-89cc-38ac76af87e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aadb8269-7a7a-440c-8216-90bd04a4046a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f059744-300c-4aab-8a96-554f629d4347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ce652db-7f19-47ea-ba96-2ffc6d09cdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd13a8a8-bef9-48d1-9998-d38357010738",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a06ec0-f3b7-48e9-bf27-b8a098fbb7e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "382d0c77-d1fd-43e3-ba04-7db87564f63d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d794d6d7-1c0e-4817-ba0c-ed2f587cffd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8906f392-beff-4b8b-be60-640d0661a76b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f049175b-c763-487f-9487-b753ac255854",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b06898a5-b4d7-4176-b0bd-11d6ce645992"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b662d2a3-fd05-403e-a526-761681e91ae0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5c3ab7e-3a94-4564-bc02-05bbc41a6e60"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5bfe0bce-d44f-4a4e-82e5-70e166ba3e09",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7eb7aa57-cfdd-4a38-bdc2-c2c0b1b7d237"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a7210e8-8121-47e1-a83f-f2fa150c1f85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7dfd4207-89eb-4043-8b45-743bbf24861d"
            }
          }
        ]
      },
      {
        "id": "c3d2e99b-d677-4caf-bdd7-e1592b9fcd0d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4e56f4bf-e4f2-4f4c-932c-cdfdfd4db8ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9116e61c-8978-4161-9e8d-fa8b4b0d7bb2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f71aeeb8-7448-47e4-9b4d-587f5d5386e2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6560d0c5-bc13-4a61-8001-52f66ecee6c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b934962b-b60a-41c7-b219-1fec8a7df8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257a7cf3-a4a0-471b-8231-e05fe2dc45be",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f4fa96-8288-4994-a0f8-9455c99109c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c29a24d0-0a7e-4bc8-8a67-807c288bbe26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3b0b8b-0cba-4848-bf9c-42cb6296200e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b974408-3bfb-4745-b3cb-e4f73c6f443e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a94c2f0f-491c-45be-b78e-93a9d5d8d3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401065d0-503c-415f-bdcf-d5a7faa00135",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f0c5c1-395b-49e3-9285-2339392ae135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bbbf97e-5f24-485b-a65f-cd8478bcfb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855f5304-69a3-4661-a1bf-55299cbe54a1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d67fad1-f9a1-4e9b-b680-e1ff14fb8155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d34a58-723e-4c87-8743-87187971fd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f24b777-02c9-4236-be6e-a91dbc0925a1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b02054d-6741-48c1-8e6e-77b2c2d70e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f1bd0f-d522-4984-b968-56ca2c3f4bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624707d1-9cdc-4d92-9154-aa16049d67cb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88568c3d-5759-43a4-a4de-c9500e5bb61c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9942a9cf-c529-4ccd-9ff0-a7984c2e7f18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d16decc-2d43-4aa8-9f68-8a2156f15f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fac9e60d-bcec-420c-b2e1-5a4fd0452f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4b123a-a95a-4af9-adff-e4aa42d894d1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83b0c6e-d0f8-42d3-b79d-1ed8cd43aac5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59983318-fe8b-49ed-99a8-551a860bf235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7aebd69-0fe5-4873-b46d-46644106f944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee752ce-b9d4-4cf3-9f35-f193dca6a7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0de631-9374-4f63-b102-ffc752e5d8ea",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f653943e-937c-4ae7-a0d1-513e21ddc960",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ed7cd1b-1795-42ea-87e5-e58b312a48a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6743f951-1427-43af-82a3-3ef8a260a2b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae3ddd0-7644-48fd-aa24-8f9b4407bcf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bc10c3-380f-4eda-9a57-c4681c9f25b4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bee05c5-e3cd-4699-9fe4-c20bd0689f82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "836b5a70-ac81-4c27-b641-4dac98b840cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9422f2-a219-4916-87a7-f17650348e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72f7a44-2c97-4a89-ac72-6e1c77eae2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4904fa82-5c1a-41d2-b75c-45a25dd4f683",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9b5e54-fedf-4c6b-8a7a-82daa89c9472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f9f741-ed2c-46df-b54b-2de4171d2577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc2d51a-9db4-494f-be4b-eb13ef09febd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d562598-0497-424a-8417-89aead445465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5179639-2b73-40b5-882a-da10adbbe417",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d878f747-e6aa-45d0-bb6b-50cf5ed83dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e49fa48-9d68-4fca-8584-546fb8a22cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3b32cf-0f52-4615-a0f4-bf5a1330f84a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6101be26-fc28-4605-a88f-141e40922daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f070b1d-c6b0-4590-8e33-f79253478a43",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee98c3a1-bcf5-4a1e-9a36-f047d9cbdb25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39b9a78e-a1da-43e7-a770-4fb1090773bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9522b3a7-af9f-429e-9c2a-c3c48ab56372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f56636-46e5-4988-ba8c-dd4c1e567634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f6ed48-110e-41a4-99c2-9789d08f1467",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4df40d3-a4da-44e0-a27b-70842e2c6b07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cb9479a-7ea8-4861-beff-99e12778a8e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76693bd2-dc23-4a4d-ab62-38f0f5394f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0edb2d19-ce4f-4a94-8928-a57053c765c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5a1647-3879-40fe-a608-fe869430f70d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc11d34-70e3-4230-8e74-946118fbe309",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b19f12b9-166a-41c1-b750-a9effb8854a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5450a04c-40a4-4573-a0a5-99be92f8ae96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87bd7160-6ccb-4b2f-bc94-e6db48fcf2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c110fb-0c54-49b9-898f-cd0357c8bb94",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8044138b-2221-4951-9f29-162a3cac2b72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e606d68-dba5-4ee6-a243-659263e748b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9fe5a2-1322-429d-afbc-e3edc25ef7cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4917e6-7c4b-4673-8c92-c6c4e638e46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453c2861-2253-406e-9404-38792a35568b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae9c92d-99ea-49ec-af45-c343223178fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd9f660-a4f7-4742-b73b-5b8d3acb198c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e515c0-86c1-4d4d-912c-4aef36a02f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9393610e-0353-4898-9dfd-5e0a2c23f3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5afe00-9506-4b4c-91f1-58e47a2a8a6f",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c1cd02-d454-422b-8087-cb54561b854b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2679dd29-0bb3-4737-83c9-7d3ef60fb603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1f3902-c184-45af-886d-b2d68b92b71f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c78992-ab20-447a-85d4-bc6c03a6071a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70f6b2c-d201-4f22-8b62-605193c9a618",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44428c01-3cba-46c3-be24-e51b0e06bd1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d71748e-8294-48ee-ba58-4336d5282d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc510655-c554-4a51-bef1-1095272f174b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f94bb437-357e-4016-a4ea-2b36e3345d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc954a3-7896-464b-8a67-bcb130dc1912",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c64858c-3a0b-46a8-b8b9-842a2245af4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f7ca1e-5d72-4cd3-a58d-2620da1b2fff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f06c429-bcc9-4906-860e-9e7787a09bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0441d06-916b-49a2-a7a6-92b353b1a5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0a28f3-8982-4ad6-b538-1c0920d569cc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9941e482-1915-450b-884e-68935dfca09e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37376af7-d09e-46f7-be8f-c3dd782acf1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8625cd04-a716-434c-bca3-d398c12f9135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d901b838-d240-41d0-85c7-cecf97d3a32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1657a678-402a-40c4-a25f-55482c478f60",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e645e2-8d1a-47aa-94b4-f9aa15b0a33f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "686cc7ef-6d10-4b9f-8ea6-f865fba82aad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c00d0e-e983-4441-8978-bcef6e7f7aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "885c19cb-e79d-4edf-a8cc-6213b2780513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4918e2a-43d6-4512-a815-1740a3a556ff",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14a7864-912a-45cc-b4d6-b16dbe19a7cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa8b721-8b21-4c17-a797-ffc19e1f1b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f69c9ef-cb4b-46d9-96c0-8caf826e0712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d55f87e0-24c4-4556-9af6-6f49b2d72dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed6ddbb-dde8-4552-ba98-78d66d5d4888",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90203d83-90fc-41cb-8ef0-a34ac81b553e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1fdf201-9e55-46f1-9e85-9c97d220a11a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf133079-778e-43fe-96d9-4c4b6bc41d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8183f77-31a6-495a-9b55-6da86615d7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4432cb-1616-45a6-9ff6-a6ddd3377000",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5370d310-00f7-49d1-905c-279bfec7bd60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad359c89-64f5-4243-8a18-62cf7a52ea47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0457abca-2928-47d7-8310-30c8df1e93c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495e070b-b9c5-4d1a-9a4f-73b490197ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdf708b-f129-465a-a27c-13b54de4487d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3c9d48-f13b-4112-9384-26ff9d8fa6ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ac89889-3a9d-4923-8d73-19f4135d942d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72305334-88f0-41ca-9130-60d5e660363e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "487aaf56-e741-4d44-beff-b97ab540c862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0536263-0854-476e-9ea9-8ccbc92f2283",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7943f30-4f90-4f1d-b48d-a41d333ca97f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fb897db-d8b7-4c3c-9db6-c3ed8b909f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c69af3-004a-4360-afbf-c5f2bbdaf0b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36738204-bdc7-481a-ba56-f3cd0afab9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea60442f-ea65-480f-90e3-56f6a61040e0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6145727f-1e30-4fba-a35e-58acb332fb52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c54e8bbe-395a-4242-abfd-0e395a739504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c59f5fb-09c1-49b1-ad1d-e2ac96744f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee7f5d7-07dc-46d8-b219-80c7a5f7a160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77cedcf4-e461-47ab-b341-5b10244ab079",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d02f76-4e1e-45d0-ba2e-e1899ee64588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7127414e-c114-4ae6-aed8-64eb48cbcb21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55afaf9b-7def-4f96-aa9d-ba740bcf50f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a828f4a8-bc36-4906-baeb-ffbe672a88f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dab4ec2-8838-4e02-a1a7-30680c064887",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192ded23-5210-4f45-90ce-7cd13246d0a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc41f2aa-fb86-4a5f-a36e-401b32038989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec1a671-b570-48c7-862d-6231000fcc0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "488de1e5-2e31-432c-8795-6c04e3c48f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e85c23-8f39-4dc0-8132-9eb4058c2424",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e041a1-f8c1-4634-a122-4c1642341ef0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b68a780-dc40-46e7-a752-f381bb424df0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a725929b-fd9b-49fe-b2e7-4e1cc8d1650c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94500f3c-c9b1-4ab9-b35c-1b9ecfc9b5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a47587b-1cf7-4769-8593-9b6e760e0e20",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a0c8e1-1029-4683-b2e4-d9705f67739d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a897e73c-3153-486f-bc2b-456d0e8c4fcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba921b8-eb18-436f-9042-99f58c881196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d572c91c-b7a5-4092-a65c-ed3562fbfc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ab0543-cab3-4c4a-b0ab-2841497dc50b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6649cecf-6762-4fd6-9266-9816796db5e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb94d213-cc21-469b-be6c-25684c50c081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec3f178-1575-4b32-bfc2-9549a2b6ba4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7ef928-6d64-4a7f-b4f8-cdc3f6b8e040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69c08f0-3ed8-4484-8243-8d703e1a8ed1",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee842f6-352f-40cd-b862-d39f793d623e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "201200de-85b2-4afd-998a-c343c1e24306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce923ca5-57c5-4958-8d36-ca28cf5d5d52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd2796db-dc2d-4569-8dff-99b1814982e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9b2fc4-2a43-4675-a075-432cba7fd4dc",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b282a2-da27-4438-920b-b695a093f0c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5b7c687-49b9-468b-9884-ab0811426918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b20e9f-796e-4aca-95d4-0b69b8275127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f89657-4349-41e7-a44c-da3d6c95774b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc18136a-7f69-4489-8230-da24025577f4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee72f444-7cdf-482b-a239-ba610b848199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c72ef02-99ea-43f9-b009-b706f4d26af1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7496dc85-f412-499e-bbac-9d73976542bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ec7d3c-d5b5-46d3-8539-37c9f71371e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a214a3-be9f-4629-8e66-248b4faa2776",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45e573c-d2ef-4b4d-99f6-14a8f6083d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "053e2683-5f4e-40af-a0ed-9a22b6ef7d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94ed610-70b2-4e6c-bc62-a4ccc3eefeef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d188086d-e607-485a-b557-957439916e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6492d08-f817-432e-a9c3-1e7a3dbb592a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad325b6-21a4-4f6f-bea9-58905cda3131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b45b49-b72e-4d02-b27b-253cbb6e63f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7dc2e6c-ed8b-4c6f-a98d-fc4040b4307f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee22f4c9-473e-4b79-861c-9cac171b123d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedd67ab-def1-410c-a734-c0193c32fd67",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d54db5-2ea9-4fcc-9531-dcc6fe500ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7e2d62-af9b-4e9a-887f-d7fa7ee731e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dca6f18-0d26-4e59-b440-304ecfd8d0c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f69b21a-c4e3-4c14-86cc-a769d1baec36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd70f4e-5bb4-4559-9fd8-643bd5b54ba3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7fb5cd-08d8-4ef3-881f-df2ff25b0229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b54c5e2a-18e8-4cae-b533-328d3f8067e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d88fb4-ddae-40f4-a218-a5f2cf67c0d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d101edc7-2e20-43f5-94d5-07fd7bb846fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a446c65-6e58-437b-9235-a5d16dd8078d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f24a45-6363-4d4d-afc3-22c46262fa92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9585e995-f824-44d4-aeea-7397cfc1d0d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e402c62-2a14-4a3f-8647-14bfcf761738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ef2fd0-5c16-42b9-86a2-4f7366839115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4e9064-a4e7-482e-a32a-286b7bc3f51c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad204117-8c95-4588-99be-fa662f9313af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28137b99-9cca-4475-b645-d9d3fd357e90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5837df9b-a536-4163-94ca-3c674257609d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f53d277-2817-4ab7-8b81-6e573099a0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5759a8f8-91e5-4151-8cb4-214b06a90bfe",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b7c9e7-9f29-4ac3-9842-21399bae60e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95b792d5-b52b-48ce-a39c-9e223aff7434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0051f6-97f7-4384-b00e-af2095f8f9b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0499b1da-43d3-4b0b-83c3-cd3c5d70c90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d91e3e0-54cc-4ffd-9cbe-719876242590",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d31fb6d-5ce2-4c44-8a30-c9159b204caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c548a4-b46c-4108-8ff6-26f9a618a032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b1f4b5-928e-4e6f-bfdb-19491ec089b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a8735c-1931-41d5-b413-7d973900e17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16b5edd-16d4-4b35-bb26-5fe967128ee6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8121b9b6-a997-4f76-9436-529fdc3ec901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f6b273-7f0f-42a5-8cac-eda3d92e14b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cbd830-b8e8-41b8-bdf9-ba05b832c08a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3d4aee-9386-4902-8c64-b8c3d8800f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc0054d-41b7-4dee-8569-c990e7dd9eec",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae22671-5419-4515-94ca-16d43d7329ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3527e3-dfd1-44b4-b878-e3289a3ed4f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb49704-402e-4cb1-99dd-6a965e4340f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8aa485c-3858-4ee2-aa2d-84e79410412c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4abf50-cc48-4502-bc66-8b66195570ae",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc48a2c1-0d6c-4e76-ae46-d29ba16f7bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad728bb-d36a-43f2-b825-28668ad7e7f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4190f59e-3c7b-432a-a37f-462e8918411e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a73d6f1-5fc3-4103-b863-7f052a03baac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94b5c68-7c0f-4282-8331-59e4d7795f1c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26e90b0-70ba-4b21-b5b0-31df47e47931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d08f2845-c785-4408-bf2f-005e927daff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2507fa5-e4a6-4882-9c77-b29e6c0c86a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67200d84-0f53-4170-95a5-5f40628c3e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85040413-78cb-4fbb-a60e-b74ddc0948f6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f37cf7-fde8-44bb-ad32-4a673de14863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b87b050-62f2-4b1e-9e19-419d770b42d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc227f44-371d-4858-a5d0-fb900773e627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2d32b2-b891-48a3-b4ad-2e3eaf6b155f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ff1368-2173-480c-b844-27b3c3214d27",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aaed044-deb5-466e-9f07-3bf2caa7bf6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93dd5966-c61a-48b9-8c3f-986ca916cc4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "495474d9-4c22-4b12-827d-0af51680795f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c3a3be-586d-415d-ad31-2fd680b61774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187a559a-74ed-40c3-8bdf-22c9af3b6ff4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab18da3a-bf13-4d89-ba78-7ddd9db0f1fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23934eb4-e0c1-42ac-8454-68446e862982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac35cebb-893e-48dd-8160-15752a1177f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e20525c-5efd-45ed-a87b-6c6a9a1cd386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02848485-02f1-424f-b85d-597d8fced1e2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16bae5e8-3743-4b3a-ae35-16b070bc8a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf2d951-6461-4e90-9770-28f625f778de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3281aeaf-7702-4b2f-abcf-27db0777076e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ed71548-462f-403c-8b79-569f141bfc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d0b963-ffe3-4e06-a825-cecb6b8f8766",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790f97d3-2922-4c83-8291-2e1477b53586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "457412d9-d198-4a23-84ea-abd45dc02f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "890de5ba-fc00-4225-8619-cf905036e121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9119e5a-1e52-4503-957b-5dbec5b28064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccdbdabc-31f2-45e1-b7e4-cd0c7d6351c7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46167591-b0f7-4f0b-961f-850db3de3387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ca886c-9638-4151-ba16-c6b73cd6f64a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34542ce7-c85a-42f9-830d-297009119016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1389b02a-d291-4d7f-b0b3-1b2ca3b13d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122ef11e-c8e5-4c35-aa23-9749496e4ee7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a545f354-b3cc-4112-af07-a007900d1af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0136688-9f07-4971-857a-fee0c1054580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f03540-a5ce-49a4-b637-59ab654caa37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4d43e8-5866-4d1b-8ae4-ec7d6d34d282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c68377d-7801-4771-8d0f-9bccf71c8649",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8441bc2f-fc50-4bcc-9974-19192e0cbdae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1cfaeb8-0717-4de0-9b37-1add1095269f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bf4375-a3f2-4121-96b6-8ba703ee738a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d33deb-c251-4a25-a9b7-14fdb603afb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077a0cbb-6f27-4e58-ada4-b8b97343330b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ce1b3c-1acc-45c5-aebd-109788f0f137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47de415c-3684-4165-b16e-1d639cb87ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1380af67-5f53-4082-8fbf-82a48da33bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061b3d84-724f-4664-89b6-bd354d8b7b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612403f2-7b52-493e-8bbb-521ed34862de",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ffe3071-23a1-4487-8007-d63324584f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6dc0ff8-1d37-4a54-a011-bc361791eec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f428d675-66bc-4b83-8b33-1bb17a9f7c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96b69b6-9255-4447-8221-eb79cff0ab0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f929be-63be-40a0-8f53-f5cd184e2bbf",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8fd8be6-991f-465e-b7f5-51131436a5e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4fa01e2-37ef-4e48-8f53-69ba7d220ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f138e665-0102-45a4-a45a-6811364825bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b379bc17-d969-4853-a869-f2292958469e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c121f5bc-3c50-4aea-8691-44239bc56f0d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88883d03-bb7f-4bd8-b331-498887294ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b71d36b4-e4aa-4c68-9e44-898ed4db20d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cb3e97-80e0-4193-914e-da9473735e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5bf1bae-5509-4cba-8f11-912e2e6917cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6af722-6ca2-4490-a778-8b23a5e1ba80",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d45644-3916-4498-a1af-c025ab2b4793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe65df9-5085-4503-87aa-2672ff021c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f65b5c-6258-4e0f-943c-deaf749238e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b2ab74-ef5e-4226-9d42-031f98ea64b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e05e26-82ab-4d7e-a81f-150a1c0f9384",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c9a266-8089-47e0-a3d8-e9d759297a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e51008-624f-4178-981b-ad01068f23e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb118742-b65c-41c4-915f-d001e1817d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c58b152d-4352-4bbc-8cd8-3c54fb3b416a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9653b44c-46d3-4fa0-92bc-55b3c29e9348",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f9c43c-1f80-4d1a-9577-17f6fb576767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4d88fd-1d2e-4b0b-811d-b7de28dba45c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "902e9cc0-00ec-469b-9472-7539eddafda2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66507b46-88e0-477c-ab2e-7abc023a8ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95219af-2287-4f22-9855-1f01fe2a2647",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f1dd9f-7c29-4414-b368-31808883577b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f52f4fb-619f-4943-a463-582fc8cf608a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d36c589-7d5d-49a3-a5ba-29d7984f1b1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc6aba6-ec1c-4124-a456-f7fca82e1ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46a6e20-b9ee-455c-b495-c1634d701bbb",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516f1f26-3f19-4509-8512-622b6b9bdc2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a8df20b-5319-47b3-89fd-7b1ce2400583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01bb54bc-db58-46ac-80d7-6cf2a4fab7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3906099-8f64-4e70-9ae3-22e463fa6b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cba7e4f-0ec6-4409-a636-68e19bcb2720",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f69756-3937-44ed-9204-25e9f8623cd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e222ef2-8f7e-4aab-a4aa-63156b6b438a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0087f96f-b571-4993-9ae5-0102fabcfd06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb165fd-b058-4ba4-9176-cc8ab1c24833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0aa0e97-9634-4fee-bd43-7896ce6f099b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3b8db0-7721-45c2-b622-81957162fed9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7d89241-358c-43e9-a4f5-cf03ffb86ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27e3e88-f69d-4acd-9251-fa95f092e982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8adb609a-2a2b-4c27-a8cd-26df33e9bd7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a66ed1-f44a-4db0-b25f-fbffe73658a6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479b8df2-8f19-4136-8c07-d48ea3d40dfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e92a0cc-35b2-4842-94e1-82f43357f346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2d14d4-d881-4763-b6d9-a1e973a88942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d03feb8-0702-498e-9996-44ec6888aa78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3146bf82-5198-4ead-8cc5-a4fd92af3a27",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8a8913-c17a-41f3-8350-80a6804d8a35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44261b44-217f-4ce6-9b58-d393a8dd4c1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a36032-c6f1-4b36-8b38-49b3d11ed5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa141c4-d928-40d3-b815-ec8eb8896a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0291ace2-37cb-4d6b-8157-55683e5304d2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae63b848-c9fb-4a9c-9c5b-99064012200a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6beae6ba-f4f0-4718-8658-29b91bea55bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f7ec19-39e2-4eca-846e-a95f9514243c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a6a43a-ef0d-43ae-b740-cf4fc437f4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83657e48-acaf-45bd-9518-9eba6b0f11cb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bcd22f-2fe5-494f-b5ad-85a3cdb83407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb200da8-9e0c-4d5c-a46f-45ce9845a02c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55187e6-6e5e-481e-b7d1-13b71a95f0aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d96bb0a-0097-4836-b089-ff3de503930c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9878434-1cb1-4b42-af0a-da53062c940d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda5769c-54f3-40fa-ab12-9a3da24a9e97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08830236-18d9-4397-ad19-b8aadfa2e481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f19b77d-03db-495f-8d1b-0b04e9f56b0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc559e8-03c9-495e-a6af-68342276d524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a112fbff-2d46-403b-91bc-f9f39b0aa462",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f22498-8756-4672-be52-ac57a3887fba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b598259a-4818-4854-9933-6448682970fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7661a51e-b246-43c4-aa4f-debcc1d1f8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52a654b4-79e6-4a18-9670-676dea59c3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67773217-9e38-4148-8fa3-b2e5b0853a89",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d5d005-6634-47da-9388-e364f29b26a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36fd5629-d9fb-414d-a2a6-a4b11adf715e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "932662b7-2b7a-42b9-8084-418aff1a7afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f92f97dd-205f-45b5-b4bf-fc393bb07245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1baed97-e0a1-4e6d-a19d-25886437c8fc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72caafb2-e769-493c-8b23-a0d545d707b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59e78ecf-3e81-4191-9b8d-72e885c91bd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3834ff0-48f9-4d9b-ab69-877838a9b670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "388dc544-b0c2-420e-8c1c-c2807198fb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10ae553-eb3d-4fb3-807b-340877c1ee67",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2d8782-8aa4-42d7-b1c6-e9228323ebb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0060d85a-4254-4215-a606-3a0a82fab437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56feefcd-94ef-492b-84a4-00e059f919a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057a5894-bc24-430f-9ed1-41c42b03213f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9211cbd-e75f-43ef-9757-035c839fa7a9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d33fd9-18db-418d-8016-b28968f3eefe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96645a5a-9df0-4e90-a213-28706cde361a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74d790b-0d22-4afd-9847-c3abc93a6c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a06f61d6-30a9-4629-a557-98ae1b698d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562723b5-b7fb-4660-a540-b5e683f9cf4d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc87bd62-a791-42b7-ab34-d3f24e85db41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edd6221a-705f-439a-bc3a-d3a25bdb068e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cbf85b1-1389-4e88-9c1c-ebd16168cc74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf7c974-d6d2-43fc-94f4-450a287b99ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feebab97-7f16-4c3a-a592-a77e867842af",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbfb3e04-1719-4685-961a-0ae26193cf31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ede0a83e-381a-445b-ac91-1ffdea2792c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6ac3e7-8daf-4aef-afdc-f3c2d0689b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a084592-64a0-4f30-98c3-ad39763c1111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb3fad6-4af0-40a9-aae7-a05ec06f424e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2312830d-9212-40c5-83f8-eb7b1979ad82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd252f07-efe5-4655-9932-597b7877acd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76312599-64de-45da-bcf6-9c00dd4e92d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391dd768-c53a-41fa-b17b-36bd76655ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1816cf-e21f-4bf4-af55-bc62d9bedfee",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b0d96c-ff20-4e9a-b2cb-a59bd4246bb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9342f0fb-1a07-4eab-9088-f835ef323f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91f8204-6312-4985-b5eb-3e87fefd3b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a16b13cc-ba83-45fa-9d78-e1e280100a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c6f301-a9c4-465c-96bd-526cff64dccb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f490d1c-e813-4111-9f0b-ed25ed2ffb80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb2e3b9c-aeac-4adc-b11f-07163005a7ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "578eac6b-fc49-4b87-96da-0377debec5ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92f3ade-9d4f-4dfd-bd44-2b10d820535b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26542af7-d84d-4cae-84a8-86f210ff30d2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd37807-b2a7-419e-ab09-964a0705db46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5253b0f1-bd17-4c13-891e-6f0e7ece9289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a75d003-c848-4ffa-9284-952df8f4315e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e483b383-08aa-4963-acf6-c4c0402c0b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962da8a5-5a84-44d7-aab9-3e018af47a0b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f68f614-0c05-4d93-bc02-635e4c5df6c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2441362d-2cdc-430c-886e-5ef00430ede9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0b7e30-9fa4-4bde-adc9-6e6f4b3ae6c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f37695-1ed0-4f53-96fc-bc050bfe963a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb55ddb5-2abe-4465-8771-7ba132f313f0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2855f076-d678-43b8-9661-61294548b61e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d56b3685-a720-4f81-af2b-2e1aad656f26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fcf91d-ae3c-43fc-99a8-46f3fdab6b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a71eafc-627f-48fd-af02-54926f51ccfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4313bac5-4cc0-49a9-a646-b8aec47f7409",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f52926-0b9c-4092-9c34-0875af0639d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b355e21-e8ba-492a-8742-cf3fbb87b39b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e87ed09-8ca8-4fac-a03a-ce2913d46790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d774d3-6c68-4acb-a890-025ba87e2e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd713d4f-8cee-465e-a9c6-0e7e7cddd87b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f782dba8-a778-43d2-b26f-bbbd197b4b43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40d88685-e3ae-4174-a917-2dd489fc0e96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9e1a2c-2169-48db-9f5e-9fc375378595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "345ec214-2a2b-4b02-a996-90cd8d59a32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430a339a-d664-42a3-bc75-c74a3962d18b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa1f887-02bb-498b-9ab7-f57449ee1223",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "178614ba-cca7-4659-8614-ea9eb3cb585f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39826280-948e-43b1-a62b-7742fd2e8089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63627ecb-4df3-48df-be39-12323ed07bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56c2e05-a6a6-4cfa-8bca-2ad6fbc51e29",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53434c14-0ec9-420b-ab35-32eea9620536",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6946c4c5-545c-417f-b8aa-580267515105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "800720b9-9a81-4f35-a5fc-5181cecfd5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f48677a-f6ed-44fc-8499-67fe571b0c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b2cd18-541e-4a48-95ce-9b11b9cab266",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37df9a61-f1d8-41c1-91c2-a5b15eea5bce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "796fe6b8-1348-49a6-bb3f-9802cea86742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d024f44-4f5f-4f0a-ba9f-055feda7fc05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477621ac-42d5-4cad-8cc2-1bb6267a20ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bec7f68-85c7-49f9-979c-596fe0de9802",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6c3666-0fe2-4d07-9165-af5289cec0e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef3ce590-f25c-4aad-9982-246e92714d2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4f54fa-5433-4e0f-8f8d-f0cc6dbd838a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b160783-5d81-49cf-91ef-706f2d37c995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fee609-a5f2-4e66-a785-93ff9f4c8d8b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d041bedc-f7c5-409f-8457-f071aa3a3ddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e771a241-101d-48d6-b63d-1b634b5b550b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "400e6a1b-6c5a-49c2-9432-3e25d51ca40f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dbce7ea-5f91-4183-9201-4715ca2e33f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89794920-eede-42a9-9973-a6344e0ceb0c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a3231c-bd28-4c5d-8bfe-8a2b81845c9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a68de238-6ee6-45d3-ba5c-ef9ac000d786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bde2a7c-b8bc-4de3-b81c-59403a6f25d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8280b6fe-f89e-40ff-9d6e-f7c7a5e0b40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1706798-7738-4105-b31c-8ebc98b506d7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a67d128-0db1-465e-a6eb-25016ed8e0aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56da73dc-052f-4825-8008-8dd70add031b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8925f61-3fe0-4cdb-ab4b-4c877c3e0b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10840a67-8b4d-4427-a6f6-685bcd6e86da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7bd87a-3b01-40a6-ba0a-4437c538346a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd7d54c-c339-44be-8cf2-dc6d94340233",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e792f3c1-4a4b-4cca-8eea-3d6ab42e8ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ba7be1-04ae-4fb4-ba27-adf434140e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f16f89aa-3bde-4189-b33f-c8cbf086af5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f258b2-2e41-462b-b084-3b593a5f2f86",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801b58f8-6fcc-45c4-9235-d90103a161be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b78027c5-aa67-4b4e-b1f3-fdddc296f52a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c60b4c-5cd8-454a-a550-0fd6929fced7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9926ea6d-4c24-4fc0-a3be-f6ed4acc43a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936cef30-c9e1-499a-8e57-97702df7e566",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22374ab7-3960-4b09-8a3a-d6a722c12b3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a6e2574-54d4-4ca5-919c-9fb726b6121d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "666ef8ac-e467-4178-89a7-b7c68e696ac7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da781a0-9f7b-4068-b6dc-2bd740bea5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735f4cc5-7fef-4619-b98b-6327389ebc07",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c992f6a-81fe-4599-8bc6-97454efb5654",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54b5b96f-20bb-4cb2-aace-bd8a38b60393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "577390f7-214e-4928-8305-5e9f51f05a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e820ca83-0208-4f06-a034-6696a99df27f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92c83349-4339-4761-98a7-0318e8f0d183",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "525b201a-446a-4165-a756-5105b908f8e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d1b1898-4fab-4803-81fc-b5e06dcaee7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cfc3a0b8-8d3c-4bcb-a0e1-23ec75a09b4e"
                    }
                  }
                ]
              },
              {
                "id": "0c921130-4b18-4c68-bc1c-dbc039394e60",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "68bf349a-8645-4252-866a-f7a0ae86003b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5aedde-ae48-4491-a411-ce6ff02ff310",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e7044d43-3859-4e86-942a-f5328787a62f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5532677-e724-49a2-9081-1c33fcbbe42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "158234a2-6163-47c2-a07f-0baca4473978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48937420-d3e6-43dc-9ac8-0ad8efabe46d",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4428740-bf07-4663-89bb-27d8687af4c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "492d1c49-7fea-44cb-bd64-4b70ed07f20f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3466cc2b-cf42-4407-bc14-688e4e427127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d21318f-0261-4410-9048-7a9cdfa86c43"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a42f766d-96c6-404b-b5b0-2240b7deb555",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c595cd6-98b7-4ea7-b19b-3b8fb1094978"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "66448568-bbc7-40c6-bea1-d6e9cf5da298",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d81ce10-7ea6-4c62-a950-48f5cf7ccea4"
                    }
                  }
                ]
              },
              {
                "id": "22bb5f76-a96d-4f4c-aef0-b100a2c2d522",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bfc74c7d-d242-4566-ab8d-a7bf9197839b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb68da11-107c-4f44-a8c1-24bc5a19819e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e5066b26-b291-471a-92fe-29235d6e5f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4c9618-e967-4d3e-9d8a-f08ecf9651ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72297113-9e95-4fa6-b595-8a7ff31d26c4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "82efb799-0e7f-4bda-b0e7-e128f28ac8a1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1a0cc02b-ea11-4195-957d-eacc754a4ee8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11603b7b-024f-421d-a2cf-777280c7ae83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6b3749e2-94fd-4224-aee2-e0161695828d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7df57253-0323-4f58-8bc9-6cddcf2cd18d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62bbf4db-aad2-4559-a5ff-add652685fe8"
                    }
                  }
                ]
              },
              {
                "id": "2fa75cb2-9745-4c92-885b-fcb70a60dbb9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2334a0cd-ec50-4b98-8588-f3212a7eeaef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e4ab9db6-9268-41ff-9d53-4cf780255c30"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af123955-29f8-48b4-befe-9fea503e71f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b9b83d4-f631-4283-bd46-36491d80e4ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b710b82-8497-4ca2-ae57-e3c4a593c9de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7fab15f5-1943-4aa6-96cd-3d42dd6cb0f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cafaab33-4646-4fac-bae9-8f6ee03ae86e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e50e5006-b804-4e6d-b474-7861b8c4ea07"
            }
          }
        ]
      },
      {
        "id": "7708dbb8-2980-42fb-8fcd-d747a210c0fa",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "577fc2af-310f-4189-9f0b-5750a80391e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "39237faf-c79f-4363-a7ed-2415c7fbb742",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "95869ddb-6941-4840-854e-0941ce34c221",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d00fba1-cc4b-4132-9088-ec0f2b439dce",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3fce7efd-52f7-4ede-9b17-dabcdbf9d0eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "990cf11f-97c2-4bf1-882c-2d07a8785a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d045102-3df7-4074-bcde-7b6626707fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa6e244-310d-4712-9361-8a94750b94c9",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811fcb7e-9da4-4ed1-9cce-1dd672a0ac6f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cb16a743-964b-40c6-8701-98d38763ae31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80707f34-e7a7-4fe3-8756-9895d3b3d19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "390b9f51-8fef-4f41-be92-78f0c77a0cc5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "369db38c-b55a-41d5-b278-cc6a0219cb02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfd046ab-128e-46be-8b8f-47340131eac0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ceb9848a-f8dd-4d93-9ae5-548f67567b25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4ebc901-185c-45b9-a415-3c77f0824405"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f7e18b2-29bd-43e6-9914-66e883957bfb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "60c7be9d-993a-401e-b334-f4a90b38597f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7db7102-3f8c-4592-a55a-7c75fcd17c96",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "207fb18f-fb93-4440-946a-f42babd04338"
            }
          }
        ]
      },
      {
        "id": "d32e015a-4ea3-4291-b98b-727656eb16fd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5596459c-edf0-4aa3-99d2-e1af24e0ad50",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9651043b-c33a-4d18-934a-66b66de04a34",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4b91ab68-0556-48d1-bcdc-f64fd57fc60c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d308e501-e106-4dcc-a47e-1ba7666c2b89",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "226f8812-c10f-4598-83fc-1bb415a2ef2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a465f3dc-0c50-4cc6-8c48-2f1f6df9c692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d0e14b9-7da3-406d-9298-3ae921df5e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5007d87-aef8-4dc2-a1c5-ad3777b5685a",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ec22eb-c9b9-42db-b428-2e325f0b0c38",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f235cf69-6f10-485a-a53b-693461e3d4e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e6d586-4cc9-4f5c-96c3-e8ac15d9ac6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f31566f-b02f-4c3d-8b5c-e8363c52d942"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7804f19b-86ea-4b6c-9429-0f0a822f75de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f071bdb0-db02-42ab-b607-4a2a2cfacbf4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00b2e916-f04f-41f7-80a2-baabba296c2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "788a1a48-a19f-4b3d-87a0-070b66145ab2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3484df4-de2b-40af-ad5c-108acdb631ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "47601eff-f829-478b-a76f-4b8d1e90b9b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8472d0cd-eaee-489d-8616-08baba97cb27",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ac7a3fd-1c96-4282-a9b1-c8bfa0e8612b"
            }
          }
        ]
      },
      {
        "id": "b9f5f3d9-15ae-442f-aede-efcad5433fd3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "86261f99-5e91-43ae-b278-ccf197c6f37d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ea5d165-0a56-46e6-a116-f6874a5a475f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a69731a-47c4-45ca-a36e-d90a69d40a23",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40cb8f9-bdfe-40d3-a154-bf24fbb30428",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5ce7ed93-38bd-45a2-97f6-bc49b9a3eca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c68ec3-5cab-48c2-b6c5-96d4b25e9532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5203aaf2-d151-4cce-b6d3-8ed62bb17958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3915e173-db77-4caf-8666-01d37f53e421",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e044703-ca58-4d2d-82a9-72e8c928f6a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "85cc7ad0-022f-4169-bbd8-b27d722f181f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7fcfaf-54b6-4a0e-a0dc-eb2af14a303e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "996b427e-3a40-4099-9bc2-a812da4a758a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57ee18ac-2570-42ef-a95c-3860282fe2cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75d24466-e7a1-4fd5-b492-7509b0123e38"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b6a5fc3-e3a9-42e4-862e-788594c24e61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79684958-f142-4f9c-81f0-b5fd4c40d971"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24743e59-9d67-4dd6-a5fc-f8b186beb9c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "01d2ebaf-508d-42c4-a888-7443672a14b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6dd1926-6592-42f9-995d-9d0ac6af78dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b8698e6-f216-4f3d-8c3b-cd32a5dd21fa"
            }
          }
        ]
      },
      {
        "id": "0abc5210-34b9-4fb3-8d04-18d772df154e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a0a7e49-9261-4121-819a-326f8583e2dc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45571790-e07a-4562-a873-ef1be597b914",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "689b2133-5faf-4877-8e45-d86391c47607",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1bbb72e-9d9e-45a6-bd57-68e11a6ef7e4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26ebc541-7e28-455c-8dfa-d17767690d17",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 23
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 590.7786259541983,
      "responseMin": 17,
      "responseMax": 6025,
      "responseSd": 695.7363641481675,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1672619882888,
      "completed": 1672620048318
    },
    "executions": [
      {
        "id": "173f3449-d622-4abb-8624-460cedb05f7d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6c5e1608-20d1-4401-9e11-22f9244c9847",
          "httpRequestId": "6f42e61a-79cb-45c9-9bb2-8cdf782fe26b"
        },
        "item": {
          "id": "173f3449-d622-4abb-8624-460cedb05f7d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a5ed6cfa-59d6-4657-ad91-a9e841da10a7",
          "status": "OK",
          "code": 200,
          "responseTime": 149,
          "responseSize": 0
        }
      },
      {
        "id": "7b742ecd-207e-4c8a-b75c-dc3986fe86b4",
        "cursor": {
          "ref": "d8fc3963-ec06-4ed2-916e-1a46c4919f98",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0072dead-0350-4749-bf22-fb63ca36662b"
        },
        "item": {
          "id": "7b742ecd-207e-4c8a-b75c-dc3986fe86b4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "723785ad-c8d6-4269-91f5-9d7592f55b79",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 0
        }
      },
      {
        "id": "ae3dac93-436f-4647-a499-13a7557e17f7",
        "cursor": {
          "ref": "3b18c399-6001-408c-9da0-1c8aea220ac0",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "35cab170-ca07-42c0-8a92-71cf0081028c"
        },
        "item": {
          "id": "ae3dac93-436f-4647-a499-13a7557e17f7",
          "name": "did_json"
        },
        "response": {
          "id": "1f0e58a5-3124-4dfa-a7d8-3e0f72384982",
          "status": "OK",
          "code": 200,
          "responseTime": 852,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd86af2e-4d62-4cb7-9574-b5399b2fde34",
        "cursor": {
          "ref": "034d3871-bc87-4d16-838a-4afdf076715a",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eea6ec4e-dae0-4268-928e-6c1f73bece01"
        },
        "item": {
          "id": "fd86af2e-4d62-4cb7-9574-b5399b2fde34",
          "name": "did:invalid"
        },
        "response": {
          "id": "6a93d8d9-e940-418b-9c44-e8e98d2d382e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd86af2e-4d62-4cb7-9574-b5399b2fde34",
        "cursor": {
          "ref": "034d3871-bc87-4d16-838a-4afdf076715a",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eea6ec4e-dae0-4268-928e-6c1f73bece01"
        },
        "item": {
          "id": "fd86af2e-4d62-4cb7-9574-b5399b2fde34",
          "name": "did:invalid"
        },
        "response": {
          "id": "6a93d8d9-e940-418b-9c44-e8e98d2d382e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b312a0c4-7a06-41b0-8513-1d3313a8d54c",
        "cursor": {
          "ref": "96c353a7-a98a-446a-801d-e3fb69b9ae36",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c03788f3-d5b0-464e-9337-8581777b2402"
        },
        "item": {
          "id": "b312a0c4-7a06-41b0-8513-1d3313a8d54c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "74bacfa6-5459-4f44-a4b1-7e67b459b2b8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 672,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8afb420-1572-4c1d-ade0-91c1fcfe1960",
        "cursor": {
          "ref": "31291968-ac15-4af3-9c7a-6ce2799a019e",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "614c1328-bca5-4bee-8fff-17b80fe5588e"
        },
        "item": {
          "id": "f8afb420-1572-4c1d-ade0-91c1fcfe1960",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "86262b08-c539-4e09-a8ec-93d4f5ea4ad3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 916,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1228e05c-e969-4b2a-8144-f0d9172c121a",
        "cursor": {
          "ref": "43d174d5-7127-4fdf-a342-3777b801cc1e",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7ebc17cc-d317-447e-9b63-6573d54a805c"
        },
        "item": {
          "id": "1228e05c-e969-4b2a-8144-f0d9172c121a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4c8b047b-5f71-42c8-9364-7b49016c6de1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633517cd-7b15-4f32-a995-c355c6b31f76",
        "cursor": {
          "ref": "bc30c146-7d99-497b-9061-459d9cda7e90",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3d41a715-0171-484b-ad09-d742d075f89b"
        },
        "item": {
          "id": "633517cd-7b15-4f32-a995-c355c6b31f76",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "302bc24f-2798-468c-8d56-3102e8ff8e1d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 945,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633517cd-7b15-4f32-a995-c355c6b31f76",
        "cursor": {
          "ref": "bc30c146-7d99-497b-9061-459d9cda7e90",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3d41a715-0171-484b-ad09-d742d075f89b"
        },
        "item": {
          "id": "633517cd-7b15-4f32-a995-c355c6b31f76",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "302bc24f-2798-468c-8d56-3102e8ff8e1d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 945,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d2a249-f3c1-4610-bba6-94554c11100b",
        "cursor": {
          "ref": "8d8103fa-53f9-4b0c-886a-eba924fdab7c",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a0b2dbcc-9015-4846-b367-f5b1cb81312f"
        },
        "item": {
          "id": "f5d2a249-f3c1-4610-bba6-94554c11100b",
          "name": "identifiers"
        },
        "response": {
          "id": "87014b55-69a0-4d0d-8b41-b5aa8cda513e",
          "status": "OK",
          "code": 200,
          "responseTime": 1171,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39afb30-c8a4-4e7e-8d15-fb5437b1b1dd",
        "cursor": {
          "ref": "1da9c882-bce4-41a0-a19b-cf7d033d97aa",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "000afdbb-375b-4a8f-ad83-b9f0ee04d7ea"
        },
        "item": {
          "id": "c39afb30-c8a4-4e7e-8d15-fb5437b1b1dd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9503e849-eb0f-4797-9f0b-b7e810d7c297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39afb30-c8a4-4e7e-8d15-fb5437b1b1dd",
        "cursor": {
          "ref": "1da9c882-bce4-41a0-a19b-cf7d033d97aa",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "000afdbb-375b-4a8f-ad83-b9f0ee04d7ea"
        },
        "item": {
          "id": "c39afb30-c8a4-4e7e-8d15-fb5437b1b1dd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9503e849-eb0f-4797-9f0b-b7e810d7c297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755038e3-376f-4ece-a9db-adecb4817181",
        "cursor": {
          "ref": "6161c7a8-7cc6-4956-b452-d2117b88c508",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "29620612-294c-4ed1-a4fb-1b121d2b0f4a"
        },
        "item": {
          "id": "755038e3-376f-4ece-a9db-adecb4817181",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f844a59b-8bae-4b25-b0cc-f3a1a1b8ae6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5454e19-7057-49e5-91f2-d1ff459a6dad",
        "cursor": {
          "ref": "3c81eddb-c97d-447a-a39c-97a35c675e54",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ebdacae2-9a4c-4bb0-a198-8f5841a25da7"
        },
        "item": {
          "id": "b5454e19-7057-49e5-91f2-d1ff459a6dad",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "e7066d86-50af-4710-a48c-d74161431736",
          "status": "Created",
          "code": 201,
          "responseTime": 2428,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "c7b3a227-a4c1-417d-a42d-6330897b2c04",
        "cursor": {
          "ref": "1f7d506b-af53-4c8e-ab10-db2ab649622b",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e6852dbe-701b-4a1e-9a8f-747c65248875"
        },
        "item": {
          "id": "c7b3a227-a4c1-417d-a42d-6330897b2c04",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "126471ff-3546-4684-86af-e4f5a38ca6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2fa7aa-3272-4088-8210-225ce988d8c2",
        "cursor": {
          "ref": "a917a82c-505c-4037-91d6-eee6c2378361",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bd20854b-1139-4d03-bddd-cd70f9542184"
        },
        "item": {
          "id": "aa2fa7aa-3272-4088-8210-225ce988d8c2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "79f635be-25c2-4640-becb-846b48bc562a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e543114d-58ae-4a68-b419-557e8db2a11f",
        "cursor": {
          "ref": "b91e873c-dae1-4659-84d3-d5231135597f",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fc0ceb48-4aac-40af-8cb0-faa1766a1579"
        },
        "item": {
          "id": "e543114d-58ae-4a68-b419-557e8db2a11f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "89869e98-4102-4718-a439-ebf84a55b5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d223bad2-5382-4cbb-a343-2d93a264c817",
        "cursor": {
          "ref": "fa038e1a-7f10-48be-aae3-f3e337ba36cd",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "38ace8df-5081-4fe0-975a-fa333cc0ee0d"
        },
        "item": {
          "id": "d223bad2-5382-4cbb-a343-2d93a264c817",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "88c5713a-05cc-4b95-84fa-5834813a7c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e11351-3d5c-42c8-a166-9f4a53262e7e",
        "cursor": {
          "ref": "60483361-9adc-4fe4-abdf-2f56341c605a",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "35c57694-d0f8-4fe7-a755-ead75c7176d9"
        },
        "item": {
          "id": "43e11351-3d5c-42c8-a166-9f4a53262e7e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0186ae42-a3ab-47f1-a071-cf3517650f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c063f9-421b-4d83-b53e-8ccd01d459e0",
        "cursor": {
          "ref": "a545db7a-a67d-42c0-939a-073f1f7782ec",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6f14edd0-a291-4e21-979b-9bd818949e20"
        },
        "item": {
          "id": "08c063f9-421b-4d83-b53e-8ccd01d459e0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b83bb28d-e51e-4921-a3d3-ddd38909fbc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7ec2d1-2451-4702-ae18-137cefd57b09",
        "cursor": {
          "ref": "2b3b592e-5459-4c8c-b7cf-f4c4cb62c9fb",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f6989152-45ee-4ae7-ad51-17d1c2e81448"
        },
        "item": {
          "id": "ef7ec2d1-2451-4702-ae18-137cefd57b09",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b8da3e2f-977a-46cf-98a9-92b59676ee87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87384b9-a486-4476-a55c-c0914ee12d8c",
        "cursor": {
          "ref": "58e6c1f3-4be3-40dd-95d3-03eae95aed5f",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "43530276-b066-45ac-875d-aaaef87b33a1"
        },
        "item": {
          "id": "a87384b9-a486-4476-a55c-c0914ee12d8c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c90e05dd-fa88-48f7-98e9-ea64b5e441a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d060b78b-c354-4dfb-853c-73e9884c577d",
        "cursor": {
          "ref": "dfc2b32c-5a17-480d-bd07-077385fbdd72",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6b92c1bd-4dd1-4c7b-b599-bd396790503b"
        },
        "item": {
          "id": "d060b78b-c354-4dfb-853c-73e9884c577d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c3ed0e35-6733-49c0-9b6f-5bc01bad6bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4359cbd-8d4b-49ea-9eb7-02d0a4d829ab",
        "cursor": {
          "ref": "bad33c10-9395-4dfc-bce4-05ea6f267df6",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e9dda5af-1cff-4eda-a564-66ea3846a242"
        },
        "item": {
          "id": "e4359cbd-8d4b-49ea-9eb7-02d0a4d829ab",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ea386135-591a-4a65-baca-d586afdfb32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3368666c-2b2a-4bda-ad93-efabcb7e1c1e",
        "cursor": {
          "ref": "143cb9ce-7ebf-4824-86a0-cb14fcf32db8",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f1f06b9c-7e1d-496c-9ee3-5a0bf3660205"
        },
        "item": {
          "id": "3368666c-2b2a-4bda-ad93-efabcb7e1c1e",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "13e8f6f2-b435-48db-a7f3-331b2e3091a0",
          "status": "Created",
          "code": 201,
          "responseTime": 4266,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "e0492a0d-0cba-4933-828b-623c77ca7e2c",
        "cursor": {
          "ref": "caed4989-2813-4b14-b6ae-c1de6081faab",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d64ff1d5-0c1c-4b1c-8d4d-027e4a1e5367"
        },
        "item": {
          "id": "e0492a0d-0cba-4933-828b-623c77ca7e2c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c78f72d8-a9f6-41aa-9fc1-e29a70c1e632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bde5604-9935-4829-9576-25dabf694908",
        "cursor": {
          "ref": "a4e8108a-7412-4e22-b001-30beb3ac9528",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ed5f1603-63be-4690-ae1a-6e923d279da8"
        },
        "item": {
          "id": "3bde5604-9935-4829-9576-25dabf694908",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e64e322e-2379-49c0-b598-c48220f7666a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4f2a07-6b9a-4554-a370-a1d9f23051bf",
        "cursor": {
          "ref": "afc5c75f-5a40-4585-a857-49e57415078f",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "92dce589-8e36-4047-a922-d886e927c626"
        },
        "item": {
          "id": "7a4f2a07-6b9a-4554-a370-a1d9f23051bf",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0717acb7-ff80-4315-b197-fb28c19dd100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33dab664-6f74-49c9-90c7-51c9b3cf235e",
        "cursor": {
          "ref": "a00da0f0-1fc5-45a8-bd85-c138e452d113",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fcb73d6c-02a6-4559-9dec-5d35b003d016"
        },
        "item": {
          "id": "33dab664-6f74-49c9-90c7-51c9b3cf235e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8b9b261f-da15-4446-94f9-9fade8f3e132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2470d73c-2bd8-40be-8fa0-528e9486aab8",
        "cursor": {
          "ref": "0236f61f-9b2b-40b8-97da-8a5614ee43a1",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "06bab99c-0721-4f7a-bed0-e7c43b1dc3e2"
        },
        "item": {
          "id": "2470d73c-2bd8-40be-8fa0-528e9486aab8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "dd45f3a2-b2e1-4283-9f74-a360ccfbc777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08a8212-e4f5-448b-b7f5-00d3452af7ed",
        "cursor": {
          "ref": "c13c0cfc-35cf-47db-91d5-103fdd1839e8",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7f0da163-9abb-4587-8a22-6743debcb072"
        },
        "item": {
          "id": "e08a8212-e4f5-448b-b7f5-00d3452af7ed",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5e67ca3b-17b6-4cbb-8050-c7a43ea75e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debeaf1b-fd0f-4e93-8bef-36c6f351eddf",
        "cursor": {
          "ref": "73e6b31f-b0b7-42ed-b515-3b671d7d4d4d",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3450f2ef-d166-4638-b593-5d92865f82af"
        },
        "item": {
          "id": "debeaf1b-fd0f-4e93-8bef-36c6f351eddf",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "651b909d-0935-4e6f-839f-d91e8e10bac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c970882-2d1a-4820-94ca-43260ac267f7",
        "cursor": {
          "ref": "33e1e1fc-4f47-43a7-8c19-b17240c4bb67",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "55937efe-ae5f-47cb-bbf3-a2e567468aeb"
        },
        "item": {
          "id": "1c970882-2d1a-4820-94ca-43260ac267f7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "dd3a168a-7c50-4e27-afaf-2979e4c1ddc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5f9cf1-ba58-4fd1-bb94-f369d0cff273",
        "cursor": {
          "ref": "aa413106-f5fa-4de8-91e2-ba43fffa8914",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5bebb343-fd7a-4967-9cc0-815459326d2d"
        },
        "item": {
          "id": "fb5f9cf1-ba58-4fd1-bb94-f369d0cff273",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0f6f3e9c-3651-4c77-92f3-47a629f08eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434fb012-35cb-4ed0-a636-52032033e120",
        "cursor": {
          "ref": "59cd65d0-49eb-4455-a216-6e4400582a5c",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "06054e1e-d756-488b-9554-44935accf532"
        },
        "item": {
          "id": "434fb012-35cb-4ed0-a636-52032033e120",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "775e3d76-e531-4804-9087-27865123b08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91b05bc-8255-4154-b6e2-819574dbe76b",
        "cursor": {
          "ref": "03bf10b9-042c-4166-aab7-90eaaf36302d",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "eb2722bc-bbf7-4e90-abfd-0d0b55af336e"
        },
        "item": {
          "id": "c91b05bc-8255-4154-b6e2-819574dbe76b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "01b8f965-f798-4dac-8ee8-97bf4dc9f935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3a33ca-161b-490e-a94d-c542f2452a17",
        "cursor": {
          "ref": "cfd9a422-741b-4f83-ae3b-62069f989ec5",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "37312637-3b40-44dd-a111-aeb456c8831f"
        },
        "item": {
          "id": "1d3a33ca-161b-490e-a94d-c542f2452a17",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7ae6b585-2f1d-495a-8538-7fe72e72511b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8068d1-bba7-4bb9-998a-01c142485dcf",
        "cursor": {
          "ref": "3de3a687-191e-49ce-88e2-fdff800563c1",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "68b8f50c-daa0-479c-88a6-0f35f7f9bb56"
        },
        "item": {
          "id": "5f8068d1-bba7-4bb9-998a-01c142485dcf",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c5e3a732-ee8c-453a-be05-1cb430dc3f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294b39c1-f9ad-4f84-863e-c1c97cc0c116",
        "cursor": {
          "ref": "74600afe-0e59-459f-9f70-614ba09792c1",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "80c31fcd-9bb5-424d-b3ff-073eb71cd764"
        },
        "item": {
          "id": "294b39c1-f9ad-4f84-863e-c1c97cc0c116",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "479678ec-4c3c-47e5-9683-23bf95a804e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a8f181-0370-4c73-bf7c-e67ad0442706",
        "cursor": {
          "ref": "dc80f4f1-65a0-4109-8d19-7a221c9d7e66",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "27be88e7-09c1-4dcc-9adb-6ebcc6596a84"
        },
        "item": {
          "id": "c2a8f181-0370-4c73-bf7c-e67ad0442706",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "74a9e4be-84c7-4fe3-9463-0a750db063ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b35b55a-7627-4530-b935-9591a7adb458",
        "cursor": {
          "ref": "bed2b47e-4598-471f-9bf5-a80b00e6a570",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ca73a074-0821-4340-832b-f93b5b6e6f8a"
        },
        "item": {
          "id": "7b35b55a-7627-4530-b935-9591a7adb458",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0b8b15bf-1ed1-4ebd-8ef3-54908fbc3505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e31ea8-befb-47df-a57d-0ce1cb97cf4f",
        "cursor": {
          "ref": "796e84fa-80bb-4895-a79f-69740138336f",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "447a1f64-da63-4972-94fa-9c04d34d993c"
        },
        "item": {
          "id": "41e31ea8-befb-47df-a57d-0ce1cb97cf4f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "45c304a8-250e-4ee0-91fc-a0f1afbef004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb587b95-9660-4e98-a6a7-23409401f277",
        "cursor": {
          "ref": "58d9326f-3b0f-4fd8-8470-a3af5ec37c8e",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f838d986-6c63-4f95-a1aa-0ca3b455f149"
        },
        "item": {
          "id": "eb587b95-9660-4e98-a6a7-23409401f277",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "643c1301-4c30-4af9-ba15-e10a083869c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9ad5cf-b242-4bc4-8d11-aec58d087f1d",
        "cursor": {
          "ref": "e074a4ad-a54f-491c-9d30-2020ac842e80",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "24d1d9cf-0528-4b88-8795-8968ba86fc52"
        },
        "item": {
          "id": "ea9ad5cf-b242-4bc4-8d11-aec58d087f1d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3ad46b10-8891-42a3-9448-1d76e7fec3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5560587f-5c64-47dd-9796-ecc1a9089088",
        "cursor": {
          "ref": "3defeaee-21d9-4298-91a6-6a7850344074",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b8bbfe70-4b97-41c4-9d32-0084066cac09"
        },
        "item": {
          "id": "5560587f-5c64-47dd-9796-ecc1a9089088",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2003a568-be65-4c30-a215-a02fa5eeac80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7633baa8-4571-4412-872c-e92d58ac890e",
        "cursor": {
          "ref": "7095457e-2039-4a7e-a830-ed836cf8a965",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8bad88b9-e5ef-414a-b5d6-83b27b360592"
        },
        "item": {
          "id": "7633baa8-4571-4412-872c-e92d58ac890e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "af0681aa-9903-42d8-8150-7df4b760fe6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd69e86-bc56-4cb8-9284-c0e2f3882c49",
        "cursor": {
          "ref": "9cc59a2a-37ac-40f2-86ab-42f4f3c486b2",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1ac25273-ffc1-4f2b-ab2c-58cc6dc12bfa"
        },
        "item": {
          "id": "8cd69e86-bc56-4cb8-9284-c0e2f3882c49",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c5969498-9995-4e3a-b3a8-101cf2c24df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12513fec-4bb6-4c57-9be2-f4d40d3baa7c",
        "cursor": {
          "ref": "fca510c5-d681-4232-bdfd-4c03952e22c4",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5ead4ea0-ca07-4c7f-9938-b398daa97dc0"
        },
        "item": {
          "id": "12513fec-4bb6-4c57-9be2-f4d40d3baa7c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d0aa9176-074c-4f1b-876f-2659ba2452d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425b19cd-1175-46fe-a006-a503d043de8a",
        "cursor": {
          "ref": "cc62184b-3870-4a69-aaf6-a9d63fc7d2c6",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e6373d68-042d-4f7b-8bdd-3479e9bf34a8"
        },
        "item": {
          "id": "425b19cd-1175-46fe-a006-a503d043de8a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7984fa33-4320-4545-856d-e7d15b3de55f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 579,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d78f7fe-2da3-45e4-b2bc-1231fb44f594",
        "cursor": {
          "ref": "cdb6159a-42ae-4da5-83aa-83d278a444dd",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b19394ea-d08c-43ca-8605-a308b9fde68c"
        },
        "item": {
          "id": "1d78f7fe-2da3-45e4-b2bc-1231fb44f594",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "88cbd290-5405-4ce4-9151-dfb1166e47bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b385932-9e67-4277-846e-689fd53318ce",
        "cursor": {
          "ref": "51371a95-535f-4c5b-b66e-01765b061412",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4f1651f9-bd07-4131-9109-e241dc7ec121"
        },
        "item": {
          "id": "8b385932-9e67-4277-846e-689fd53318ce",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "325794fc-f576-4630-8b92-13958121be72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95510025-4f41-4b76-bc78-2a4fc7dcf8e2",
        "cursor": {
          "ref": "c7737126-e93d-47a9-be67-32fd858813a0",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7ab20f0c-a021-438b-87c3-782cdc31ea9a"
        },
        "item": {
          "id": "95510025-4f41-4b76-bc78-2a4fc7dcf8e2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d1572fcc-6690-4e70-9a76-6fdc55b3abe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a50a83-8488-4538-931a-26bae01b6c10",
        "cursor": {
          "ref": "d42e5490-24d1-4321-a042-c3c0d15edbf9",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9ff31b7a-5bb4-40b1-828d-6c82f399475b"
        },
        "item": {
          "id": "a9a50a83-8488-4538-931a-26bae01b6c10",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "aa4dd4bd-0db1-4722-abe1-c46c26335287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee531b9f-3466-4391-885d-f8de0c4443fd",
        "cursor": {
          "ref": "7cf1612e-1c56-4d83-8400-7336be0da437",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "80d11ae0-6139-48f3-8e4e-4dd9fdda2a99"
        },
        "item": {
          "id": "ee531b9f-3466-4391-885d-f8de0c4443fd",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "64c4707e-7069-4dd4-8a13-4ddd5aac23b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed43889c-379c-4f14-b6f0-f01f70543cbc",
        "cursor": {
          "ref": "be2d9295-f587-4a59-9e47-1b67562a9505",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e392fdb0-7c10-418d-bab0-747f2affdbb5"
        },
        "item": {
          "id": "ed43889c-379c-4f14-b6f0-f01f70543cbc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "eb80e7dc-8c0c-4862-8894-86c5491d0cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e4554b-d496-4dc2-9708-132d6bdf2e1b",
        "cursor": {
          "ref": "c02dd04a-0848-4192-a328-a1c60f3bb40b",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "95ec97fb-126f-418a-8819-eb39ab2c330e"
        },
        "item": {
          "id": "72e4554b-d496-4dc2-9708-132d6bdf2e1b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e19dc618-b702-4af5-9ca6-cea327006b5c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 599,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae7621c-6816-47ce-8569-48da7eae8306",
        "cursor": {
          "ref": "256a2ce5-1515-4af5-a4b3-a41ca1cd9d4c",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "53dac7e0-9ed5-4963-bece-306c0015e8e3"
        },
        "item": {
          "id": "3ae7621c-6816-47ce-8569-48da7eae8306",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "af8238e7-1878-4f5e-85df-d0d6e969812a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c1ef53-91fe-476d-a570-faa788ea6427",
        "cursor": {
          "ref": "b135a7c2-67c5-4b57-8a8c-173bb84521cb",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9de8fc93-8223-4556-97a7-25086c93ed79"
        },
        "item": {
          "id": "74c1ef53-91fe-476d-a570-faa788ea6427",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "98026f26-ed1a-42a3-adec-74a710dab6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720e1ad1-b86b-427b-8c82-db386290bd96",
        "cursor": {
          "ref": "c8fdef72-bd4b-40db-892e-8554bf113924",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f632a048-83c0-41b6-b6ed-2a7906507f32"
        },
        "item": {
          "id": "720e1ad1-b86b-427b-8c82-db386290bd96",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b03e7c88-7020-4e9d-8d9b-06bdb35339fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5eebff7-635b-4965-8e9f-7dc6dfe58fa6",
        "cursor": {
          "ref": "19ec3610-6d3f-4878-96d4-dcd6be75575f",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ea66039e-e514-40db-9e87-21645b49b072"
        },
        "item": {
          "id": "b5eebff7-635b-4965-8e9f-7dc6dfe58fa6",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4c416ace-677d-4cc7-8ad0-c1275e52aada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14fa824-2c60-4b83-a9b3-3ae0398bebc4",
        "cursor": {
          "ref": "2911f07a-135b-45f1-803e-3cebf3ebfff2",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6165e262-fc57-4d9f-b3e2-d484e678919f"
        },
        "item": {
          "id": "c14fa824-2c60-4b83-a9b3-3ae0398bebc4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8111ecb1-43aa-4e01-a8a9-4ce9e0124776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afad0508-fa15-4c2a-8dc0-fa8e6c518333",
        "cursor": {
          "ref": "92be2300-8d81-41a6-9389-5d8ef0b01c5c",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "27aa1766-2a9f-4114-a9c6-b487bc1e1c8a"
        },
        "item": {
          "id": "afad0508-fa15-4c2a-8dc0-fa8e6c518333",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2cb2c546-f1e5-4cf7-93a0-ba2e576f972c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6362deb5-cfda-42a7-bde0-d49ab7355d7c",
        "cursor": {
          "ref": "190ca658-d160-4dc4-a812-160840c0bbf7",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6f069579-6867-4f64-ade3-eb53e5232f28"
        },
        "item": {
          "id": "6362deb5-cfda-42a7-bde0-d49ab7355d7c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "48e61181-adfa-4c39-934d-4393ffb651a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cceb8b6c-414d-48f9-a5ed-5b5468bbf2aa",
        "cursor": {
          "ref": "bc2ab975-afd7-402b-b752-ee54725ff435",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d82a7f82-0099-41dd-b1bf-fd55d1eae4d3"
        },
        "item": {
          "id": "cceb8b6c-414d-48f9-a5ed-5b5468bbf2aa",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "df45478a-edb0-44ba-8dd9-19fb368f711e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f3a373-091a-4077-a1c6-aeddc4ac86f9",
        "cursor": {
          "ref": "e3356283-95ae-4ec4-858b-bb17bb59b243",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "184b273b-c9d5-4e4d-85f4-7d5798a16066"
        },
        "item": {
          "id": "16f3a373-091a-4077-a1c6-aeddc4ac86f9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "cad5b93f-5a7a-43e7-9fa5-00b02b08c940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a292505-5f61-481f-82f9-0f68f257927f",
        "cursor": {
          "ref": "b723f547-9c55-4906-8267-fb3a98117583",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "22641d7f-f095-4b7e-a8bd-9a5a0e62142a"
        },
        "item": {
          "id": "4a292505-5f61-481f-82f9-0f68f257927f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6b134d98-cf34-48ed-a89b-c69419aa7d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95096ff-71e5-4b7f-be9a-f74da0e63cbd",
        "cursor": {
          "ref": "90081146-533b-4045-937a-fdd524cba2a3",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "60e553da-ed9f-4a0b-9092-8d02f403cb8f"
        },
        "item": {
          "id": "c95096ff-71e5-4b7f-be9a-f74da0e63cbd",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "89c295a9-5e20-462b-b2b5-89a61d8be996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6c47fc-35c5-4ff3-b7d7-07d273857eb2",
        "cursor": {
          "ref": "0db0338c-f51d-4fea-9704-261953377ec6",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6c294787-5013-4f87-be16-1d6d20f92c5e"
        },
        "item": {
          "id": "7b6c47fc-35c5-4ff3-b7d7-07d273857eb2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0207d39e-a3c9-4eb7-933d-5ccad398a3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d927478a-be50-4f91-a25f-f83090943b48",
        "cursor": {
          "ref": "a28f6507-359f-40d3-b50d-33d7cb391c6e",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8d0b2fc4-7256-433c-865b-2b81a5f00f6a"
        },
        "item": {
          "id": "d927478a-be50-4f91-a25f-f83090943b48",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4e2edb19-0515-4501-8421-1a26cfbc81d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2296cf37-1827-4c05-883d-06c714ff5c42",
        "cursor": {
          "ref": "fe37f96c-7028-4159-be7e-7bd06ebd1138",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9221de67-c479-46f5-9d25-8bc74d8c1750"
        },
        "item": {
          "id": "2296cf37-1827-4c05-883d-06c714ff5c42",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b59cca41-4402-44de-be17-a3dc6823808b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c40864-c58c-4923-b79e-8ef9e3c303f8",
        "cursor": {
          "ref": "5a5a5dcb-75d0-4657-8db1-42a76223e0d5",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "01385094-3ef8-4046-9d51-4685a3371395"
        },
        "item": {
          "id": "65c40864-c58c-4923-b79e-8ef9e3c303f8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4e73800a-b47a-40c7-b8bf-b1b2a66951e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e102b4d-fbe1-4e5c-af07-e2f5a7ce3dfb",
        "cursor": {
          "ref": "d663efa4-5650-4b07-ac75-d3a3cb9c7ec3",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e5bab38a-6094-40b5-af6f-660f3310f59e"
        },
        "item": {
          "id": "5e102b4d-fbe1-4e5c-af07-e2f5a7ce3dfb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "24d70243-d753-403f-8d19-7d4bb17632d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40beed76-6150-4820-9d7f-88542cbf61eb",
        "cursor": {
          "ref": "b0fb85b8-2d3d-492e-9159-9e8527bf7d50",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "dd9d915c-a991-4cd6-bc5a-c68d403ed657"
        },
        "item": {
          "id": "40beed76-6150-4820-9d7f-88542cbf61eb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d427270c-f220-4c69-9f82-e77c6e591aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9d720f-af0a-4b10-b320-eaae6990b728",
        "cursor": {
          "ref": "adb591ff-5ee8-4c65-ae33-6d26ec858c85",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "64b95f3d-fbe8-4add-a4d9-2d51bf460470"
        },
        "item": {
          "id": "0b9d720f-af0a-4b10-b320-eaae6990b728",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b472ba7f-1167-4685-8b92-58a7e963a29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea4c983-d4ef-4e2d-b8a1-9023d404132b",
        "cursor": {
          "ref": "f8efae03-cd79-4907-9d5f-57e3890d94dd",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6d6449e6-3235-4426-b625-a95b8a513f91"
        },
        "item": {
          "id": "8ea4c983-d4ef-4e2d-b8a1-9023d404132b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c23bda1f-5daf-4962-93e8-c43fc7346a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808a3367-f494-4549-8930-0250f048d51d",
        "cursor": {
          "ref": "b1515d2b-198d-4719-9100-e044e2aca1d7",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1a6690dd-b146-4c9d-84b2-d932616f65e6"
        },
        "item": {
          "id": "808a3367-f494-4549-8930-0250f048d51d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2e0d4518-cbc4-4a45-95cf-0e77bd2b1ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40318b78-86ea-4ff3-856b-b7f8e13b4223",
        "cursor": {
          "ref": "8d6afb8f-0f6d-4508-8eee-764e6f022350",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "48e9d1de-3186-4f1b-8fc6-3792b8271262"
        },
        "item": {
          "id": "40318b78-86ea-4ff3-856b-b7f8e13b4223",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d3ef2dec-ad70-4966-a0d5-1c308ad4cd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f7c739-4742-4994-9a0b-5cef8c068ac4",
        "cursor": {
          "ref": "2f2dcc29-d148-4f54-9c34-d64fe3aefb1b",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "222c1968-8cfd-47fa-a48e-72e922a05964"
        },
        "item": {
          "id": "06f7c739-4742-4994-9a0b-5cef8c068ac4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e008fc3f-72e5-40b1-b445-d08d9abb4c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6f4cc0-1b01-4f20-9e4d-5ef8d80b9f9a",
        "cursor": {
          "ref": "7dc8ed61-b5d3-4af8-9e4c-836c62b0f762",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "bbd8d614-6036-40ed-b4ba-185564e8076c"
        },
        "item": {
          "id": "7c6f4cc0-1b01-4f20-9e4d-5ef8d80b9f9a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "af0d09d6-becf-4f46-ac26-8f3f5f771568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddfdeb2-b08f-4e84-9a78-147d0636d059",
        "cursor": {
          "ref": "1c1c5d66-c443-4bcf-b24b-f0c68d69c48d",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8122b6f0-97f0-450c-9122-ccf528c13087"
        },
        "item": {
          "id": "1ddfdeb2-b08f-4e84-9a78-147d0636d059",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bbfb165b-2187-408c-8ba6-11598a4e1b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7173333-cb53-40ff-9203-0183d8981993",
        "cursor": {
          "ref": "244b0f0f-e1ca-47e9-a05c-b4ba62d501fb",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fc9f81ae-2c68-4f4c-bff6-8dfc888f1582"
        },
        "item": {
          "id": "e7173333-cb53-40ff-9203-0183d8981993",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "922d0997-83ba-4108-ba05-9f33bb8e2d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6918ffc-934d-4b52-a3b4-74953d0076ed",
        "cursor": {
          "ref": "826f91da-2296-4339-923a-1758a87dc8cf",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6d952021-f152-45e8-8b84-5895f8522b92"
        },
        "item": {
          "id": "b6918ffc-934d-4b52-a3b4-74953d0076ed",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "95235938-ef50-4219-82bf-f185e6a21aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11865fab-0d99-49a0-8f61-6234781fc5e8",
        "cursor": {
          "ref": "5ac91613-6c4b-4f2e-aaa4-4da5e05ffee0",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "81e7b13b-8ce7-45ee-801a-6249422a9537"
        },
        "item": {
          "id": "11865fab-0d99-49a0-8f61-6234781fc5e8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "01d6f6d5-ea06-4fe0-82ce-db557c488e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd634f66-e9c6-4de7-b7e2-cff1c7c8a6f2",
        "cursor": {
          "ref": "459798a3-e779-4671-8255-692f069fb8f9",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f3b92043-5bc1-4c78-a0ed-97976ed8f1ea"
        },
        "item": {
          "id": "bd634f66-e9c6-4de7-b7e2-cff1c7c8a6f2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "51f2cf8a-360d-4a85-a063-d11bfc5b0b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3023d4-d3dd-4376-baac-506c348f48ff",
        "cursor": {
          "ref": "0722c4ce-3e09-45b4-91dd-5e1a21d27cdd",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e3151325-baf5-47b7-8a87-b71f5b58574b"
        },
        "item": {
          "id": "fc3023d4-d3dd-4376-baac-506c348f48ff",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8af8fb54-2441-40f9-b2ba-be908e911370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3405778-d319-40ff-b3c6-d21d32cca9e4",
        "cursor": {
          "ref": "bb98a513-63bb-4954-956c-29dc41293f41",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5104ec78-a72b-43be-b06e-4eeac35fabe7"
        },
        "item": {
          "id": "a3405778-d319-40ff-b3c6-d21d32cca9e4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "64da0c14-7da4-4410-b63f-25d4f21d1c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee9271c-6a38-4d93-a93c-a41dba437657",
        "cursor": {
          "ref": "22020be8-105e-4b58-b665-7b22a2733637",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e01f07cf-c2c3-46eb-935a-588e88b632f7"
        },
        "item": {
          "id": "2ee9271c-6a38-4d93-a93c-a41dba437657",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3f1295c3-ce93-4210-a8a8-beff68acd5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb79efbf-2483-4c0e-9b8f-3ce7a236887a",
        "cursor": {
          "ref": "d2e06285-3b38-4bd0-b5e8-001fadc2cfbc",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8c07b756-1ebd-4a1d-a77b-8dec9306625a"
        },
        "item": {
          "id": "bb79efbf-2483-4c0e-9b8f-3ce7a236887a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cbb7dca6-24ee-41f1-805b-60addd58dd89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedd8a85-b7a7-4b53-8906-c2ba07071d57",
        "cursor": {
          "ref": "5acd10dd-9b4d-4f2a-99a7-b6887d04d5e2",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "898ec36e-32c0-40cd-bbdf-3f688a071bfb"
        },
        "item": {
          "id": "fedd8a85-b7a7-4b53-8906-c2ba07071d57",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "86c5c292-c91d-4c76-a5b5-f3d35dbb1570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb374f5-b97b-49e9-b863-8a0944dcbec9",
        "cursor": {
          "ref": "ac14d409-49d0-4e55-b47c-0a09cd420069",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b1f33e08-d06d-4777-b52a-54b117c59b0d"
        },
        "item": {
          "id": "4bb374f5-b97b-49e9-b863-8a0944dcbec9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9ba79f2e-d944-465a-9a11-2e6e1b973e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bcd1ee-698d-4bd0-810f-32460aaabd5e",
        "cursor": {
          "ref": "9f4da18c-f498-4968-abe4-baa3b8a3bf0d",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "dfc8f2fe-8f8c-42b5-bd19-2e5795ded00a"
        },
        "item": {
          "id": "37bcd1ee-698d-4bd0-810f-32460aaabd5e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "20979d1c-6327-4042-80ac-e9a22bf359d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ccb317-7509-47cb-91d2-200bf4fc4f8b",
        "cursor": {
          "ref": "03941609-ea56-4849-b1cc-35582e2b73c3",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "264d180c-1d7e-4e14-aa0e-e4ab68085453"
        },
        "item": {
          "id": "c2ccb317-7509-47cb-91d2-200bf4fc4f8b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "874214a6-3f6a-4419-b9f8-d23f1c5408d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b0e26a-2d9f-4ea0-bf8d-6c70ea3a4df5",
        "cursor": {
          "ref": "d8f8f1c0-0bf1-49b6-981a-d78e4b712932",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c31587bb-0c42-4cbd-92bf-04460e0d58dd"
        },
        "item": {
          "id": "a1b0e26a-2d9f-4ea0-bf8d-6c70ea3a4df5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2910cd49-efdf-41a8-a44e-0ae882439fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4a59cd-acc8-45f2-af89-6d85346c1aa3",
        "cursor": {
          "ref": "5ee6dfb2-ffbe-4034-a466-f4df2ca0f470",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4440cd97-1e64-4d07-9e0e-38f1461b8ee1"
        },
        "item": {
          "id": "fa4a59cd-acc8-45f2-af89-6d85346c1aa3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e9bfcbb7-719a-4d1b-9a3b-500765943ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372017dc-d4a5-4068-9fb7-bbe06800dec2",
        "cursor": {
          "ref": "d0ac31cd-15d4-431e-a12c-85cc328d9b47",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6e02f972-5cd0-4b2c-8f97-b950085bd717"
        },
        "item": {
          "id": "372017dc-d4a5-4068-9fb7-bbe06800dec2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "07797c99-9264-4d96-85c9-66c98c876a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db58d0e-10a3-4282-af4b-c264c4c2a743",
        "cursor": {
          "ref": "e231358d-8060-4f83-830e-a32a0741b56a",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e8bb58be-24f1-4bc1-a3e7-439b120752b7"
        },
        "item": {
          "id": "1db58d0e-10a3-4282-af4b-c264c4c2a743",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bbe4a053-3e6a-4b20-af5e-ad4bb108ba62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb583c6-e9b2-4982-abdd-c5abca7dd9bb",
        "cursor": {
          "ref": "0e6ec0c1-88f3-4554-b67c-2c181af9efc3",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3cf9cbfd-cb17-418b-9e4a-6bd9324b6f82"
        },
        "item": {
          "id": "0bb583c6-e9b2-4982-abdd-c5abca7dd9bb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "822f958d-721c-4335-9a39-0a745889626c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80d2ae8-9a5c-43a4-875e-e9c205efe954",
        "cursor": {
          "ref": "448841a9-e0f2-432d-ac09-56e7a7ee09e3",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "32a2620c-c6f2-4032-afd6-621ed2d6fa22"
        },
        "item": {
          "id": "d80d2ae8-9a5c-43a4-875e-e9c205efe954",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cf46565a-5cb9-4fc4-99f8-e66ff1b341a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0ef532-a5f2-4072-a3c4-e0ff1dfef4da",
        "cursor": {
          "ref": "9f02d506-106d-4d35-bc03-6ea6fae0fdfd",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a7593fca-f4fd-4fda-81c9-a248bf424ddf"
        },
        "item": {
          "id": "fd0ef532-a5f2-4072-a3c4-e0ff1dfef4da",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "70333077-b974-49cb-8199-00ac69cf93a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 906,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0927281-7b50-486d-9a87-270963ab4b00",
        "cursor": {
          "ref": "1b7d1660-b019-4475-9b07-c6436eeeb7d3",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "dfa9948c-c026-4fc3-ae29-d5dcbaec9efb"
        },
        "item": {
          "id": "f0927281-7b50-486d-9a87-270963ab4b00",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "56458e2d-5cd6-4cfa-b70b-14962a8d43ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddfa0c53-7d6f-481c-b857-51e90788bf73",
        "cursor": {
          "ref": "150a4f46-dd39-4207-95c3-35e9eaa141be",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "dee8b5ce-7f5a-40d0-afa2-e975b7c14738"
        },
        "item": {
          "id": "ddfa0c53-7d6f-481c-b857-51e90788bf73",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "680e6cbb-3b83-4761-8a40-8d676f2504ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 926,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1f0408-68b0-4eb0-ae61-be2f1827b11d",
        "cursor": {
          "ref": "e0f00b09-e4fe-42da-9b21-ece828d2fe29",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "09160eb0-85a3-4584-bdf0-d062ddc45f21"
        },
        "item": {
          "id": "2a1f0408-68b0-4eb0-ae61-be2f1827b11d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b40e3ca2-2bc5-4a20-ac20-e47efefe8ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9529a2d9-932d-4527-803d-2566861eb61a",
        "cursor": {
          "ref": "317168e2-f8e6-4450-be76-8c1bd36c5784",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "dd885002-123b-43ed-8cbe-f9bf6b3bfeee"
        },
        "item": {
          "id": "9529a2d9-932d-4527-803d-2566861eb61a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "601269e1-e320-4810-9e56-824999d20a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93465e7e-b66e-46e2-9571-d0e933e7d119",
        "cursor": {
          "ref": "0b610056-4501-4190-84b9-a091cc715141",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "915ab695-26fc-45be-85ef-cc292e560839"
        },
        "item": {
          "id": "93465e7e-b66e-46e2-9571-d0e933e7d119",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e474df06-34ef-4d21-9cd3-8c6846e10726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a09fd33-2edc-4b56-889f-ea85938adcc8",
        "cursor": {
          "ref": "f5c6ab35-c7f3-4b08-8a2e-efcc9ab135aa",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "db9918ec-87d8-4790-b210-619a5377c52d"
        },
        "item": {
          "id": "4a09fd33-2edc-4b56-889f-ea85938adcc8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "81c4ccdc-9c33-4867-9190-e9d1efa7321c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd7d526-f03a-4ac9-b8f0-5f5ac02a01f3",
        "cursor": {
          "ref": "c7de1bc3-8279-455a-8dcd-926083c64e29",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "fc1e13a8-8f4f-45b1-8470-9f2b700d0e94"
        },
        "item": {
          "id": "4fd7d526-f03a-4ac9-b8f0-5f5ac02a01f3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e72fdc4f-df6e-45cc-82b7-aea5aae2db92",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0145a9b6-611c-4b21-91a6-287bdf6f8dc9",
        "cursor": {
          "ref": "2c785e9e-d483-4a95-a773-d5efc309f766",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9b99d3cc-c47a-41f2-ba40-3041b604ef50"
        },
        "item": {
          "id": "0145a9b6-611c-4b21-91a6-287bdf6f8dc9",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "7f5119c9-b491-4986-80c0-5d77562a502d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 545,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c48bd0c-8162-4f45-8331-ebd2489cbc67",
        "cursor": {
          "ref": "719ed857-92a7-4da7-9f49-4a368a089693",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2a63faf7-f3ee-4797-9c9b-5fa07b28b892"
        },
        "item": {
          "id": "0c48bd0c-8162-4f45-8331-ebd2489cbc67",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5e5fc4cb-7c94-4916-81ab-a9bc8e9fa370",
          "status": "Created",
          "code": 201,
          "responseTime": 4031,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "9b429b70-c0ab-4c12-894f-36fd19e87369",
        "cursor": {
          "ref": "410cf03c-9edd-437d-bc4a-28e0115c3210",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d2205f8c-9836-4714-8080-f208f34ec543"
        },
        "item": {
          "id": "9b429b70-c0ab-4c12-894f-36fd19e87369",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b5d6ef1a-2491-41a1-b99c-c462e6a375bb",
          "status": "Created",
          "code": 201,
          "responseTime": 3716,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "39021e03-1aaa-4ddc-bba0-2f5a7e52b74d",
        "cursor": {
          "ref": "34e5c9f3-4fa2-4e7a-9d16-0966591c2b02",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c5a26ece-bb7a-43b2-9bd1-1f991bed40eb"
        },
        "item": {
          "id": "39021e03-1aaa-4ddc-bba0-2f5a7e52b74d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ed42d2df-41e4-405b-8a34-c830b9c5234e",
          "status": "Created",
          "code": 201,
          "responseTime": 3987,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "6901fad9-4475-44d1-9fcf-b278c7b1b960",
        "cursor": {
          "ref": "302b323d-328a-423a-996d-16efe2b6fa0f",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4150de21-d423-48ee-80f4-a233e79dfbac"
        },
        "item": {
          "id": "6901fad9-4475-44d1-9fcf-b278c7b1b960",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "48d2625e-d523-4191-9a73-e3e71ad92d57",
          "status": "Created",
          "code": 201,
          "responseTime": 4184,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "71a4a9e8-be7e-4c1e-a5bf-5464bd19a5ea",
        "cursor": {
          "ref": "141b11e9-d57f-4c18-ac94-8f0f4326b92f",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "59d83ad9-4a0f-47ca-866a-3aecfdd4773e"
        },
        "item": {
          "id": "71a4a9e8-be7e-4c1e-a5bf-5464bd19a5ea",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4f9e9c22-baf0-41c2-b21c-b290393c03d8",
          "status": "Created",
          "code": 201,
          "responseTime": 6025,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "839677e3-caab-445b-b16e-d22fea0e9719",
        "cursor": {
          "ref": "f8fb7da4-b388-4ccf-926b-608520ebd1fd",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "eb0a6eed-c977-4404-bffe-3f0ac365b21c"
        },
        "item": {
          "id": "839677e3-caab-445b-b16e-d22fea0e9719",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ec23a9ae-1001-40a7-9aa3-8b3342b83f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839677e3-caab-445b-b16e-d22fea0e9719",
        "cursor": {
          "ref": "f8fb7da4-b388-4ccf-926b-608520ebd1fd",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "eb0a6eed-c977-4404-bffe-3f0ac365b21c"
        },
        "item": {
          "id": "839677e3-caab-445b-b16e-d22fea0e9719",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ec23a9ae-1001-40a7-9aa3-8b3342b83f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b9d0da-a559-4348-8899-16c16a8727e6",
        "cursor": {
          "ref": "b8430211-9cd9-4422-bdf7-daca2d50fa4d",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "268c030b-1354-4e5c-825d-a1e231fdbc06"
        },
        "item": {
          "id": "b6b9d0da-a559-4348-8899-16c16a8727e6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "eb7b5aee-5de6-454e-986b-a5680afa3a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cba0a8-9424-4c98-8430-6fb3f4dc8123",
        "cursor": {
          "ref": "a41e95fe-2044-43fe-a200-63a063fb1318",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f39b3c9b-ace5-4943-a031-499da9448109"
        },
        "item": {
          "id": "80cba0a8-9424-4c98-8430-6fb3f4dc8123",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2198065b-cfb2-4099-b511-99f47c8559d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803986b9-0a34-44f2-a5b5-35fa921c84b6",
        "cursor": {
          "ref": "4223e49b-438e-4d89-86ca-1b84de5af924",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9ad86853-d7a5-4153-bbda-69c95a1438e4"
        },
        "item": {
          "id": "803986b9-0a34-44f2-a5b5-35fa921c84b6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "116d3b36-9319-405c-87d4-31faa46f3748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5007b6b-7adc-4d91-8474-75d73bad4a1a",
        "cursor": {
          "ref": "356359c7-93f8-427c-b4b0-58cb30a37108",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "115d1cda-5ff2-4403-8ae0-05aa1464cfea"
        },
        "item": {
          "id": "f5007b6b-7adc-4d91-8474-75d73bad4a1a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6a90199f-c94f-4f6c-a5ab-17cad3a922f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b008e7-56f0-4739-83be-d03c5d44ad39",
        "cursor": {
          "ref": "c18c9c33-0f8c-42e7-a600-6407c2ae635a",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ce9d84f1-8143-4367-a40a-985282963790"
        },
        "item": {
          "id": "30b008e7-56f0-4739-83be-d03c5d44ad39",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "aaa9763e-5aef-4b80-9022-b83ef7b3e09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ac15d9-44a0-495e-99ad-94c3273387f3",
        "cursor": {
          "ref": "9b9af7b0-5ed3-4fcf-a847-a7ced7825de4",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1935a6e8-7f7d-45e3-b54b-b462052fe223"
        },
        "item": {
          "id": "42ac15d9-44a0-495e-99ad-94c3273387f3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "94358c76-aa9b-477f-bdd8-023e1ebf34fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b794299-78c3-41a5-894e-75d118e3db36",
        "cursor": {
          "ref": "9c7b54eb-e61e-4314-a027-e86bbfd69c40",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "92485601-2a94-4e4f-9435-c1cb44fc0e20"
        },
        "item": {
          "id": "2b794299-78c3-41a5-894e-75d118e3db36",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "da1841bd-b6d4-4e24-995f-8540f0a75b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bcd603-633d-488b-abd1-e17bb2fe1e44",
        "cursor": {
          "ref": "d25133ee-158b-42ea-92e2-8546bf4d8f83",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "910723d5-7e8c-4e3e-980f-3dcc42e8b751"
        },
        "item": {
          "id": "17bcd603-633d-488b-abd1-e17bb2fe1e44",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ee2ee649-acbc-419c-b7c3-7f410739a044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41569ec-a11b-42c1-a88b-e1edbbf84390",
        "cursor": {
          "ref": "068aa16d-8827-40ca-a73d-364ed952474b",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "82873026-b6ab-41b3-96a6-b8ba108747c3"
        },
        "item": {
          "id": "a41569ec-a11b-42c1-a88b-e1edbbf84390",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4b9a9588-82ba-42cf-80e7-aec247ba67d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dcb7819-ed3b-4478-a532-16c843455b98",
        "cursor": {
          "ref": "f3625b7e-9c60-4e9f-aa02-dead7a681112",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "138db9d5-db23-4c04-a9d3-45d45adbb279"
        },
        "item": {
          "id": "8dcb7819-ed3b-4478-a532-16c843455b98",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fb2936e0-0a4e-48a9-b740-309377312fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47c1bdd-ff92-4b31-bb0c-a600365fe599",
        "cursor": {
          "ref": "aed11d51-d42c-474a-9790-7c5dad05f47a",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "45c38afe-cccd-46ae-93c8-1184b48fc5dc"
        },
        "item": {
          "id": "f47c1bdd-ff92-4b31-bb0c-a600365fe599",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "02b5a767-c0c9-4557-a484-afeac696f1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26f85d7-78e2-431b-9aae-742a8a1062fd",
        "cursor": {
          "ref": "7aafd5c8-2095-43d1-8110-ad686b2e9524",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ae2e8935-9a1e-4f87-98f0-69dab33d4c8f"
        },
        "item": {
          "id": "e26f85d7-78e2-431b-9aae-742a8a1062fd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b5ced1bc-94a7-462c-80e7-d7c9f7d9dc24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e195c0-7d5e-4bd4-bbe5-0f7146483c86",
        "cursor": {
          "ref": "d6a08d69-930f-48f5-a216-60ac71bfd91c",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "be942af8-55dd-4e9a-9a7d-58fd0a549ccb"
        },
        "item": {
          "id": "79e195c0-7d5e-4bd4-bbe5-0f7146483c86",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3a44d375-8bb1-44df-a42a-99091012390d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e579183-964a-4f9a-8f35-b7d8c058c8e4",
        "cursor": {
          "ref": "17262779-3377-42d3-864b-831f7fe5ae2d",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "588395db-aef1-40b9-8c61-15fd2e07c6e4"
        },
        "item": {
          "id": "5e579183-964a-4f9a-8f35-b7d8c058c8e4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1d6e88a8-9f69-4d1d-b95b-892ada828001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e12aca2-04ae-41ba-b566-c824ba933b4e",
        "cursor": {
          "ref": "c93af509-5e61-4f5e-8343-93aa35be725b",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "78920c27-c845-4c2f-b4a1-71007a8a2dbe"
        },
        "item": {
          "id": "6e12aca2-04ae-41ba-b566-c824ba933b4e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cd322165-8b9e-4f3c-87a8-3fd2a59f960b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107c6198-67d6-48ca-b301-9d10d786cdd4",
        "cursor": {
          "ref": "ce030005-45b4-4783-95ac-9df350597592",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9b51929e-7dfa-441b-bad1-92f05ab1753c"
        },
        "item": {
          "id": "107c6198-67d6-48ca-b301-9d10d786cdd4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1fcc51be-ed51-45e5-8689-f77705183a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65ce82b-baae-4b50-b031-395a30ea88f4",
        "cursor": {
          "ref": "7b106736-3a7e-4428-9284-419e8dd9e7f8",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c6f2da10-fa6b-4295-b947-e97039fe6ad5"
        },
        "item": {
          "id": "a65ce82b-baae-4b50-b031-395a30ea88f4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "31023100-c8cf-4ecc-8fab-47e2511c3efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd115d7-0a13-421f-9fcf-cf810705d6fa",
        "cursor": {
          "ref": "2303e0a9-48ba-4a70-b258-99fd5be75075",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6622d4f4-b27a-44e5-8398-c2122ced3805"
        },
        "item": {
          "id": "3bd115d7-0a13-421f-9fcf-cf810705d6fa",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4ed56446-8046-40fe-82c4-d1d12cfa50e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5712ca5-08c5-4246-83e0-1791a55127d8",
        "cursor": {
          "ref": "9a625d44-0f8d-47b4-b46b-785c54128588",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b5d6b3ac-2a8f-46f6-b3dc-0dd3dcbf5971"
        },
        "item": {
          "id": "b5712ca5-08c5-4246-83e0-1791a55127d8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d00719b9-644e-4ead-bc3e-d405d011aff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27be989-1259-4d9e-88f6-c780b869a82c",
        "cursor": {
          "ref": "ad77140e-a1b1-42cf-bbed-c0ec088acf93",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "df7cdb6a-8f6c-4e20-8d5f-9cd9383b04e8"
        },
        "item": {
          "id": "b27be989-1259-4d9e-88f6-c780b869a82c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3b181d29-7541-4643-9e8b-082198a7f77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e99b6d3-5634-4ec6-a822-e79a598f6a15",
        "cursor": {
          "ref": "bd358fd7-2f94-46b1-ae4a-6fa8e145c436",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "74998b90-76b3-457b-a4e8-84297f4a976d"
        },
        "item": {
          "id": "0e99b6d3-5634-4ec6-a822-e79a598f6a15",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "deda891d-d2ba-432e-a014-a4837b1cd4ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d72cb5b-cba3-400c-872c-92805bff5897",
        "cursor": {
          "ref": "d517b4c8-7469-440d-9be4-a41a66c1f52f",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "474523a8-d6fb-472e-a429-5c46b438acd7"
        },
        "item": {
          "id": "1d72cb5b-cba3-400c-872c-92805bff5897",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4c655896-ec83-4ae9-96a9-b9a4f271ac5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787207c0-7770-44a6-9465-d14e0d93c9ad",
        "cursor": {
          "ref": "48dc12ef-ade0-4d9d-8140-41f92f1447f1",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b548c78e-2a6f-4b81-95c6-2b1a53f52ff6"
        },
        "item": {
          "id": "787207c0-7770-44a6-9465-d14e0d93c9ad",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5a50b386-55f1-4235-8c71-86c394bb7585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8edb9c6d-6d9f-4464-a068-85c5d509fc8b",
        "cursor": {
          "ref": "99276d21-6100-47b4-89f4-358263606f0b",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3d3849c9-0f9a-452c-8145-216e40d85c13"
        },
        "item": {
          "id": "8edb9c6d-6d9f-4464-a068-85c5d509fc8b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4c42c838-172e-40de-9de0-8982020bfcc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fb9bae-99a5-4939-b022-6cd309885948",
        "cursor": {
          "ref": "d4e14cdc-2ea2-4267-81a9-de46f9e4e0e7",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d7d480eb-82b0-4f8d-992e-8856613fe612"
        },
        "item": {
          "id": "10fb9bae-99a5-4939-b022-6cd309885948",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "41eed949-3f02-48de-9cbd-1f10bb5dac3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338aa033-5d8f-458e-b1f1-5581cad1ce14",
        "cursor": {
          "ref": "b5533e9c-1d5e-4703-9f45-02c95595d621",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "54f07a0a-c6fc-420b-aeee-404b37cde677"
        },
        "item": {
          "id": "338aa033-5d8f-458e-b1f1-5581cad1ce14",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b00cde9e-7e45-431b-8e25-29f6d3768919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d285cda4-00ea-4f4f-9b39-1f19ef5593bd",
        "cursor": {
          "ref": "c376b730-6af9-4d9c-b7cb-73b5c162beac",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e68942cb-8d87-42e8-aae6-a4c410dadbd9"
        },
        "item": {
          "id": "d285cda4-00ea-4f4f-9b39-1f19ef5593bd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "22d0d85d-df66-4385-bba9-05ec3bc71706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6f7b77-0ff8-4ed1-b0c3-793331584094",
        "cursor": {
          "ref": "dc895733-0563-4660-935b-ab43ad5cdce7",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "72a25dd9-c20f-45fe-a0f1-02f744a8c3ea"
        },
        "item": {
          "id": "ff6f7b77-0ff8-4ed1-b0c3-793331584094",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "24908472-0deb-4fee-a50f-4db9da427c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b44966f-a867-4bd2-8660-0549139db8cb",
        "cursor": {
          "ref": "26ee62bf-1e85-4a59-91ed-431bb1fa0267",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "acdde7da-44fa-4d97-8c19-a645687eadfc"
        },
        "item": {
          "id": "2b44966f-a867-4bd2-8660-0549139db8cb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6be6b06a-e108-43f4-99f4-90b322d48586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c098e78-a891-468c-ab12-bc3157cd82aa",
        "cursor": {
          "ref": "bc85d283-3f00-465f-9d00-f6c4f8999d9d",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c44a8f4d-2cfa-427d-b5c1-f003fd1fdd61"
        },
        "item": {
          "id": "9c098e78-a891-468c-ab12-bc3157cd82aa",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f7eb80b1-d7a6-422e-bf06-cbcad4defa99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d545c1-e296-4e08-954d-f728a50defb2",
        "cursor": {
          "ref": "0327eeb9-2d94-49cc-88b8-55d66c3c5a77",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e1e53886-573b-457a-b125-c1d978b64b00"
        },
        "item": {
          "id": "b3d545c1-e296-4e08-954d-f728a50defb2",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "93552c7b-00f2-406f-bfea-9994baaf7472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71bd9def-7b76-4e5b-809c-3a7fc7b24547",
        "cursor": {
          "ref": "3f0749cb-4c17-4e66-beb2-a56b2f5883e0",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "297bb36c-d19c-4c4c-bc00-c60d28470e30"
        },
        "item": {
          "id": "71bd9def-7b76-4e5b-809c-3a7fc7b24547",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "df95d875-792c-41aa-aff3-eb93640bc27f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd13a8a8-bef9-48d1-9998-d38357010738",
        "cursor": {
          "ref": "69193fa4-744a-4cc7-9815-ba1c70111fd6",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1cede00c-d095-45da-a9eb-61c08e1eda2e"
        },
        "item": {
          "id": "cd13a8a8-bef9-48d1-9998-d38357010738",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "e76b7484-4dc1-46ec-8852-68d60cba1c73",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 520,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71aeeb8-7448-47e4-9b4d-587f5d5386e2",
        "cursor": {
          "ref": "9817b1fd-9440-4fc2-ae05-cd924c9325dc",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1f3d5006-e8c2-40cd-aa0e-cda48b712968"
        },
        "item": {
          "id": "f71aeeb8-7448-47e4-9b4d-587f5d5386e2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bc0b8a62-f0e7-4f02-b97d-ea5dbef7b0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71aeeb8-7448-47e4-9b4d-587f5d5386e2",
        "cursor": {
          "ref": "9817b1fd-9440-4fc2-ae05-cd924c9325dc",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1f3d5006-e8c2-40cd-aa0e-cda48b712968"
        },
        "item": {
          "id": "f71aeeb8-7448-47e4-9b4d-587f5d5386e2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bc0b8a62-f0e7-4f02-b97d-ea5dbef7b0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257a7cf3-a4a0-471b-8231-e05fe2dc45be",
        "cursor": {
          "ref": "71b5be40-c636-437e-a650-248b94e132b0",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4023ae6d-2bd4-468e-aaaf-4ce115bc544a"
        },
        "item": {
          "id": "257a7cf3-a4a0-471b-8231-e05fe2dc45be",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c5199592-7359-4b06-a910-4a723b97efce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3b0b8b-0cba-4848-bf9c-42cb6296200e",
        "cursor": {
          "ref": "9b44e958-bece-49d5-94cc-84afd3483b0a",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "570b0088-57df-410b-badb-d95420963cd4"
        },
        "item": {
          "id": "ab3b0b8b-0cba-4848-bf9c-42cb6296200e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d90b1065-2e47-4b9d-896b-3c203a65cfa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401065d0-503c-415f-bdcf-d5a7faa00135",
        "cursor": {
          "ref": "f460e39a-56db-4725-be19-9443d28c6444",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "81270b58-2751-4c44-ad0c-0baddee4c6cc"
        },
        "item": {
          "id": "401065d0-503c-415f-bdcf-d5a7faa00135",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "910cfa6b-696b-45fe-88b7-7065dd028c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855f5304-69a3-4661-a1bf-55299cbe54a1",
        "cursor": {
          "ref": "ed2a99d7-2550-4830-9b0f-c5d1dde0ade2",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f19f9a04-9cb9-4046-831b-5e6c26e66032"
        },
        "item": {
          "id": "855f5304-69a3-4661-a1bf-55299cbe54a1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6ab00c00-a55e-4df6-a749-1e62695c9bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f24b777-02c9-4236-be6e-a91dbc0925a1",
        "cursor": {
          "ref": "5776f759-2122-436d-8a20-622c1c9fd98d",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e7d19879-2aab-49f7-be96-6c01b5ce3467"
        },
        "item": {
          "id": "0f24b777-02c9-4236-be6e-a91dbc0925a1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "65af69e4-7be9-4ab8-bdb7-db688a599571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624707d1-9cdc-4d92-9154-aa16049d67cb",
        "cursor": {
          "ref": "efbafa8a-9496-4b8b-8c6b-7f34ef7015f9",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6221bf12-1128-4108-b317-9ed6cb3e0d0c"
        },
        "item": {
          "id": "624707d1-9cdc-4d92-9154-aa16049d67cb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5fc1ae7f-2348-42d1-b7e1-d74adf3c73dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4b123a-a95a-4af9-adff-e4aa42d894d1",
        "cursor": {
          "ref": "389a764a-b5e0-4002-8df6-700df74c4a1e",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5d94b23b-8bb0-4244-b22b-b19968d3a36c"
        },
        "item": {
          "id": "de4b123a-a95a-4af9-adff-e4aa42d894d1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9db7dbdf-c80b-48bc-b591-917a9e1c9f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0de631-9374-4f63-b102-ffc752e5d8ea",
        "cursor": {
          "ref": "0e5206bf-56f5-4ea9-bed4-24e58ed77b7b",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4ae52d02-1b01-40ad-95b4-ad25d3960429"
        },
        "item": {
          "id": "6f0de631-9374-4f63-b102-ffc752e5d8ea",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1ea6834b-a426-461a-8efc-a284a967e569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bc10c3-380f-4eda-9a57-c4681c9f25b4",
        "cursor": {
          "ref": "52c19f35-cf4c-4dd8-b609-0a129ab13cda",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2057751d-6541-4daf-8579-1feec4335f02"
        },
        "item": {
          "id": "72bc10c3-380f-4eda-9a57-c4681c9f25b4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8e7ed910-959a-4771-80ec-ef3b64b3b436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4904fa82-5c1a-41d2-b75c-45a25dd4f683",
        "cursor": {
          "ref": "46c980d2-4ff3-40c3-925c-9037ace676fd",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fba75116-7272-443a-b669-e43c77177780"
        },
        "item": {
          "id": "4904fa82-5c1a-41d2-b75c-45a25dd4f683",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ab76111c-cfad-4071-9541-93efd387f5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5179639-2b73-40b5-882a-da10adbbe417",
        "cursor": {
          "ref": "c8a7cebb-ac86-4264-a063-b15416aaa6af",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8896214d-4f76-46bf-92c3-241e0ce46d72"
        },
        "item": {
          "id": "d5179639-2b73-40b5-882a-da10adbbe417",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "11c8e628-f497-43ca-9652-305b1f86d27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f070b1d-c6b0-4590-8e33-f79253478a43",
        "cursor": {
          "ref": "a72b2997-6b14-454b-b6fd-bfdce90d0633",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f201a0db-876e-4fb9-8612-82999a6c027b"
        },
        "item": {
          "id": "5f070b1d-c6b0-4590-8e33-f79253478a43",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c1dd1104-850a-4346-b18c-86cf99ecdaad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f6ed48-110e-41a4-99c2-9789d08f1467",
        "cursor": {
          "ref": "39be9ddd-52f3-4585-8042-754973909006",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1b4d2b71-8947-4710-a0fe-346fb3e08359"
        },
        "item": {
          "id": "47f6ed48-110e-41a4-99c2-9789d08f1467",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ea974121-44cf-4ace-8777-b123719bd9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5a1647-3879-40fe-a608-fe869430f70d",
        "cursor": {
          "ref": "30649b05-a44f-4d5f-b162-37c02c356b33",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "32350eac-d33a-4175-9cd0-6c79e813dce9"
        },
        "item": {
          "id": "5e5a1647-3879-40fe-a608-fe869430f70d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "dac8bce6-a27d-40de-9d64-51386ccb889f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c110fb-0c54-49b9-898f-cd0357c8bb94",
        "cursor": {
          "ref": "0dab44f1-38e7-4464-ae7d-1d1f925fb9bf",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "55ba833c-d955-4d49-8121-d645ee84cce2"
        },
        "item": {
          "id": "e0c110fb-0c54-49b9-898f-cd0357c8bb94",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "098b41d2-a6d9-4ca0-811f-2df91868fd98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453c2861-2253-406e-9404-38792a35568b",
        "cursor": {
          "ref": "55464772-d488-4752-a5b3-68c0bb89b704",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a74eb790-8675-47f1-88b1-08b6c5b096c0"
        },
        "item": {
          "id": "453c2861-2253-406e-9404-38792a35568b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5eeb738b-a686-4639-bf4a-40fcfd700da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5afe00-9506-4b4c-91f1-58e47a2a8a6f",
        "cursor": {
          "ref": "f9b57b17-ed56-4a7c-ad87-7009638b21bb",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "850bff62-9d22-4e54-a084-22f709501bd2"
        },
        "item": {
          "id": "9b5afe00-9506-4b4c-91f1-58e47a2a8a6f",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "786ceda4-6aba-45b1-bbbf-4033e2f0f6c7",
          "status": "OK",
          "code": 200,
          "responseTime": 3404,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "e70f6b2c-d201-4f22-8b62-605193c9a618",
        "cursor": {
          "ref": "ba73bd16-d7d8-4fef-ba1f-872555948f2b",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "30ec68e9-cd7e-4aa5-86d5-221656e3400c"
        },
        "item": {
          "id": "e70f6b2c-d201-4f22-8b62-605193c9a618",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "37d151cf-b25f-466c-b565-3e112190dfe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc954a3-7896-464b-8a67-bcb130dc1912",
        "cursor": {
          "ref": "eac8ba49-b953-4366-ab5a-5ddbb413fb7f",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "39796116-179f-4144-8063-0cac3becaddc"
        },
        "item": {
          "id": "bbc954a3-7896-464b-8a67-bcb130dc1912",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c90ee6a7-b6eb-44b8-8a4a-7c72b379152d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0a28f3-8982-4ad6-b538-1c0920d569cc",
        "cursor": {
          "ref": "67026f22-0677-4568-80f2-773947aa1304",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0be4dde2-a41d-480d-a960-9f7b41f635ab"
        },
        "item": {
          "id": "cb0a28f3-8982-4ad6-b538-1c0920d569cc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9562a614-42f4-49c9-82a3-37f5176f5acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1657a678-402a-40c4-a25f-55482c478f60",
        "cursor": {
          "ref": "f7d2bda1-e0b6-432a-ac67-ca7f30e2ad2c",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ad190939-7bcf-461f-a1c5-e807ec7d2c97"
        },
        "item": {
          "id": "1657a678-402a-40c4-a25f-55482c478f60",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "42981f38-8f52-4635-aaf4-1e90974ec580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4918e2a-43d6-4512-a815-1740a3a556ff",
        "cursor": {
          "ref": "5feda3fa-ff40-4b34-9b35-e16c2c754afa",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c980287b-73c4-4e1f-9def-100a31fb5f12"
        },
        "item": {
          "id": "e4918e2a-43d6-4512-a815-1740a3a556ff",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "edd4f561-bd51-4c39-8619-00c9c951e86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed6ddbb-dde8-4552-ba98-78d66d5d4888",
        "cursor": {
          "ref": "4df2e3af-1a28-4bce-ab6a-1d15aaa72660",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c0511cb1-8956-40cf-9955-36c9d189bed3"
        },
        "item": {
          "id": "0ed6ddbb-dde8-4552-ba98-78d66d5d4888",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b35f670d-675e-42cc-9e4b-ba7cf1173cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4432cb-1616-45a6-9ff6-a6ddd3377000",
        "cursor": {
          "ref": "ba2432f1-c98c-43e5-8d2a-64c190e35ea2",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "89ead122-05aa-4529-bdeb-3984fb30bdb8"
        },
        "item": {
          "id": "af4432cb-1616-45a6-9ff6-a6ddd3377000",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "81780a10-c458-4ac3-8156-0e7e5c633f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdf708b-f129-465a-a27c-13b54de4487d",
        "cursor": {
          "ref": "019a0737-f48e-4c6d-9770-7ad2cd670991",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5171eed7-dbbe-4910-9df6-c0c497ebd9a2"
        },
        "item": {
          "id": "8bdf708b-f129-465a-a27c-13b54de4487d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "22727857-54ed-44e3-a0d8-1115deb4f6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0536263-0854-476e-9ea9-8ccbc92f2283",
        "cursor": {
          "ref": "e7873fed-6043-4482-8d8a-f33041a10b95",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "72524037-4f20-48bc-86d3-14e9da20d57f"
        },
        "item": {
          "id": "b0536263-0854-476e-9ea9-8ccbc92f2283",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3ca1339b-ea98-419e-b94f-f1f3c303e102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea60442f-ea65-480f-90e3-56f6a61040e0",
        "cursor": {
          "ref": "09bbc5ff-76fe-4328-b007-5276f5ecffc6",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6569b424-7dbd-4609-9bb6-1279bea96a99"
        },
        "item": {
          "id": "ea60442f-ea65-480f-90e3-56f6a61040e0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "34d32176-7766-4717-9ad1-e3dae62cf55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77cedcf4-e461-47ab-b341-5b10244ab079",
        "cursor": {
          "ref": "abfa69e9-99c3-498b-bb69-d75df0213d0b",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ef2ba256-4540-499a-8984-4c1afd517822"
        },
        "item": {
          "id": "77cedcf4-e461-47ab-b341-5b10244ab079",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9c0ec3fd-1600-413c-a7ec-2f82cc7cdfc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dab4ec2-8838-4e02-a1a7-30680c064887",
        "cursor": {
          "ref": "2d4b698a-f086-456d-a86b-ebde6ae5ffc9",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "02ef5176-caad-4bdb-93b1-33a51855f0cc"
        },
        "item": {
          "id": "6dab4ec2-8838-4e02-a1a7-30680c064887",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c34843ac-3a04-4e8a-bceb-70a825267bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e85c23-8f39-4dc0-8132-9eb4058c2424",
        "cursor": {
          "ref": "7c239757-1c4d-4ea6-9363-ee5b1cf36b4d",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3406fd7c-29da-47a6-a340-df74fe1d6a12"
        },
        "item": {
          "id": "65e85c23-8f39-4dc0-8132-9eb4058c2424",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b034efee-2772-4f34-9458-32b8a2dff46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a47587b-1cf7-4769-8593-9b6e760e0e20",
        "cursor": {
          "ref": "ac81a012-9714-4876-b098-29f0d2f8c299",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b4d20775-cd6b-4fe5-bde5-1a63ffebe980"
        },
        "item": {
          "id": "6a47587b-1cf7-4769-8593-9b6e760e0e20",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a2cd9dc4-765f-4e7d-9067-fe8187c740eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ab0543-cab3-4c4a-b0ab-2841497dc50b",
        "cursor": {
          "ref": "6e7f1e80-1d0a-4114-8bfc-dac91c0a7cfb",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f7334715-b8cd-4ee7-ab1b-a6858f4ec363"
        },
        "item": {
          "id": "d0ab0543-cab3-4c4a-b0ab-2841497dc50b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a9060dfa-775d-44dc-9583-f1567199180a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69c08f0-3ed8-4484-8243-8d703e1a8ed1",
        "cursor": {
          "ref": "aafac256-8e6e-4cf5-8f32-c57001f67e8c",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "97da11fd-11b2-4b7f-b648-15794325d11f"
        },
        "item": {
          "id": "a69c08f0-3ed8-4484-8243-8d703e1a8ed1",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d2edf205-598e-4355-b040-f79b5e4ad849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9b2fc4-2a43-4675-a075-432cba7fd4dc",
        "cursor": {
          "ref": "1119ad66-cf12-46ca-ba7e-5441bfb113d1",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1549eeda-9193-433c-9b51-3061a98adfd3"
        },
        "item": {
          "id": "6c9b2fc4-2a43-4675-a075-432cba7fd4dc",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "15fbbc58-e85a-4323-ba5a-f86d6bf04c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc18136a-7f69-4489-8230-da24025577f4",
        "cursor": {
          "ref": "8d2249fc-0abc-4f99-8eae-a5fc2a90c2a8",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2726a801-8499-4dcd-8dbf-e488c5de9708"
        },
        "item": {
          "id": "fc18136a-7f69-4489-8230-da24025577f4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "db673e2b-3bcf-47bc-805e-530397cf2cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a214a3-be9f-4629-8e66-248b4faa2776",
        "cursor": {
          "ref": "492c0a26-85ed-44e1-b688-42e071d06939",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "711e94dd-72ff-4dd6-bc37-510aafe6add6"
        },
        "item": {
          "id": "85a214a3-be9f-4629-8e66-248b4faa2776",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5a13417a-a89f-4ce6-87ac-1b832b66c3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6492d08-f817-432e-a9c3-1e7a3dbb592a",
        "cursor": {
          "ref": "da8efc01-e01d-474d-b8b3-6ce3ce0c0d4b",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4b0a70cc-3e99-490b-8410-5871fb33630e"
        },
        "item": {
          "id": "e6492d08-f817-432e-a9c3-1e7a3dbb592a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "02338e5b-f7e0-48a7-8ca5-59f354bfc086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedd67ab-def1-410c-a734-c0193c32fd67",
        "cursor": {
          "ref": "144bea65-3079-4af3-a18a-7cb81bbf574b",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b05e0d4a-0d47-4738-9496-f559aa8cf043"
        },
        "item": {
          "id": "cedd67ab-def1-410c-a734-c0193c32fd67",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "95fe1249-08d2-41e7-82c5-3d6642ce643f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd70f4e-5bb4-4559-9fd8-643bd5b54ba3",
        "cursor": {
          "ref": "99a71d16-38cc-49fd-81d7-4476b445425b",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "14f95388-e9a1-4773-9181-bac7d5815be4"
        },
        "item": {
          "id": "8bd70f4e-5bb4-4559-9fd8-643bd5b54ba3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2e6807e4-6f2e-46d8-bb1d-b1ac720ae3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a446c65-6e58-437b-9235-a5d16dd8078d",
        "cursor": {
          "ref": "47d34da9-e503-4ac1-83dd-9b089cb1ff42",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f33e86c4-95af-4e0b-be7a-4d3bb0c1ccde"
        },
        "item": {
          "id": "1a446c65-6e58-437b-9235-a5d16dd8078d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0047d1a0-9d9a-4a20-b8ed-1b1c971c059c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4e9064-a4e7-482e-a32a-286b7bc3f51c",
        "cursor": {
          "ref": "1bc55eea-11f5-4620-a489-a661b4261bce",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0ee3752b-4959-403b-b163-1660e7671eb6"
        },
        "item": {
          "id": "0b4e9064-a4e7-482e-a32a-286b7bc3f51c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2894a9d7-7873-4f34-ba2f-488e2a412237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5759a8f8-91e5-4151-8cb4-214b06a90bfe",
        "cursor": {
          "ref": "858bb752-fc42-4431-9d3b-d7782d9d7b51",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "726071b1-a23c-41b8-8e6e-bce005daab7c"
        },
        "item": {
          "id": "5759a8f8-91e5-4151-8cb4-214b06a90bfe",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1eae05ff-9af1-4e09-a61f-ede377940c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d91e3e0-54cc-4ffd-9cbe-719876242590",
        "cursor": {
          "ref": "33dfaf22-81c6-4654-9d73-e9af30fb3446",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "167e530d-b4d3-4619-97fd-4b7d104a4905"
        },
        "item": {
          "id": "9d91e3e0-54cc-4ffd-9cbe-719876242590",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e5e8aece-5e9b-4b05-939e-389c4c74933a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16b5edd-16d4-4b35-bb26-5fe967128ee6",
        "cursor": {
          "ref": "259d6d83-4978-4fb1-a2fa-ec7a4b05b3f0",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "21e15cab-9a00-4019-8ba7-06c0de4f9db4"
        },
        "item": {
          "id": "b16b5edd-16d4-4b35-bb26-5fe967128ee6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "92734634-63be-4208-a305-09debea7b858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc0054d-41b7-4dee-8569-c990e7dd9eec",
        "cursor": {
          "ref": "19a355b3-63e9-4624-9c6e-1043074adfda",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "09bbb408-1440-416a-9723-cfdfa0443d68"
        },
        "item": {
          "id": "0cc0054d-41b7-4dee-8569-c990e7dd9eec",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d2377b93-bf09-4618-91dd-0b06d619be0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4abf50-cc48-4502-bc66-8b66195570ae",
        "cursor": {
          "ref": "655c18ac-ac0c-4480-9c4f-bf7db46897a4",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b9d77247-5993-4520-881c-c4730548eb33"
        },
        "item": {
          "id": "1a4abf50-cc48-4502-bc66-8b66195570ae",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "568357d3-566c-42ef-abc0-442493bbd588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94b5c68-7c0f-4282-8331-59e4d7795f1c",
        "cursor": {
          "ref": "2d5134ed-2b7f-4b06-8952-4efcfa1a3349",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4c143571-ded8-40d4-85b1-e2b2529b4261"
        },
        "item": {
          "id": "d94b5c68-7c0f-4282-8331-59e4d7795f1c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "023a01e0-a30b-4e03-9e16-8149877c354d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85040413-78cb-4fbb-a60e-b74ddc0948f6",
        "cursor": {
          "ref": "84d9c724-dc41-475d-a2f7-e317d7dc4775",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7389db58-88b2-41d3-9e63-dffe0b51310e"
        },
        "item": {
          "id": "85040413-78cb-4fbb-a60e-b74ddc0948f6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1da3991c-f64a-4f61-b5f9-9ded53dbd515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ff1368-2173-480c-b844-27b3c3214d27",
        "cursor": {
          "ref": "16de28d5-9a68-4d45-bf22-12ecbb980175",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "38c59baf-7836-433a-aad5-493149c28e9c"
        },
        "item": {
          "id": "99ff1368-2173-480c-b844-27b3c3214d27",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ce1198bd-e86b-40ef-a319-ba93e32d5190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187a559a-74ed-40c3-8bdf-22c9af3b6ff4",
        "cursor": {
          "ref": "b946634a-01e9-4ae7-a19f-8a35dddb5623",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0dde43ac-d42d-4c5e-9013-e261c6587627"
        },
        "item": {
          "id": "187a559a-74ed-40c3-8bdf-22c9af3b6ff4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "78a7172f-cc79-4bbf-ac21-0e3cabbf8672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02848485-02f1-424f-b85d-597d8fced1e2",
        "cursor": {
          "ref": "52f22bfc-533c-4bf8-8148-8a85597b0947",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3667852c-7d47-47d1-8ca2-e3cbcff1420b"
        },
        "item": {
          "id": "02848485-02f1-424f-b85d-597d8fced1e2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ee3b86f6-f752-4beb-ba66-357033d320e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d0b963-ffe3-4e06-a825-cecb6b8f8766",
        "cursor": {
          "ref": "dd6ba769-6149-432f-8a8f-da241e3f110f",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e52d82a2-6514-46c9-9572-c38a8a584065"
        },
        "item": {
          "id": "35d0b963-ffe3-4e06-a825-cecb6b8f8766",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "dc1ec9e5-ff38-4935-913e-60310eeb4f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccdbdabc-31f2-45e1-b7e4-cd0c7d6351c7",
        "cursor": {
          "ref": "2a058b7b-d01f-4f77-a9fe-2c65a2214166",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "da86d4ec-4310-416e-af69-8aa194e93e9b"
        },
        "item": {
          "id": "ccdbdabc-31f2-45e1-b7e4-cd0c7d6351c7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bdb34405-154e-4dcf-9663-cac003fa93d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122ef11e-c8e5-4c35-aa23-9749496e4ee7",
        "cursor": {
          "ref": "520507de-b8a8-4dca-bd83-bd56c60dd6f5",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "025e1164-0d9b-454c-85c7-98a2d9b8e0bb"
        },
        "item": {
          "id": "122ef11e-c8e5-4c35-aa23-9749496e4ee7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5fe2e611-6cfc-43a3-994f-bf885e623af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c68377d-7801-4771-8d0f-9bccf71c8649",
        "cursor": {
          "ref": "5bfcbb2b-f7d2-42b4-b8d8-0a6210406800",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "75196e15-a14a-4dd8-b0eb-13ee3334a259"
        },
        "item": {
          "id": "4c68377d-7801-4771-8d0f-9bccf71c8649",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2bd1f2ea-0819-4332-badb-b29f29a58091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077a0cbb-6f27-4e58-ada4-b8b97343330b",
        "cursor": {
          "ref": "2750effc-7740-415b-9e24-85e0523e5198",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "902d9035-f251-486e-952e-720b060f5b73"
        },
        "item": {
          "id": "077a0cbb-6f27-4e58-ada4-b8b97343330b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "13eea100-b4dd-41c1-ab97-6db0ce35fa85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612403f2-7b52-493e-8bbb-521ed34862de",
        "cursor": {
          "ref": "9b17e594-631f-4798-ad39-fc6b1d9dd2f0",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c6b7d9a3-15fc-4aa8-845d-0d43baf34f30"
        },
        "item": {
          "id": "612403f2-7b52-493e-8bbb-521ed34862de",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0cf55407-3b05-482b-a6f4-09471ee79948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f929be-63be-40a0-8f53-f5cd184e2bbf",
        "cursor": {
          "ref": "d68df706-a98b-4ac4-b752-d18d4b307cdf",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a2133e84-6e67-4382-9d8a-68bf93b7896c"
        },
        "item": {
          "id": "27f929be-63be-40a0-8f53-f5cd184e2bbf",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "087c04fe-e001-444a-bceb-099f6af002ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c121f5bc-3c50-4aea-8691-44239bc56f0d",
        "cursor": {
          "ref": "812759e9-63d3-44bf-a7a4-c7841e132f53",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "913f0b6b-bd96-41ef-9c4b-4c03083d8b62"
        },
        "item": {
          "id": "c121f5bc-3c50-4aea-8691-44239bc56f0d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "274a9d15-02b7-4f21-817b-45ead3526e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6af722-6ca2-4490-a778-8b23a5e1ba80",
        "cursor": {
          "ref": "41e427fa-3f09-4e12-b740-49ab6c40a827",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6eeebc53-8a08-4a10-9e40-26ce7fbc1ecf"
        },
        "item": {
          "id": "9c6af722-6ca2-4490-a778-8b23a5e1ba80",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "988d50be-4a38-458e-8aac-c135b4603c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e05e26-82ab-4d7e-a81f-150a1c0f9384",
        "cursor": {
          "ref": "74d3db8f-307c-482a-85ab-3795e6835497",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5789de72-beee-4149-b929-d6569d11f474"
        },
        "item": {
          "id": "67e05e26-82ab-4d7e-a81f-150a1c0f9384",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "77e0d6f3-0a80-4b9d-a637-b8252660a7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9653b44c-46d3-4fa0-92bc-55b3c29e9348",
        "cursor": {
          "ref": "82f5d9f7-fb10-4d75-9885-2158f0edc426",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7575fb5a-4ebc-4c8b-9846-246935561907"
        },
        "item": {
          "id": "9653b44c-46d3-4fa0-92bc-55b3c29e9348",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9eba2593-13fc-42c2-a82b-3cc9e504565b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95219af-2287-4f22-9855-1f01fe2a2647",
        "cursor": {
          "ref": "1c4f064d-6a56-420a-a6d6-afd3782d1875",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "93513982-0895-463a-bde9-28c4ab5f68f5"
        },
        "item": {
          "id": "d95219af-2287-4f22-9855-1f01fe2a2647",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8af36ada-2390-4434-8ba4-94c08780d0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46a6e20-b9ee-455c-b495-c1634d701bbb",
        "cursor": {
          "ref": "b78c3ae3-3112-4b30-b33f-b7f9b1a31a83",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "530d05a4-b71d-4d26-a18e-493dcd09191f"
        },
        "item": {
          "id": "a46a6e20-b9ee-455c-b495-c1634d701bbb",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9e412d8c-f707-4d9d-83a6-e5a1c0addc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cba7e4f-0ec6-4409-a636-68e19bcb2720",
        "cursor": {
          "ref": "54f4c910-7b76-4a5e-a797-b9a5da5e05f1",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2098ab28-35e9-46a4-a805-68ee580c6922"
        },
        "item": {
          "id": "6cba7e4f-0ec6-4409-a636-68e19bcb2720",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8044745c-8f9a-439c-917b-5e8b504732c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0aa0e97-9634-4fee-bd43-7896ce6f099b",
        "cursor": {
          "ref": "9737b54d-7666-48f0-8bd2-49b9ff5227ff",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2113dd47-e7dd-4ff6-91c7-bb4b452e65f5"
        },
        "item": {
          "id": "a0aa0e97-9634-4fee-bd43-7896ce6f099b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b5d1736b-01b8-4758-8940-771fffd608e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a66ed1-f44a-4db0-b25f-fbffe73658a6",
        "cursor": {
          "ref": "bf7aacb0-81db-4bd5-a4b6-70628cda3490",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3b7fcf2a-8ae8-46aa-989a-1157406ba9d4"
        },
        "item": {
          "id": "66a66ed1-f44a-4db0-b25f-fbffe73658a6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "fc6f2760-b594-4a8c-8b0e-0fc9733df3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3146bf82-5198-4ead-8cc5-a4fd92af3a27",
        "cursor": {
          "ref": "c34504c2-b541-4e40-af3f-ca2273542caf",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c57efb84-fe1f-4756-98f7-9934e0c73830"
        },
        "item": {
          "id": "3146bf82-5198-4ead-8cc5-a4fd92af3a27",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c7c313e1-0435-4371-8581-8f3103ae8d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0291ace2-37cb-4d6b-8157-55683e5304d2",
        "cursor": {
          "ref": "26634075-33d0-4323-a0d7-f1defcd2e727",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "718d2c6f-5aa6-470d-a5cd-4742c493b5a0"
        },
        "item": {
          "id": "0291ace2-37cb-4d6b-8157-55683e5304d2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "539da1ac-b605-4b40-b308-06ee6501952a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83657e48-acaf-45bd-9518-9eba6b0f11cb",
        "cursor": {
          "ref": "30822ed1-842b-4b3e-ba28-1732274c4079",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d5edbb36-2eb9-4d68-a9d9-0a575dcaf624"
        },
        "item": {
          "id": "83657e48-acaf-45bd-9518-9eba6b0f11cb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "dc35a224-9f10-4bab-a194-281277cc7840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9878434-1cb1-4b42-af0a-da53062c940d",
        "cursor": {
          "ref": "71b66fe3-246e-4886-ba6c-4fd08b2dc74b",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "bd8c833f-5077-4eb2-9d9f-47dee13319b2"
        },
        "item": {
          "id": "a9878434-1cb1-4b42-af0a-da53062c940d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "15c6e6ac-960a-4f24-99d8-9abcda11a166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a112fbff-2d46-403b-91bc-f9f39b0aa462",
        "cursor": {
          "ref": "a9b65996-56f8-48ab-8cf9-f9fdb105532f",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "50165fbf-1813-4bfe-a9e1-336f25c5409f"
        },
        "item": {
          "id": "a112fbff-2d46-403b-91bc-f9f39b0aa462",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "930d6339-da80-42af-8782-f6f47813782a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67773217-9e38-4148-8fa3-b2e5b0853a89",
        "cursor": {
          "ref": "ee13d291-9a04-47ad-967f-23405609bcd0",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e46e1333-43e0-4955-84e3-8570bec8833a"
        },
        "item": {
          "id": "67773217-9e38-4148-8fa3-b2e5b0853a89",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3d05fe93-e894-4ccd-978a-b4e8faaccd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1baed97-e0a1-4e6d-a19d-25886437c8fc",
        "cursor": {
          "ref": "c5559cd7-d48b-443f-984c-0e487c252435",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1f200de7-b5ed-4a05-b5cd-93d9f74acb8c"
        },
        "item": {
          "id": "c1baed97-e0a1-4e6d-a19d-25886437c8fc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f9c8862f-f771-4538-9482-312de560fd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10ae553-eb3d-4fb3-807b-340877c1ee67",
        "cursor": {
          "ref": "00b772a8-2aee-4aaf-be02-75c6c6d13a1d",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "695af531-6f63-41e1-a3f7-000294052f1f"
        },
        "item": {
          "id": "b10ae553-eb3d-4fb3-807b-340877c1ee67",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a5964155-6a23-4146-9285-9d15684add8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9211cbd-e75f-43ef-9757-035c839fa7a9",
        "cursor": {
          "ref": "8be5edcc-7a96-4e0d-9a8c-8367f075b5c3",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b895617c-5078-4bad-a0d6-871f7e6a688f"
        },
        "item": {
          "id": "c9211cbd-e75f-43ef-9757-035c839fa7a9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "97f3bea9-78c1-4a4d-9acf-aa74194c44f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562723b5-b7fb-4660-a540-b5e683f9cf4d",
        "cursor": {
          "ref": "5fb349f1-7bbe-496b-9769-a2e6b2b19606",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8c575b73-a40b-4762-b440-17382872a374"
        },
        "item": {
          "id": "562723b5-b7fb-4660-a540-b5e683f9cf4d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "26f45deb-787f-4099-ab22-5c933092fa65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feebab97-7f16-4c3a-a592-a77e867842af",
        "cursor": {
          "ref": "a5dae6ba-a51f-45af-b861-c6f425d17032",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "959b75d8-c150-48da-b3e2-8a607aa4236f"
        },
        "item": {
          "id": "feebab97-7f16-4c3a-a592-a77e867842af",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7dab8db4-a233-4166-af36-b3e3dd7f48b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb3fad6-4af0-40a9-aae7-a05ec06f424e",
        "cursor": {
          "ref": "9724b8df-1240-4aad-a2ed-638a42ab1b60",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "dbb20c0d-2c71-4e01-9b3a-7f9a9300d7ea"
        },
        "item": {
          "id": "9fb3fad6-4af0-40a9-aae7-a05ec06f424e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d100537a-fd9d-4165-a505-54139c4e031e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1816cf-e21f-4bf4-af55-bc62d9bedfee",
        "cursor": {
          "ref": "0c6f393f-4482-4969-853e-c65d1083b3c4",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8b84ec3b-ce94-4b9a-91c6-1a3e07cf1cd1"
        },
        "item": {
          "id": "ae1816cf-e21f-4bf4-af55-bc62d9bedfee",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5475de18-8b8c-4275-aa81-5bde3c2693f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c6f301-a9c4-465c-96bd-526cff64dccb",
        "cursor": {
          "ref": "15ab9b3f-cf8d-4a5d-9761-c39cec67917f",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a980fd77-e8b6-4484-b18c-fda86a5e914a"
        },
        "item": {
          "id": "11c6f301-a9c4-465c-96bd-526cff64dccb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ab52791f-2a4e-42a3-a620-4be1fac16491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26542af7-d84d-4cae-84a8-86f210ff30d2",
        "cursor": {
          "ref": "9364e925-f99e-4357-adec-327a475336f3",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7c41cfa3-f262-414f-8058-fb74ec9b837f"
        },
        "item": {
          "id": "26542af7-d84d-4cae-84a8-86f210ff30d2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2fa1e543-962d-4e9b-a3e7-cc8b99b90345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962da8a5-5a84-44d7-aab9-3e018af47a0b",
        "cursor": {
          "ref": "08202a73-6806-4e8f-9dd1-20300b983979",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ceaae9cb-fffd-4d2e-8190-f915ecb87577"
        },
        "item": {
          "id": "962da8a5-5a84-44d7-aab9-3e018af47a0b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ed4c9cec-4b9c-4ca3-8a2d-7cfac570b587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb55ddb5-2abe-4465-8771-7ba132f313f0",
        "cursor": {
          "ref": "9555944f-7485-4edb-bfd0-436437c747fa",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ff394b58-4a13-4dc9-bea3-505509164da8"
        },
        "item": {
          "id": "fb55ddb5-2abe-4465-8771-7ba132f313f0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6a05bd3e-fee6-4d12-aa4e-c27171a7e3e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4313bac5-4cc0-49a9-a646-b8aec47f7409",
        "cursor": {
          "ref": "9849d060-2980-4aa8-9ba2-2d1c2081408a",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "062b47fb-88ed-4061-a3d6-33be0a607b0c"
        },
        "item": {
          "id": "4313bac5-4cc0-49a9-a646-b8aec47f7409",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8ba5e79b-4566-4a11-ba3f-da434bc715ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd713d4f-8cee-465e-a9c6-0e7e7cddd87b",
        "cursor": {
          "ref": "5e99ee61-38e0-4164-ac16-18231547fc18",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1fe4ad84-4851-42ae-80de-d298f996ebd7"
        },
        "item": {
          "id": "dd713d4f-8cee-465e-a9c6-0e7e7cddd87b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9fb55740-1ec3-43ac-932b-f431aeffe353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430a339a-d664-42a3-bc75-c74a3962d18b",
        "cursor": {
          "ref": "9b401aa1-f7f5-47bc-97d6-84a4baf65112",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6217223c-bdd1-4cbe-830f-ccce0c633031"
        },
        "item": {
          "id": "430a339a-d664-42a3-bc75-c74a3962d18b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b4ccf40a-36b7-46fe-a768-5aacab2f277d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56c2e05-a6a6-4cfa-8bca-2ad6fbc51e29",
        "cursor": {
          "ref": "963e32d3-295b-474a-b157-41fa6f589e0f",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "25648a87-81ba-4b2c-a381-934270b9ad29"
        },
        "item": {
          "id": "b56c2e05-a6a6-4cfa-8bca-2ad6fbc51e29",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "52a09352-0ede-4a42-aab3-53ad10c797e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b2cd18-541e-4a48-95ce-9b11b9cab266",
        "cursor": {
          "ref": "48bca397-801a-4a11-b103-7a60171897df",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4284889f-295d-42f9-a215-529e40a59f5d"
        },
        "item": {
          "id": "a0b2cd18-541e-4a48-95ce-9b11b9cab266",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ef8439c4-5bde-48db-9507-3246dcac34ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bec7f68-85c7-49f9-979c-596fe0de9802",
        "cursor": {
          "ref": "4231bb91-fa23-4709-be0f-c2541e48b9b4",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4ec91c14-e054-4b08-a6cd-736bcdb1b651"
        },
        "item": {
          "id": "0bec7f68-85c7-49f9-979c-596fe0de9802",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7387f60e-8dc0-4856-ac7e-a1a6f3f2b178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fee609-a5f2-4e66-a785-93ff9f4c8d8b",
        "cursor": {
          "ref": "7004da5a-18ea-41ef-a37b-49d198e98808",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e95e52b3-e244-4971-8899-6280f00add09"
        },
        "item": {
          "id": "d7fee609-a5f2-4e66-a785-93ff9f4c8d8b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "23508261-4346-4196-927c-9cb8fd68d5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89794920-eede-42a9-9973-a6344e0ceb0c",
        "cursor": {
          "ref": "475bbc5b-f962-4d48-beb6-bc4614579389",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cc2bd2c9-7f8a-4311-9663-517596154af3"
        },
        "item": {
          "id": "89794920-eede-42a9-9973-a6344e0ceb0c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "080e2b86-b3d1-45f5-ad01-faec8f680692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1706798-7738-4105-b31c-8ebc98b506d7",
        "cursor": {
          "ref": "01e444c8-095f-4b94-b160-1ac5545b6847",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c5e60d0d-73fd-49d6-a7f1-e7564c708ce1"
        },
        "item": {
          "id": "f1706798-7738-4105-b31c-8ebc98b506d7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5309e094-1410-40ec-a15a-6b4967d3fa3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7bd87a-3b01-40a6-ba0a-4437c538346a",
        "cursor": {
          "ref": "08c5338c-e0ac-431e-927e-9466443446ee",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f1a3040c-5003-42e6-bfcf-46cdbe2c2d34"
        },
        "item": {
          "id": "dc7bd87a-3b01-40a6-ba0a-4437c538346a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d5e3b1bf-097a-4ada-94d6-7c84bd69f954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f258b2-2e41-462b-b084-3b593a5f2f86",
        "cursor": {
          "ref": "e24cc7a5-ea80-4165-a4c0-d6a691f1ebae",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b77b2ea0-8f0c-480b-a147-1878c2ed5e2d"
        },
        "item": {
          "id": "46f258b2-2e41-462b-b084-3b593a5f2f86",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "dd7e1723-edef-48f3-bd30-b43c2a3cd0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936cef30-c9e1-499a-8e57-97702df7e566",
        "cursor": {
          "ref": "60a24e5f-6b89-479c-aeee-d538b0742d7c",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5c10b004-138f-40bc-914f-9cedc3567af8"
        },
        "item": {
          "id": "936cef30-c9e1-499a-8e57-97702df7e566",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "aaff5e17-ffed-4989-8aee-9341e84f6cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735f4cc5-7fef-4619-b98b-6327389ebc07",
        "cursor": {
          "ref": "19c1fba0-2237-4dbc-9309-a219031369da",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "54db8e42-717a-403e-9a84-d3d0aab0d76d"
        },
        "item": {
          "id": "735f4cc5-7fef-4619-b98b-6327389ebc07",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "422aa88c-8a61-4d5c-aec3-dc0018e5c14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68bf349a-8645-4252-866a-f7a0ae86003b",
        "cursor": {
          "ref": "bff109ff-edfc-4c61-9945-8af3fea500a0",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0fd5b562-10b7-4cc7-a57f-cef19167d33f"
        },
        "item": {
          "id": "68bf349a-8645-4252-866a-f7a0ae86003b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "045d4b36-803a-490f-8cff-201cb3f08f99",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48937420-d3e6-43dc-9ac8-0ad8efabe46d",
        "cursor": {
          "ref": "530e9a9a-dcbc-49db-a222-098693948931",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9e7cd6d3-17f3-4cbe-a4cc-27c7edf89a7d"
        },
        "item": {
          "id": "48937420-d3e6-43dc-9ac8-0ad8efabe46d",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "d4c241ee-024b-4cef-b826-44e2ba1f0864",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 322,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc74c7d-d242-4566-ab8d-a7bf9197839b",
        "cursor": {
          "ref": "3231638e-d79f-42b4-ba1d-1eae321c575d",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "763c19eb-8fbf-4155-8ca0-12c0023cb7e6"
        },
        "item": {
          "id": "bfc74c7d-d242-4566-ab8d-a7bf9197839b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8e719a2f-4d31-4ed2-8e37-86dc755e708e",
          "status": "OK",
          "code": 200,
          "responseTime": 390,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0cc02b-ea11-4195-957d-eacc754a4ee8",
        "cursor": {
          "ref": "5e904341-d1bd-4ed8-ad21-6d74e8ead770",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7a9df678-8058-4113-b8d8-e5fcfaac9b6f"
        },
        "item": {
          "id": "1a0cc02b-ea11-4195-957d-eacc754a4ee8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e311e162-5530-4be9-83d3-430b1c57de2a",
          "status": "OK",
          "code": 200,
          "responseTime": 3435,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa75cb2-9745-4c92-885b-fcb70a60dbb9",
        "cursor": {
          "ref": "8fc46996-1fcd-4fa9-b5cb-82c778c927bb",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9c774246-d66d-4b03-9fa6-e9b8521e9fa3"
        },
        "item": {
          "id": "2fa75cb2-9745-4c92-885b-fcb70a60dbb9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5c70da60-b243-4d44-9c6a-d3e7e37d55f4",
          "status": "OK",
          "code": 200,
          "responseTime": 3250,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "95869ddb-6941-4840-854e-0941ce34c221",
        "cursor": {
          "ref": "742b840c-be42-4394-ae6b-f1e552bdb209",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f6bbbcb9-9169-4ceb-9e27-b38207e0b442"
        },
        "item": {
          "id": "95869ddb-6941-4840-854e-0941ce34c221",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "327facc0-304d-496e-b1a4-92541831251d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95869ddb-6941-4840-854e-0941ce34c221",
        "cursor": {
          "ref": "742b840c-be42-4394-ae6b-f1e552bdb209",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f6bbbcb9-9169-4ceb-9e27-b38207e0b442"
        },
        "item": {
          "id": "95869ddb-6941-4840-854e-0941ce34c221",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "327facc0-304d-496e-b1a4-92541831251d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95869ddb-6941-4840-854e-0941ce34c221",
        "cursor": {
          "ref": "742b840c-be42-4394-ae6b-f1e552bdb209",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f6bbbcb9-9169-4ceb-9e27-b38207e0b442"
        },
        "item": {
          "id": "95869ddb-6941-4840-854e-0941ce34c221",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "327facc0-304d-496e-b1a4-92541831251d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa6e244-310d-4712-9361-8a94750b94c9",
        "cursor": {
          "ref": "eafe9741-2f31-4597-9319-69570ec6a9b7",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9af8c9bb-b15a-4e4d-88cd-30b8dbb62483"
        },
        "item": {
          "id": "8aa6e244-310d-4712-9361-8a94750b94c9",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "fef67dca-72d5-4d4a-8fb7-17eab1bbd88c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 311,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b91ab68-0556-48d1-bcdc-f64fd57fc60c",
        "cursor": {
          "ref": "6efbefce-c13d-4af3-a4b1-242704017a29",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "34de2b18-cffc-4b1b-81f8-2bc2cc5aadde"
        },
        "item": {
          "id": "4b91ab68-0556-48d1-bcdc-f64fd57fc60c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "147e2e60-bed7-4467-8dbd-e9c7754c4b7b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b91ab68-0556-48d1-bcdc-f64fd57fc60c",
        "cursor": {
          "ref": "6efbefce-c13d-4af3-a4b1-242704017a29",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "34de2b18-cffc-4b1b-81f8-2bc2cc5aadde"
        },
        "item": {
          "id": "4b91ab68-0556-48d1-bcdc-f64fd57fc60c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "147e2e60-bed7-4467-8dbd-e9c7754c4b7b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5007d87-aef8-4dc2-a1c5-ad3777b5685a",
        "cursor": {
          "ref": "b4978381-8f94-4231-bf00-8d77acce2672",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "695a121f-5140-4663-8523-562e9b20b17c"
        },
        "item": {
          "id": "c5007d87-aef8-4dc2-a1c5-ad3777b5685a",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "6dfd5f86-add1-4996-80c9-3b6189b19c3e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 561,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a69731a-47c4-45ca-a36e-d90a69d40a23",
        "cursor": {
          "ref": "e61f1a6c-2e30-49ca-8472-21f235978530",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5ff3ec28-ed21-4672-922c-be018ca6660c"
        },
        "item": {
          "id": "3a69731a-47c4-45ca-a36e-d90a69d40a23",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "26b6b2c6-9ffd-45e4-ad32-624dd215d035",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a69731a-47c4-45ca-a36e-d90a69d40a23",
        "cursor": {
          "ref": "e61f1a6c-2e30-49ca-8472-21f235978530",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5ff3ec28-ed21-4672-922c-be018ca6660c"
        },
        "item": {
          "id": "3a69731a-47c4-45ca-a36e-d90a69d40a23",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "26b6b2c6-9ffd-45e4-ad32-624dd215d035",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3915e173-db77-4caf-8666-01d37f53e421",
        "cursor": {
          "ref": "165ec248-e988-4fe2-97e1-83771770ee0b",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7749a201-484c-4b53-8873-d551bf0d2304"
        },
        "item": {
          "id": "3915e173-db77-4caf-8666-01d37f53e421",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "48d34222-202e-4c26-a649-59d6b58b59f9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 543,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}